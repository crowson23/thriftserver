// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: deliveryMessage.proto

package de.cache;

public final class DeliveryMessage {
  private DeliveryMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code de.cache.GlobalSwitch}
   *
   * <pre>
   *新增或修改
   * </pre>
   */
  public enum GlobalSwitch
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFF = 0;</code>
     *
     * <pre>
     *开关关闭
     * </pre>
     */
    OFF(0, 0),
    /**
     * <code>ON = 1;</code>
     *
     * <pre>
     *开关开启
     * </pre>
     */
    ON(1, 1),
    ;

    /**
     * <code>OFF = 0;</code>
     *
     * <pre>
     *开关关闭
     * </pre>
     */
    public static final int OFF_VALUE = 0;
    /**
     * <code>ON = 1;</code>
     *
     * <pre>
     *开关开启
     * </pre>
     */
    public static final int ON_VALUE = 1;


    public final int getNumber() { return value; }

    public static GlobalSwitch valueOf(int value) {
      switch (value) {
        case 0: return OFF;
        case 1: return ON;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GlobalSwitch>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GlobalSwitch>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GlobalSwitch>() {
            public GlobalSwitch findValueByNumber(int number) {
              return GlobalSwitch.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.getDescriptor().getEnumTypes().get(0);
    }

    private static final GlobalSwitch[] VALUES = values();

    public static GlobalSwitch valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private GlobalSwitch(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:de.cache.GlobalSwitch)
  }

  /**
   * Protobuf enum {@code de.cache.Command}
   */
  public enum Command
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ALTER = 0;</code>
     *
     * <pre>
     *操作为新增或修改
     * </pre>
     */
    ALTER(0, 0),
    /**
     * <code>DELETE = 1;</code>
     *
     * <pre>
     *操作为删除
     * </pre>
     */
    DELETE(1, 1),
    ;

    /**
     * <code>ALTER = 0;</code>
     *
     * <pre>
     *操作为新增或修改
     * </pre>
     */
    public static final int ALTER_VALUE = 0;
    /**
     * <code>DELETE = 1;</code>
     *
     * <pre>
     *操作为删除
     * </pre>
     */
    public static final int DELETE_VALUE = 1;


    public final int getNumber() { return value; }

    public static Command valueOf(int value) {
      switch (value) {
        case 0: return ALTER;
        case 1: return DELETE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Command>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Command>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Command>() {
            public Command findValueByNumber(int number) {
              return Command.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.getDescriptor().getEnumTypes().get(1);
    }

    private static final Command[] VALUES = values();

    public static Command valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Command(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:de.cache.Command)
  }

  /**
   * Protobuf enum {@code de.cache.TargetFlag}
   */
  public enum TargetFlag
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CLOSE = 0;</code>
     *
     * <pre>
     *关闭
     * </pre>
     */
    CLOSE(0, 0),
    /**
     * <code>TARGET = 1;</code>
     *
     * <pre>
     *定向
     * </pre>
     */
    TARGET(1, 1),
    /**
     * <code>UNTARGET = 2;</code>
     *
     * <pre>
     *非定向
     * </pre>
     */
    UNTARGET(2, 2),
    ;

    /**
     * <code>CLOSE = 0;</code>
     *
     * <pre>
     *关闭
     * </pre>
     */
    public static final int CLOSE_VALUE = 0;
    /**
     * <code>TARGET = 1;</code>
     *
     * <pre>
     *定向
     * </pre>
     */
    public static final int TARGET_VALUE = 1;
    /**
     * <code>UNTARGET = 2;</code>
     *
     * <pre>
     *非定向
     * </pre>
     */
    public static final int UNTARGET_VALUE = 2;


    public final int getNumber() { return value; }

    public static TargetFlag valueOf(int value) {
      switch (value) {
        case 0: return CLOSE;
        case 1: return TARGET;
        case 2: return UNTARGET;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TargetFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<TargetFlag>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TargetFlag>() {
            public TargetFlag findValueByNumber(int number) {
              return TargetFlag.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.getDescriptor().getEnumTypes().get(2);
    }

    private static final TargetFlag[] VALUES = values();

    public static TargetFlag valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private TargetFlag(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:de.cache.TargetFlag)
  }

  /**
   * Protobuf enum {@code de.cache.ControlledMask}
   */
  public enum ControlledMask
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UN_CONTROL = 0;</code>
     *
     * <pre>
     *受控于父级CPM/CPC/CPD/budget控制标示
     *(1.点击上限受控 2.显示上限受控 4.CPD百分比受控 8.预算价格受控) (取值范围0-15)(s/d.$orderid)
     *cpm显示上限受控，cpc点击上限受控，cpm刊例价或者竞价以及cpc刊例价和竞价是价格受控
     * </pre>
     */
    UN_CONTROL(0, 0),
    /**
     * <code>CLICK_LIMITED = 1;</code>
     *
     * <pre>
     *点击上限受控
     * </pre>
     */
    CLICK_LIMITED(1, 1),
    /**
     * <code>SHOW_LIMITED = 2;</code>
     *
     * <pre>
     *显示上限受控
     * </pre>
     */
    SHOW_LIMITED(2, 2),
    /**
     * <code>CLICK_SHOW_LIMITED = 3;</code>
     */
    CLICK_SHOW_LIMITED(3, 3),
    /**
     * <code>CPDPERCENT_LIMITED = 4;</code>
     *
     * <pre>
     *CPD百分比受控
     * </pre>
     */
    CPDPERCENT_LIMITED(4, 4),
    /**
     * <code>CLICK_CPDPERCENT_LIMITED = 5;</code>
     */
    CLICK_CPDPERCENT_LIMITED(5, 5),
    /**
     * <code>SHOW_CPDPERCENT_LIMITED = 6;</code>
     */
    SHOW_CPDPERCENT_LIMITED(6, 6),
    /**
     * <code>CLICK_SHOW_CPDPERCENT_LIMITED = 7;</code>
     */
    CLICK_SHOW_CPDPERCENT_LIMITED(7, 7),
    /**
     * <code>BUDGET_LIMITED = 8;</code>
     *
     * <pre>
     *预算价格受控
     * </pre>
     */
    BUDGET_LIMITED(8, 8),
    /**
     * <code>CLICK_BUDGET_LIMITED = 9;</code>
     */
    CLICK_BUDGET_LIMITED(9, 9),
    /**
     * <code>SHOW_BUDGET_LIMITED = 10;</code>
     */
    SHOW_BUDGET_LIMITED(10, 10),
    /**
     * <code>CLICK_SHOW_BUDGET_LIMITED = 11;</code>
     */
    CLICK_SHOW_BUDGET_LIMITED(11, 11),
    /**
     * <code>CPDPERCENT_BUDGET_LIMITED = 12;</code>
     */
    CPDPERCENT_BUDGET_LIMITED(12, 12),
    /**
     * <code>CLICK_CPDPERCENT_BUDGET_LIMITED = 13;</code>
     */
    CLICK_CPDPERCENT_BUDGET_LIMITED(13, 13),
    /**
     * <code>SHOW_CPDPERCENT_BUDGET_LIMITED = 14;</code>
     */
    SHOW_CPDPERCENT_BUDGET_LIMITED(14, 14),
    /**
     * <code>CLICK_SHOW_CPDPERCENT_BUDGET_LIMITED = 15;</code>
     */
    CLICK_SHOW_CPDPERCENT_BUDGET_LIMITED(15, 15),
    ;

    /**
     * <code>UN_CONTROL = 0;</code>
     *
     * <pre>
     *受控于父级CPM/CPC/CPD/budget控制标示
     *(1.点击上限受控 2.显示上限受控 4.CPD百分比受控 8.预算价格受控) (取值范围0-15)(s/d.$orderid)
     *cpm显示上限受控，cpc点击上限受控，cpm刊例价或者竞价以及cpc刊例价和竞价是价格受控
     * </pre>
     */
    public static final int UN_CONTROL_VALUE = 0;
    /**
     * <code>CLICK_LIMITED = 1;</code>
     *
     * <pre>
     *点击上限受控
     * </pre>
     */
    public static final int CLICK_LIMITED_VALUE = 1;
    /**
     * <code>SHOW_LIMITED = 2;</code>
     *
     * <pre>
     *显示上限受控
     * </pre>
     */
    public static final int SHOW_LIMITED_VALUE = 2;
    /**
     * <code>CLICK_SHOW_LIMITED = 3;</code>
     */
    public static final int CLICK_SHOW_LIMITED_VALUE = 3;
    /**
     * <code>CPDPERCENT_LIMITED = 4;</code>
     *
     * <pre>
     *CPD百分比受控
     * </pre>
     */
    public static final int CPDPERCENT_LIMITED_VALUE = 4;
    /**
     * <code>CLICK_CPDPERCENT_LIMITED = 5;</code>
     */
    public static final int CLICK_CPDPERCENT_LIMITED_VALUE = 5;
    /**
     * <code>SHOW_CPDPERCENT_LIMITED = 6;</code>
     */
    public static final int SHOW_CPDPERCENT_LIMITED_VALUE = 6;
    /**
     * <code>CLICK_SHOW_CPDPERCENT_LIMITED = 7;</code>
     */
    public static final int CLICK_SHOW_CPDPERCENT_LIMITED_VALUE = 7;
    /**
     * <code>BUDGET_LIMITED = 8;</code>
     *
     * <pre>
     *预算价格受控
     * </pre>
     */
    public static final int BUDGET_LIMITED_VALUE = 8;
    /**
     * <code>CLICK_BUDGET_LIMITED = 9;</code>
     */
    public static final int CLICK_BUDGET_LIMITED_VALUE = 9;
    /**
     * <code>SHOW_BUDGET_LIMITED = 10;</code>
     */
    public static final int SHOW_BUDGET_LIMITED_VALUE = 10;
    /**
     * <code>CLICK_SHOW_BUDGET_LIMITED = 11;</code>
     */
    public static final int CLICK_SHOW_BUDGET_LIMITED_VALUE = 11;
    /**
     * <code>CPDPERCENT_BUDGET_LIMITED = 12;</code>
     */
    public static final int CPDPERCENT_BUDGET_LIMITED_VALUE = 12;
    /**
     * <code>CLICK_CPDPERCENT_BUDGET_LIMITED = 13;</code>
     */
    public static final int CLICK_CPDPERCENT_BUDGET_LIMITED_VALUE = 13;
    /**
     * <code>SHOW_CPDPERCENT_BUDGET_LIMITED = 14;</code>
     */
    public static final int SHOW_CPDPERCENT_BUDGET_LIMITED_VALUE = 14;
    /**
     * <code>CLICK_SHOW_CPDPERCENT_BUDGET_LIMITED = 15;</code>
     */
    public static final int CLICK_SHOW_CPDPERCENT_BUDGET_LIMITED_VALUE = 15;


    public final int getNumber() { return value; }

    public static ControlledMask valueOf(int value) {
      switch (value) {
        case 0: return UN_CONTROL;
        case 1: return CLICK_LIMITED;
        case 2: return SHOW_LIMITED;
        case 3: return CLICK_SHOW_LIMITED;
        case 4: return CPDPERCENT_LIMITED;
        case 5: return CLICK_CPDPERCENT_LIMITED;
        case 6: return SHOW_CPDPERCENT_LIMITED;
        case 7: return CLICK_SHOW_CPDPERCENT_LIMITED;
        case 8: return BUDGET_LIMITED;
        case 9: return CLICK_BUDGET_LIMITED;
        case 10: return SHOW_BUDGET_LIMITED;
        case 11: return CLICK_SHOW_BUDGET_LIMITED;
        case 12: return CPDPERCENT_BUDGET_LIMITED;
        case 13: return CLICK_CPDPERCENT_BUDGET_LIMITED;
        case 14: return SHOW_CPDPERCENT_BUDGET_LIMITED;
        case 15: return CLICK_SHOW_CPDPERCENT_BUDGET_LIMITED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ControlledMask>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ControlledMask>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ControlledMask>() {
            public ControlledMask findValueByNumber(int number) {
              return ControlledMask.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.getDescriptor().getEnumTypes().get(3);
    }

    private static final ControlledMask[] VALUES = values();

    public static ControlledMask valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ControlledMask(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:de.cache.ControlledMask)
  }

  /**
   * Protobuf enum {@code de.cache.TrafficSource}
   */
  public enum TrafficSource
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>WEB = 0;</code>
     */
    WEB(0, 0),
    /**
     * <code>MOBILE_WEB = 1;</code>
     */
    MOBILE_WEB(1, 1),
    /**
     * <code>MOBILE_APP = 3;</code>
     */
    MOBILE_APP(2, 3),
    ;

    /**
     * <code>WEB = 0;</code>
     */
    public static final int WEB_VALUE = 0;
    /**
     * <code>MOBILE_WEB = 1;</code>
     */
    public static final int MOBILE_WEB_VALUE = 1;
    /**
     * <code>MOBILE_APP = 3;</code>
     */
    public static final int MOBILE_APP_VALUE = 3;


    public final int getNumber() { return value; }

    public static TrafficSource valueOf(int value) {
      switch (value) {
        case 0: return WEB;
        case 1: return MOBILE_WEB;
        case 3: return MOBILE_APP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrafficSource>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<TrafficSource>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrafficSource>() {
            public TrafficSource findValueByNumber(int number) {
              return TrafficSource.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.getDescriptor().getEnumTypes().get(4);
    }

    private static final TrafficSource[] VALUES = values();

    public static TrafficSource valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private TrafficSource(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:de.cache.TrafficSource)
  }

  /**
   * Protobuf enum {@code de.cache.OsType}
   */
  public enum OsType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0, 0),
    /**
     * <code>IOS = 1;</code>
     */
    IOS(1, 1),
    /**
     * <code>ANDROID = 2;</code>
     */
    ANDROID(2, 2),
    /**
     * <code>WINPHONE = 3;</code>
     */
    WINPHONE(3, 3),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <code>IOS = 1;</code>
     */
    public static final int IOS_VALUE = 1;
    /**
     * <code>ANDROID = 2;</code>
     */
    public static final int ANDROID_VALUE = 2;
    /**
     * <code>WINPHONE = 3;</code>
     */
    public static final int WINPHONE_VALUE = 3;


    public final int getNumber() { return value; }

    public static OsType valueOf(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return IOS;
        case 2: return ANDROID;
        case 3: return WINPHONE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OsType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<OsType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OsType>() {
            public OsType findValueByNumber(int number) {
              return OsType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.getDescriptor().getEnumTypes().get(5);
    }

    private static final OsType[] VALUES = values();

    public static OsType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private OsType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:de.cache.OsType)
  }

  public interface KeyValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.cache.KeyValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string key = 1;</code>
     *
     * <pre>
     *名称
     * </pre>
     */
    boolean hasKey();
    /**
     * <code>optional string key = 1;</code>
     *
     * <pre>
     *名称
     * </pre>
     */
    java.lang.String getKey();
    /**
     * <code>optional string key = 1;</code>
     *
     * <pre>
     *名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>optional string value = 2;</code>
     *
     * <pre>
     *内容
     * </pre>
     */
    boolean hasValue();
    /**
     * <code>optional string value = 2;</code>
     *
     * <pre>
     *内容
     * </pre>
     */
    java.lang.String getValue();
    /**
     * <code>optional string value = 2;</code>
     *
     * <pre>
     *内容
     * </pre>
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code de.cache.KeyValue}
   *
   * <pre>
   *pair
   * </pre>
   */
  public static final class KeyValue extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:de.cache.KeyValue)
      KeyValueOrBuilder {
    // Use KeyValue.newBuilder() to construct.
    private KeyValue(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private KeyValue(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final KeyValue defaultInstance;
    public static KeyValue getDefaultInstance() {
      return defaultInstance;
    }

    public KeyValue getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private KeyValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              key_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              value_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.internal_static_de_cache_KeyValue_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.cache.DeliveryMessage.internal_static_de_cache_KeyValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.cache.DeliveryMessage.KeyValue.class, de.cache.DeliveryMessage.KeyValue.Builder.class);
    }

    public static com.google.protobuf.Parser<KeyValue> PARSER =
        new com.google.protobuf.AbstractParser<KeyValue>() {
      public KeyValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KeyValue(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<KeyValue> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int KEY_FIELD_NUMBER = 1;
    private java.lang.Object key_;
    /**
     * <code>optional string key = 1;</code>
     *
     * <pre>
     *名称
     * </pre>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string key = 1;</code>
     *
     * <pre>
     *名称
     * </pre>
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          key_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string key = 1;</code>
     *
     * <pre>
     *名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private java.lang.Object value_;
    /**
     * <code>optional string value = 2;</code>
     *
     * <pre>
     *内容
     * </pre>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string value = 2;</code>
     *
     * <pre>
     *内容
     * </pre>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string value = 2;</code>
     *
     * <pre>
     *内容
     * </pre>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      key_ = "";
      value_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getValueBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getValueBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.cache.DeliveryMessage.KeyValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.KeyValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.KeyValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.KeyValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.KeyValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.KeyValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.KeyValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.cache.DeliveryMessage.KeyValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.KeyValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.KeyValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.cache.DeliveryMessage.KeyValue prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code de.cache.KeyValue}
     *
     * <pre>
     *pair
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:de.cache.KeyValue)
        de.cache.DeliveryMessage.KeyValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_KeyValue_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_KeyValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.KeyValue.class, de.cache.DeliveryMessage.KeyValue.Builder.class);
      }

      // Construct using de.cache.DeliveryMessage.KeyValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        key_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.cache.DeliveryMessage.internal_static_de_cache_KeyValue_descriptor;
      }

      public de.cache.DeliveryMessage.KeyValue getDefaultInstanceForType() {
        return de.cache.DeliveryMessage.KeyValue.getDefaultInstance();
      }

      public de.cache.DeliveryMessage.KeyValue build() {
        de.cache.DeliveryMessage.KeyValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.cache.DeliveryMessage.KeyValue buildPartial() {
        de.cache.DeliveryMessage.KeyValue result = new de.cache.DeliveryMessage.KeyValue(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.cache.DeliveryMessage.KeyValue) {
          return mergeFrom((de.cache.DeliveryMessage.KeyValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.cache.DeliveryMessage.KeyValue other) {
        if (other == de.cache.DeliveryMessage.KeyValue.getDefaultInstance()) return this;
        if (other.hasKey()) {
          bitField0_ |= 0x00000001;
          key_ = other.key_;
          onChanged();
        }
        if (other.hasValue()) {
          bitField0_ |= 0x00000002;
          value_ = other.value_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.cache.DeliveryMessage.KeyValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.cache.DeliveryMessage.KeyValue) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object key_ = "";
      /**
       * <code>optional string key = 1;</code>
       *
       * <pre>
       *名称
       * </pre>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string key = 1;</code>
       *
       * <pre>
       *名称
       * </pre>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            key_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string key = 1;</code>
       *
       * <pre>
       *名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string key = 1;</code>
       *
       * <pre>
       *名称
       * </pre>
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string key = 1;</code>
       *
       * <pre>
       *名称
       * </pre>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>optional string key = 1;</code>
       *
       * <pre>
       *名称
       * </pre>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <code>optional string value = 2;</code>
       *
       * <pre>
       *内容
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string value = 2;</code>
       *
       * <pre>
       *内容
       * </pre>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            value_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string value = 2;</code>
       *
       * <pre>
       *内容
       * </pre>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string value = 2;</code>
       *
       * <pre>
       *内容
       * </pre>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string value = 2;</code>
       *
       * <pre>
       *内容
       * </pre>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>optional string value = 2;</code>
       *
       * <pre>
       *内容
       * </pre>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:de.cache.KeyValue)
    }

    static {
      defaultInstance = new KeyValue(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:de.cache.KeyValue)
  }

  public interface DeliveryMethodOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.cache.DeliveryMethod)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 impression = 1;</code>
     *
     * <pre>
     *1.所有成员变量，可根据情况自由组合, 多个变量同时设置将是与关系
     *2.solution时以下情况将关闭不再投放：
     *   i. CPM时, impression=0 or unassigned
     *  ii. CPC时, click=0 or unassigned
     * iii. CPD时, percentage=0 or unassigned
     *  iv. 金额投放(CPMV/CPCV/刊例价)时, budget=0 or unassigned
     *3.solution时除以上第二条规则外，如果某一变量=0或没有设置值将忽略该项控制
     *  如：CPC/CPD/CPMV/CPCV时, impression=0 or unassigned 将视为广告显示数量无限制
     * </pre>
     */
    boolean hasImpression();
    /**
     * <code>optional int64 impression = 1;</code>
     *
     * <pre>
     *1.所有成员变量，可根据情况自由组合, 多个变量同时设置将是与关系
     *2.solution时以下情况将关闭不再投放：
     *   i. CPM时, impression=0 or unassigned
     *  ii. CPC时, click=0 or unassigned
     * iii. CPD时, percentage=0 or unassigned
     *  iv. 金额投放(CPMV/CPCV/刊例价)时, budget=0 or unassigned
     *3.solution时除以上第二条规则外，如果某一变量=0或没有设置值将忽略该项控制
     *  如：CPC/CPD/CPMV/CPCV时, impression=0 or unassigned 将视为广告显示数量无限制
     * </pre>
     */
    long getImpression();

    /**
     * <code>optional int64 click = 2;</code>
     *
     * <pre>
     *点击总数量(CPM/CPD/CPMV/CPCV时: &gt;0,点击数量上限; =0,无上限)
     * </pre>
     */
    boolean hasClick();
    /**
     * <code>optional int64 click = 2;</code>
     *
     * <pre>
     *点击总数量(CPM/CPD/CPMV/CPCV时: &gt;0,点击数量上限; =0,无上限)
     * </pre>
     */
    long getClick();

    /**
     * <code>optional int32 percentage = 3;</code>
     *
     * <pre>
     *CPD控制百分比(CPM/CPC/CPMV/CPCV时: &gt;0,百分比控制; =0,无上限)
     * </pre>
     */
    boolean hasPercentage();
    /**
     * <code>optional int32 percentage = 3;</code>
     *
     * <pre>
     *CPD控制百分比(CPM/CPC/CPMV/CPCV时: &gt;0,百分比控制; =0,无上限)
     * </pre>
     */
    int getPercentage();

    /**
     * <code>optional int64 budget = 4;</code>
     *
     * <pre>
     *总预算(单位:百万分之一元)(CPM/CPC/CPD时: &gt;0,金额预算上限(如果创意有单价属性时); =0,无上限)
     * </pre>
     */
    boolean hasBudget();
    /**
     * <code>optional int64 budget = 4;</code>
     *
     * <pre>
     *总预算(单位:百万分之一元)(CPM/CPC/CPD时: &gt;0,金额预算上限(如果创意有单价属性时); =0,无上限)
     * </pre>
     */
    long getBudget();

    /**
     * <code>optional uint64 dayBudget = 5;</code>
     *
     * <pre>
     *每日预算限制，作为budget总预算在每天控制时预算的一个修正,budget=0 or unassigned时，无修正
     * </pre>
     */
    boolean hasDayBudget();
    /**
     * <code>optional uint64 dayBudget = 5;</code>
     *
     * <pre>
     *每日预算限制，作为budget总预算在每天控制时预算的一个修正,budget=0 or unassigned时，无修正
     * </pre>
     */
    long getDayBudget();
  }
  /**
   * Protobuf type {@code de.cache.DeliveryMethod}
   *
   * <pre>
   *投放数量控制
   * </pre>
   */
  public static final class DeliveryMethod extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:de.cache.DeliveryMethod)
      DeliveryMethodOrBuilder {
    // Use DeliveryMethod.newBuilder() to construct.
    private DeliveryMethod(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeliveryMethod(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeliveryMethod defaultInstance;
    public static DeliveryMethod getDefaultInstance() {
      return defaultInstance;
    }

    public DeliveryMethod getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeliveryMethod(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              impression_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              click_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              percentage_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              budget_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              dayBudget_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.internal_static_de_cache_DeliveryMethod_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.cache.DeliveryMessage.internal_static_de_cache_DeliveryMethod_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.cache.DeliveryMessage.DeliveryMethod.class, de.cache.DeliveryMessage.DeliveryMethod.Builder.class);
    }

    public static com.google.protobuf.Parser<DeliveryMethod> PARSER =
        new com.google.protobuf.AbstractParser<DeliveryMethod>() {
      public DeliveryMethod parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeliveryMethod(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeliveryMethod> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int IMPRESSION_FIELD_NUMBER = 1;
    private long impression_;
    /**
     * <code>optional int64 impression = 1;</code>
     *
     * <pre>
     *1.所有成员变量，可根据情况自由组合, 多个变量同时设置将是与关系
     *2.solution时以下情况将关闭不再投放：
     *   i. CPM时, impression=0 or unassigned
     *  ii. CPC时, click=0 or unassigned
     * iii. CPD时, percentage=0 or unassigned
     *  iv. 金额投放(CPMV/CPCV/刊例价)时, budget=0 or unassigned
     *3.solution时除以上第二条规则外，如果某一变量=0或没有设置值将忽略该项控制
     *  如：CPC/CPD/CPMV/CPCV时, impression=0 or unassigned 将视为广告显示数量无限制
     * </pre>
     */
    public boolean hasImpression() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 impression = 1;</code>
     *
     * <pre>
     *1.所有成员变量，可根据情况自由组合, 多个变量同时设置将是与关系
     *2.solution时以下情况将关闭不再投放：
     *   i. CPM时, impression=0 or unassigned
     *  ii. CPC时, click=0 or unassigned
     * iii. CPD时, percentage=0 or unassigned
     *  iv. 金额投放(CPMV/CPCV/刊例价)时, budget=0 or unassigned
     *3.solution时除以上第二条规则外，如果某一变量=0或没有设置值将忽略该项控制
     *  如：CPC/CPD/CPMV/CPCV时, impression=0 or unassigned 将视为广告显示数量无限制
     * </pre>
     */
    public long getImpression() {
      return impression_;
    }

    public static final int CLICK_FIELD_NUMBER = 2;
    private long click_;
    /**
     * <code>optional int64 click = 2;</code>
     *
     * <pre>
     *点击总数量(CPM/CPD/CPMV/CPCV时: &gt;0,点击数量上限; =0,无上限)
     * </pre>
     */
    public boolean hasClick() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 click = 2;</code>
     *
     * <pre>
     *点击总数量(CPM/CPD/CPMV/CPCV时: &gt;0,点击数量上限; =0,无上限)
     * </pre>
     */
    public long getClick() {
      return click_;
    }

    public static final int PERCENTAGE_FIELD_NUMBER = 3;
    private int percentage_;
    /**
     * <code>optional int32 percentage = 3;</code>
     *
     * <pre>
     *CPD控制百分比(CPM/CPC/CPMV/CPCV时: &gt;0,百分比控制; =0,无上限)
     * </pre>
     */
    public boolean hasPercentage() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 percentage = 3;</code>
     *
     * <pre>
     *CPD控制百分比(CPM/CPC/CPMV/CPCV时: &gt;0,百分比控制; =0,无上限)
     * </pre>
     */
    public int getPercentage() {
      return percentage_;
    }

    public static final int BUDGET_FIELD_NUMBER = 4;
    private long budget_;
    /**
     * <code>optional int64 budget = 4;</code>
     *
     * <pre>
     *总预算(单位:百万分之一元)(CPM/CPC/CPD时: &gt;0,金额预算上限(如果创意有单价属性时); =0,无上限)
     * </pre>
     */
    public boolean hasBudget() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 budget = 4;</code>
     *
     * <pre>
     *总预算(单位:百万分之一元)(CPM/CPC/CPD时: &gt;0,金额预算上限(如果创意有单价属性时); =0,无上限)
     * </pre>
     */
    public long getBudget() {
      return budget_;
    }

    public static final int DAYBUDGET_FIELD_NUMBER = 5;
    private long dayBudget_;
    /**
     * <code>optional uint64 dayBudget = 5;</code>
     *
     * <pre>
     *每日预算限制，作为budget总预算在每天控制时预算的一个修正,budget=0 or unassigned时，无修正
     * </pre>
     */
    public boolean hasDayBudget() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 dayBudget = 5;</code>
     *
     * <pre>
     *每日预算限制，作为budget总预算在每天控制时预算的一个修正,budget=0 or unassigned时，无修正
     * </pre>
     */
    public long getDayBudget() {
      return dayBudget_;
    }

    private void initFields() {
      impression_ = 0L;
      click_ = 0L;
      percentage_ = 0;
      budget_ = 0L;
      dayBudget_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, impression_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, click_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, percentage_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, budget_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, dayBudget_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, impression_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, click_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, percentage_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, budget_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, dayBudget_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.cache.DeliveryMessage.DeliveryMethod parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.DeliveryMethod parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.DeliveryMethod parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.DeliveryMethod parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.DeliveryMethod parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.DeliveryMethod parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.DeliveryMethod parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.cache.DeliveryMessage.DeliveryMethod parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.DeliveryMethod parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.DeliveryMethod parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.cache.DeliveryMessage.DeliveryMethod prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code de.cache.DeliveryMethod}
     *
     * <pre>
     *投放数量控制
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:de.cache.DeliveryMethod)
        de.cache.DeliveryMessage.DeliveryMethodOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_DeliveryMethod_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_DeliveryMethod_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.DeliveryMethod.class, de.cache.DeliveryMessage.DeliveryMethod.Builder.class);
      }

      // Construct using de.cache.DeliveryMessage.DeliveryMethod.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        impression_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        click_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        percentage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        budget_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        dayBudget_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.cache.DeliveryMessage.internal_static_de_cache_DeliveryMethod_descriptor;
      }

      public de.cache.DeliveryMessage.DeliveryMethod getDefaultInstanceForType() {
        return de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance();
      }

      public de.cache.DeliveryMessage.DeliveryMethod build() {
        de.cache.DeliveryMessage.DeliveryMethod result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.cache.DeliveryMessage.DeliveryMethod buildPartial() {
        de.cache.DeliveryMessage.DeliveryMethod result = new de.cache.DeliveryMessage.DeliveryMethod(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.impression_ = impression_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.click_ = click_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.percentage_ = percentage_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.budget_ = budget_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.dayBudget_ = dayBudget_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.cache.DeliveryMessage.DeliveryMethod) {
          return mergeFrom((de.cache.DeliveryMessage.DeliveryMethod)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.cache.DeliveryMessage.DeliveryMethod other) {
        if (other == de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance()) return this;
        if (other.hasImpression()) {
          setImpression(other.getImpression());
        }
        if (other.hasClick()) {
          setClick(other.getClick());
        }
        if (other.hasPercentage()) {
          setPercentage(other.getPercentage());
        }
        if (other.hasBudget()) {
          setBudget(other.getBudget());
        }
        if (other.hasDayBudget()) {
          setDayBudget(other.getDayBudget());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.cache.DeliveryMessage.DeliveryMethod parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.cache.DeliveryMessage.DeliveryMethod) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long impression_ ;
      /**
       * <code>optional int64 impression = 1;</code>
       *
       * <pre>
       *1.所有成员变量，可根据情况自由组合, 多个变量同时设置将是与关系
       *2.solution时以下情况将关闭不再投放：
       *   i. CPM时, impression=0 or unassigned
       *  ii. CPC时, click=0 or unassigned
       * iii. CPD时, percentage=0 or unassigned
       *  iv. 金额投放(CPMV/CPCV/刊例价)时, budget=0 or unassigned
       *3.solution时除以上第二条规则外，如果某一变量=0或没有设置值将忽略该项控制
       *  如：CPC/CPD/CPMV/CPCV时, impression=0 or unassigned 将视为广告显示数量无限制
       * </pre>
       */
      public boolean hasImpression() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 impression = 1;</code>
       *
       * <pre>
       *1.所有成员变量，可根据情况自由组合, 多个变量同时设置将是与关系
       *2.solution时以下情况将关闭不再投放：
       *   i. CPM时, impression=0 or unassigned
       *  ii. CPC时, click=0 or unassigned
       * iii. CPD时, percentage=0 or unassigned
       *  iv. 金额投放(CPMV/CPCV/刊例价)时, budget=0 or unassigned
       *3.solution时除以上第二条规则外，如果某一变量=0或没有设置值将忽略该项控制
       *  如：CPC/CPD/CPMV/CPCV时, impression=0 or unassigned 将视为广告显示数量无限制
       * </pre>
       */
      public long getImpression() {
        return impression_;
      }
      /**
       * <code>optional int64 impression = 1;</code>
       *
       * <pre>
       *1.所有成员变量，可根据情况自由组合, 多个变量同时设置将是与关系
       *2.solution时以下情况将关闭不再投放：
       *   i. CPM时, impression=0 or unassigned
       *  ii. CPC时, click=0 or unassigned
       * iii. CPD时, percentage=0 or unassigned
       *  iv. 金额投放(CPMV/CPCV/刊例价)时, budget=0 or unassigned
       *3.solution时除以上第二条规则外，如果某一变量=0或没有设置值将忽略该项控制
       *  如：CPC/CPD/CPMV/CPCV时, impression=0 or unassigned 将视为广告显示数量无限制
       * </pre>
       */
      public Builder setImpression(long value) {
        bitField0_ |= 0x00000001;
        impression_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 impression = 1;</code>
       *
       * <pre>
       *1.所有成员变量，可根据情况自由组合, 多个变量同时设置将是与关系
       *2.solution时以下情况将关闭不再投放：
       *   i. CPM时, impression=0 or unassigned
       *  ii. CPC时, click=0 or unassigned
       * iii. CPD时, percentage=0 or unassigned
       *  iv. 金额投放(CPMV/CPCV/刊例价)时, budget=0 or unassigned
       *3.solution时除以上第二条规则外，如果某一变量=0或没有设置值将忽略该项控制
       *  如：CPC/CPD/CPMV/CPCV时, impression=0 or unassigned 将视为广告显示数量无限制
       * </pre>
       */
      public Builder clearImpression() {
        bitField0_ = (bitField0_ & ~0x00000001);
        impression_ = 0L;
        onChanged();
        return this;
      }

      private long click_ ;
      /**
       * <code>optional int64 click = 2;</code>
       *
       * <pre>
       *点击总数量(CPM/CPD/CPMV/CPCV时: &gt;0,点击数量上限; =0,无上限)
       * </pre>
       */
      public boolean hasClick() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 click = 2;</code>
       *
       * <pre>
       *点击总数量(CPM/CPD/CPMV/CPCV时: &gt;0,点击数量上限; =0,无上限)
       * </pre>
       */
      public long getClick() {
        return click_;
      }
      /**
       * <code>optional int64 click = 2;</code>
       *
       * <pre>
       *点击总数量(CPM/CPD/CPMV/CPCV时: &gt;0,点击数量上限; =0,无上限)
       * </pre>
       */
      public Builder setClick(long value) {
        bitField0_ |= 0x00000002;
        click_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 click = 2;</code>
       *
       * <pre>
       *点击总数量(CPM/CPD/CPMV/CPCV时: &gt;0,点击数量上限; =0,无上限)
       * </pre>
       */
      public Builder clearClick() {
        bitField0_ = (bitField0_ & ~0x00000002);
        click_ = 0L;
        onChanged();
        return this;
      }

      private int percentage_ ;
      /**
       * <code>optional int32 percentage = 3;</code>
       *
       * <pre>
       *CPD控制百分比(CPM/CPC/CPMV/CPCV时: &gt;0,百分比控制; =0,无上限)
       * </pre>
       */
      public boolean hasPercentage() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 percentage = 3;</code>
       *
       * <pre>
       *CPD控制百分比(CPM/CPC/CPMV/CPCV时: &gt;0,百分比控制; =0,无上限)
       * </pre>
       */
      public int getPercentage() {
        return percentage_;
      }
      /**
       * <code>optional int32 percentage = 3;</code>
       *
       * <pre>
       *CPD控制百分比(CPM/CPC/CPMV/CPCV时: &gt;0,百分比控制; =0,无上限)
       * </pre>
       */
      public Builder setPercentage(int value) {
        bitField0_ |= 0x00000004;
        percentage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 percentage = 3;</code>
       *
       * <pre>
       *CPD控制百分比(CPM/CPC/CPMV/CPCV时: &gt;0,百分比控制; =0,无上限)
       * </pre>
       */
      public Builder clearPercentage() {
        bitField0_ = (bitField0_ & ~0x00000004);
        percentage_ = 0;
        onChanged();
        return this;
      }

      private long budget_ ;
      /**
       * <code>optional int64 budget = 4;</code>
       *
       * <pre>
       *总预算(单位:百万分之一元)(CPM/CPC/CPD时: &gt;0,金额预算上限(如果创意有单价属性时); =0,无上限)
       * </pre>
       */
      public boolean hasBudget() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 budget = 4;</code>
       *
       * <pre>
       *总预算(单位:百万分之一元)(CPM/CPC/CPD时: &gt;0,金额预算上限(如果创意有单价属性时); =0,无上限)
       * </pre>
       */
      public long getBudget() {
        return budget_;
      }
      /**
       * <code>optional int64 budget = 4;</code>
       *
       * <pre>
       *总预算(单位:百万分之一元)(CPM/CPC/CPD时: &gt;0,金额预算上限(如果创意有单价属性时); =0,无上限)
       * </pre>
       */
      public Builder setBudget(long value) {
        bitField0_ |= 0x00000008;
        budget_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 budget = 4;</code>
       *
       * <pre>
       *总预算(单位:百万分之一元)(CPM/CPC/CPD时: &gt;0,金额预算上限(如果创意有单价属性时); =0,无上限)
       * </pre>
       */
      public Builder clearBudget() {
        bitField0_ = (bitField0_ & ~0x00000008);
        budget_ = 0L;
        onChanged();
        return this;
      }

      private long dayBudget_ ;
      /**
       * <code>optional uint64 dayBudget = 5;</code>
       *
       * <pre>
       *每日预算限制，作为budget总预算在每天控制时预算的一个修正,budget=0 or unassigned时，无修正
       * </pre>
       */
      public boolean hasDayBudget() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 dayBudget = 5;</code>
       *
       * <pre>
       *每日预算限制，作为budget总预算在每天控制时预算的一个修正,budget=0 or unassigned时，无修正
       * </pre>
       */
      public long getDayBudget() {
        return dayBudget_;
      }
      /**
       * <code>optional uint64 dayBudget = 5;</code>
       *
       * <pre>
       *每日预算限制，作为budget总预算在每天控制时预算的一个修正,budget=0 or unassigned时，无修正
       * </pre>
       */
      public Builder setDayBudget(long value) {
        bitField0_ |= 0x00000010;
        dayBudget_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 dayBudget = 5;</code>
       *
       * <pre>
       *每日预算限制，作为budget总预算在每天控制时预算的一个修正,budget=0 or unassigned时，无修正
       * </pre>
       */
      public Builder clearDayBudget() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dayBudget_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:de.cache.DeliveryMethod)
    }

    static {
      defaultInstance = new DeliveryMethod(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:de.cache.DeliveryMethod)
  }

  public interface CacheFileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.cache.CacheFile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string fileName = 1;</code>
     *
     * <pre>
     *带有相对路径的文件名，具体文件路径和名称参照&lt;cache文件清单&gt;
     * </pre>
     */
    boolean hasFileName();
    /**
     * <code>optional string fileName = 1;</code>
     *
     * <pre>
     *带有相对路径的文件名，具体文件路径和名称参照&lt;cache文件清单&gt;
     * </pre>
     */
    java.lang.String getFileName();
    /**
     * <code>optional string fileName = 1;</code>
     *
     * <pre>
     *带有相对路径的文件名，具体文件路径和名称参照&lt;cache文件清单&gt;
     * </pre>
     */
    com.google.protobuf.ByteString
        getFileNameBytes();

    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *文件操作类型（如增加修改或删除）
     * </pre>
     */
    boolean hasCmd();
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *文件操作类型（如增加修改或删除）
     * </pre>
     */
    de.cache.DeliveryMessage.Command getCmd();

    /**
     * <code>optional bytes content = 3;</code>
     *
     * <pre>
     *文件的具体内容
     * </pre>
     */
    boolean hasContent();
    /**
     * <code>optional bytes content = 3;</code>
     *
     * <pre>
     *文件的具体内容
     * </pre>
     */
    com.google.protobuf.ByteString getContent();
  }
  /**
   * Protobuf type {@code de.cache.CacheFile}
   *
   * <pre>
   *定向cache文件格式（如ip、黑白名单等）
   * </pre>
   */
  public static final class CacheFile extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:de.cache.CacheFile)
      CacheFileOrBuilder {
    // Use CacheFile.newBuilder() to construct.
    private CacheFile(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CacheFile(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CacheFile defaultInstance;
    public static CacheFile getDefaultInstance() {
      return defaultInstance;
    }

    public CacheFile getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CacheFile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              fileName_ = bs;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.Command value = de.cache.DeliveryMessage.Command.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                cmd_ = value;
              }
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              content_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.internal_static_de_cache_CacheFile_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.cache.DeliveryMessage.internal_static_de_cache_CacheFile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.cache.DeliveryMessage.CacheFile.class, de.cache.DeliveryMessage.CacheFile.Builder.class);
    }

    public static com.google.protobuf.Parser<CacheFile> PARSER =
        new com.google.protobuf.AbstractParser<CacheFile>() {
      public CacheFile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CacheFile(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CacheFile> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FILENAME_FIELD_NUMBER = 1;
    private java.lang.Object fileName_;
    /**
     * <code>optional string fileName = 1;</code>
     *
     * <pre>
     *带有相对路径的文件名，具体文件路径和名称参照&lt;cache文件清单&gt;
     * </pre>
     */
    public boolean hasFileName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string fileName = 1;</code>
     *
     * <pre>
     *带有相对路径的文件名，具体文件路径和名称参照&lt;cache文件清单&gt;
     * </pre>
     */
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fileName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string fileName = 1;</code>
     *
     * <pre>
     *带有相对路径的文件名，具体文件路径和名称参照&lt;cache文件清单&gt;
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CMD_FIELD_NUMBER = 2;
    private de.cache.DeliveryMessage.Command cmd_;
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *文件操作类型（如增加修改或删除）
     * </pre>
     */
    public boolean hasCmd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *文件操作类型（如增加修改或删除）
     * </pre>
     */
    public de.cache.DeliveryMessage.Command getCmd() {
      return cmd_;
    }

    public static final int CONTENT_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString content_;
    /**
     * <code>optional bytes content = 3;</code>
     *
     * <pre>
     *文件的具体内容
     * </pre>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes content = 3;</code>
     *
     * <pre>
     *文件的具体内容
     * </pre>
     */
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }

    private void initFields() {
      fileName_ = "";
      cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      content_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getFileNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, content_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getFileNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, content_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.cache.DeliveryMessage.CacheFile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.CacheFile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.CacheFile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.CacheFile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.CacheFile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.CacheFile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.CacheFile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.cache.DeliveryMessage.CacheFile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.CacheFile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.CacheFile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.cache.DeliveryMessage.CacheFile prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code de.cache.CacheFile}
     *
     * <pre>
     *定向cache文件格式（如ip、黑白名单等）
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:de.cache.CacheFile)
        de.cache.DeliveryMessage.CacheFileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_CacheFile_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_CacheFile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.CacheFile.class, de.cache.DeliveryMessage.CacheFile.Builder.class);
      }

      // Construct using de.cache.DeliveryMessage.CacheFile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fileName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        bitField0_ = (bitField0_ & ~0x00000002);
        content_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.cache.DeliveryMessage.internal_static_de_cache_CacheFile_descriptor;
      }

      public de.cache.DeliveryMessage.CacheFile getDefaultInstanceForType() {
        return de.cache.DeliveryMessage.CacheFile.getDefaultInstance();
      }

      public de.cache.DeliveryMessage.CacheFile build() {
        de.cache.DeliveryMessage.CacheFile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.cache.DeliveryMessage.CacheFile buildPartial() {
        de.cache.DeliveryMessage.CacheFile result = new de.cache.DeliveryMessage.CacheFile(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fileName_ = fileName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cmd_ = cmd_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.content_ = content_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.cache.DeliveryMessage.CacheFile) {
          return mergeFrom((de.cache.DeliveryMessage.CacheFile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.cache.DeliveryMessage.CacheFile other) {
        if (other == de.cache.DeliveryMessage.CacheFile.getDefaultInstance()) return this;
        if (other.hasFileName()) {
          bitField0_ |= 0x00000001;
          fileName_ = other.fileName_;
          onChanged();
        }
        if (other.hasCmd()) {
          setCmd(other.getCmd());
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.cache.DeliveryMessage.CacheFile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.cache.DeliveryMessage.CacheFile) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object fileName_ = "";
      /**
       * <code>optional string fileName = 1;</code>
       *
       * <pre>
       *带有相对路径的文件名，具体文件路径和名称参照&lt;cache文件清单&gt;
       * </pre>
       */
      public boolean hasFileName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string fileName = 1;</code>
       *
       * <pre>
       *带有相对路径的文件名，具体文件路径和名称参照&lt;cache文件清单&gt;
       * </pre>
       */
      public java.lang.String getFileName() {
        java.lang.Object ref = fileName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fileName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string fileName = 1;</code>
       *
       * <pre>
       *带有相对路径的文件名，具体文件路径和名称参照&lt;cache文件清单&gt;
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        java.lang.Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string fileName = 1;</code>
       *
       * <pre>
       *带有相对路径的文件名，具体文件路径和名称参照&lt;cache文件清单&gt;
       * </pre>
       */
      public Builder setFileName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        fileName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string fileName = 1;</code>
       *
       * <pre>
       *带有相对路径的文件名，具体文件路径和名称参照&lt;cache文件清单&gt;
       * </pre>
       */
      public Builder clearFileName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fileName_ = getDefaultInstance().getFileName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string fileName = 1;</code>
       *
       * <pre>
       *带有相对路径的文件名，具体文件路径和名称参照&lt;cache文件清单&gt;
       * </pre>
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        fileName_ = value;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.Command cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *文件操作类型（如增加修改或删除）
       * </pre>
       */
      public boolean hasCmd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *文件操作类型（如增加修改或删除）
       * </pre>
       */
      public de.cache.DeliveryMessage.Command getCmd() {
        return cmd_;
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *文件操作类型（如增加修改或删除）
       * </pre>
       */
      public Builder setCmd(de.cache.DeliveryMessage.Command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        cmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *文件操作类型（如增加修改或删除）
       * </pre>
       */
      public Builder clearCmd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes content = 3;</code>
       *
       * <pre>
       *文件的具体内容
       * </pre>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes content = 3;</code>
       *
       * <pre>
       *文件的具体内容
       * </pre>
       */
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      /**
       * <code>optional bytes content = 3;</code>
       *
       * <pre>
       *文件的具体内容
       * </pre>
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes content = 3;</code>
       *
       * <pre>
       *文件的具体内容
       * </pre>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000004);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:de.cache.CacheFile)
    }

    static {
      defaultInstance = new CacheFile(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:de.cache.CacheFile)
  }

  public interface ChannelFamilyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.cache.ChannelFamily)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *媒体圈id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *媒体圈id
     * </pre>
     */
    long getId();

    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    boolean hasCmd();
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    de.cache.DeliveryMessage.Command getCmd();

    /**
     * <code>repeated int64 fixedBannerId = 3;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    java.util.List<java.lang.Long> getFixedBannerIdList();
    /**
     * <code>repeated int64 fixedBannerId = 3;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    int getFixedBannerIdCount();
    /**
     * <code>repeated int64 fixedBannerId = 3;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    long getFixedBannerId(int index);
  }
  /**
   * Protobuf type {@code de.cache.ChannelFamily}
   *
   * <pre>
   *媒体相关实体 ChannelFamily/ChannelPool/ChannelGroup/Channel
   * </pre>
   */
  public static final class ChannelFamily extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:de.cache.ChannelFamily)
      ChannelFamilyOrBuilder {
    // Use ChannelFamily.newBuilder() to construct.
    private ChannelFamily(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChannelFamily(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChannelFamily defaultInstance;
    public static ChannelFamily getDefaultInstance() {
      return defaultInstance;
    }

    public ChannelFamily getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChannelFamily(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.Command value = de.cache.DeliveryMessage.Command.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                cmd_ = value;
              }
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                fixedBannerId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              fixedBannerId_.add(input.readInt64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                fixedBannerId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                fixedBannerId_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          fixedBannerId_ = java.util.Collections.unmodifiableList(fixedBannerId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.internal_static_de_cache_ChannelFamily_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.cache.DeliveryMessage.internal_static_de_cache_ChannelFamily_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.cache.DeliveryMessage.ChannelFamily.class, de.cache.DeliveryMessage.ChannelFamily.Builder.class);
    }

    public static com.google.protobuf.Parser<ChannelFamily> PARSER =
        new com.google.protobuf.AbstractParser<ChannelFamily>() {
      public ChannelFamily parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChannelFamily(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChannelFamily> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *媒体圈id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *媒体圈id
     * </pre>
     */
    public long getId() {
      return id_;
    }

    public static final int CMD_FIELD_NUMBER = 2;
    private de.cache.DeliveryMessage.Command cmd_;
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    public boolean hasCmd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    public de.cache.DeliveryMessage.Command getCmd() {
      return cmd_;
    }

    public static final int FIXEDBANNERID_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Long> fixedBannerId_;
    /**
     * <code>repeated int64 fixedBannerId = 3;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getFixedBannerIdList() {
      return fixedBannerId_;
    }
    /**
     * <code>repeated int64 fixedBannerId = 3;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    public int getFixedBannerIdCount() {
      return fixedBannerId_.size();
    }
    /**
     * <code>repeated int64 fixedBannerId = 3;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    public long getFixedBannerId(int index) {
      return fixedBannerId_.get(index);
    }

    private void initFields() {
      id_ = 0L;
      cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      fixedBannerId_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, cmd_.getNumber());
      }
      for (int i = 0; i < fixedBannerId_.size(); i++) {
        output.writeInt64(3, fixedBannerId_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, cmd_.getNumber());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < fixedBannerId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(fixedBannerId_.get(i));
        }
        size += dataSize;
        size += 1 * getFixedBannerIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.cache.DeliveryMessage.ChannelFamily parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.ChannelFamily parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.ChannelFamily parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.ChannelFamily parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.ChannelFamily parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.ChannelFamily parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.ChannelFamily parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.cache.DeliveryMessage.ChannelFamily parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.ChannelFamily parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.ChannelFamily parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.cache.DeliveryMessage.ChannelFamily prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code de.cache.ChannelFamily}
     *
     * <pre>
     *媒体相关实体 ChannelFamily/ChannelPool/ChannelGroup/Channel
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:de.cache.ChannelFamily)
        de.cache.DeliveryMessage.ChannelFamilyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_ChannelFamily_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_ChannelFamily_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.ChannelFamily.class, de.cache.DeliveryMessage.ChannelFamily.Builder.class);
      }

      // Construct using de.cache.DeliveryMessage.ChannelFamily.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        bitField0_ = (bitField0_ & ~0x00000002);
        fixedBannerId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.cache.DeliveryMessage.internal_static_de_cache_ChannelFamily_descriptor;
      }

      public de.cache.DeliveryMessage.ChannelFamily getDefaultInstanceForType() {
        return de.cache.DeliveryMessage.ChannelFamily.getDefaultInstance();
      }

      public de.cache.DeliveryMessage.ChannelFamily build() {
        de.cache.DeliveryMessage.ChannelFamily result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.cache.DeliveryMessage.ChannelFamily buildPartial() {
        de.cache.DeliveryMessage.ChannelFamily result = new de.cache.DeliveryMessage.ChannelFamily(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cmd_ = cmd_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          fixedBannerId_ = java.util.Collections.unmodifiableList(fixedBannerId_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.fixedBannerId_ = fixedBannerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.cache.DeliveryMessage.ChannelFamily) {
          return mergeFrom((de.cache.DeliveryMessage.ChannelFamily)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.cache.DeliveryMessage.ChannelFamily other) {
        if (other == de.cache.DeliveryMessage.ChannelFamily.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCmd()) {
          setCmd(other.getCmd());
        }
        if (!other.fixedBannerId_.isEmpty()) {
          if (fixedBannerId_.isEmpty()) {
            fixedBannerId_ = other.fixedBannerId_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureFixedBannerIdIsMutable();
            fixedBannerId_.addAll(other.fixedBannerId_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.cache.DeliveryMessage.ChannelFamily parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.cache.DeliveryMessage.ChannelFamily) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *媒体圈id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *媒体圈id
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *媒体圈id
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *媒体圈id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.Command cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public boolean hasCmd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public de.cache.DeliveryMessage.Command getCmd() {
        return cmd_;
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public Builder setCmd(de.cache.DeliveryMessage.Command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        cmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public Builder clearCmd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> fixedBannerId_ = java.util.Collections.emptyList();
      private void ensureFixedBannerIdIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          fixedBannerId_ = new java.util.ArrayList<java.lang.Long>(fixedBannerId_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int64 fixedBannerId = 3;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getFixedBannerIdList() {
        return java.util.Collections.unmodifiableList(fixedBannerId_);
      }
      /**
       * <code>repeated int64 fixedBannerId = 3;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public int getFixedBannerIdCount() {
        return fixedBannerId_.size();
      }
      /**
       * <code>repeated int64 fixedBannerId = 3;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public long getFixedBannerId(int index) {
        return fixedBannerId_.get(index);
      }
      /**
       * <code>repeated int64 fixedBannerId = 3;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public Builder setFixedBannerId(
          int index, long value) {
        ensureFixedBannerIdIsMutable();
        fixedBannerId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fixedBannerId = 3;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public Builder addFixedBannerId(long value) {
        ensureFixedBannerIdIsMutable();
        fixedBannerId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fixedBannerId = 3;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public Builder addAllFixedBannerId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureFixedBannerIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fixedBannerId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fixedBannerId = 3;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public Builder clearFixedBannerId() {
        fixedBannerId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:de.cache.ChannelFamily)
    }

    static {
      defaultInstance = new ChannelFamily(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:de.cache.ChannelFamily)
  }

  public interface ChannelPoolOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.cache.ChannelPool)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *网站id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *网站id
     * </pre>
     */
    long getId();

    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    boolean hasCmd();
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    de.cache.DeliveryMessage.Command getCmd();

    /**
     * <code>optional int64 channelFamilyId = 3;</code>
     *
     * <pre>
     *媒体圈id
     * </pre>
     */
    boolean hasChannelFamilyId();
    /**
     * <code>optional int64 channelFamilyId = 3;</code>
     *
     * <pre>
     *媒体圈id
     * </pre>
     */
    long getChannelFamilyId();

    /**
     * <code>repeated int64 fixedBannerId = 4;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    java.util.List<java.lang.Long> getFixedBannerIdList();
    /**
     * <code>repeated int64 fixedBannerId = 4;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    int getFixedBannerIdCount();
    /**
     * <code>repeated int64 fixedBannerId = 4;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    long getFixedBannerId(int index);
  }
  /**
   * Protobuf type {@code de.cache.ChannelPool}
   *
   * <pre>
   *网站数据【winmax下无此message对应项，固定为id=1】
   * </pre>
   */
  public static final class ChannelPool extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:de.cache.ChannelPool)
      ChannelPoolOrBuilder {
    // Use ChannelPool.newBuilder() to construct.
    private ChannelPool(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChannelPool(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChannelPool defaultInstance;
    public static ChannelPool getDefaultInstance() {
      return defaultInstance;
    }

    public ChannelPool getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChannelPool(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.Command value = de.cache.DeliveryMessage.Command.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                cmd_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              channelFamilyId_ = input.readInt64();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                fixedBannerId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              fixedBannerId_.add(input.readInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                fixedBannerId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                fixedBannerId_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          fixedBannerId_ = java.util.Collections.unmodifiableList(fixedBannerId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.internal_static_de_cache_ChannelPool_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.cache.DeliveryMessage.internal_static_de_cache_ChannelPool_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.cache.DeliveryMessage.ChannelPool.class, de.cache.DeliveryMessage.ChannelPool.Builder.class);
    }

    public static com.google.protobuf.Parser<ChannelPool> PARSER =
        new com.google.protobuf.AbstractParser<ChannelPool>() {
      public ChannelPool parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChannelPool(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChannelPool> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *网站id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *网站id
     * </pre>
     */
    public long getId() {
      return id_;
    }

    public static final int CMD_FIELD_NUMBER = 2;
    private de.cache.DeliveryMessage.Command cmd_;
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    public boolean hasCmd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    public de.cache.DeliveryMessage.Command getCmd() {
      return cmd_;
    }

    public static final int CHANNELFAMILYID_FIELD_NUMBER = 3;
    private long channelFamilyId_;
    /**
     * <code>optional int64 channelFamilyId = 3;</code>
     *
     * <pre>
     *媒体圈id
     * </pre>
     */
    public boolean hasChannelFamilyId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 channelFamilyId = 3;</code>
     *
     * <pre>
     *媒体圈id
     * </pre>
     */
    public long getChannelFamilyId() {
      return channelFamilyId_;
    }

    public static final int FIXEDBANNERID_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> fixedBannerId_;
    /**
     * <code>repeated int64 fixedBannerId = 4;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getFixedBannerIdList() {
      return fixedBannerId_;
    }
    /**
     * <code>repeated int64 fixedBannerId = 4;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    public int getFixedBannerIdCount() {
      return fixedBannerId_.size();
    }
    /**
     * <code>repeated int64 fixedBannerId = 4;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    public long getFixedBannerId(int index) {
      return fixedBannerId_.get(index);
    }

    private void initFields() {
      id_ = 0L;
      cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      channelFamilyId_ = 0L;
      fixedBannerId_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, channelFamilyId_);
      }
      for (int i = 0; i < fixedBannerId_.size(); i++) {
        output.writeInt64(4, fixedBannerId_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, channelFamilyId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < fixedBannerId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(fixedBannerId_.get(i));
        }
        size += dataSize;
        size += 1 * getFixedBannerIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.cache.DeliveryMessage.ChannelPool parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.ChannelPool parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.ChannelPool parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.ChannelPool parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.ChannelPool parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.ChannelPool parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.ChannelPool parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.cache.DeliveryMessage.ChannelPool parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.ChannelPool parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.ChannelPool parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.cache.DeliveryMessage.ChannelPool prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code de.cache.ChannelPool}
     *
     * <pre>
     *网站数据【winmax下无此message对应项，固定为id=1】
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:de.cache.ChannelPool)
        de.cache.DeliveryMessage.ChannelPoolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_ChannelPool_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_ChannelPool_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.ChannelPool.class, de.cache.DeliveryMessage.ChannelPool.Builder.class);
      }

      // Construct using de.cache.DeliveryMessage.ChannelPool.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        bitField0_ = (bitField0_ & ~0x00000002);
        channelFamilyId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        fixedBannerId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.cache.DeliveryMessage.internal_static_de_cache_ChannelPool_descriptor;
      }

      public de.cache.DeliveryMessage.ChannelPool getDefaultInstanceForType() {
        return de.cache.DeliveryMessage.ChannelPool.getDefaultInstance();
      }

      public de.cache.DeliveryMessage.ChannelPool build() {
        de.cache.DeliveryMessage.ChannelPool result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.cache.DeliveryMessage.ChannelPool buildPartial() {
        de.cache.DeliveryMessage.ChannelPool result = new de.cache.DeliveryMessage.ChannelPool(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cmd_ = cmd_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.channelFamilyId_ = channelFamilyId_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          fixedBannerId_ = java.util.Collections.unmodifiableList(fixedBannerId_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.fixedBannerId_ = fixedBannerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.cache.DeliveryMessage.ChannelPool) {
          return mergeFrom((de.cache.DeliveryMessage.ChannelPool)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.cache.DeliveryMessage.ChannelPool other) {
        if (other == de.cache.DeliveryMessage.ChannelPool.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCmd()) {
          setCmd(other.getCmd());
        }
        if (other.hasChannelFamilyId()) {
          setChannelFamilyId(other.getChannelFamilyId());
        }
        if (!other.fixedBannerId_.isEmpty()) {
          if (fixedBannerId_.isEmpty()) {
            fixedBannerId_ = other.fixedBannerId_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureFixedBannerIdIsMutable();
            fixedBannerId_.addAll(other.fixedBannerId_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.cache.DeliveryMessage.ChannelPool parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.cache.DeliveryMessage.ChannelPool) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *网站id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *网站id
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *网站id
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *网站id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.Command cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public boolean hasCmd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public de.cache.DeliveryMessage.Command getCmd() {
        return cmd_;
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public Builder setCmd(de.cache.DeliveryMessage.Command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        cmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public Builder clearCmd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        onChanged();
        return this;
      }

      private long channelFamilyId_ ;
      /**
       * <code>optional int64 channelFamilyId = 3;</code>
       *
       * <pre>
       *媒体圈id
       * </pre>
       */
      public boolean hasChannelFamilyId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 channelFamilyId = 3;</code>
       *
       * <pre>
       *媒体圈id
       * </pre>
       */
      public long getChannelFamilyId() {
        return channelFamilyId_;
      }
      /**
       * <code>optional int64 channelFamilyId = 3;</code>
       *
       * <pre>
       *媒体圈id
       * </pre>
       */
      public Builder setChannelFamilyId(long value) {
        bitField0_ |= 0x00000004;
        channelFamilyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 channelFamilyId = 3;</code>
       *
       * <pre>
       *媒体圈id
       * </pre>
       */
      public Builder clearChannelFamilyId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        channelFamilyId_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> fixedBannerId_ = java.util.Collections.emptyList();
      private void ensureFixedBannerIdIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          fixedBannerId_ = new java.util.ArrayList<java.lang.Long>(fixedBannerId_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int64 fixedBannerId = 4;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getFixedBannerIdList() {
        return java.util.Collections.unmodifiableList(fixedBannerId_);
      }
      /**
       * <code>repeated int64 fixedBannerId = 4;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public int getFixedBannerIdCount() {
        return fixedBannerId_.size();
      }
      /**
       * <code>repeated int64 fixedBannerId = 4;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public long getFixedBannerId(int index) {
        return fixedBannerId_.get(index);
      }
      /**
       * <code>repeated int64 fixedBannerId = 4;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public Builder setFixedBannerId(
          int index, long value) {
        ensureFixedBannerIdIsMutable();
        fixedBannerId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fixedBannerId = 4;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public Builder addFixedBannerId(long value) {
        ensureFixedBannerIdIsMutable();
        fixedBannerId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fixedBannerId = 4;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public Builder addAllFixedBannerId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureFixedBannerIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fixedBannerId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fixedBannerId = 4;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public Builder clearFixedBannerId() {
        fixedBannerId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:de.cache.ChannelPool)
    }

    static {
      defaultInstance = new ChannelPool(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:de.cache.ChannelPool)
  }

  public interface ChannelGroupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.cache.ChannelGroup)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *频道id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *频道id
     * </pre>
     */
    long getId();

    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    boolean hasCmd();
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    de.cache.DeliveryMessage.Command getCmd();

    /**
     * <code>optional int64 channelPoolId = 3;</code>
     *
     * <pre>
     *网站id
     * </pre>
     */
    boolean hasChannelPoolId();
    /**
     * <code>optional int64 channelPoolId = 3;</code>
     *
     * <pre>
     *网站id
     * </pre>
     */
    long getChannelPoolId();

    /**
     * <code>repeated int64 fixedBannerId = 4;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    java.util.List<java.lang.Long> getFixedBannerIdList();
    /**
     * <code>repeated int64 fixedBannerId = 4;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    int getFixedBannerIdCount();
    /**
     * <code>repeated int64 fixedBannerId = 4;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    long getFixedBannerId(int index);
  }
  /**
   * Protobuf type {@code de.cache.ChannelGroup}
   *
   * <pre>
   *频道数据【winmax下无此message对应项，固定为id=1】
   * </pre>
   */
  public static final class ChannelGroup extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:de.cache.ChannelGroup)
      ChannelGroupOrBuilder {
    // Use ChannelGroup.newBuilder() to construct.
    private ChannelGroup(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChannelGroup(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChannelGroup defaultInstance;
    public static ChannelGroup getDefaultInstance() {
      return defaultInstance;
    }

    public ChannelGroup getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChannelGroup(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.Command value = de.cache.DeliveryMessage.Command.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                cmd_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              channelPoolId_ = input.readInt64();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                fixedBannerId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              fixedBannerId_.add(input.readInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                fixedBannerId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                fixedBannerId_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          fixedBannerId_ = java.util.Collections.unmodifiableList(fixedBannerId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.internal_static_de_cache_ChannelGroup_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.cache.DeliveryMessage.internal_static_de_cache_ChannelGroup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.cache.DeliveryMessage.ChannelGroup.class, de.cache.DeliveryMessage.ChannelGroup.Builder.class);
    }

    public static com.google.protobuf.Parser<ChannelGroup> PARSER =
        new com.google.protobuf.AbstractParser<ChannelGroup>() {
      public ChannelGroup parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChannelGroup(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChannelGroup> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *频道id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *频道id
     * </pre>
     */
    public long getId() {
      return id_;
    }

    public static final int CMD_FIELD_NUMBER = 2;
    private de.cache.DeliveryMessage.Command cmd_;
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    public boolean hasCmd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    public de.cache.DeliveryMessage.Command getCmd() {
      return cmd_;
    }

    public static final int CHANNELPOOLID_FIELD_NUMBER = 3;
    private long channelPoolId_;
    /**
     * <code>optional int64 channelPoolId = 3;</code>
     *
     * <pre>
     *网站id
     * </pre>
     */
    public boolean hasChannelPoolId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 channelPoolId = 3;</code>
     *
     * <pre>
     *网站id
     * </pre>
     */
    public long getChannelPoolId() {
      return channelPoolId_;
    }

    public static final int FIXEDBANNERID_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> fixedBannerId_;
    /**
     * <code>repeated int64 fixedBannerId = 4;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getFixedBannerIdList() {
      return fixedBannerId_;
    }
    /**
     * <code>repeated int64 fixedBannerId = 4;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    public int getFixedBannerIdCount() {
      return fixedBannerId_.size();
    }
    /**
     * <code>repeated int64 fixedBannerId = 4;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    public long getFixedBannerId(int index) {
      return fixedBannerId_.get(index);
    }

    private void initFields() {
      id_ = 0L;
      cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      channelPoolId_ = 0L;
      fixedBannerId_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, channelPoolId_);
      }
      for (int i = 0; i < fixedBannerId_.size(); i++) {
        output.writeInt64(4, fixedBannerId_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, channelPoolId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < fixedBannerId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(fixedBannerId_.get(i));
        }
        size += dataSize;
        size += 1 * getFixedBannerIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.cache.DeliveryMessage.ChannelGroup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.ChannelGroup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.ChannelGroup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.ChannelGroup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.ChannelGroup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.ChannelGroup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.ChannelGroup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.cache.DeliveryMessage.ChannelGroup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.ChannelGroup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.ChannelGroup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.cache.DeliveryMessage.ChannelGroup prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code de.cache.ChannelGroup}
     *
     * <pre>
     *频道数据【winmax下无此message对应项，固定为id=1】
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:de.cache.ChannelGroup)
        de.cache.DeliveryMessage.ChannelGroupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_ChannelGroup_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_ChannelGroup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.ChannelGroup.class, de.cache.DeliveryMessage.ChannelGroup.Builder.class);
      }

      // Construct using de.cache.DeliveryMessage.ChannelGroup.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        bitField0_ = (bitField0_ & ~0x00000002);
        channelPoolId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        fixedBannerId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.cache.DeliveryMessage.internal_static_de_cache_ChannelGroup_descriptor;
      }

      public de.cache.DeliveryMessage.ChannelGroup getDefaultInstanceForType() {
        return de.cache.DeliveryMessage.ChannelGroup.getDefaultInstance();
      }

      public de.cache.DeliveryMessage.ChannelGroup build() {
        de.cache.DeliveryMessage.ChannelGroup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.cache.DeliveryMessage.ChannelGroup buildPartial() {
        de.cache.DeliveryMessage.ChannelGroup result = new de.cache.DeliveryMessage.ChannelGroup(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cmd_ = cmd_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.channelPoolId_ = channelPoolId_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          fixedBannerId_ = java.util.Collections.unmodifiableList(fixedBannerId_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.fixedBannerId_ = fixedBannerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.cache.DeliveryMessage.ChannelGroup) {
          return mergeFrom((de.cache.DeliveryMessage.ChannelGroup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.cache.DeliveryMessage.ChannelGroup other) {
        if (other == de.cache.DeliveryMessage.ChannelGroup.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCmd()) {
          setCmd(other.getCmd());
        }
        if (other.hasChannelPoolId()) {
          setChannelPoolId(other.getChannelPoolId());
        }
        if (!other.fixedBannerId_.isEmpty()) {
          if (fixedBannerId_.isEmpty()) {
            fixedBannerId_ = other.fixedBannerId_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureFixedBannerIdIsMutable();
            fixedBannerId_.addAll(other.fixedBannerId_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.cache.DeliveryMessage.ChannelGroup parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.cache.DeliveryMessage.ChannelGroup) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *频道id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *频道id
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *频道id
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *频道id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.Command cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public boolean hasCmd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public de.cache.DeliveryMessage.Command getCmd() {
        return cmd_;
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public Builder setCmd(de.cache.DeliveryMessage.Command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        cmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public Builder clearCmd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        onChanged();
        return this;
      }

      private long channelPoolId_ ;
      /**
       * <code>optional int64 channelPoolId = 3;</code>
       *
       * <pre>
       *网站id
       * </pre>
       */
      public boolean hasChannelPoolId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 channelPoolId = 3;</code>
       *
       * <pre>
       *网站id
       * </pre>
       */
      public long getChannelPoolId() {
        return channelPoolId_;
      }
      /**
       * <code>optional int64 channelPoolId = 3;</code>
       *
       * <pre>
       *网站id
       * </pre>
       */
      public Builder setChannelPoolId(long value) {
        bitField0_ |= 0x00000004;
        channelPoolId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 channelPoolId = 3;</code>
       *
       * <pre>
       *网站id
       * </pre>
       */
      public Builder clearChannelPoolId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        channelPoolId_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> fixedBannerId_ = java.util.Collections.emptyList();
      private void ensureFixedBannerIdIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          fixedBannerId_ = new java.util.ArrayList<java.lang.Long>(fixedBannerId_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int64 fixedBannerId = 4;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getFixedBannerIdList() {
        return java.util.Collections.unmodifiableList(fixedBannerId_);
      }
      /**
       * <code>repeated int64 fixedBannerId = 4;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public int getFixedBannerIdCount() {
        return fixedBannerId_.size();
      }
      /**
       * <code>repeated int64 fixedBannerId = 4;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public long getFixedBannerId(int index) {
        return fixedBannerId_.get(index);
      }
      /**
       * <code>repeated int64 fixedBannerId = 4;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public Builder setFixedBannerId(
          int index, long value) {
        ensureFixedBannerIdIsMutable();
        fixedBannerId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fixedBannerId = 4;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public Builder addFixedBannerId(long value) {
        ensureFixedBannerIdIsMutable();
        fixedBannerId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fixedBannerId = 4;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public Builder addAllFixedBannerId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureFixedBannerIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fixedBannerId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fixedBannerId = 4;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public Builder clearFixedBannerId() {
        fixedBannerId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:de.cache.ChannelGroup)
    }

    static {
      defaultInstance = new ChannelGroup(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:de.cache.ChannelGroup)
  }

  public interface BlackAndWhiteListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.cache.BlackAndWhiteList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated string whiteList = 1;</code>
     *
     * <pre>
     **domain* or *url*
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getWhiteListList();
    /**
     * <code>repeated string whiteList = 1;</code>
     *
     * <pre>
     **domain* or *url*
     * </pre>
     */
    int getWhiteListCount();
    /**
     * <code>repeated string whiteList = 1;</code>
     *
     * <pre>
     **domain* or *url*
     * </pre>
     */
    java.lang.String getWhiteList(int index);
    /**
     * <code>repeated string whiteList = 1;</code>
     *
     * <pre>
     **domain* or *url*
     * </pre>
     */
    com.google.protobuf.ByteString
        getWhiteListBytes(int index);

    /**
     * <code>repeated string blackList = 2;</code>
     *
     * <pre>
     **domain* or *url*
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getBlackListList();
    /**
     * <code>repeated string blackList = 2;</code>
     *
     * <pre>
     **domain* or *url*
     * </pre>
     */
    int getBlackListCount();
    /**
     * <code>repeated string blackList = 2;</code>
     *
     * <pre>
     **domain* or *url*
     * </pre>
     */
    java.lang.String getBlackList(int index);
    /**
     * <code>repeated string blackList = 2;</code>
     *
     * <pre>
     **domain* or *url*
     * </pre>
     */
    com.google.protobuf.ByteString
        getBlackListBytes(int index);
  }
  /**
   * Protobuf type {@code de.cache.BlackAndWhiteList}
   *
   * <pre>
   *黑白名单
   * </pre>
   */
  public static final class BlackAndWhiteList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:de.cache.BlackAndWhiteList)
      BlackAndWhiteListOrBuilder {
    // Use BlackAndWhiteList.newBuilder() to construct.
    private BlackAndWhiteList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BlackAndWhiteList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BlackAndWhiteList defaultInstance;
    public static BlackAndWhiteList getDefaultInstance() {
      return defaultInstance;
    }

    public BlackAndWhiteList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BlackAndWhiteList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                whiteList_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              whiteList_.add(bs);
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                blackList_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              blackList_.add(bs);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          whiteList_ = whiteList_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          blackList_ = blackList_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.internal_static_de_cache_BlackAndWhiteList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.cache.DeliveryMessage.internal_static_de_cache_BlackAndWhiteList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.cache.DeliveryMessage.BlackAndWhiteList.class, de.cache.DeliveryMessage.BlackAndWhiteList.Builder.class);
    }

    public static com.google.protobuf.Parser<BlackAndWhiteList> PARSER =
        new com.google.protobuf.AbstractParser<BlackAndWhiteList>() {
      public BlackAndWhiteList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlackAndWhiteList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BlackAndWhiteList> getParserForType() {
      return PARSER;
    }

    public static final int WHITELIST_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList whiteList_;
    /**
     * <code>repeated string whiteList = 1;</code>
     *
     * <pre>
     **domain* or *url*
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getWhiteListList() {
      return whiteList_;
    }
    /**
     * <code>repeated string whiteList = 1;</code>
     *
     * <pre>
     **domain* or *url*
     * </pre>
     */
    public int getWhiteListCount() {
      return whiteList_.size();
    }
    /**
     * <code>repeated string whiteList = 1;</code>
     *
     * <pre>
     **domain* or *url*
     * </pre>
     */
    public java.lang.String getWhiteList(int index) {
      return whiteList_.get(index);
    }
    /**
     * <code>repeated string whiteList = 1;</code>
     *
     * <pre>
     **domain* or *url*
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWhiteListBytes(int index) {
      return whiteList_.getByteString(index);
    }

    public static final int BLACKLIST_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList blackList_;
    /**
     * <code>repeated string blackList = 2;</code>
     *
     * <pre>
     **domain* or *url*
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getBlackListList() {
      return blackList_;
    }
    /**
     * <code>repeated string blackList = 2;</code>
     *
     * <pre>
     **domain* or *url*
     * </pre>
     */
    public int getBlackListCount() {
      return blackList_.size();
    }
    /**
     * <code>repeated string blackList = 2;</code>
     *
     * <pre>
     **domain* or *url*
     * </pre>
     */
    public java.lang.String getBlackList(int index) {
      return blackList_.get(index);
    }
    /**
     * <code>repeated string blackList = 2;</code>
     *
     * <pre>
     **domain* or *url*
     * </pre>
     */
    public com.google.protobuf.ByteString
        getBlackListBytes(int index) {
      return blackList_.getByteString(index);
    }

    private void initFields() {
      whiteList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      blackList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < whiteList_.size(); i++) {
        output.writeBytes(1, whiteList_.getByteString(i));
      }
      for (int i = 0; i < blackList_.size(); i++) {
        output.writeBytes(2, blackList_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < whiteList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(whiteList_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getWhiteListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < blackList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(blackList_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getBlackListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.cache.DeliveryMessage.BlackAndWhiteList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.BlackAndWhiteList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.BlackAndWhiteList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.BlackAndWhiteList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.BlackAndWhiteList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.BlackAndWhiteList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.BlackAndWhiteList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.cache.DeliveryMessage.BlackAndWhiteList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.BlackAndWhiteList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.BlackAndWhiteList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.cache.DeliveryMessage.BlackAndWhiteList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code de.cache.BlackAndWhiteList}
     *
     * <pre>
     *黑白名单
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:de.cache.BlackAndWhiteList)
        de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_BlackAndWhiteList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_BlackAndWhiteList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.BlackAndWhiteList.class, de.cache.DeliveryMessage.BlackAndWhiteList.Builder.class);
      }

      // Construct using de.cache.DeliveryMessage.BlackAndWhiteList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        whiteList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        blackList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.cache.DeliveryMessage.internal_static_de_cache_BlackAndWhiteList_descriptor;
      }

      public de.cache.DeliveryMessage.BlackAndWhiteList getDefaultInstanceForType() {
        return de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance();
      }

      public de.cache.DeliveryMessage.BlackAndWhiteList build() {
        de.cache.DeliveryMessage.BlackAndWhiteList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.cache.DeliveryMessage.BlackAndWhiteList buildPartial() {
        de.cache.DeliveryMessage.BlackAndWhiteList result = new de.cache.DeliveryMessage.BlackAndWhiteList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          whiteList_ = whiteList_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.whiteList_ = whiteList_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          blackList_ = blackList_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.blackList_ = blackList_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.cache.DeliveryMessage.BlackAndWhiteList) {
          return mergeFrom((de.cache.DeliveryMessage.BlackAndWhiteList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.cache.DeliveryMessage.BlackAndWhiteList other) {
        if (other == de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance()) return this;
        if (!other.whiteList_.isEmpty()) {
          if (whiteList_.isEmpty()) {
            whiteList_ = other.whiteList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureWhiteListIsMutable();
            whiteList_.addAll(other.whiteList_);
          }
          onChanged();
        }
        if (!other.blackList_.isEmpty()) {
          if (blackList_.isEmpty()) {
            blackList_ = other.blackList_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureBlackListIsMutable();
            blackList_.addAll(other.blackList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.cache.DeliveryMessage.BlackAndWhiteList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.cache.DeliveryMessage.BlackAndWhiteList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList whiteList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureWhiteListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          whiteList_ = new com.google.protobuf.LazyStringArrayList(whiteList_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string whiteList = 1;</code>
       *
       * <pre>
       **domain* or *url*
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getWhiteListList() {
        return whiteList_.getUnmodifiableView();
      }
      /**
       * <code>repeated string whiteList = 1;</code>
       *
       * <pre>
       **domain* or *url*
       * </pre>
       */
      public int getWhiteListCount() {
        return whiteList_.size();
      }
      /**
       * <code>repeated string whiteList = 1;</code>
       *
       * <pre>
       **domain* or *url*
       * </pre>
       */
      public java.lang.String getWhiteList(int index) {
        return whiteList_.get(index);
      }
      /**
       * <code>repeated string whiteList = 1;</code>
       *
       * <pre>
       **domain* or *url*
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWhiteListBytes(int index) {
        return whiteList_.getByteString(index);
      }
      /**
       * <code>repeated string whiteList = 1;</code>
       *
       * <pre>
       **domain* or *url*
       * </pre>
       */
      public Builder setWhiteList(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureWhiteListIsMutable();
        whiteList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string whiteList = 1;</code>
       *
       * <pre>
       **domain* or *url*
       * </pre>
       */
      public Builder addWhiteList(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureWhiteListIsMutable();
        whiteList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string whiteList = 1;</code>
       *
       * <pre>
       **domain* or *url*
       * </pre>
       */
      public Builder addAllWhiteList(
          java.lang.Iterable<java.lang.String> values) {
        ensureWhiteListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, whiteList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string whiteList = 1;</code>
       *
       * <pre>
       **domain* or *url*
       * </pre>
       */
      public Builder clearWhiteList() {
        whiteList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string whiteList = 1;</code>
       *
       * <pre>
       **domain* or *url*
       * </pre>
       */
      public Builder addWhiteListBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureWhiteListIsMutable();
        whiteList_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList blackList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureBlackListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          blackList_ = new com.google.protobuf.LazyStringArrayList(blackList_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string blackList = 2;</code>
       *
       * <pre>
       **domain* or *url*
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getBlackListList() {
        return blackList_.getUnmodifiableView();
      }
      /**
       * <code>repeated string blackList = 2;</code>
       *
       * <pre>
       **domain* or *url*
       * </pre>
       */
      public int getBlackListCount() {
        return blackList_.size();
      }
      /**
       * <code>repeated string blackList = 2;</code>
       *
       * <pre>
       **domain* or *url*
       * </pre>
       */
      public java.lang.String getBlackList(int index) {
        return blackList_.get(index);
      }
      /**
       * <code>repeated string blackList = 2;</code>
       *
       * <pre>
       **domain* or *url*
       * </pre>
       */
      public com.google.protobuf.ByteString
          getBlackListBytes(int index) {
        return blackList_.getByteString(index);
      }
      /**
       * <code>repeated string blackList = 2;</code>
       *
       * <pre>
       **domain* or *url*
       * </pre>
       */
      public Builder setBlackList(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBlackListIsMutable();
        blackList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string blackList = 2;</code>
       *
       * <pre>
       **domain* or *url*
       * </pre>
       */
      public Builder addBlackList(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBlackListIsMutable();
        blackList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string blackList = 2;</code>
       *
       * <pre>
       **domain* or *url*
       * </pre>
       */
      public Builder addAllBlackList(
          java.lang.Iterable<java.lang.String> values) {
        ensureBlackListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, blackList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string blackList = 2;</code>
       *
       * <pre>
       **domain* or *url*
       * </pre>
       */
      public Builder clearBlackList() {
        blackList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string blackList = 2;</code>
       *
       * <pre>
       **domain* or *url*
       * </pre>
       */
      public Builder addBlackListBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBlackListIsMutable();
        blackList_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:de.cache.BlackAndWhiteList)
    }

    static {
      defaultInstance = new BlackAndWhiteList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:de.cache.BlackAndWhiteList)
  }

  public interface IPSectionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.cache.IPSection)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 startIP = 1;</code>
     *
     * <pre>
     *IP起始地址
     * </pre>
     */
    boolean hasStartIP();
    /**
     * <code>required uint64 startIP = 1;</code>
     *
     * <pre>
     *IP起始地址
     * </pre>
     */
    long getStartIP();

    /**
     * <code>required uint64 EndIP = 2;</code>
     *
     * <pre>
     *IP结束地址
     * </pre>
     */
    boolean hasEndIP();
    /**
     * <code>required uint64 EndIP = 2;</code>
     *
     * <pre>
     *IP结束地址
     * </pre>
     */
    long getEndIP();
  }
  /**
   * Protobuf type {@code de.cache.IPSection}
   */
  public static final class IPSection extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:de.cache.IPSection)
      IPSectionOrBuilder {
    // Use IPSection.newBuilder() to construct.
    private IPSection(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private IPSection(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final IPSection defaultInstance;
    public static IPSection getDefaultInstance() {
      return defaultInstance;
    }

    public IPSection getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private IPSection(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              startIP_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              endIP_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.internal_static_de_cache_IPSection_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.cache.DeliveryMessage.internal_static_de_cache_IPSection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.cache.DeliveryMessage.IPSection.class, de.cache.DeliveryMessage.IPSection.Builder.class);
    }

    public static com.google.protobuf.Parser<IPSection> PARSER =
        new com.google.protobuf.AbstractParser<IPSection>() {
      public IPSection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IPSection(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<IPSection> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STARTIP_FIELD_NUMBER = 1;
    private long startIP_;
    /**
     * <code>required uint64 startIP = 1;</code>
     *
     * <pre>
     *IP起始地址
     * </pre>
     */
    public boolean hasStartIP() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 startIP = 1;</code>
     *
     * <pre>
     *IP起始地址
     * </pre>
     */
    public long getStartIP() {
      return startIP_;
    }

    public static final int ENDIP_FIELD_NUMBER = 2;
    private long endIP_;
    /**
     * <code>required uint64 EndIP = 2;</code>
     *
     * <pre>
     *IP结束地址
     * </pre>
     */
    public boolean hasEndIP() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 EndIP = 2;</code>
     *
     * <pre>
     *IP结束地址
     * </pre>
     */
    public long getEndIP() {
      return endIP_;
    }

    private void initFields() {
      startIP_ = 0L;
      endIP_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStartIP()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEndIP()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, startIP_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, endIP_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, startIP_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, endIP_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.cache.DeliveryMessage.IPSection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.IPSection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.IPSection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.IPSection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.IPSection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.IPSection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.IPSection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.cache.DeliveryMessage.IPSection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.IPSection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.IPSection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.cache.DeliveryMessage.IPSection prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code de.cache.IPSection}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:de.cache.IPSection)
        de.cache.DeliveryMessage.IPSectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_IPSection_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_IPSection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.IPSection.class, de.cache.DeliveryMessage.IPSection.Builder.class);
      }

      // Construct using de.cache.DeliveryMessage.IPSection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        startIP_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        endIP_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.cache.DeliveryMessage.internal_static_de_cache_IPSection_descriptor;
      }

      public de.cache.DeliveryMessage.IPSection getDefaultInstanceForType() {
        return de.cache.DeliveryMessage.IPSection.getDefaultInstance();
      }

      public de.cache.DeliveryMessage.IPSection build() {
        de.cache.DeliveryMessage.IPSection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.cache.DeliveryMessage.IPSection buildPartial() {
        de.cache.DeliveryMessage.IPSection result = new de.cache.DeliveryMessage.IPSection(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.startIP_ = startIP_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.endIP_ = endIP_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.cache.DeliveryMessage.IPSection) {
          return mergeFrom((de.cache.DeliveryMessage.IPSection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.cache.DeliveryMessage.IPSection other) {
        if (other == de.cache.DeliveryMessage.IPSection.getDefaultInstance()) return this;
        if (other.hasStartIP()) {
          setStartIP(other.getStartIP());
        }
        if (other.hasEndIP()) {
          setEndIP(other.getEndIP());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStartIP()) {
          
          return false;
        }
        if (!hasEndIP()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.cache.DeliveryMessage.IPSection parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.cache.DeliveryMessage.IPSection) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long startIP_ ;
      /**
       * <code>required uint64 startIP = 1;</code>
       *
       * <pre>
       *IP起始地址
       * </pre>
       */
      public boolean hasStartIP() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 startIP = 1;</code>
       *
       * <pre>
       *IP起始地址
       * </pre>
       */
      public long getStartIP() {
        return startIP_;
      }
      /**
       * <code>required uint64 startIP = 1;</code>
       *
       * <pre>
       *IP起始地址
       * </pre>
       */
      public Builder setStartIP(long value) {
        bitField0_ |= 0x00000001;
        startIP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 startIP = 1;</code>
       *
       * <pre>
       *IP起始地址
       * </pre>
       */
      public Builder clearStartIP() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startIP_ = 0L;
        onChanged();
        return this;
      }

      private long endIP_ ;
      /**
       * <code>required uint64 EndIP = 2;</code>
       *
       * <pre>
       *IP结束地址
       * </pre>
       */
      public boolean hasEndIP() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 EndIP = 2;</code>
       *
       * <pre>
       *IP结束地址
       * </pre>
       */
      public long getEndIP() {
        return endIP_;
      }
      /**
       * <code>required uint64 EndIP = 2;</code>
       *
       * <pre>
       *IP结束地址
       * </pre>
       */
      public Builder setEndIP(long value) {
        bitField0_ |= 0x00000002;
        endIP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 EndIP = 2;</code>
       *
       * <pre>
       *IP结束地址
       * </pre>
       */
      public Builder clearEndIP() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endIP_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:de.cache.IPSection)
    }

    static {
      defaultInstance = new IPSection(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:de.cache.IPSection)
  }

  public interface ChannelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.cache.Channel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *广告位id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *广告位id
     * </pre>
     */
    long getId();

    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    boolean hasCmd();
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    de.cache.DeliveryMessage.Command getCmd();

    /**
     * <code>optional int64 channelGroupId = 3;</code>
     *
     * <pre>
     *频道id
     * </pre>
     */
    boolean hasChannelGroupId();
    /**
     * <code>optional int64 channelGroupId = 3;</code>
     *
     * <pre>
     *频道id
     * </pre>
     */
    long getChannelGroupId();

    /**
     * <code>optional string uniqueCode = 4;</code>
     *
     * <pre>
     *广告位标识name
     * </pre>
     */
    boolean hasUniqueCode();
    /**
     * <code>optional string uniqueCode = 4;</code>
     *
     * <pre>
     *广告位标识name
     * </pre>
     */
    java.lang.String getUniqueCode();
    /**
     * <code>optional string uniqueCode = 4;</code>
     *
     * <pre>
     *广告位标识name
     * </pre>
     */
    com.google.protobuf.ByteString
        getUniqueCodeBytes();

    /**
     * <code>optional int32 roundMode = 5;</code>
     *
     * <pre>
     *投放轮循模式,0=rand;1=cookie;2=session
     * </pre>
     */
    boolean hasRoundMode();
    /**
     * <code>optional int32 roundMode = 5;</code>
     *
     * <pre>
     *投放轮循模式,0=rand;1=cookie;2=session
     * </pre>
     */
    int getRoundMode();

    /**
     * <code>optional .de.cache.Channel.MutexType mutexType = 6;</code>
     *
     * <pre>
     *节目单互斥标识,0=无互斥，1=投放互斥，2=订单互斥
     * </pre>
     */
    boolean hasMutexType();
    /**
     * <code>optional .de.cache.Channel.MutexType mutexType = 6;</code>
     *
     * <pre>
     *节目单互斥标识,0=无互斥，1=投放互斥，2=订单互斥
     * </pre>
     */
    de.cache.DeliveryMessage.Channel.MutexType getMutexType();

    /**
     * <code>repeated int64 playListId = 7;</code>
     *
     * <pre>
     *节目单子节点广告位Id，size=0表示普通广告位
     * </pre>
     */
    java.util.List<java.lang.Long> getPlayListIdList();
    /**
     * <code>repeated int64 playListId = 7;</code>
     *
     * <pre>
     *节目单子节点广告位Id，size=0表示普通广告位
     * </pre>
     */
    int getPlayListIdCount();
    /**
     * <code>repeated int64 playListId = 7;</code>
     *
     * <pre>
     *节目单子节点广告位Id，size=0表示普通广告位
     * </pre>
     */
    long getPlayListId(int index);

    /**
     * <code>optional int32 defaultTplId = 8 [default = 1];</code>
     *
     * <pre>
     *默认使用创意模板编号
     * </pre>
     */
    boolean hasDefaultTplId();
    /**
     * <code>optional int32 defaultTplId = 8 [default = 1];</code>
     *
     * <pre>
     *默认使用创意模板编号
     * </pre>
     */
    int getDefaultTplId();

    /**
     * <code>optional int64 defaultUnitPrice = 9 [default = 0];</code>
     *
     * <pre>
     *广告位默认单价,=0时,无单价
     * </pre>
     */
    boolean hasDefaultUnitPrice();
    /**
     * <code>optional int64 defaultUnitPrice = 9 [default = 0];</code>
     *
     * <pre>
     *广告位默认单价,=0时,无单价
     * </pre>
     */
    long getDefaultUnitPrice();

    /**
     * <code>optional int32 width = 10;</code>
     *
     * <pre>
     *广告位宽度
     * </pre>
     */
    boolean hasWidth();
    /**
     * <code>optional int32 width = 10;</code>
     *
     * <pre>
     *广告位宽度
     * </pre>
     */
    int getWidth();

    /**
     * <code>optional int32 height = 11;</code>
     *
     * <pre>
     *广告位高度
     * </pre>
     */
    boolean hasHeight();
    /**
     * <code>optional int32 height = 11;</code>
     *
     * <pre>
     *广告位高度
     * </pre>
     */
    int getHeight();

    /**
     * <code>optional .de.cache.Channel.RefreshInfo refresh = 12;</code>
     *
     * <pre>
     *自刷新
     * </pre>
     */
    boolean hasRefresh();
    /**
     * <code>optional .de.cache.Channel.RefreshInfo refresh = 12;</code>
     *
     * <pre>
     *自刷新
     * </pre>
     */
    de.cache.DeliveryMessage.Channel.RefreshInfo getRefresh();
    /**
     * <code>optional .de.cache.Channel.RefreshInfo refresh = 12;</code>
     *
     * <pre>
     *自刷新
     * </pre>
     */
    de.cache.DeliveryMessage.Channel.RefreshInfoOrBuilder getRefreshOrBuilder();

    /**
     * <code>repeated string creativeType = 13;</code>
     *
     * <pre>
     *默认支持创意展现类型；字符串，其取值由前台管理界面统一制定，只需在广告位创意展现属性或广告请求参数中指定的内容一致即可。
     *支持多个兼容类型，多个类型以逗号分隔
     *如果该字段为空而广告请求也没有cht参数时，表示所有类型都兼容。
     *如果广告请求时携带了cht参数，该字段的值被忽略，以cht参数的值为准
     *与创意属性相对应的字段是在创意文件b/g.$bgid中，每个创意的第16字段描述。
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getCreativeTypeList();
    /**
     * <code>repeated string creativeType = 13;</code>
     *
     * <pre>
     *默认支持创意展现类型；字符串，其取值由前台管理界面统一制定，只需在广告位创意展现属性或广告请求参数中指定的内容一致即可。
     *支持多个兼容类型，多个类型以逗号分隔
     *如果该字段为空而广告请求也没有cht参数时，表示所有类型都兼容。
     *如果广告请求时携带了cht参数，该字段的值被忽略，以cht参数的值为准
     *与创意属性相对应的字段是在创意文件b/g.$bgid中，每个创意的第16字段描述。
     * </pre>
     */
    int getCreativeTypeCount();
    /**
     * <code>repeated string creativeType = 13;</code>
     *
     * <pre>
     *默认支持创意展现类型；字符串，其取值由前台管理界面统一制定，只需在广告位创意展现属性或广告请求参数中指定的内容一致即可。
     *支持多个兼容类型，多个类型以逗号分隔
     *如果该字段为空而广告请求也没有cht参数时，表示所有类型都兼容。
     *如果广告请求时携带了cht参数，该字段的值被忽略，以cht参数的值为准
     *与创意属性相对应的字段是在创意文件b/g.$bgid中，每个创意的第16字段描述。
     * </pre>
     */
    java.lang.String getCreativeType(int index);
    /**
     * <code>repeated string creativeType = 13;</code>
     *
     * <pre>
     *默认支持创意展现类型；字符串，其取值由前台管理界面统一制定，只需在广告位创意展现属性或广告请求参数中指定的内容一致即可。
     *支持多个兼容类型，多个类型以逗号分隔
     *如果该字段为空而广告请求也没有cht参数时，表示所有类型都兼容。
     *如果广告请求时携带了cht参数，该字段的值被忽略，以cht参数的值为准
     *与创意属性相对应的字段是在创意文件b/g.$bgid中，每个创意的第16字段描述。
     * </pre>
     */
    com.google.protobuf.ByteString
        getCreativeTypeBytes(int index);

    /**
     * <code>optional int32 forcePriority = 14 [default = 0];</code>
     *
     * <pre>
     *表示哪些优先级以上的需要强制投放，如该位为10，表示该广告位下优先级从1到9级的投放可进行强制投放。如果为0或空表示该广告位下所有投放可参与强制投放，具体哪些投放参与由投放文件决定。
     * </pre>
     */
    boolean hasForcePriority();
    /**
     * <code>optional int32 forcePriority = 14 [default = 0];</code>
     *
     * <pre>
     *表示哪些优先级以上的需要强制投放，如该位为10，表示该广告位下优先级从1到9级的投放可进行强制投放。如果为0或空表示该广告位下所有投放可参与强制投放，具体哪些投放参与由投放文件决定。
     * </pre>
     */
    int getForcePriority();

    /**
     * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 15;</code>
     *
     * <pre>
     *referer黑白名单定向
     * </pre>
     */
    boolean hasReferrerTargeting();
    /**
     * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 15;</code>
     *
     * <pre>
     *referer黑白名单定向
     * </pre>
     */
    de.cache.DeliveryMessage.BlackAndWhiteList getReferrerTargeting();
    /**
     * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 15;</code>
     *
     * <pre>
     *referer黑白名单定向
     * </pre>
     */
    de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder getReferrerTargetingOrBuilder();

    /**
     * <code>optional .de.cache.GlobalSwitch inheritFromGConf = 16 [default = OFF];</code>
     *
     * <pre>
     *继承db级别referer黑白名单配置，0=不继承，1=继承
     * </pre>
     */
    boolean hasInheritFromGConf();
    /**
     * <code>optional .de.cache.GlobalSwitch inheritFromGConf = 16 [default = OFF];</code>
     *
     * <pre>
     *继承db级别referer黑白名单配置，0=不继承，1=继承
     * </pre>
     */
    de.cache.DeliveryMessage.GlobalSwitch getInheritFromGConf();

    /**
     * <code>optional int32 hoursAheadForSpeedupCPCDelivery = 17;</code>
     *
     * <pre>
     *CPC补投提前时间(小时)(24-n),&lt;0无补投时间，且不受均匀投放控制，=0继承Global.conf值，&gt;0按照配置的值(小时)来进行补投
     * </pre>
     */
    boolean hasHoursAheadForSpeedupCPCDelivery();
    /**
     * <code>optional int32 hoursAheadForSpeedupCPCDelivery = 17;</code>
     *
     * <pre>
     *CPC补投提前时间(小时)(24-n),&lt;0无补投时间，且不受均匀投放控制，=0继承Global.conf值，&gt;0按照配置的值(小时)来进行补投
     * </pre>
     */
    int getHoursAheadForSpeedupCPCDelivery();

    /**
     * <code>repeated int64 fixedBannerId = 18;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    java.util.List<java.lang.Long> getFixedBannerIdList();
    /**
     * <code>repeated int64 fixedBannerId = 18;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    int getFixedBannerIdCount();
    /**
     * <code>repeated int64 fixedBannerId = 18;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    long getFixedBannerId(int index);
  }
  /**
   * Protobuf type {@code de.cache.Channel}
   *
   * <pre>
   *广告位数据
   * </pre>
   */
  public static final class Channel extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:de.cache.Channel)
      ChannelOrBuilder {
    // Use Channel.newBuilder() to construct.
    private Channel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Channel(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Channel defaultInstance;
    public static Channel getDefaultInstance() {
      return defaultInstance;
    }

    public Channel getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Channel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.Command value = de.cache.DeliveryMessage.Command.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                cmd_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              channelGroupId_ = input.readInt64();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              uniqueCode_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              roundMode_ = input.readInt32();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.Channel.MutexType value = de.cache.DeliveryMessage.Channel.MutexType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                mutexType_ = value;
              }
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                playListId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000040;
              }
              playListId_.add(input.readInt64());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                playListId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                playListId_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              defaultTplId_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              defaultUnitPrice_ = input.readInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              width_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              height_ = input.readInt32();
              break;
            }
            case 98: {
              de.cache.DeliveryMessage.Channel.RefreshInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = refresh_.toBuilder();
              }
              refresh_ = input.readMessage(de.cache.DeliveryMessage.Channel.RefreshInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(refresh_);
                refresh_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 106: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                creativeType_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00001000;
              }
              creativeType_.add(bs);
              break;
            }
            case 112: {
              bitField0_ |= 0x00000800;
              forcePriority_ = input.readInt32();
              break;
            }
            case 122: {
              de.cache.DeliveryMessage.BlackAndWhiteList.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) == 0x00001000)) {
                subBuilder = referrerTargeting_.toBuilder();
              }
              referrerTargeting_ = input.readMessage(de.cache.DeliveryMessage.BlackAndWhiteList.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(referrerTargeting_);
                referrerTargeting_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.GlobalSwitch value = de.cache.DeliveryMessage.GlobalSwitch.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(16, rawValue);
              } else {
                bitField0_ |= 0x00002000;
                inheritFromGConf_ = value;
              }
              break;
            }
            case 136: {
              bitField0_ |= 0x00004000;
              hoursAheadForSpeedupCPCDelivery_ = input.readInt32();
              break;
            }
            case 144: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                fixedBannerId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00020000;
              }
              fixedBannerId_.add(input.readInt64());
              break;
            }
            case 146: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
                fixedBannerId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00020000;
              }
              while (input.getBytesUntilLimit() > 0) {
                fixedBannerId_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          playListId_ = java.util.Collections.unmodifiableList(playListId_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          creativeType_ = creativeType_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          fixedBannerId_ = java.util.Collections.unmodifiableList(fixedBannerId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.internal_static_de_cache_Channel_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.cache.DeliveryMessage.internal_static_de_cache_Channel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.cache.DeliveryMessage.Channel.class, de.cache.DeliveryMessage.Channel.Builder.class);
    }

    public static com.google.protobuf.Parser<Channel> PARSER =
        new com.google.protobuf.AbstractParser<Channel>() {
      public Channel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Channel(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Channel> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code de.cache.Channel.MutexType}
     */
    public enum MutexType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>OFF = 0;</code>
       *
       * <pre>
       *无互斥
       * </pre>
       */
      OFF(0, 0),
      /**
       * <code>SOLUTION = 1;</code>
       *
       * <pre>
       *投放互斥
       * </pre>
       */
      SOLUTION(1, 1),
      /**
       * <code>ORDER = 2;</code>
       *
       * <pre>
       *订单互斥
       * </pre>
       */
      ORDER(2, 2),
      ;

      /**
       * <code>OFF = 0;</code>
       *
       * <pre>
       *无互斥
       * </pre>
       */
      public static final int OFF_VALUE = 0;
      /**
       * <code>SOLUTION = 1;</code>
       *
       * <pre>
       *投放互斥
       * </pre>
       */
      public static final int SOLUTION_VALUE = 1;
      /**
       * <code>ORDER = 2;</code>
       *
       * <pre>
       *订单互斥
       * </pre>
       */
      public static final int ORDER_VALUE = 2;


      public final int getNumber() { return value; }

      public static MutexType valueOf(int value) {
        switch (value) {
          case 0: return OFF;
          case 1: return SOLUTION;
          case 2: return ORDER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MutexType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<MutexType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MutexType>() {
              public MutexType findValueByNumber(int number) {
                return MutexType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.Channel.getDescriptor().getEnumTypes().get(0);
      }

      private static final MutexType[] VALUES = values();

      public static MutexType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private MutexType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:de.cache.Channel.MutexType)
    }

    public interface RefreshInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:de.cache.Channel.RefreshInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 refreshIntervalSec = 1 [default = 0];</code>
       *
       * <pre>
       *指定频道自动刷新时间间隔,单位秒,=0时关闭
       * </pre>
       */
      boolean hasRefreshIntervalSec();
      /**
       * <code>optional int32 refreshIntervalSec = 1 [default = 0];</code>
       *
       * <pre>
       *指定频道自动刷新时间间隔,单位秒,=0时关闭
       * </pre>
       */
      int getRefreshIntervalSec();

      /**
       * <code>repeated int32 refreshTargetingHour = 2;</code>
       *
       * <pre>
       *自刷新小时定向取值范围（0-23）
       * </pre>
       */
      java.util.List<java.lang.Integer> getRefreshTargetingHourList();
      /**
       * <code>repeated int32 refreshTargetingHour = 2;</code>
       *
       * <pre>
       *自刷新小时定向取值范围（0-23）
       * </pre>
       */
      int getRefreshTargetingHourCount();
      /**
       * <code>repeated int32 refreshTargetingHour = 2;</code>
       *
       * <pre>
       *自刷新小时定向取值范围（0-23）
       * </pre>
       */
      int getRefreshTargetingHour(int index);

      /**
       * <code>optional .de.cache.TargetFlag locationFlag = 3 [default = CLOSE];</code>
       *
       * <pre>
       *自刷新地域定向标识，0=不定向，1=定向，2=非定向
       * </pre>
       */
      boolean hasLocationFlag();
      /**
       * <code>optional .de.cache.TargetFlag locationFlag = 3 [default = CLOSE];</code>
       *
       * <pre>
       *自刷新地域定向标识，0=不定向，1=定向，2=非定向
       * </pre>
       */
      de.cache.DeliveryMessage.TargetFlag getLocationFlag();

      /**
       * <code>repeated string locationInfo = 4;</code>
       *
       * <pre>
       *要地域定向的内容
       * </pre>
       */
      com.google.protobuf.ProtocolStringList
          getLocationInfoList();
      /**
       * <code>repeated string locationInfo = 4;</code>
       *
       * <pre>
       *要地域定向的内容
       * </pre>
       */
      int getLocationInfoCount();
      /**
       * <code>repeated string locationInfo = 4;</code>
       *
       * <pre>
       *要地域定向的内容
       * </pre>
       */
      java.lang.String getLocationInfo(int index);
      /**
       * <code>repeated string locationInfo = 4;</code>
       *
       * <pre>
       *要地域定向的内容
       * </pre>
       */
      com.google.protobuf.ByteString
          getLocationInfoBytes(int index);
    }
    /**
     * Protobuf type {@code de.cache.Channel.RefreshInfo}
     */
    public static final class RefreshInfo extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:de.cache.Channel.RefreshInfo)
        RefreshInfoOrBuilder {
      // Use RefreshInfo.newBuilder() to construct.
      private RefreshInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private RefreshInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final RefreshInfo defaultInstance;
      public static RefreshInfo getDefaultInstance() {
        return defaultInstance;
      }

      public RefreshInfo getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private RefreshInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                refreshIntervalSec_ = input.readInt32();
                break;
              }
              case 16: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  refreshTargetingHour_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                refreshTargetingHour_.add(input.readInt32());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  refreshTargetingHour_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  refreshTargetingHour_.add(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 24: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.TargetFlag value = de.cache.DeliveryMessage.TargetFlag.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(3, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  locationFlag_ = value;
                }
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  locationInfo_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000008;
                }
                locationInfo_.add(bs);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            refreshTargetingHour_ = java.util.Collections.unmodifiableList(refreshTargetingHour_);
          }
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            locationInfo_ = locationInfo_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Channel_RefreshInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Channel_RefreshInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.Channel.RefreshInfo.class, de.cache.DeliveryMessage.Channel.RefreshInfo.Builder.class);
      }

      public static com.google.protobuf.Parser<RefreshInfo> PARSER =
          new com.google.protobuf.AbstractParser<RefreshInfo>() {
        public RefreshInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new RefreshInfo(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<RefreshInfo> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int REFRESHINTERVALSEC_FIELD_NUMBER = 1;
      private int refreshIntervalSec_;
      /**
       * <code>optional int32 refreshIntervalSec = 1 [default = 0];</code>
       *
       * <pre>
       *指定频道自动刷新时间间隔,单位秒,=0时关闭
       * </pre>
       */
      public boolean hasRefreshIntervalSec() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 refreshIntervalSec = 1 [default = 0];</code>
       *
       * <pre>
       *指定频道自动刷新时间间隔,单位秒,=0时关闭
       * </pre>
       */
      public int getRefreshIntervalSec() {
        return refreshIntervalSec_;
      }

      public static final int REFRESHTARGETINGHOUR_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Integer> refreshTargetingHour_;
      /**
       * <code>repeated int32 refreshTargetingHour = 2;</code>
       *
       * <pre>
       *自刷新小时定向取值范围（0-23）
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRefreshTargetingHourList() {
        return refreshTargetingHour_;
      }
      /**
       * <code>repeated int32 refreshTargetingHour = 2;</code>
       *
       * <pre>
       *自刷新小时定向取值范围（0-23）
       * </pre>
       */
      public int getRefreshTargetingHourCount() {
        return refreshTargetingHour_.size();
      }
      /**
       * <code>repeated int32 refreshTargetingHour = 2;</code>
       *
       * <pre>
       *自刷新小时定向取值范围（0-23）
       * </pre>
       */
      public int getRefreshTargetingHour(int index) {
        return refreshTargetingHour_.get(index);
      }

      public static final int LOCATIONFLAG_FIELD_NUMBER = 3;
      private de.cache.DeliveryMessage.TargetFlag locationFlag_;
      /**
       * <code>optional .de.cache.TargetFlag locationFlag = 3 [default = CLOSE];</code>
       *
       * <pre>
       *自刷新地域定向标识，0=不定向，1=定向，2=非定向
       * </pre>
       */
      public boolean hasLocationFlag() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .de.cache.TargetFlag locationFlag = 3 [default = CLOSE];</code>
       *
       * <pre>
       *自刷新地域定向标识，0=不定向，1=定向，2=非定向
       * </pre>
       */
      public de.cache.DeliveryMessage.TargetFlag getLocationFlag() {
        return locationFlag_;
      }

      public static final int LOCATIONINFO_FIELD_NUMBER = 4;
      private com.google.protobuf.LazyStringList locationInfo_;
      /**
       * <code>repeated string locationInfo = 4;</code>
       *
       * <pre>
       *要地域定向的内容
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getLocationInfoList() {
        return locationInfo_;
      }
      /**
       * <code>repeated string locationInfo = 4;</code>
       *
       * <pre>
       *要地域定向的内容
       * </pre>
       */
      public int getLocationInfoCount() {
        return locationInfo_.size();
      }
      /**
       * <code>repeated string locationInfo = 4;</code>
       *
       * <pre>
       *要地域定向的内容
       * </pre>
       */
      public java.lang.String getLocationInfo(int index) {
        return locationInfo_.get(index);
      }
      /**
       * <code>repeated string locationInfo = 4;</code>
       *
       * <pre>
       *要地域定向的内容
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLocationInfoBytes(int index) {
        return locationInfo_.getByteString(index);
      }

      private void initFields() {
        refreshIntervalSec_ = 0;
        refreshTargetingHour_ = java.util.Collections.emptyList();
        locationFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
        locationInfo_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, refreshIntervalSec_);
        }
        for (int i = 0; i < refreshTargetingHour_.size(); i++) {
          output.writeInt32(2, refreshTargetingHour_.get(i));
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(3, locationFlag_.getNumber());
        }
        for (int i = 0; i < locationInfo_.size(); i++) {
          output.writeBytes(4, locationInfo_.getByteString(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, refreshIntervalSec_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < refreshTargetingHour_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(refreshTargetingHour_.get(i));
          }
          size += dataSize;
          size += 1 * getRefreshTargetingHourList().size();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, locationFlag_.getNumber());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < locationInfo_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(locationInfo_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getLocationInfoList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static de.cache.DeliveryMessage.Channel.RefreshInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.cache.DeliveryMessage.Channel.RefreshInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Channel.RefreshInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.cache.DeliveryMessage.Channel.RefreshInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Channel.RefreshInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.cache.DeliveryMessage.Channel.RefreshInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Channel.RefreshInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static de.cache.DeliveryMessage.Channel.RefreshInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Channel.RefreshInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.cache.DeliveryMessage.Channel.RefreshInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(de.cache.DeliveryMessage.Channel.RefreshInfo prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code de.cache.Channel.RefreshInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:de.cache.Channel.RefreshInfo)
          de.cache.DeliveryMessage.Channel.RefreshInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Channel_RefreshInfo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Channel_RefreshInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  de.cache.DeliveryMessage.Channel.RefreshInfo.class, de.cache.DeliveryMessage.Channel.RefreshInfo.Builder.class);
        }

        // Construct using de.cache.DeliveryMessage.Channel.RefreshInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          refreshIntervalSec_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          refreshTargetingHour_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          locationFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          bitField0_ = (bitField0_ & ~0x00000004);
          locationInfo_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Channel_RefreshInfo_descriptor;
        }

        public de.cache.DeliveryMessage.Channel.RefreshInfo getDefaultInstanceForType() {
          return de.cache.DeliveryMessage.Channel.RefreshInfo.getDefaultInstance();
        }

        public de.cache.DeliveryMessage.Channel.RefreshInfo build() {
          de.cache.DeliveryMessage.Channel.RefreshInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public de.cache.DeliveryMessage.Channel.RefreshInfo buildPartial() {
          de.cache.DeliveryMessage.Channel.RefreshInfo result = new de.cache.DeliveryMessage.Channel.RefreshInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.refreshIntervalSec_ = refreshIntervalSec_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            refreshTargetingHour_ = java.util.Collections.unmodifiableList(refreshTargetingHour_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.refreshTargetingHour_ = refreshTargetingHour_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000002;
          }
          result.locationFlag_ = locationFlag_;
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            locationInfo_ = locationInfo_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.locationInfo_ = locationInfo_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof de.cache.DeliveryMessage.Channel.RefreshInfo) {
            return mergeFrom((de.cache.DeliveryMessage.Channel.RefreshInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(de.cache.DeliveryMessage.Channel.RefreshInfo other) {
          if (other == de.cache.DeliveryMessage.Channel.RefreshInfo.getDefaultInstance()) return this;
          if (other.hasRefreshIntervalSec()) {
            setRefreshIntervalSec(other.getRefreshIntervalSec());
          }
          if (!other.refreshTargetingHour_.isEmpty()) {
            if (refreshTargetingHour_.isEmpty()) {
              refreshTargetingHour_ = other.refreshTargetingHour_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRefreshTargetingHourIsMutable();
              refreshTargetingHour_.addAll(other.refreshTargetingHour_);
            }
            onChanged();
          }
          if (other.hasLocationFlag()) {
            setLocationFlag(other.getLocationFlag());
          }
          if (!other.locationInfo_.isEmpty()) {
            if (locationInfo_.isEmpty()) {
              locationInfo_ = other.locationInfo_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureLocationInfoIsMutable();
              locationInfo_.addAll(other.locationInfo_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          de.cache.DeliveryMessage.Channel.RefreshInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (de.cache.DeliveryMessage.Channel.RefreshInfo) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int refreshIntervalSec_ ;
        /**
         * <code>optional int32 refreshIntervalSec = 1 [default = 0];</code>
         *
         * <pre>
         *指定频道自动刷新时间间隔,单位秒,=0时关闭
         * </pre>
         */
        public boolean hasRefreshIntervalSec() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 refreshIntervalSec = 1 [default = 0];</code>
         *
         * <pre>
         *指定频道自动刷新时间间隔,单位秒,=0时关闭
         * </pre>
         */
        public int getRefreshIntervalSec() {
          return refreshIntervalSec_;
        }
        /**
         * <code>optional int32 refreshIntervalSec = 1 [default = 0];</code>
         *
         * <pre>
         *指定频道自动刷新时间间隔,单位秒,=0时关闭
         * </pre>
         */
        public Builder setRefreshIntervalSec(int value) {
          bitField0_ |= 0x00000001;
          refreshIntervalSec_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 refreshIntervalSec = 1 [default = 0];</code>
         *
         * <pre>
         *指定频道自动刷新时间间隔,单位秒,=0时关闭
         * </pre>
         */
        public Builder clearRefreshIntervalSec() {
          bitField0_ = (bitField0_ & ~0x00000001);
          refreshIntervalSec_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> refreshTargetingHour_ = java.util.Collections.emptyList();
        private void ensureRefreshTargetingHourIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            refreshTargetingHour_ = new java.util.ArrayList<java.lang.Integer>(refreshTargetingHour_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated int32 refreshTargetingHour = 2;</code>
         *
         * <pre>
         *自刷新小时定向取值范围（0-23）
         * </pre>
         */
        public java.util.List<java.lang.Integer>
            getRefreshTargetingHourList() {
          return java.util.Collections.unmodifiableList(refreshTargetingHour_);
        }
        /**
         * <code>repeated int32 refreshTargetingHour = 2;</code>
         *
         * <pre>
         *自刷新小时定向取值范围（0-23）
         * </pre>
         */
        public int getRefreshTargetingHourCount() {
          return refreshTargetingHour_.size();
        }
        /**
         * <code>repeated int32 refreshTargetingHour = 2;</code>
         *
         * <pre>
         *自刷新小时定向取值范围（0-23）
         * </pre>
         */
        public int getRefreshTargetingHour(int index) {
          return refreshTargetingHour_.get(index);
        }
        /**
         * <code>repeated int32 refreshTargetingHour = 2;</code>
         *
         * <pre>
         *自刷新小时定向取值范围（0-23）
         * </pre>
         */
        public Builder setRefreshTargetingHour(
            int index, int value) {
          ensureRefreshTargetingHourIsMutable();
          refreshTargetingHour_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 refreshTargetingHour = 2;</code>
         *
         * <pre>
         *自刷新小时定向取值范围（0-23）
         * </pre>
         */
        public Builder addRefreshTargetingHour(int value) {
          ensureRefreshTargetingHourIsMutable();
          refreshTargetingHour_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 refreshTargetingHour = 2;</code>
         *
         * <pre>
         *自刷新小时定向取值范围（0-23）
         * </pre>
         */
        public Builder addAllRefreshTargetingHour(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureRefreshTargetingHourIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, refreshTargetingHour_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 refreshTargetingHour = 2;</code>
         *
         * <pre>
         *自刷新小时定向取值范围（0-23）
         * </pre>
         */
        public Builder clearRefreshTargetingHour() {
          refreshTargetingHour_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.TargetFlag locationFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
        /**
         * <code>optional .de.cache.TargetFlag locationFlag = 3 [default = CLOSE];</code>
         *
         * <pre>
         *自刷新地域定向标识，0=不定向，1=定向，2=非定向
         * </pre>
         */
        public boolean hasLocationFlag() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .de.cache.TargetFlag locationFlag = 3 [default = CLOSE];</code>
         *
         * <pre>
         *自刷新地域定向标识，0=不定向，1=定向，2=非定向
         * </pre>
         */
        public de.cache.DeliveryMessage.TargetFlag getLocationFlag() {
          return locationFlag_;
        }
        /**
         * <code>optional .de.cache.TargetFlag locationFlag = 3 [default = CLOSE];</code>
         *
         * <pre>
         *自刷新地域定向标识，0=不定向，1=定向，2=非定向
         * </pre>
         */
        public Builder setLocationFlag(de.cache.DeliveryMessage.TargetFlag value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000004;
          locationFlag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.TargetFlag locationFlag = 3 [default = CLOSE];</code>
         *
         * <pre>
         *自刷新地域定向标识，0=不定向，1=定向，2=非定向
         * </pre>
         */
        public Builder clearLocationFlag() {
          bitField0_ = (bitField0_ & ~0x00000004);
          locationFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList locationInfo_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureLocationInfoIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            locationInfo_ = new com.google.protobuf.LazyStringArrayList(locationInfo_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <code>repeated string locationInfo = 4;</code>
         *
         * <pre>
         *要地域定向的内容
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getLocationInfoList() {
          return locationInfo_.getUnmodifiableView();
        }
        /**
         * <code>repeated string locationInfo = 4;</code>
         *
         * <pre>
         *要地域定向的内容
         * </pre>
         */
        public int getLocationInfoCount() {
          return locationInfo_.size();
        }
        /**
         * <code>repeated string locationInfo = 4;</code>
         *
         * <pre>
         *要地域定向的内容
         * </pre>
         */
        public java.lang.String getLocationInfo(int index) {
          return locationInfo_.get(index);
        }
        /**
         * <code>repeated string locationInfo = 4;</code>
         *
         * <pre>
         *要地域定向的内容
         * </pre>
         */
        public com.google.protobuf.ByteString
            getLocationInfoBytes(int index) {
          return locationInfo_.getByteString(index);
        }
        /**
         * <code>repeated string locationInfo = 4;</code>
         *
         * <pre>
         *要地域定向的内容
         * </pre>
         */
        public Builder setLocationInfo(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureLocationInfoIsMutable();
          locationInfo_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string locationInfo = 4;</code>
         *
         * <pre>
         *要地域定向的内容
         * </pre>
         */
        public Builder addLocationInfo(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureLocationInfoIsMutable();
          locationInfo_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string locationInfo = 4;</code>
         *
         * <pre>
         *要地域定向的内容
         * </pre>
         */
        public Builder addAllLocationInfo(
            java.lang.Iterable<java.lang.String> values) {
          ensureLocationInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, locationInfo_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string locationInfo = 4;</code>
         *
         * <pre>
         *要地域定向的内容
         * </pre>
         */
        public Builder clearLocationInfo() {
          locationInfo_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string locationInfo = 4;</code>
         *
         * <pre>
         *要地域定向的内容
         * </pre>
         */
        public Builder addLocationInfoBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureLocationInfoIsMutable();
          locationInfo_.add(value);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:de.cache.Channel.RefreshInfo)
      }

      static {
        defaultInstance = new RefreshInfo(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:de.cache.Channel.RefreshInfo)
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *广告位id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *广告位id
     * </pre>
     */
    public long getId() {
      return id_;
    }

    public static final int CMD_FIELD_NUMBER = 2;
    private de.cache.DeliveryMessage.Command cmd_;
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    public boolean hasCmd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    public de.cache.DeliveryMessage.Command getCmd() {
      return cmd_;
    }

    public static final int CHANNELGROUPID_FIELD_NUMBER = 3;
    private long channelGroupId_;
    /**
     * <code>optional int64 channelGroupId = 3;</code>
     *
     * <pre>
     *频道id
     * </pre>
     */
    public boolean hasChannelGroupId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 channelGroupId = 3;</code>
     *
     * <pre>
     *频道id
     * </pre>
     */
    public long getChannelGroupId() {
      return channelGroupId_;
    }

    public static final int UNIQUECODE_FIELD_NUMBER = 4;
    private java.lang.Object uniqueCode_;
    /**
     * <code>optional string uniqueCode = 4;</code>
     *
     * <pre>
     *广告位标识name
     * </pre>
     */
    public boolean hasUniqueCode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string uniqueCode = 4;</code>
     *
     * <pre>
     *广告位标识name
     * </pre>
     */
    public java.lang.String getUniqueCode() {
      java.lang.Object ref = uniqueCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uniqueCode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uniqueCode = 4;</code>
     *
     * <pre>
     *广告位标识name
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUniqueCodeBytes() {
      java.lang.Object ref = uniqueCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uniqueCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ROUNDMODE_FIELD_NUMBER = 5;
    private int roundMode_;
    /**
     * <code>optional int32 roundMode = 5;</code>
     *
     * <pre>
     *投放轮循模式,0=rand;1=cookie;2=session
     * </pre>
     */
    public boolean hasRoundMode() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 roundMode = 5;</code>
     *
     * <pre>
     *投放轮循模式,0=rand;1=cookie;2=session
     * </pre>
     */
    public int getRoundMode() {
      return roundMode_;
    }

    public static final int MUTEXTYPE_FIELD_NUMBER = 6;
    private de.cache.DeliveryMessage.Channel.MutexType mutexType_;
    /**
     * <code>optional .de.cache.Channel.MutexType mutexType = 6;</code>
     *
     * <pre>
     *节目单互斥标识,0=无互斥，1=投放互斥，2=订单互斥
     * </pre>
     */
    public boolean hasMutexType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .de.cache.Channel.MutexType mutexType = 6;</code>
     *
     * <pre>
     *节目单互斥标识,0=无互斥，1=投放互斥，2=订单互斥
     * </pre>
     */
    public de.cache.DeliveryMessage.Channel.MutexType getMutexType() {
      return mutexType_;
    }

    public static final int PLAYLISTID_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Long> playListId_;
    /**
     * <code>repeated int64 playListId = 7;</code>
     *
     * <pre>
     *节目单子节点广告位Id，size=0表示普通广告位
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getPlayListIdList() {
      return playListId_;
    }
    /**
     * <code>repeated int64 playListId = 7;</code>
     *
     * <pre>
     *节目单子节点广告位Id，size=0表示普通广告位
     * </pre>
     */
    public int getPlayListIdCount() {
      return playListId_.size();
    }
    /**
     * <code>repeated int64 playListId = 7;</code>
     *
     * <pre>
     *节目单子节点广告位Id，size=0表示普通广告位
     * </pre>
     */
    public long getPlayListId(int index) {
      return playListId_.get(index);
    }

    public static final int DEFAULTTPLID_FIELD_NUMBER = 8;
    private int defaultTplId_;
    /**
     * <code>optional int32 defaultTplId = 8 [default = 1];</code>
     *
     * <pre>
     *默认使用创意模板编号
     * </pre>
     */
    public boolean hasDefaultTplId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 defaultTplId = 8 [default = 1];</code>
     *
     * <pre>
     *默认使用创意模板编号
     * </pre>
     */
    public int getDefaultTplId() {
      return defaultTplId_;
    }

    public static final int DEFAULTUNITPRICE_FIELD_NUMBER = 9;
    private long defaultUnitPrice_;
    /**
     * <code>optional int64 defaultUnitPrice = 9 [default = 0];</code>
     *
     * <pre>
     *广告位默认单价,=0时,无单价
     * </pre>
     */
    public boolean hasDefaultUnitPrice() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 defaultUnitPrice = 9 [default = 0];</code>
     *
     * <pre>
     *广告位默认单价,=0时,无单价
     * </pre>
     */
    public long getDefaultUnitPrice() {
      return defaultUnitPrice_;
    }

    public static final int WIDTH_FIELD_NUMBER = 10;
    private int width_;
    /**
     * <code>optional int32 width = 10;</code>
     *
     * <pre>
     *广告位宽度
     * </pre>
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 width = 10;</code>
     *
     * <pre>
     *广告位宽度
     * </pre>
     */
    public int getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 11;
    private int height_;
    /**
     * <code>optional int32 height = 11;</code>
     *
     * <pre>
     *广告位高度
     * </pre>
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 height = 11;</code>
     *
     * <pre>
     *广告位高度
     * </pre>
     */
    public int getHeight() {
      return height_;
    }

    public static final int REFRESH_FIELD_NUMBER = 12;
    private de.cache.DeliveryMessage.Channel.RefreshInfo refresh_;
    /**
     * <code>optional .de.cache.Channel.RefreshInfo refresh = 12;</code>
     *
     * <pre>
     *自刷新
     * </pre>
     */
    public boolean hasRefresh() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .de.cache.Channel.RefreshInfo refresh = 12;</code>
     *
     * <pre>
     *自刷新
     * </pre>
     */
    public de.cache.DeliveryMessage.Channel.RefreshInfo getRefresh() {
      return refresh_;
    }
    /**
     * <code>optional .de.cache.Channel.RefreshInfo refresh = 12;</code>
     *
     * <pre>
     *自刷新
     * </pre>
     */
    public de.cache.DeliveryMessage.Channel.RefreshInfoOrBuilder getRefreshOrBuilder() {
      return refresh_;
    }

    public static final int CREATIVETYPE_FIELD_NUMBER = 13;
    private com.google.protobuf.LazyStringList creativeType_;
    /**
     * <code>repeated string creativeType = 13;</code>
     *
     * <pre>
     *默认支持创意展现类型；字符串，其取值由前台管理界面统一制定，只需在广告位创意展现属性或广告请求参数中指定的内容一致即可。
     *支持多个兼容类型，多个类型以逗号分隔
     *如果该字段为空而广告请求也没有cht参数时，表示所有类型都兼容。
     *如果广告请求时携带了cht参数，该字段的值被忽略，以cht参数的值为准
     *与创意属性相对应的字段是在创意文件b/g.$bgid中，每个创意的第16字段描述。
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getCreativeTypeList() {
      return creativeType_;
    }
    /**
     * <code>repeated string creativeType = 13;</code>
     *
     * <pre>
     *默认支持创意展现类型；字符串，其取值由前台管理界面统一制定，只需在广告位创意展现属性或广告请求参数中指定的内容一致即可。
     *支持多个兼容类型，多个类型以逗号分隔
     *如果该字段为空而广告请求也没有cht参数时，表示所有类型都兼容。
     *如果广告请求时携带了cht参数，该字段的值被忽略，以cht参数的值为准
     *与创意属性相对应的字段是在创意文件b/g.$bgid中，每个创意的第16字段描述。
     * </pre>
     */
    public int getCreativeTypeCount() {
      return creativeType_.size();
    }
    /**
     * <code>repeated string creativeType = 13;</code>
     *
     * <pre>
     *默认支持创意展现类型；字符串，其取值由前台管理界面统一制定，只需在广告位创意展现属性或广告请求参数中指定的内容一致即可。
     *支持多个兼容类型，多个类型以逗号分隔
     *如果该字段为空而广告请求也没有cht参数时，表示所有类型都兼容。
     *如果广告请求时携带了cht参数，该字段的值被忽略，以cht参数的值为准
     *与创意属性相对应的字段是在创意文件b/g.$bgid中，每个创意的第16字段描述。
     * </pre>
     */
    public java.lang.String getCreativeType(int index) {
      return creativeType_.get(index);
    }
    /**
     * <code>repeated string creativeType = 13;</code>
     *
     * <pre>
     *默认支持创意展现类型；字符串，其取值由前台管理界面统一制定，只需在广告位创意展现属性或广告请求参数中指定的内容一致即可。
     *支持多个兼容类型，多个类型以逗号分隔
     *如果该字段为空而广告请求也没有cht参数时，表示所有类型都兼容。
     *如果广告请求时携带了cht参数，该字段的值被忽略，以cht参数的值为准
     *与创意属性相对应的字段是在创意文件b/g.$bgid中，每个创意的第16字段描述。
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCreativeTypeBytes(int index) {
      return creativeType_.getByteString(index);
    }

    public static final int FORCEPRIORITY_FIELD_NUMBER = 14;
    private int forcePriority_;
    /**
     * <code>optional int32 forcePriority = 14 [default = 0];</code>
     *
     * <pre>
     *表示哪些优先级以上的需要强制投放，如该位为10，表示该广告位下优先级从1到9级的投放可进行强制投放。如果为0或空表示该广告位下所有投放可参与强制投放，具体哪些投放参与由投放文件决定。
     * </pre>
     */
    public boolean hasForcePriority() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 forcePriority = 14 [default = 0];</code>
     *
     * <pre>
     *表示哪些优先级以上的需要强制投放，如该位为10，表示该广告位下优先级从1到9级的投放可进行强制投放。如果为0或空表示该广告位下所有投放可参与强制投放，具体哪些投放参与由投放文件决定。
     * </pre>
     */
    public int getForcePriority() {
      return forcePriority_;
    }

    public static final int REFERRERTARGETING_FIELD_NUMBER = 15;
    private de.cache.DeliveryMessage.BlackAndWhiteList referrerTargeting_;
    /**
     * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 15;</code>
     *
     * <pre>
     *referer黑白名单定向
     * </pre>
     */
    public boolean hasReferrerTargeting() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 15;</code>
     *
     * <pre>
     *referer黑白名单定向
     * </pre>
     */
    public de.cache.DeliveryMessage.BlackAndWhiteList getReferrerTargeting() {
      return referrerTargeting_;
    }
    /**
     * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 15;</code>
     *
     * <pre>
     *referer黑白名单定向
     * </pre>
     */
    public de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder getReferrerTargetingOrBuilder() {
      return referrerTargeting_;
    }

    public static final int INHERITFROMGCONF_FIELD_NUMBER = 16;
    private de.cache.DeliveryMessage.GlobalSwitch inheritFromGConf_;
    /**
     * <code>optional .de.cache.GlobalSwitch inheritFromGConf = 16 [default = OFF];</code>
     *
     * <pre>
     *继承db级别referer黑白名单配置，0=不继承，1=继承
     * </pre>
     */
    public boolean hasInheritFromGConf() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .de.cache.GlobalSwitch inheritFromGConf = 16 [default = OFF];</code>
     *
     * <pre>
     *继承db级别referer黑白名单配置，0=不继承，1=继承
     * </pre>
     */
    public de.cache.DeliveryMessage.GlobalSwitch getInheritFromGConf() {
      return inheritFromGConf_;
    }

    public static final int HOURSAHEADFORSPEEDUPCPCDELIVERY_FIELD_NUMBER = 17;
    private int hoursAheadForSpeedupCPCDelivery_;
    /**
     * <code>optional int32 hoursAheadForSpeedupCPCDelivery = 17;</code>
     *
     * <pre>
     *CPC补投提前时间(小时)(24-n),&lt;0无补投时间，且不受均匀投放控制，=0继承Global.conf值，&gt;0按照配置的值(小时)来进行补投
     * </pre>
     */
    public boolean hasHoursAheadForSpeedupCPCDelivery() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 hoursAheadForSpeedupCPCDelivery = 17;</code>
     *
     * <pre>
     *CPC补投提前时间(小时)(24-n),&lt;0无补投时间，且不受均匀投放控制，=0继承Global.conf值，&gt;0按照配置的值(小时)来进行补投
     * </pre>
     */
    public int getHoursAheadForSpeedupCPCDelivery() {
      return hoursAheadForSpeedupCPCDelivery_;
    }

    public static final int FIXEDBANNERID_FIELD_NUMBER = 18;
    private java.util.List<java.lang.Long> fixedBannerId_;
    /**
     * <code>repeated int64 fixedBannerId = 18;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getFixedBannerIdList() {
      return fixedBannerId_;
    }
    /**
     * <code>repeated int64 fixedBannerId = 18;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    public int getFixedBannerIdCount() {
      return fixedBannerId_.size();
    }
    /**
     * <code>repeated int64 fixedBannerId = 18;</code>
     *
     * <pre>
     *固定方案创意id
     * </pre>
     */
    public long getFixedBannerId(int index) {
      return fixedBannerId_.get(index);
    }

    private void initFields() {
      id_ = 0L;
      cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      channelGroupId_ = 0L;
      uniqueCode_ = "";
      roundMode_ = 0;
      mutexType_ = de.cache.DeliveryMessage.Channel.MutexType.OFF;
      playListId_ = java.util.Collections.emptyList();
      defaultTplId_ = 1;
      defaultUnitPrice_ = 0L;
      width_ = 0;
      height_ = 0;
      refresh_ = de.cache.DeliveryMessage.Channel.RefreshInfo.getDefaultInstance();
      creativeType_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      forcePriority_ = 0;
      referrerTargeting_ = de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance();
      inheritFromGConf_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
      hoursAheadForSpeedupCPCDelivery_ = 0;
      fixedBannerId_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, channelGroupId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getUniqueCodeBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, roundMode_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, mutexType_.getNumber());
      }
      for (int i = 0; i < playListId_.size(); i++) {
        output.writeInt64(7, playListId_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, defaultTplId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(9, defaultUnitPrice_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(10, width_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(11, height_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(12, refresh_);
      }
      for (int i = 0; i < creativeType_.size(); i++) {
        output.writeBytes(13, creativeType_.getByteString(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(14, forcePriority_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(15, referrerTargeting_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeEnum(16, inheritFromGConf_.getNumber());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(17, hoursAheadForSpeedupCPCDelivery_);
      }
      for (int i = 0; i < fixedBannerId_.size(); i++) {
        output.writeInt64(18, fixedBannerId_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, channelGroupId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getUniqueCodeBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, roundMode_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, mutexType_.getNumber());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playListId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(playListId_.get(i));
        }
        size += dataSize;
        size += 1 * getPlayListIdList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, defaultTplId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, defaultUnitPrice_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, width_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, height_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, refresh_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < creativeType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(creativeType_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getCreativeTypeList().size();
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, forcePriority_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, referrerTargeting_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, inheritFromGConf_.getNumber());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, hoursAheadForSpeedupCPCDelivery_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < fixedBannerId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(fixedBannerId_.get(i));
        }
        size += dataSize;
        size += 2 * getFixedBannerIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.cache.DeliveryMessage.Channel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.Channel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Channel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.Channel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Channel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.Channel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Channel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.cache.DeliveryMessage.Channel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Channel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.Channel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.cache.DeliveryMessage.Channel prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code de.cache.Channel}
     *
     * <pre>
     *广告位数据
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:de.cache.Channel)
        de.cache.DeliveryMessage.ChannelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Channel_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Channel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.Channel.class, de.cache.DeliveryMessage.Channel.Builder.class);
      }

      // Construct using de.cache.DeliveryMessage.Channel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRefreshFieldBuilder();
          getReferrerTargetingFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        bitField0_ = (bitField0_ & ~0x00000002);
        channelGroupId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        uniqueCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        roundMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        mutexType_ = de.cache.DeliveryMessage.Channel.MutexType.OFF;
        bitField0_ = (bitField0_ & ~0x00000020);
        playListId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        defaultTplId_ = 1;
        bitField0_ = (bitField0_ & ~0x00000080);
        defaultUnitPrice_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        width_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (refreshBuilder_ == null) {
          refresh_ = de.cache.DeliveryMessage.Channel.RefreshInfo.getDefaultInstance();
        } else {
          refreshBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        creativeType_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00001000);
        forcePriority_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        if (referrerTargetingBuilder_ == null) {
          referrerTargeting_ = de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance();
        } else {
          referrerTargetingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        inheritFromGConf_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        bitField0_ = (bitField0_ & ~0x00008000);
        hoursAheadForSpeedupCPCDelivery_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        fixedBannerId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Channel_descriptor;
      }

      public de.cache.DeliveryMessage.Channel getDefaultInstanceForType() {
        return de.cache.DeliveryMessage.Channel.getDefaultInstance();
      }

      public de.cache.DeliveryMessage.Channel build() {
        de.cache.DeliveryMessage.Channel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.cache.DeliveryMessage.Channel buildPartial() {
        de.cache.DeliveryMessage.Channel result = new de.cache.DeliveryMessage.Channel(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cmd_ = cmd_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.channelGroupId_ = channelGroupId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.uniqueCode_ = uniqueCode_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.roundMode_ = roundMode_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.mutexType_ = mutexType_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          playListId_ = java.util.Collections.unmodifiableList(playListId_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.playListId_ = playListId_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.defaultTplId_ = defaultTplId_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.defaultUnitPrice_ = defaultUnitPrice_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.width_ = width_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.height_ = height_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        if (refreshBuilder_ == null) {
          result.refresh_ = refresh_;
        } else {
          result.refresh_ = refreshBuilder_.build();
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          creativeType_ = creativeType_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.creativeType_ = creativeType_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.forcePriority_ = forcePriority_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (referrerTargetingBuilder_ == null) {
          result.referrerTargeting_ = referrerTargeting_;
        } else {
          result.referrerTargeting_ = referrerTargetingBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.inheritFromGConf_ = inheritFromGConf_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.hoursAheadForSpeedupCPCDelivery_ = hoursAheadForSpeedupCPCDelivery_;
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          fixedBannerId_ = java.util.Collections.unmodifiableList(fixedBannerId_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.fixedBannerId_ = fixedBannerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.cache.DeliveryMessage.Channel) {
          return mergeFrom((de.cache.DeliveryMessage.Channel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.cache.DeliveryMessage.Channel other) {
        if (other == de.cache.DeliveryMessage.Channel.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCmd()) {
          setCmd(other.getCmd());
        }
        if (other.hasChannelGroupId()) {
          setChannelGroupId(other.getChannelGroupId());
        }
        if (other.hasUniqueCode()) {
          bitField0_ |= 0x00000008;
          uniqueCode_ = other.uniqueCode_;
          onChanged();
        }
        if (other.hasRoundMode()) {
          setRoundMode(other.getRoundMode());
        }
        if (other.hasMutexType()) {
          setMutexType(other.getMutexType());
        }
        if (!other.playListId_.isEmpty()) {
          if (playListId_.isEmpty()) {
            playListId_ = other.playListId_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensurePlayListIdIsMutable();
            playListId_.addAll(other.playListId_);
          }
          onChanged();
        }
        if (other.hasDefaultTplId()) {
          setDefaultTplId(other.getDefaultTplId());
        }
        if (other.hasDefaultUnitPrice()) {
          setDefaultUnitPrice(other.getDefaultUnitPrice());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasRefresh()) {
          mergeRefresh(other.getRefresh());
        }
        if (!other.creativeType_.isEmpty()) {
          if (creativeType_.isEmpty()) {
            creativeType_ = other.creativeType_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureCreativeTypeIsMutable();
            creativeType_.addAll(other.creativeType_);
          }
          onChanged();
        }
        if (other.hasForcePriority()) {
          setForcePriority(other.getForcePriority());
        }
        if (other.hasReferrerTargeting()) {
          mergeReferrerTargeting(other.getReferrerTargeting());
        }
        if (other.hasInheritFromGConf()) {
          setInheritFromGConf(other.getInheritFromGConf());
        }
        if (other.hasHoursAheadForSpeedupCPCDelivery()) {
          setHoursAheadForSpeedupCPCDelivery(other.getHoursAheadForSpeedupCPCDelivery());
        }
        if (!other.fixedBannerId_.isEmpty()) {
          if (fixedBannerId_.isEmpty()) {
            fixedBannerId_ = other.fixedBannerId_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureFixedBannerIdIsMutable();
            fixedBannerId_.addAll(other.fixedBannerId_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.cache.DeliveryMessage.Channel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.cache.DeliveryMessage.Channel) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *广告位id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *广告位id
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *广告位id
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *广告位id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.Command cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public boolean hasCmd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public de.cache.DeliveryMessage.Command getCmd() {
        return cmd_;
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public Builder setCmd(de.cache.DeliveryMessage.Command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        cmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public Builder clearCmd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        onChanged();
        return this;
      }

      private long channelGroupId_ ;
      /**
       * <code>optional int64 channelGroupId = 3;</code>
       *
       * <pre>
       *频道id
       * </pre>
       */
      public boolean hasChannelGroupId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 channelGroupId = 3;</code>
       *
       * <pre>
       *频道id
       * </pre>
       */
      public long getChannelGroupId() {
        return channelGroupId_;
      }
      /**
       * <code>optional int64 channelGroupId = 3;</code>
       *
       * <pre>
       *频道id
       * </pre>
       */
      public Builder setChannelGroupId(long value) {
        bitField0_ |= 0x00000004;
        channelGroupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 channelGroupId = 3;</code>
       *
       * <pre>
       *频道id
       * </pre>
       */
      public Builder clearChannelGroupId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        channelGroupId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object uniqueCode_ = "";
      /**
       * <code>optional string uniqueCode = 4;</code>
       *
       * <pre>
       *广告位标识name
       * </pre>
       */
      public boolean hasUniqueCode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string uniqueCode = 4;</code>
       *
       * <pre>
       *广告位标识name
       * </pre>
       */
      public java.lang.String getUniqueCode() {
        java.lang.Object ref = uniqueCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            uniqueCode_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uniqueCode = 4;</code>
       *
       * <pre>
       *广告位标识name
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUniqueCodeBytes() {
        java.lang.Object ref = uniqueCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uniqueCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uniqueCode = 4;</code>
       *
       * <pre>
       *广告位标识name
       * </pre>
       */
      public Builder setUniqueCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        uniqueCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uniqueCode = 4;</code>
       *
       * <pre>
       *广告位标识name
       * </pre>
       */
      public Builder clearUniqueCode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        uniqueCode_ = getDefaultInstance().getUniqueCode();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uniqueCode = 4;</code>
       *
       * <pre>
       *广告位标识name
       * </pre>
       */
      public Builder setUniqueCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        uniqueCode_ = value;
        onChanged();
        return this;
      }

      private int roundMode_ ;
      /**
       * <code>optional int32 roundMode = 5;</code>
       *
       * <pre>
       *投放轮循模式,0=rand;1=cookie;2=session
       * </pre>
       */
      public boolean hasRoundMode() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 roundMode = 5;</code>
       *
       * <pre>
       *投放轮循模式,0=rand;1=cookie;2=session
       * </pre>
       */
      public int getRoundMode() {
        return roundMode_;
      }
      /**
       * <code>optional int32 roundMode = 5;</code>
       *
       * <pre>
       *投放轮循模式,0=rand;1=cookie;2=session
       * </pre>
       */
      public Builder setRoundMode(int value) {
        bitField0_ |= 0x00000010;
        roundMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 roundMode = 5;</code>
       *
       * <pre>
       *投放轮循模式,0=rand;1=cookie;2=session
       * </pre>
       */
      public Builder clearRoundMode() {
        bitField0_ = (bitField0_ & ~0x00000010);
        roundMode_ = 0;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.Channel.MutexType mutexType_ = de.cache.DeliveryMessage.Channel.MutexType.OFF;
      /**
       * <code>optional .de.cache.Channel.MutexType mutexType = 6;</code>
       *
       * <pre>
       *节目单互斥标识,0=无互斥，1=投放互斥，2=订单互斥
       * </pre>
       */
      public boolean hasMutexType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .de.cache.Channel.MutexType mutexType = 6;</code>
       *
       * <pre>
       *节目单互斥标识,0=无互斥，1=投放互斥，2=订单互斥
       * </pre>
       */
      public de.cache.DeliveryMessage.Channel.MutexType getMutexType() {
        return mutexType_;
      }
      /**
       * <code>optional .de.cache.Channel.MutexType mutexType = 6;</code>
       *
       * <pre>
       *节目单互斥标识,0=无互斥，1=投放互斥，2=订单互斥
       * </pre>
       */
      public Builder setMutexType(de.cache.DeliveryMessage.Channel.MutexType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        mutexType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.Channel.MutexType mutexType = 6;</code>
       *
       * <pre>
       *节目单互斥标识,0=无互斥，1=投放互斥，2=订单互斥
       * </pre>
       */
      public Builder clearMutexType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        mutexType_ = de.cache.DeliveryMessage.Channel.MutexType.OFF;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> playListId_ = java.util.Collections.emptyList();
      private void ensurePlayListIdIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          playListId_ = new java.util.ArrayList<java.lang.Long>(playListId_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int64 playListId = 7;</code>
       *
       * <pre>
       *节目单子节点广告位Id，size=0表示普通广告位
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getPlayListIdList() {
        return java.util.Collections.unmodifiableList(playListId_);
      }
      /**
       * <code>repeated int64 playListId = 7;</code>
       *
       * <pre>
       *节目单子节点广告位Id，size=0表示普通广告位
       * </pre>
       */
      public int getPlayListIdCount() {
        return playListId_.size();
      }
      /**
       * <code>repeated int64 playListId = 7;</code>
       *
       * <pre>
       *节目单子节点广告位Id，size=0表示普通广告位
       * </pre>
       */
      public long getPlayListId(int index) {
        return playListId_.get(index);
      }
      /**
       * <code>repeated int64 playListId = 7;</code>
       *
       * <pre>
       *节目单子节点广告位Id，size=0表示普通广告位
       * </pre>
       */
      public Builder setPlayListId(
          int index, long value) {
        ensurePlayListIdIsMutable();
        playListId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 playListId = 7;</code>
       *
       * <pre>
       *节目单子节点广告位Id，size=0表示普通广告位
       * </pre>
       */
      public Builder addPlayListId(long value) {
        ensurePlayListIdIsMutable();
        playListId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 playListId = 7;</code>
       *
       * <pre>
       *节目单子节点广告位Id，size=0表示普通广告位
       * </pre>
       */
      public Builder addAllPlayListId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensurePlayListIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, playListId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 playListId = 7;</code>
       *
       * <pre>
       *节目单子节点广告位Id，size=0表示普通广告位
       * </pre>
       */
      public Builder clearPlayListId() {
        playListId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private int defaultTplId_ = 1;
      /**
       * <code>optional int32 defaultTplId = 8 [default = 1];</code>
       *
       * <pre>
       *默认使用创意模板编号
       * </pre>
       */
      public boolean hasDefaultTplId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 defaultTplId = 8 [default = 1];</code>
       *
       * <pre>
       *默认使用创意模板编号
       * </pre>
       */
      public int getDefaultTplId() {
        return defaultTplId_;
      }
      /**
       * <code>optional int32 defaultTplId = 8 [default = 1];</code>
       *
       * <pre>
       *默认使用创意模板编号
       * </pre>
       */
      public Builder setDefaultTplId(int value) {
        bitField0_ |= 0x00000080;
        defaultTplId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 defaultTplId = 8 [default = 1];</code>
       *
       * <pre>
       *默认使用创意模板编号
       * </pre>
       */
      public Builder clearDefaultTplId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        defaultTplId_ = 1;
        onChanged();
        return this;
      }

      private long defaultUnitPrice_ ;
      /**
       * <code>optional int64 defaultUnitPrice = 9 [default = 0];</code>
       *
       * <pre>
       *广告位默认单价,=0时,无单价
       * </pre>
       */
      public boolean hasDefaultUnitPrice() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 defaultUnitPrice = 9 [default = 0];</code>
       *
       * <pre>
       *广告位默认单价,=0时,无单价
       * </pre>
       */
      public long getDefaultUnitPrice() {
        return defaultUnitPrice_;
      }
      /**
       * <code>optional int64 defaultUnitPrice = 9 [default = 0];</code>
       *
       * <pre>
       *广告位默认单价,=0时,无单价
       * </pre>
       */
      public Builder setDefaultUnitPrice(long value) {
        bitField0_ |= 0x00000100;
        defaultUnitPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 defaultUnitPrice = 9 [default = 0];</code>
       *
       * <pre>
       *广告位默认单价,=0时,无单价
       * </pre>
       */
      public Builder clearDefaultUnitPrice() {
        bitField0_ = (bitField0_ & ~0x00000100);
        defaultUnitPrice_ = 0L;
        onChanged();
        return this;
      }

      private int width_ ;
      /**
       * <code>optional int32 width = 10;</code>
       *
       * <pre>
       *广告位宽度
       * </pre>
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 width = 10;</code>
       *
       * <pre>
       *广告位宽度
       * </pre>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <code>optional int32 width = 10;</code>
       *
       * <pre>
       *广告位宽度
       * </pre>
       */
      public Builder setWidth(int value) {
        bitField0_ |= 0x00000200;
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 width = 10;</code>
       *
       * <pre>
       *广告位宽度
       * </pre>
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000200);
        width_ = 0;
        onChanged();
        return this;
      }

      private int height_ ;
      /**
       * <code>optional int32 height = 11;</code>
       *
       * <pre>
       *广告位高度
       * </pre>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 height = 11;</code>
       *
       * <pre>
       *广告位高度
       * </pre>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <code>optional int32 height = 11;</code>
       *
       * <pre>
       *广告位高度
       * </pre>
       */
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000400;
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 height = 11;</code>
       *
       * <pre>
       *广告位高度
       * </pre>
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000400);
        height_ = 0;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.Channel.RefreshInfo refresh_ = de.cache.DeliveryMessage.Channel.RefreshInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.Channel.RefreshInfo, de.cache.DeliveryMessage.Channel.RefreshInfo.Builder, de.cache.DeliveryMessage.Channel.RefreshInfoOrBuilder> refreshBuilder_;
      /**
       * <code>optional .de.cache.Channel.RefreshInfo refresh = 12;</code>
       *
       * <pre>
       *自刷新
       * </pre>
       */
      public boolean hasRefresh() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .de.cache.Channel.RefreshInfo refresh = 12;</code>
       *
       * <pre>
       *自刷新
       * </pre>
       */
      public de.cache.DeliveryMessage.Channel.RefreshInfo getRefresh() {
        if (refreshBuilder_ == null) {
          return refresh_;
        } else {
          return refreshBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .de.cache.Channel.RefreshInfo refresh = 12;</code>
       *
       * <pre>
       *自刷新
       * </pre>
       */
      public Builder setRefresh(de.cache.DeliveryMessage.Channel.RefreshInfo value) {
        if (refreshBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          refresh_ = value;
          onChanged();
        } else {
          refreshBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .de.cache.Channel.RefreshInfo refresh = 12;</code>
       *
       * <pre>
       *自刷新
       * </pre>
       */
      public Builder setRefresh(
          de.cache.DeliveryMessage.Channel.RefreshInfo.Builder builderForValue) {
        if (refreshBuilder_ == null) {
          refresh_ = builderForValue.build();
          onChanged();
        } else {
          refreshBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .de.cache.Channel.RefreshInfo refresh = 12;</code>
       *
       * <pre>
       *自刷新
       * </pre>
       */
      public Builder mergeRefresh(de.cache.DeliveryMessage.Channel.RefreshInfo value) {
        if (refreshBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              refresh_ != de.cache.DeliveryMessage.Channel.RefreshInfo.getDefaultInstance()) {
            refresh_ =
              de.cache.DeliveryMessage.Channel.RefreshInfo.newBuilder(refresh_).mergeFrom(value).buildPartial();
          } else {
            refresh_ = value;
          }
          onChanged();
        } else {
          refreshBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .de.cache.Channel.RefreshInfo refresh = 12;</code>
       *
       * <pre>
       *自刷新
       * </pre>
       */
      public Builder clearRefresh() {
        if (refreshBuilder_ == null) {
          refresh_ = de.cache.DeliveryMessage.Channel.RefreshInfo.getDefaultInstance();
          onChanged();
        } else {
          refreshBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .de.cache.Channel.RefreshInfo refresh = 12;</code>
       *
       * <pre>
       *自刷新
       * </pre>
       */
      public de.cache.DeliveryMessage.Channel.RefreshInfo.Builder getRefreshBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getRefreshFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .de.cache.Channel.RefreshInfo refresh = 12;</code>
       *
       * <pre>
       *自刷新
       * </pre>
       */
      public de.cache.DeliveryMessage.Channel.RefreshInfoOrBuilder getRefreshOrBuilder() {
        if (refreshBuilder_ != null) {
          return refreshBuilder_.getMessageOrBuilder();
        } else {
          return refresh_;
        }
      }
      /**
       * <code>optional .de.cache.Channel.RefreshInfo refresh = 12;</code>
       *
       * <pre>
       *自刷新
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.Channel.RefreshInfo, de.cache.DeliveryMessage.Channel.RefreshInfo.Builder, de.cache.DeliveryMessage.Channel.RefreshInfoOrBuilder> 
          getRefreshFieldBuilder() {
        if (refreshBuilder_ == null) {
          refreshBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.cache.DeliveryMessage.Channel.RefreshInfo, de.cache.DeliveryMessage.Channel.RefreshInfo.Builder, de.cache.DeliveryMessage.Channel.RefreshInfoOrBuilder>(
                  getRefresh(),
                  getParentForChildren(),
                  isClean());
          refresh_ = null;
        }
        return refreshBuilder_;
      }

      private com.google.protobuf.LazyStringList creativeType_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureCreativeTypeIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          creativeType_ = new com.google.protobuf.LazyStringArrayList(creativeType_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated string creativeType = 13;</code>
       *
       * <pre>
       *默认支持创意展现类型；字符串，其取值由前台管理界面统一制定，只需在广告位创意展现属性或广告请求参数中指定的内容一致即可。
       *支持多个兼容类型，多个类型以逗号分隔
       *如果该字段为空而广告请求也没有cht参数时，表示所有类型都兼容。
       *如果广告请求时携带了cht参数，该字段的值被忽略，以cht参数的值为准
       *与创意属性相对应的字段是在创意文件b/g.$bgid中，每个创意的第16字段描述。
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getCreativeTypeList() {
        return creativeType_.getUnmodifiableView();
      }
      /**
       * <code>repeated string creativeType = 13;</code>
       *
       * <pre>
       *默认支持创意展现类型；字符串，其取值由前台管理界面统一制定，只需在广告位创意展现属性或广告请求参数中指定的内容一致即可。
       *支持多个兼容类型，多个类型以逗号分隔
       *如果该字段为空而广告请求也没有cht参数时，表示所有类型都兼容。
       *如果广告请求时携带了cht参数，该字段的值被忽略，以cht参数的值为准
       *与创意属性相对应的字段是在创意文件b/g.$bgid中，每个创意的第16字段描述。
       * </pre>
       */
      public int getCreativeTypeCount() {
        return creativeType_.size();
      }
      /**
       * <code>repeated string creativeType = 13;</code>
       *
       * <pre>
       *默认支持创意展现类型；字符串，其取值由前台管理界面统一制定，只需在广告位创意展现属性或广告请求参数中指定的内容一致即可。
       *支持多个兼容类型，多个类型以逗号分隔
       *如果该字段为空而广告请求也没有cht参数时，表示所有类型都兼容。
       *如果广告请求时携带了cht参数，该字段的值被忽略，以cht参数的值为准
       *与创意属性相对应的字段是在创意文件b/g.$bgid中，每个创意的第16字段描述。
       * </pre>
       */
      public java.lang.String getCreativeType(int index) {
        return creativeType_.get(index);
      }
      /**
       * <code>repeated string creativeType = 13;</code>
       *
       * <pre>
       *默认支持创意展现类型；字符串，其取值由前台管理界面统一制定，只需在广告位创意展现属性或广告请求参数中指定的内容一致即可。
       *支持多个兼容类型，多个类型以逗号分隔
       *如果该字段为空而广告请求也没有cht参数时，表示所有类型都兼容。
       *如果广告请求时携带了cht参数，该字段的值被忽略，以cht参数的值为准
       *与创意属性相对应的字段是在创意文件b/g.$bgid中，每个创意的第16字段描述。
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCreativeTypeBytes(int index) {
        return creativeType_.getByteString(index);
      }
      /**
       * <code>repeated string creativeType = 13;</code>
       *
       * <pre>
       *默认支持创意展现类型；字符串，其取值由前台管理界面统一制定，只需在广告位创意展现属性或广告请求参数中指定的内容一致即可。
       *支持多个兼容类型，多个类型以逗号分隔
       *如果该字段为空而广告请求也没有cht参数时，表示所有类型都兼容。
       *如果广告请求时携带了cht参数，该字段的值被忽略，以cht参数的值为准
       *与创意属性相对应的字段是在创意文件b/g.$bgid中，每个创意的第16字段描述。
       * </pre>
       */
      public Builder setCreativeType(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCreativeTypeIsMutable();
        creativeType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string creativeType = 13;</code>
       *
       * <pre>
       *默认支持创意展现类型；字符串，其取值由前台管理界面统一制定，只需在广告位创意展现属性或广告请求参数中指定的内容一致即可。
       *支持多个兼容类型，多个类型以逗号分隔
       *如果该字段为空而广告请求也没有cht参数时，表示所有类型都兼容。
       *如果广告请求时携带了cht参数，该字段的值被忽略，以cht参数的值为准
       *与创意属性相对应的字段是在创意文件b/g.$bgid中，每个创意的第16字段描述。
       * </pre>
       */
      public Builder addCreativeType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCreativeTypeIsMutable();
        creativeType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string creativeType = 13;</code>
       *
       * <pre>
       *默认支持创意展现类型；字符串，其取值由前台管理界面统一制定，只需在广告位创意展现属性或广告请求参数中指定的内容一致即可。
       *支持多个兼容类型，多个类型以逗号分隔
       *如果该字段为空而广告请求也没有cht参数时，表示所有类型都兼容。
       *如果广告请求时携带了cht参数，该字段的值被忽略，以cht参数的值为准
       *与创意属性相对应的字段是在创意文件b/g.$bgid中，每个创意的第16字段描述。
       * </pre>
       */
      public Builder addAllCreativeType(
          java.lang.Iterable<java.lang.String> values) {
        ensureCreativeTypeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, creativeType_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string creativeType = 13;</code>
       *
       * <pre>
       *默认支持创意展现类型；字符串，其取值由前台管理界面统一制定，只需在广告位创意展现属性或广告请求参数中指定的内容一致即可。
       *支持多个兼容类型，多个类型以逗号分隔
       *如果该字段为空而广告请求也没有cht参数时，表示所有类型都兼容。
       *如果广告请求时携带了cht参数，该字段的值被忽略，以cht参数的值为准
       *与创意属性相对应的字段是在创意文件b/g.$bgid中，每个创意的第16字段描述。
       * </pre>
       */
      public Builder clearCreativeType() {
        creativeType_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string creativeType = 13;</code>
       *
       * <pre>
       *默认支持创意展现类型；字符串，其取值由前台管理界面统一制定，只需在广告位创意展现属性或广告请求参数中指定的内容一致即可。
       *支持多个兼容类型，多个类型以逗号分隔
       *如果该字段为空而广告请求也没有cht参数时，表示所有类型都兼容。
       *如果广告请求时携带了cht参数，该字段的值被忽略，以cht参数的值为准
       *与创意属性相对应的字段是在创意文件b/g.$bgid中，每个创意的第16字段描述。
       * </pre>
       */
      public Builder addCreativeTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCreativeTypeIsMutable();
        creativeType_.add(value);
        onChanged();
        return this;
      }

      private int forcePriority_ ;
      /**
       * <code>optional int32 forcePriority = 14 [default = 0];</code>
       *
       * <pre>
       *表示哪些优先级以上的需要强制投放，如该位为10，表示该广告位下优先级从1到9级的投放可进行强制投放。如果为0或空表示该广告位下所有投放可参与强制投放，具体哪些投放参与由投放文件决定。
       * </pre>
       */
      public boolean hasForcePriority() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 forcePriority = 14 [default = 0];</code>
       *
       * <pre>
       *表示哪些优先级以上的需要强制投放，如该位为10，表示该广告位下优先级从1到9级的投放可进行强制投放。如果为0或空表示该广告位下所有投放可参与强制投放，具体哪些投放参与由投放文件决定。
       * </pre>
       */
      public int getForcePriority() {
        return forcePriority_;
      }
      /**
       * <code>optional int32 forcePriority = 14 [default = 0];</code>
       *
       * <pre>
       *表示哪些优先级以上的需要强制投放，如该位为10，表示该广告位下优先级从1到9级的投放可进行强制投放。如果为0或空表示该广告位下所有投放可参与强制投放，具体哪些投放参与由投放文件决定。
       * </pre>
       */
      public Builder setForcePriority(int value) {
        bitField0_ |= 0x00002000;
        forcePriority_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 forcePriority = 14 [default = 0];</code>
       *
       * <pre>
       *表示哪些优先级以上的需要强制投放，如该位为10，表示该广告位下优先级从1到9级的投放可进行强制投放。如果为0或空表示该广告位下所有投放可参与强制投放，具体哪些投放参与由投放文件决定。
       * </pre>
       */
      public Builder clearForcePriority() {
        bitField0_ = (bitField0_ & ~0x00002000);
        forcePriority_ = 0;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.BlackAndWhiteList referrerTargeting_ = de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.BlackAndWhiteList, de.cache.DeliveryMessage.BlackAndWhiteList.Builder, de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder> referrerTargetingBuilder_;
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 15;</code>
       *
       * <pre>
       *referer黑白名单定向
       * </pre>
       */
      public boolean hasReferrerTargeting() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 15;</code>
       *
       * <pre>
       *referer黑白名单定向
       * </pre>
       */
      public de.cache.DeliveryMessage.BlackAndWhiteList getReferrerTargeting() {
        if (referrerTargetingBuilder_ == null) {
          return referrerTargeting_;
        } else {
          return referrerTargetingBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 15;</code>
       *
       * <pre>
       *referer黑白名单定向
       * </pre>
       */
      public Builder setReferrerTargeting(de.cache.DeliveryMessage.BlackAndWhiteList value) {
        if (referrerTargetingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          referrerTargeting_ = value;
          onChanged();
        } else {
          referrerTargetingBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 15;</code>
       *
       * <pre>
       *referer黑白名单定向
       * </pre>
       */
      public Builder setReferrerTargeting(
          de.cache.DeliveryMessage.BlackAndWhiteList.Builder builderForValue) {
        if (referrerTargetingBuilder_ == null) {
          referrerTargeting_ = builderForValue.build();
          onChanged();
        } else {
          referrerTargetingBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 15;</code>
       *
       * <pre>
       *referer黑白名单定向
       * </pre>
       */
      public Builder mergeReferrerTargeting(de.cache.DeliveryMessage.BlackAndWhiteList value) {
        if (referrerTargetingBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000) &&
              referrerTargeting_ != de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance()) {
            referrerTargeting_ =
              de.cache.DeliveryMessage.BlackAndWhiteList.newBuilder(referrerTargeting_).mergeFrom(value).buildPartial();
          } else {
            referrerTargeting_ = value;
          }
          onChanged();
        } else {
          referrerTargetingBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 15;</code>
       *
       * <pre>
       *referer黑白名单定向
       * </pre>
       */
      public Builder clearReferrerTargeting() {
        if (referrerTargetingBuilder_ == null) {
          referrerTargeting_ = de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance();
          onChanged();
        } else {
          referrerTargetingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 15;</code>
       *
       * <pre>
       *referer黑白名单定向
       * </pre>
       */
      public de.cache.DeliveryMessage.BlackAndWhiteList.Builder getReferrerTargetingBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getReferrerTargetingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 15;</code>
       *
       * <pre>
       *referer黑白名单定向
       * </pre>
       */
      public de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder getReferrerTargetingOrBuilder() {
        if (referrerTargetingBuilder_ != null) {
          return referrerTargetingBuilder_.getMessageOrBuilder();
        } else {
          return referrerTargeting_;
        }
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 15;</code>
       *
       * <pre>
       *referer黑白名单定向
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.BlackAndWhiteList, de.cache.DeliveryMessage.BlackAndWhiteList.Builder, de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder> 
          getReferrerTargetingFieldBuilder() {
        if (referrerTargetingBuilder_ == null) {
          referrerTargetingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.cache.DeliveryMessage.BlackAndWhiteList, de.cache.DeliveryMessage.BlackAndWhiteList.Builder, de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder>(
                  getReferrerTargeting(),
                  getParentForChildren(),
                  isClean());
          referrerTargeting_ = null;
        }
        return referrerTargetingBuilder_;
      }

      private de.cache.DeliveryMessage.GlobalSwitch inheritFromGConf_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
      /**
       * <code>optional .de.cache.GlobalSwitch inheritFromGConf = 16 [default = OFF];</code>
       *
       * <pre>
       *继承db级别referer黑白名单配置，0=不继承，1=继承
       * </pre>
       */
      public boolean hasInheritFromGConf() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .de.cache.GlobalSwitch inheritFromGConf = 16 [default = OFF];</code>
       *
       * <pre>
       *继承db级别referer黑白名单配置，0=不继承，1=继承
       * </pre>
       */
      public de.cache.DeliveryMessage.GlobalSwitch getInheritFromGConf() {
        return inheritFromGConf_;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch inheritFromGConf = 16 [default = OFF];</code>
       *
       * <pre>
       *继承db级别referer黑白名单配置，0=不继承，1=继承
       * </pre>
       */
      public Builder setInheritFromGConf(de.cache.DeliveryMessage.GlobalSwitch value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00008000;
        inheritFromGConf_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch inheritFromGConf = 16 [default = OFF];</code>
       *
       * <pre>
       *继承db级别referer黑白名单配置，0=不继承，1=继承
       * </pre>
       */
      public Builder clearInheritFromGConf() {
        bitField0_ = (bitField0_ & ~0x00008000);
        inheritFromGConf_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        onChanged();
        return this;
      }

      private int hoursAheadForSpeedupCPCDelivery_ ;
      /**
       * <code>optional int32 hoursAheadForSpeedupCPCDelivery = 17;</code>
       *
       * <pre>
       *CPC补投提前时间(小时)(24-n),&lt;0无补投时间，且不受均匀投放控制，=0继承Global.conf值，&gt;0按照配置的值(小时)来进行补投
       * </pre>
       */
      public boolean hasHoursAheadForSpeedupCPCDelivery() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 hoursAheadForSpeedupCPCDelivery = 17;</code>
       *
       * <pre>
       *CPC补投提前时间(小时)(24-n),&lt;0无补投时间，且不受均匀投放控制，=0继承Global.conf值，&gt;0按照配置的值(小时)来进行补投
       * </pre>
       */
      public int getHoursAheadForSpeedupCPCDelivery() {
        return hoursAheadForSpeedupCPCDelivery_;
      }
      /**
       * <code>optional int32 hoursAheadForSpeedupCPCDelivery = 17;</code>
       *
       * <pre>
       *CPC补投提前时间(小时)(24-n),&lt;0无补投时间，且不受均匀投放控制，=0继承Global.conf值，&gt;0按照配置的值(小时)来进行补投
       * </pre>
       */
      public Builder setHoursAheadForSpeedupCPCDelivery(int value) {
        bitField0_ |= 0x00010000;
        hoursAheadForSpeedupCPCDelivery_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hoursAheadForSpeedupCPCDelivery = 17;</code>
       *
       * <pre>
       *CPC补投提前时间(小时)(24-n),&lt;0无补投时间，且不受均匀投放控制，=0继承Global.conf值，&gt;0按照配置的值(小时)来进行补投
       * </pre>
       */
      public Builder clearHoursAheadForSpeedupCPCDelivery() {
        bitField0_ = (bitField0_ & ~0x00010000);
        hoursAheadForSpeedupCPCDelivery_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> fixedBannerId_ = java.util.Collections.emptyList();
      private void ensureFixedBannerIdIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          fixedBannerId_ = new java.util.ArrayList<java.lang.Long>(fixedBannerId_);
          bitField0_ |= 0x00020000;
         }
      }
      /**
       * <code>repeated int64 fixedBannerId = 18;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getFixedBannerIdList() {
        return java.util.Collections.unmodifiableList(fixedBannerId_);
      }
      /**
       * <code>repeated int64 fixedBannerId = 18;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public int getFixedBannerIdCount() {
        return fixedBannerId_.size();
      }
      /**
       * <code>repeated int64 fixedBannerId = 18;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public long getFixedBannerId(int index) {
        return fixedBannerId_.get(index);
      }
      /**
       * <code>repeated int64 fixedBannerId = 18;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public Builder setFixedBannerId(
          int index, long value) {
        ensureFixedBannerIdIsMutable();
        fixedBannerId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fixedBannerId = 18;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public Builder addFixedBannerId(long value) {
        ensureFixedBannerIdIsMutable();
        fixedBannerId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fixedBannerId = 18;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public Builder addAllFixedBannerId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureFixedBannerIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fixedBannerId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fixedBannerId = 18;</code>
       *
       * <pre>
       *固定方案创意id
       * </pre>
       */
      public Builder clearFixedBannerId() {
        fixedBannerId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:de.cache.Channel)
    }

    static {
      defaultInstance = new Channel(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:de.cache.Channel)
  }

  public interface AgencyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.cache.Agency)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *代理商id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *代理商id
     * </pre>
     */
    long getId();

    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    boolean hasCmd();
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    de.cache.DeliveryMessage.Command getCmd();

    /**
     * <code>optional uint64 budget = 3;</code>
     *
     * <pre>
     *账户预算  所有金额单位全部为：百万分之一元
     * </pre>
     */
    boolean hasBudget();
    /**
     * <code>optional uint64 budget = 3;</code>
     *
     * <pre>
     *账户预算  所有金额单位全部为：百万分之一元
     * </pre>
     */
    long getBudget();
  }
  /**
   * Protobuf type {@code de.cache.Agency}
   *
   * <pre>
   *广告相关实体 Agency/Advertiser/Order/Solution/Banner
   * </pre>
   */
  public static final class Agency extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:de.cache.Agency)
      AgencyOrBuilder {
    // Use Agency.newBuilder() to construct.
    private Agency(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Agency(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Agency defaultInstance;
    public static Agency getDefaultInstance() {
      return defaultInstance;
    }

    public Agency getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Agency(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.Command value = de.cache.DeliveryMessage.Command.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                cmd_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              budget_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.internal_static_de_cache_Agency_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.cache.DeliveryMessage.internal_static_de_cache_Agency_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.cache.DeliveryMessage.Agency.class, de.cache.DeliveryMessage.Agency.Builder.class);
    }

    public static com.google.protobuf.Parser<Agency> PARSER =
        new com.google.protobuf.AbstractParser<Agency>() {
      public Agency parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Agency(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Agency> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *代理商id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *代理商id
     * </pre>
     */
    public long getId() {
      return id_;
    }

    public static final int CMD_FIELD_NUMBER = 2;
    private de.cache.DeliveryMessage.Command cmd_;
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    public boolean hasCmd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    public de.cache.DeliveryMessage.Command getCmd() {
      return cmd_;
    }

    public static final int BUDGET_FIELD_NUMBER = 3;
    private long budget_;
    /**
     * <code>optional uint64 budget = 3;</code>
     *
     * <pre>
     *账户预算  所有金额单位全部为：百万分之一元
     * </pre>
     */
    public boolean hasBudget() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 budget = 3;</code>
     *
     * <pre>
     *账户预算  所有金额单位全部为：百万分之一元
     * </pre>
     */
    public long getBudget() {
      return budget_;
    }

    private void initFields() {
      id_ = 0L;
      cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      budget_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, budget_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, budget_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.cache.DeliveryMessage.Agency parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.Agency parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Agency parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.Agency parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Agency parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.Agency parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Agency parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.cache.DeliveryMessage.Agency parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Agency parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.Agency parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.cache.DeliveryMessage.Agency prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code de.cache.Agency}
     *
     * <pre>
     *广告相关实体 Agency/Advertiser/Order/Solution/Banner
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:de.cache.Agency)
        de.cache.DeliveryMessage.AgencyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Agency_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Agency_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.Agency.class, de.cache.DeliveryMessage.Agency.Builder.class);
      }

      // Construct using de.cache.DeliveryMessage.Agency.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        bitField0_ = (bitField0_ & ~0x00000002);
        budget_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Agency_descriptor;
      }

      public de.cache.DeliveryMessage.Agency getDefaultInstanceForType() {
        return de.cache.DeliveryMessage.Agency.getDefaultInstance();
      }

      public de.cache.DeliveryMessage.Agency build() {
        de.cache.DeliveryMessage.Agency result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.cache.DeliveryMessage.Agency buildPartial() {
        de.cache.DeliveryMessage.Agency result = new de.cache.DeliveryMessage.Agency(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cmd_ = cmd_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.budget_ = budget_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.cache.DeliveryMessage.Agency) {
          return mergeFrom((de.cache.DeliveryMessage.Agency)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.cache.DeliveryMessage.Agency other) {
        if (other == de.cache.DeliveryMessage.Agency.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCmd()) {
          setCmd(other.getCmd());
        }
        if (other.hasBudget()) {
          setBudget(other.getBudget());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.cache.DeliveryMessage.Agency parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.cache.DeliveryMessage.Agency) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *代理商id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *代理商id
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *代理商id
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *代理商id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.Command cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public boolean hasCmd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public de.cache.DeliveryMessage.Command getCmd() {
        return cmd_;
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public Builder setCmd(de.cache.DeliveryMessage.Command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        cmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public Builder clearCmd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        onChanged();
        return this;
      }

      private long budget_ ;
      /**
       * <code>optional uint64 budget = 3;</code>
       *
       * <pre>
       *账户预算  所有金额单位全部为：百万分之一元
       * </pre>
       */
      public boolean hasBudget() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 budget = 3;</code>
       *
       * <pre>
       *账户预算  所有金额单位全部为：百万分之一元
       * </pre>
       */
      public long getBudget() {
        return budget_;
      }
      /**
       * <code>optional uint64 budget = 3;</code>
       *
       * <pre>
       *账户预算  所有金额单位全部为：百万分之一元
       * </pre>
       */
      public Builder setBudget(long value) {
        bitField0_ |= 0x00000004;
        budget_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 budget = 3;</code>
       *
       * <pre>
       *账户预算  所有金额单位全部为：百万分之一元
       * </pre>
       */
      public Builder clearBudget() {
        bitField0_ = (bitField0_ & ~0x00000004);
        budget_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:de.cache.Agency)
    }

    static {
      defaultInstance = new Agency(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:de.cache.Agency)
  }

  public interface AdvertiserOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.cache.Advertiser)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *广告主id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *广告主id
     * </pre>
     */
    long getId();

    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    boolean hasCmd();
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    de.cache.DeliveryMessage.Command getCmd();

    /**
     * <code>optional int64 agencyId = 3;</code>
     *
     * <pre>
     *代理商id
     * </pre>
     */
    boolean hasAgencyId();
    /**
     * <code>optional int64 agencyId = 3;</code>
     *
     * <pre>
     *代理商id
     * </pre>
     */
    long getAgencyId();

    /**
     * <code>optional int64 startTimestamp = 4;</code>
     *
     * <pre>
     *订单开始日期时间(unix timestamp)
     * </pre>
     */
    boolean hasStartTimestamp();
    /**
     * <code>optional int64 startTimestamp = 4;</code>
     *
     * <pre>
     *订单开始日期时间(unix timestamp)
     * </pre>
     */
    long getStartTimestamp();

    /**
     * <code>optional int64 endTimestamp = 5;</code>
     *
     * <pre>
     *订单结束日期时间(unix timestamp)
     * </pre>
     */
    boolean hasEndTimestamp();
    /**
     * <code>optional int64 endTimestamp = 5;</code>
     *
     * <pre>
     *订单结束日期时间(unix timestamp)
     * </pre>
     */
    long getEndTimestamp();

    /**
     * <code>optional .de.cache.DeliveryMethod method = 6;</code>
     *
     * <pre>
     *Advertiser级别数量限制
     * </pre>
     */
    boolean hasMethod();
    /**
     * <code>optional .de.cache.DeliveryMethod method = 6;</code>
     *
     * <pre>
     *Advertiser级别数量限制
     * </pre>
     */
    de.cache.DeliveryMessage.DeliveryMethod getMethod();
    /**
     * <code>optional .de.cache.DeliveryMethod method = 6;</code>
     *
     * <pre>
     *Advertiser级别数量限制
     * </pre>
     */
    de.cache.DeliveryMessage.DeliveryMethodOrBuilder getMethodOrBuilder();

    /**
     * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
     *
     * <pre>
     *Exchange SspAdvertiser
     * </pre>
     */
    java.util.List<de.cache.DeliveryMessage.Advertiser.SspAdvertiser> 
        getSspAdvertiserIdList();
    /**
     * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
     *
     * <pre>
     *Exchange SspAdvertiser
     * </pre>
     */
    de.cache.DeliveryMessage.Advertiser.SspAdvertiser getSspAdvertiserId(int index);
    /**
     * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
     *
     * <pre>
     *Exchange SspAdvertiser
     * </pre>
     */
    int getSspAdvertiserIdCount();
    /**
     * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
     *
     * <pre>
     *Exchange SspAdvertiser
     * </pre>
     */
    java.util.List<? extends de.cache.DeliveryMessage.Advertiser.SspAdvertiserOrBuilder> 
        getSspAdvertiserIdOrBuilderList();
    /**
     * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
     *
     * <pre>
     *Exchange SspAdvertiser
     * </pre>
     */
    de.cache.DeliveryMessage.Advertiser.SspAdvertiserOrBuilder getSspAdvertiserIdOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code de.cache.Advertiser}
   *
   * <pre>
   *广告主(原来的orderGroup)
   * </pre>
   */
  public static final class Advertiser extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:de.cache.Advertiser)
      AdvertiserOrBuilder {
    // Use Advertiser.newBuilder() to construct.
    private Advertiser(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Advertiser(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Advertiser defaultInstance;
    public static Advertiser getDefaultInstance() {
      return defaultInstance;
    }

    public Advertiser getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Advertiser(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.Command value = de.cache.DeliveryMessage.Command.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                cmd_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              agencyId_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              startTimestamp_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              endTimestamp_ = input.readInt64();
              break;
            }
            case 50: {
              de.cache.DeliveryMessage.DeliveryMethod.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = method_.toBuilder();
              }
              method_ = input.readMessage(de.cache.DeliveryMessage.DeliveryMethod.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(method_);
                method_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                sspAdvertiserId_ = new java.util.ArrayList<de.cache.DeliveryMessage.Advertiser.SspAdvertiser>();
                mutable_bitField0_ |= 0x00000040;
              }
              sspAdvertiserId_.add(input.readMessage(de.cache.DeliveryMessage.Advertiser.SspAdvertiser.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          sspAdvertiserId_ = java.util.Collections.unmodifiableList(sspAdvertiserId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.internal_static_de_cache_Advertiser_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.cache.DeliveryMessage.internal_static_de_cache_Advertiser_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.cache.DeliveryMessage.Advertiser.class, de.cache.DeliveryMessage.Advertiser.Builder.class);
    }

    public static com.google.protobuf.Parser<Advertiser> PARSER =
        new com.google.protobuf.AbstractParser<Advertiser>() {
      public Advertiser parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Advertiser(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Advertiser> getParserForType() {
      return PARSER;
    }

    public interface SspAdvertiserOrBuilder extends
        // @@protoc_insertion_point(interface_extends:de.cache.Advertiser.SspAdvertiser)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required int32 adNetworkId = 1;</code>
       *
       * <pre>
       *Exchange ID
       * </pre>
       */
      boolean hasAdNetworkId();
      /**
       * <code>required int32 adNetworkId = 1;</code>
       *
       * <pre>
       *Exchange ID
       * </pre>
       */
      int getAdNetworkId();

      /**
       * <code>optional string sspid = 2;</code>
       *
       * <pre>
       *SspAdvertiserId
       * </pre>
       */
      boolean hasSspid();
      /**
       * <code>optional string sspid = 2;</code>
       *
       * <pre>
       *SspAdvertiserId
       * </pre>
       */
      java.lang.String getSspid();
      /**
       * <code>optional string sspid = 2;</code>
       *
       * <pre>
       *SspAdvertiserId
       * </pre>
       */
      com.google.protobuf.ByteString
          getSspidBytes();
    }
    /**
     * Protobuf type {@code de.cache.Advertiser.SspAdvertiser}
     */
    public static final class SspAdvertiser extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:de.cache.Advertiser.SspAdvertiser)
        SspAdvertiserOrBuilder {
      // Use SspAdvertiser.newBuilder() to construct.
      private SspAdvertiser(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SspAdvertiser(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SspAdvertiser defaultInstance;
      public static SspAdvertiser getDefaultInstance() {
        return defaultInstance;
      }

      public SspAdvertiser getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SspAdvertiser(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                adNetworkId_ = input.readInt32();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                sspid_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Advertiser_SspAdvertiser_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Advertiser_SspAdvertiser_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.Advertiser.SspAdvertiser.class, de.cache.DeliveryMessage.Advertiser.SspAdvertiser.Builder.class);
      }

      public static com.google.protobuf.Parser<SspAdvertiser> PARSER =
          new com.google.protobuf.AbstractParser<SspAdvertiser>() {
        public SspAdvertiser parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SspAdvertiser(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SspAdvertiser> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ADNETWORKID_FIELD_NUMBER = 1;
      private int adNetworkId_;
      /**
       * <code>required int32 adNetworkId = 1;</code>
       *
       * <pre>
       *Exchange ID
       * </pre>
       */
      public boolean hasAdNetworkId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 adNetworkId = 1;</code>
       *
       * <pre>
       *Exchange ID
       * </pre>
       */
      public int getAdNetworkId() {
        return adNetworkId_;
      }

      public static final int SSPID_FIELD_NUMBER = 2;
      private java.lang.Object sspid_;
      /**
       * <code>optional string sspid = 2;</code>
       *
       * <pre>
       *SspAdvertiserId
       * </pre>
       */
      public boolean hasSspid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string sspid = 2;</code>
       *
       * <pre>
       *SspAdvertiserId
       * </pre>
       */
      public java.lang.String getSspid() {
        java.lang.Object ref = sspid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sspid_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string sspid = 2;</code>
       *
       * <pre>
       *SspAdvertiserId
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSspidBytes() {
        java.lang.Object ref = sspid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sspid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        adNetworkId_ = 0;
        sspid_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasAdNetworkId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, adNetworkId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getSspidBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, adNetworkId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getSspidBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static de.cache.DeliveryMessage.Advertiser.SspAdvertiser parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.cache.DeliveryMessage.Advertiser.SspAdvertiser parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Advertiser.SspAdvertiser parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.cache.DeliveryMessage.Advertiser.SspAdvertiser parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Advertiser.SspAdvertiser parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.cache.DeliveryMessage.Advertiser.SspAdvertiser parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Advertiser.SspAdvertiser parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static de.cache.DeliveryMessage.Advertiser.SspAdvertiser parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Advertiser.SspAdvertiser parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.cache.DeliveryMessage.Advertiser.SspAdvertiser parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(de.cache.DeliveryMessage.Advertiser.SspAdvertiser prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code de.cache.Advertiser.SspAdvertiser}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:de.cache.Advertiser.SspAdvertiser)
          de.cache.DeliveryMessage.Advertiser.SspAdvertiserOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Advertiser_SspAdvertiser_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Advertiser_SspAdvertiser_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  de.cache.DeliveryMessage.Advertiser.SspAdvertiser.class, de.cache.DeliveryMessage.Advertiser.SspAdvertiser.Builder.class);
        }

        // Construct using de.cache.DeliveryMessage.Advertiser.SspAdvertiser.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          adNetworkId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          sspid_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Advertiser_SspAdvertiser_descriptor;
        }

        public de.cache.DeliveryMessage.Advertiser.SspAdvertiser getDefaultInstanceForType() {
          return de.cache.DeliveryMessage.Advertiser.SspAdvertiser.getDefaultInstance();
        }

        public de.cache.DeliveryMessage.Advertiser.SspAdvertiser build() {
          de.cache.DeliveryMessage.Advertiser.SspAdvertiser result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public de.cache.DeliveryMessage.Advertiser.SspAdvertiser buildPartial() {
          de.cache.DeliveryMessage.Advertiser.SspAdvertiser result = new de.cache.DeliveryMessage.Advertiser.SspAdvertiser(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.adNetworkId_ = adNetworkId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.sspid_ = sspid_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof de.cache.DeliveryMessage.Advertiser.SspAdvertiser) {
            return mergeFrom((de.cache.DeliveryMessage.Advertiser.SspAdvertiser)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(de.cache.DeliveryMessage.Advertiser.SspAdvertiser other) {
          if (other == de.cache.DeliveryMessage.Advertiser.SspAdvertiser.getDefaultInstance()) return this;
          if (other.hasAdNetworkId()) {
            setAdNetworkId(other.getAdNetworkId());
          }
          if (other.hasSspid()) {
            bitField0_ |= 0x00000002;
            sspid_ = other.sspid_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasAdNetworkId()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          de.cache.DeliveryMessage.Advertiser.SspAdvertiser parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (de.cache.DeliveryMessage.Advertiser.SspAdvertiser) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int adNetworkId_ ;
        /**
         * <code>required int32 adNetworkId = 1;</code>
         *
         * <pre>
         *Exchange ID
         * </pre>
         */
        public boolean hasAdNetworkId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int32 adNetworkId = 1;</code>
         *
         * <pre>
         *Exchange ID
         * </pre>
         */
        public int getAdNetworkId() {
          return adNetworkId_;
        }
        /**
         * <code>required int32 adNetworkId = 1;</code>
         *
         * <pre>
         *Exchange ID
         * </pre>
         */
        public Builder setAdNetworkId(int value) {
          bitField0_ |= 0x00000001;
          adNetworkId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 adNetworkId = 1;</code>
         *
         * <pre>
         *Exchange ID
         * </pre>
         */
        public Builder clearAdNetworkId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          adNetworkId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object sspid_ = "";
        /**
         * <code>optional string sspid = 2;</code>
         *
         * <pre>
         *SspAdvertiserId
         * </pre>
         */
        public boolean hasSspid() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string sspid = 2;</code>
         *
         * <pre>
         *SspAdvertiserId
         * </pre>
         */
        public java.lang.String getSspid() {
          java.lang.Object ref = sspid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              sspid_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string sspid = 2;</code>
         *
         * <pre>
         *SspAdvertiserId
         * </pre>
         */
        public com.google.protobuf.ByteString
            getSspidBytes() {
          java.lang.Object ref = sspid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sspid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string sspid = 2;</code>
         *
         * <pre>
         *SspAdvertiserId
         * </pre>
         */
        public Builder setSspid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          sspid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string sspid = 2;</code>
         *
         * <pre>
         *SspAdvertiserId
         * </pre>
         */
        public Builder clearSspid() {
          bitField0_ = (bitField0_ & ~0x00000002);
          sspid_ = getDefaultInstance().getSspid();
          onChanged();
          return this;
        }
        /**
         * <code>optional string sspid = 2;</code>
         *
         * <pre>
         *SspAdvertiserId
         * </pre>
         */
        public Builder setSspidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          sspid_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:de.cache.Advertiser.SspAdvertiser)
      }

      static {
        defaultInstance = new SspAdvertiser(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:de.cache.Advertiser.SspAdvertiser)
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *广告主id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *广告主id
     * </pre>
     */
    public long getId() {
      return id_;
    }

    public static final int CMD_FIELD_NUMBER = 2;
    private de.cache.DeliveryMessage.Command cmd_;
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    public boolean hasCmd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    public de.cache.DeliveryMessage.Command getCmd() {
      return cmd_;
    }

    public static final int AGENCYID_FIELD_NUMBER = 3;
    private long agencyId_;
    /**
     * <code>optional int64 agencyId = 3;</code>
     *
     * <pre>
     *代理商id
     * </pre>
     */
    public boolean hasAgencyId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 agencyId = 3;</code>
     *
     * <pre>
     *代理商id
     * </pre>
     */
    public long getAgencyId() {
      return agencyId_;
    }

    public static final int STARTTIMESTAMP_FIELD_NUMBER = 4;
    private long startTimestamp_;
    /**
     * <code>optional int64 startTimestamp = 4;</code>
     *
     * <pre>
     *订单开始日期时间(unix timestamp)
     * </pre>
     */
    public boolean hasStartTimestamp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 startTimestamp = 4;</code>
     *
     * <pre>
     *订单开始日期时间(unix timestamp)
     * </pre>
     */
    public long getStartTimestamp() {
      return startTimestamp_;
    }

    public static final int ENDTIMESTAMP_FIELD_NUMBER = 5;
    private long endTimestamp_;
    /**
     * <code>optional int64 endTimestamp = 5;</code>
     *
     * <pre>
     *订单结束日期时间(unix timestamp)
     * </pre>
     */
    public boolean hasEndTimestamp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 endTimestamp = 5;</code>
     *
     * <pre>
     *订单结束日期时间(unix timestamp)
     * </pre>
     */
    public long getEndTimestamp() {
      return endTimestamp_;
    }

    public static final int METHOD_FIELD_NUMBER = 6;
    private de.cache.DeliveryMessage.DeliveryMethod method_;
    /**
     * <code>optional .de.cache.DeliveryMethod method = 6;</code>
     *
     * <pre>
     *Advertiser级别数量限制
     * </pre>
     */
    public boolean hasMethod() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .de.cache.DeliveryMethod method = 6;</code>
     *
     * <pre>
     *Advertiser级别数量限制
     * </pre>
     */
    public de.cache.DeliveryMessage.DeliveryMethod getMethod() {
      return method_;
    }
    /**
     * <code>optional .de.cache.DeliveryMethod method = 6;</code>
     *
     * <pre>
     *Advertiser级别数量限制
     * </pre>
     */
    public de.cache.DeliveryMessage.DeliveryMethodOrBuilder getMethodOrBuilder() {
      return method_;
    }

    public static final int SSPADVERTISERID_FIELD_NUMBER = 7;
    private java.util.List<de.cache.DeliveryMessage.Advertiser.SspAdvertiser> sspAdvertiserId_;
    /**
     * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
     *
     * <pre>
     *Exchange SspAdvertiser
     * </pre>
     */
    public java.util.List<de.cache.DeliveryMessage.Advertiser.SspAdvertiser> getSspAdvertiserIdList() {
      return sspAdvertiserId_;
    }
    /**
     * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
     *
     * <pre>
     *Exchange SspAdvertiser
     * </pre>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.Advertiser.SspAdvertiserOrBuilder> 
        getSspAdvertiserIdOrBuilderList() {
      return sspAdvertiserId_;
    }
    /**
     * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
     *
     * <pre>
     *Exchange SspAdvertiser
     * </pre>
     */
    public int getSspAdvertiserIdCount() {
      return sspAdvertiserId_.size();
    }
    /**
     * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
     *
     * <pre>
     *Exchange SspAdvertiser
     * </pre>
     */
    public de.cache.DeliveryMessage.Advertiser.SspAdvertiser getSspAdvertiserId(int index) {
      return sspAdvertiserId_.get(index);
    }
    /**
     * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
     *
     * <pre>
     *Exchange SspAdvertiser
     * </pre>
     */
    public de.cache.DeliveryMessage.Advertiser.SspAdvertiserOrBuilder getSspAdvertiserIdOrBuilder(
        int index) {
      return sspAdvertiserId_.get(index);
    }

    private void initFields() {
      id_ = 0L;
      cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      agencyId_ = 0L;
      startTimestamp_ = 0L;
      endTimestamp_ = 0L;
      method_ = de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance();
      sspAdvertiserId_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getSspAdvertiserIdCount(); i++) {
        if (!getSspAdvertiserId(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, agencyId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, startTimestamp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, endTimestamp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, method_);
      }
      for (int i = 0; i < sspAdvertiserId_.size(); i++) {
        output.writeMessage(7, sspAdvertiserId_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, agencyId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, startTimestamp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, endTimestamp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, method_);
      }
      for (int i = 0; i < sspAdvertiserId_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, sspAdvertiserId_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.cache.DeliveryMessage.Advertiser parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.Advertiser parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Advertiser parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.Advertiser parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Advertiser parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.Advertiser parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Advertiser parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.cache.DeliveryMessage.Advertiser parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Advertiser parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.Advertiser parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.cache.DeliveryMessage.Advertiser prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code de.cache.Advertiser}
     *
     * <pre>
     *广告主(原来的orderGroup)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:de.cache.Advertiser)
        de.cache.DeliveryMessage.AdvertiserOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Advertiser_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Advertiser_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.Advertiser.class, de.cache.DeliveryMessage.Advertiser.Builder.class);
      }

      // Construct using de.cache.DeliveryMessage.Advertiser.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMethodFieldBuilder();
          getSspAdvertiserIdFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        bitField0_ = (bitField0_ & ~0x00000002);
        agencyId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        startTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        endTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (methodBuilder_ == null) {
          method_ = de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance();
        } else {
          methodBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (sspAdvertiserIdBuilder_ == null) {
          sspAdvertiserId_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          sspAdvertiserIdBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Advertiser_descriptor;
      }

      public de.cache.DeliveryMessage.Advertiser getDefaultInstanceForType() {
        return de.cache.DeliveryMessage.Advertiser.getDefaultInstance();
      }

      public de.cache.DeliveryMessage.Advertiser build() {
        de.cache.DeliveryMessage.Advertiser result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.cache.DeliveryMessage.Advertiser buildPartial() {
        de.cache.DeliveryMessage.Advertiser result = new de.cache.DeliveryMessage.Advertiser(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cmd_ = cmd_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.agencyId_ = agencyId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.startTimestamp_ = startTimestamp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.endTimestamp_ = endTimestamp_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (methodBuilder_ == null) {
          result.method_ = method_;
        } else {
          result.method_ = methodBuilder_.build();
        }
        if (sspAdvertiserIdBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            sspAdvertiserId_ = java.util.Collections.unmodifiableList(sspAdvertiserId_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.sspAdvertiserId_ = sspAdvertiserId_;
        } else {
          result.sspAdvertiserId_ = sspAdvertiserIdBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.cache.DeliveryMessage.Advertiser) {
          return mergeFrom((de.cache.DeliveryMessage.Advertiser)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.cache.DeliveryMessage.Advertiser other) {
        if (other == de.cache.DeliveryMessage.Advertiser.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCmd()) {
          setCmd(other.getCmd());
        }
        if (other.hasAgencyId()) {
          setAgencyId(other.getAgencyId());
        }
        if (other.hasStartTimestamp()) {
          setStartTimestamp(other.getStartTimestamp());
        }
        if (other.hasEndTimestamp()) {
          setEndTimestamp(other.getEndTimestamp());
        }
        if (other.hasMethod()) {
          mergeMethod(other.getMethod());
        }
        if (sspAdvertiserIdBuilder_ == null) {
          if (!other.sspAdvertiserId_.isEmpty()) {
            if (sspAdvertiserId_.isEmpty()) {
              sspAdvertiserId_ = other.sspAdvertiserId_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureSspAdvertiserIdIsMutable();
              sspAdvertiserId_.addAll(other.sspAdvertiserId_);
            }
            onChanged();
          }
        } else {
          if (!other.sspAdvertiserId_.isEmpty()) {
            if (sspAdvertiserIdBuilder_.isEmpty()) {
              sspAdvertiserIdBuilder_.dispose();
              sspAdvertiserIdBuilder_ = null;
              sspAdvertiserId_ = other.sspAdvertiserId_;
              bitField0_ = (bitField0_ & ~0x00000040);
              sspAdvertiserIdBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSspAdvertiserIdFieldBuilder() : null;
            } else {
              sspAdvertiserIdBuilder_.addAllMessages(other.sspAdvertiserId_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getSspAdvertiserIdCount(); i++) {
          if (!getSspAdvertiserId(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.cache.DeliveryMessage.Advertiser parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.cache.DeliveryMessage.Advertiser) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *广告主id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *广告主id
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *广告主id
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *广告主id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.Command cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public boolean hasCmd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public de.cache.DeliveryMessage.Command getCmd() {
        return cmd_;
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public Builder setCmd(de.cache.DeliveryMessage.Command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        cmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public Builder clearCmd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        onChanged();
        return this;
      }

      private long agencyId_ ;
      /**
       * <code>optional int64 agencyId = 3;</code>
       *
       * <pre>
       *代理商id
       * </pre>
       */
      public boolean hasAgencyId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 agencyId = 3;</code>
       *
       * <pre>
       *代理商id
       * </pre>
       */
      public long getAgencyId() {
        return agencyId_;
      }
      /**
       * <code>optional int64 agencyId = 3;</code>
       *
       * <pre>
       *代理商id
       * </pre>
       */
      public Builder setAgencyId(long value) {
        bitField0_ |= 0x00000004;
        agencyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 agencyId = 3;</code>
       *
       * <pre>
       *代理商id
       * </pre>
       */
      public Builder clearAgencyId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        agencyId_ = 0L;
        onChanged();
        return this;
      }

      private long startTimestamp_ ;
      /**
       * <code>optional int64 startTimestamp = 4;</code>
       *
       * <pre>
       *订单开始日期时间(unix timestamp)
       * </pre>
       */
      public boolean hasStartTimestamp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 startTimestamp = 4;</code>
       *
       * <pre>
       *订单开始日期时间(unix timestamp)
       * </pre>
       */
      public long getStartTimestamp() {
        return startTimestamp_;
      }
      /**
       * <code>optional int64 startTimestamp = 4;</code>
       *
       * <pre>
       *订单开始日期时间(unix timestamp)
       * </pre>
       */
      public Builder setStartTimestamp(long value) {
        bitField0_ |= 0x00000008;
        startTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 startTimestamp = 4;</code>
       *
       * <pre>
       *订单开始日期时间(unix timestamp)
       * </pre>
       */
      public Builder clearStartTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        startTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private long endTimestamp_ ;
      /**
       * <code>optional int64 endTimestamp = 5;</code>
       *
       * <pre>
       *订单结束日期时间(unix timestamp)
       * </pre>
       */
      public boolean hasEndTimestamp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 endTimestamp = 5;</code>
       *
       * <pre>
       *订单结束日期时间(unix timestamp)
       * </pre>
       */
      public long getEndTimestamp() {
        return endTimestamp_;
      }
      /**
       * <code>optional int64 endTimestamp = 5;</code>
       *
       * <pre>
       *订单结束日期时间(unix timestamp)
       * </pre>
       */
      public Builder setEndTimestamp(long value) {
        bitField0_ |= 0x00000010;
        endTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 endTimestamp = 5;</code>
       *
       * <pre>
       *订单结束日期时间(unix timestamp)
       * </pre>
       */
      public Builder clearEndTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        endTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.DeliveryMethod method_ = de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.DeliveryMethod, de.cache.DeliveryMessage.DeliveryMethod.Builder, de.cache.DeliveryMessage.DeliveryMethodOrBuilder> methodBuilder_;
      /**
       * <code>optional .de.cache.DeliveryMethod method = 6;</code>
       *
       * <pre>
       *Advertiser级别数量限制
       * </pre>
       */
      public boolean hasMethod() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 6;</code>
       *
       * <pre>
       *Advertiser级别数量限制
       * </pre>
       */
      public de.cache.DeliveryMessage.DeliveryMethod getMethod() {
        if (methodBuilder_ == null) {
          return method_;
        } else {
          return methodBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 6;</code>
       *
       * <pre>
       *Advertiser级别数量限制
       * </pre>
       */
      public Builder setMethod(de.cache.DeliveryMessage.DeliveryMethod value) {
        if (methodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          method_ = value;
          onChanged();
        } else {
          methodBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 6;</code>
       *
       * <pre>
       *Advertiser级别数量限制
       * </pre>
       */
      public Builder setMethod(
          de.cache.DeliveryMessage.DeliveryMethod.Builder builderForValue) {
        if (methodBuilder_ == null) {
          method_ = builderForValue.build();
          onChanged();
        } else {
          methodBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 6;</code>
       *
       * <pre>
       *Advertiser级别数量限制
       * </pre>
       */
      public Builder mergeMethod(de.cache.DeliveryMessage.DeliveryMethod value) {
        if (methodBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              method_ != de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance()) {
            method_ =
              de.cache.DeliveryMessage.DeliveryMethod.newBuilder(method_).mergeFrom(value).buildPartial();
          } else {
            method_ = value;
          }
          onChanged();
        } else {
          methodBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 6;</code>
       *
       * <pre>
       *Advertiser级别数量限制
       * </pre>
       */
      public Builder clearMethod() {
        if (methodBuilder_ == null) {
          method_ = de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance();
          onChanged();
        } else {
          methodBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 6;</code>
       *
       * <pre>
       *Advertiser级别数量限制
       * </pre>
       */
      public de.cache.DeliveryMessage.DeliveryMethod.Builder getMethodBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getMethodFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 6;</code>
       *
       * <pre>
       *Advertiser级别数量限制
       * </pre>
       */
      public de.cache.DeliveryMessage.DeliveryMethodOrBuilder getMethodOrBuilder() {
        if (methodBuilder_ != null) {
          return methodBuilder_.getMessageOrBuilder();
        } else {
          return method_;
        }
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 6;</code>
       *
       * <pre>
       *Advertiser级别数量限制
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.DeliveryMethod, de.cache.DeliveryMessage.DeliveryMethod.Builder, de.cache.DeliveryMessage.DeliveryMethodOrBuilder> 
          getMethodFieldBuilder() {
        if (methodBuilder_ == null) {
          methodBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.cache.DeliveryMessage.DeliveryMethod, de.cache.DeliveryMessage.DeliveryMethod.Builder, de.cache.DeliveryMessage.DeliveryMethodOrBuilder>(
                  getMethod(),
                  getParentForChildren(),
                  isClean());
          method_ = null;
        }
        return methodBuilder_;
      }

      private java.util.List<de.cache.DeliveryMessage.Advertiser.SspAdvertiser> sspAdvertiserId_ =
        java.util.Collections.emptyList();
      private void ensureSspAdvertiserIdIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          sspAdvertiserId_ = new java.util.ArrayList<de.cache.DeliveryMessage.Advertiser.SspAdvertiser>(sspAdvertiserId_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.Advertiser.SspAdvertiser, de.cache.DeliveryMessage.Advertiser.SspAdvertiser.Builder, de.cache.DeliveryMessage.Advertiser.SspAdvertiserOrBuilder> sspAdvertiserIdBuilder_;

      /**
       * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
       *
       * <pre>
       *Exchange SspAdvertiser
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.Advertiser.SspAdvertiser> getSspAdvertiserIdList() {
        if (sspAdvertiserIdBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sspAdvertiserId_);
        } else {
          return sspAdvertiserIdBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
       *
       * <pre>
       *Exchange SspAdvertiser
       * </pre>
       */
      public int getSspAdvertiserIdCount() {
        if (sspAdvertiserIdBuilder_ == null) {
          return sspAdvertiserId_.size();
        } else {
          return sspAdvertiserIdBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
       *
       * <pre>
       *Exchange SspAdvertiser
       * </pre>
       */
      public de.cache.DeliveryMessage.Advertiser.SspAdvertiser getSspAdvertiserId(int index) {
        if (sspAdvertiserIdBuilder_ == null) {
          return sspAdvertiserId_.get(index);
        } else {
          return sspAdvertiserIdBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
       *
       * <pre>
       *Exchange SspAdvertiser
       * </pre>
       */
      public Builder setSspAdvertiserId(
          int index, de.cache.DeliveryMessage.Advertiser.SspAdvertiser value) {
        if (sspAdvertiserIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSspAdvertiserIdIsMutable();
          sspAdvertiserId_.set(index, value);
          onChanged();
        } else {
          sspAdvertiserIdBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
       *
       * <pre>
       *Exchange SspAdvertiser
       * </pre>
       */
      public Builder setSspAdvertiserId(
          int index, de.cache.DeliveryMessage.Advertiser.SspAdvertiser.Builder builderForValue) {
        if (sspAdvertiserIdBuilder_ == null) {
          ensureSspAdvertiserIdIsMutable();
          sspAdvertiserId_.set(index, builderForValue.build());
          onChanged();
        } else {
          sspAdvertiserIdBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
       *
       * <pre>
       *Exchange SspAdvertiser
       * </pre>
       */
      public Builder addSspAdvertiserId(de.cache.DeliveryMessage.Advertiser.SspAdvertiser value) {
        if (sspAdvertiserIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSspAdvertiserIdIsMutable();
          sspAdvertiserId_.add(value);
          onChanged();
        } else {
          sspAdvertiserIdBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
       *
       * <pre>
       *Exchange SspAdvertiser
       * </pre>
       */
      public Builder addSspAdvertiserId(
          int index, de.cache.DeliveryMessage.Advertiser.SspAdvertiser value) {
        if (sspAdvertiserIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSspAdvertiserIdIsMutable();
          sspAdvertiserId_.add(index, value);
          onChanged();
        } else {
          sspAdvertiserIdBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
       *
       * <pre>
       *Exchange SspAdvertiser
       * </pre>
       */
      public Builder addSspAdvertiserId(
          de.cache.DeliveryMessage.Advertiser.SspAdvertiser.Builder builderForValue) {
        if (sspAdvertiserIdBuilder_ == null) {
          ensureSspAdvertiserIdIsMutable();
          sspAdvertiserId_.add(builderForValue.build());
          onChanged();
        } else {
          sspAdvertiserIdBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
       *
       * <pre>
       *Exchange SspAdvertiser
       * </pre>
       */
      public Builder addSspAdvertiserId(
          int index, de.cache.DeliveryMessage.Advertiser.SspAdvertiser.Builder builderForValue) {
        if (sspAdvertiserIdBuilder_ == null) {
          ensureSspAdvertiserIdIsMutable();
          sspAdvertiserId_.add(index, builderForValue.build());
          onChanged();
        } else {
          sspAdvertiserIdBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
       *
       * <pre>
       *Exchange SspAdvertiser
       * </pre>
       */
      public Builder addAllSspAdvertiserId(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.Advertiser.SspAdvertiser> values) {
        if (sspAdvertiserIdBuilder_ == null) {
          ensureSspAdvertiserIdIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sspAdvertiserId_);
          onChanged();
        } else {
          sspAdvertiserIdBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
       *
       * <pre>
       *Exchange SspAdvertiser
       * </pre>
       */
      public Builder clearSspAdvertiserId() {
        if (sspAdvertiserIdBuilder_ == null) {
          sspAdvertiserId_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          sspAdvertiserIdBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
       *
       * <pre>
       *Exchange SspAdvertiser
       * </pre>
       */
      public Builder removeSspAdvertiserId(int index) {
        if (sspAdvertiserIdBuilder_ == null) {
          ensureSspAdvertiserIdIsMutable();
          sspAdvertiserId_.remove(index);
          onChanged();
        } else {
          sspAdvertiserIdBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
       *
       * <pre>
       *Exchange SspAdvertiser
       * </pre>
       */
      public de.cache.DeliveryMessage.Advertiser.SspAdvertiser.Builder getSspAdvertiserIdBuilder(
          int index) {
        return getSspAdvertiserIdFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
       *
       * <pre>
       *Exchange SspAdvertiser
       * </pre>
       */
      public de.cache.DeliveryMessage.Advertiser.SspAdvertiserOrBuilder getSspAdvertiserIdOrBuilder(
          int index) {
        if (sspAdvertiserIdBuilder_ == null) {
          return sspAdvertiserId_.get(index);  } else {
          return sspAdvertiserIdBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
       *
       * <pre>
       *Exchange SspAdvertiser
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.Advertiser.SspAdvertiserOrBuilder> 
           getSspAdvertiserIdOrBuilderList() {
        if (sspAdvertiserIdBuilder_ != null) {
          return sspAdvertiserIdBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sspAdvertiserId_);
        }
      }
      /**
       * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
       *
       * <pre>
       *Exchange SspAdvertiser
       * </pre>
       */
      public de.cache.DeliveryMessage.Advertiser.SspAdvertiser.Builder addSspAdvertiserIdBuilder() {
        return getSspAdvertiserIdFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.Advertiser.SspAdvertiser.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
       *
       * <pre>
       *Exchange SspAdvertiser
       * </pre>
       */
      public de.cache.DeliveryMessage.Advertiser.SspAdvertiser.Builder addSspAdvertiserIdBuilder(
          int index) {
        return getSspAdvertiserIdFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.Advertiser.SspAdvertiser.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.Advertiser.SspAdvertiser sspAdvertiserId = 7;</code>
       *
       * <pre>
       *Exchange SspAdvertiser
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.Advertiser.SspAdvertiser.Builder> 
           getSspAdvertiserIdBuilderList() {
        return getSspAdvertiserIdFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.Advertiser.SspAdvertiser, de.cache.DeliveryMessage.Advertiser.SspAdvertiser.Builder, de.cache.DeliveryMessage.Advertiser.SspAdvertiserOrBuilder> 
          getSspAdvertiserIdFieldBuilder() {
        if (sspAdvertiserIdBuilder_ == null) {
          sspAdvertiserIdBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.Advertiser.SspAdvertiser, de.cache.DeliveryMessage.Advertiser.SspAdvertiser.Builder, de.cache.DeliveryMessage.Advertiser.SspAdvertiserOrBuilder>(
                  sspAdvertiserId_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          sspAdvertiserId_ = null;
        }
        return sspAdvertiserIdBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:de.cache.Advertiser)
    }

    static {
      defaultInstance = new Advertiser(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:de.cache.Advertiser)
  }

  public interface FrequencyCtrlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.cache.FrequencyCtrl)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .de.cache.GlobalSwitch isWholeDuration = 1;</code>
     *
     * <pre>
     *该级别频率定向的全程定向标示，1为全局，0表示循环
     * </pre>
     */
    boolean hasIsWholeDuration();
    /**
     * <code>optional .de.cache.GlobalSwitch isWholeDuration = 1;</code>
     *
     * <pre>
     *该级别频率定向的全程定向标示，1为全局，0表示循环
     * </pre>
     */
    de.cache.DeliveryMessage.GlobalSwitch getIsWholeDuration();

    /**
     * <code>optional int32 validHour = 2;</code>
     *
     * <pre>
     *该级别频率定向的循环时间，如定向5小时内播放10次，则此处值为5，
     *如果定向为全局定向，即不考虑循环时间，忽略validHour的取值
     * </pre>
     */
    boolean hasValidHour();
    /**
     * <code>optional int32 validHour = 2;</code>
     *
     * <pre>
     *该级别频率定向的循环时间，如定向5小时内播放10次，则此处值为5，
     *如果定向为全局定向，即不考虑循环时间，忽略validHour的取值
     * </pre>
     */
    int getValidHour();

    /**
     * <code>optional int32 frequency = 3;</code>
     *
     * <pre>
     *该级别频次定向中单次循环内的控制次数
     * </pre>
     */
    boolean hasFrequency();
    /**
     * <code>optional int32 frequency = 3;</code>
     *
     * <pre>
     *该级别频次定向中单次循环内的控制次数
     * </pre>
     */
    int getFrequency();

    /**
     * <code>optional int32 intervalSec = 4;</code>
     *
     * <pre>
     *该级别频率定向的投放间隔，单位为秒
     * </pre>
     */
    boolean hasIntervalSec();
    /**
     * <code>optional int32 intervalSec = 4;</code>
     *
     * <pre>
     *该级别频率定向的投放间隔，单位为秒
     * </pre>
     */
    int getIntervalSec();
  }
  /**
   * Protobuf type {@code de.cache.FrequencyCtrl}
   *
   * <pre>
   *频次定向
   * </pre>
   */
  public static final class FrequencyCtrl extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:de.cache.FrequencyCtrl)
      FrequencyCtrlOrBuilder {
    // Use FrequencyCtrl.newBuilder() to construct.
    private FrequencyCtrl(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FrequencyCtrl(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FrequencyCtrl defaultInstance;
    public static FrequencyCtrl getDefaultInstance() {
      return defaultInstance;
    }

    public FrequencyCtrl getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FrequencyCtrl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.GlobalSwitch value = de.cache.DeliveryMessage.GlobalSwitch.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                isWholeDuration_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              validHour_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              frequency_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              intervalSec_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.internal_static_de_cache_FrequencyCtrl_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.cache.DeliveryMessage.internal_static_de_cache_FrequencyCtrl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.cache.DeliveryMessage.FrequencyCtrl.class, de.cache.DeliveryMessage.FrequencyCtrl.Builder.class);
    }

    public static com.google.protobuf.Parser<FrequencyCtrl> PARSER =
        new com.google.protobuf.AbstractParser<FrequencyCtrl>() {
      public FrequencyCtrl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FrequencyCtrl(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FrequencyCtrl> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ISWHOLEDURATION_FIELD_NUMBER = 1;
    private de.cache.DeliveryMessage.GlobalSwitch isWholeDuration_;
    /**
     * <code>optional .de.cache.GlobalSwitch isWholeDuration = 1;</code>
     *
     * <pre>
     *该级别频率定向的全程定向标示，1为全局，0表示循环
     * </pre>
     */
    public boolean hasIsWholeDuration() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .de.cache.GlobalSwitch isWholeDuration = 1;</code>
     *
     * <pre>
     *该级别频率定向的全程定向标示，1为全局，0表示循环
     * </pre>
     */
    public de.cache.DeliveryMessage.GlobalSwitch getIsWholeDuration() {
      return isWholeDuration_;
    }

    public static final int VALIDHOUR_FIELD_NUMBER = 2;
    private int validHour_;
    /**
     * <code>optional int32 validHour = 2;</code>
     *
     * <pre>
     *该级别频率定向的循环时间，如定向5小时内播放10次，则此处值为5，
     *如果定向为全局定向，即不考虑循环时间，忽略validHour的取值
     * </pre>
     */
    public boolean hasValidHour() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 validHour = 2;</code>
     *
     * <pre>
     *该级别频率定向的循环时间，如定向5小时内播放10次，则此处值为5，
     *如果定向为全局定向，即不考虑循环时间，忽略validHour的取值
     * </pre>
     */
    public int getValidHour() {
      return validHour_;
    }

    public static final int FREQUENCY_FIELD_NUMBER = 3;
    private int frequency_;
    /**
     * <code>optional int32 frequency = 3;</code>
     *
     * <pre>
     *该级别频次定向中单次循环内的控制次数
     * </pre>
     */
    public boolean hasFrequency() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 frequency = 3;</code>
     *
     * <pre>
     *该级别频次定向中单次循环内的控制次数
     * </pre>
     */
    public int getFrequency() {
      return frequency_;
    }

    public static final int INTERVALSEC_FIELD_NUMBER = 4;
    private int intervalSec_;
    /**
     * <code>optional int32 intervalSec = 4;</code>
     *
     * <pre>
     *该级别频率定向的投放间隔，单位为秒
     * </pre>
     */
    public boolean hasIntervalSec() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 intervalSec = 4;</code>
     *
     * <pre>
     *该级别频率定向的投放间隔，单位为秒
     * </pre>
     */
    public int getIntervalSec() {
      return intervalSec_;
    }

    private void initFields() {
      isWholeDuration_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
      validHour_ = 0;
      frequency_ = 0;
      intervalSec_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, isWholeDuration_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, validHour_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, frequency_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, intervalSec_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, isWholeDuration_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, validHour_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, frequency_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, intervalSec_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.cache.DeliveryMessage.FrequencyCtrl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.FrequencyCtrl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.FrequencyCtrl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.FrequencyCtrl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.FrequencyCtrl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.FrequencyCtrl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.FrequencyCtrl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.cache.DeliveryMessage.FrequencyCtrl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.FrequencyCtrl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.FrequencyCtrl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.cache.DeliveryMessage.FrequencyCtrl prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code de.cache.FrequencyCtrl}
     *
     * <pre>
     *频次定向
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:de.cache.FrequencyCtrl)
        de.cache.DeliveryMessage.FrequencyCtrlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_FrequencyCtrl_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_FrequencyCtrl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.FrequencyCtrl.class, de.cache.DeliveryMessage.FrequencyCtrl.Builder.class);
      }

      // Construct using de.cache.DeliveryMessage.FrequencyCtrl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        isWholeDuration_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        bitField0_ = (bitField0_ & ~0x00000001);
        validHour_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        frequency_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        intervalSec_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.cache.DeliveryMessage.internal_static_de_cache_FrequencyCtrl_descriptor;
      }

      public de.cache.DeliveryMessage.FrequencyCtrl getDefaultInstanceForType() {
        return de.cache.DeliveryMessage.FrequencyCtrl.getDefaultInstance();
      }

      public de.cache.DeliveryMessage.FrequencyCtrl build() {
        de.cache.DeliveryMessage.FrequencyCtrl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.cache.DeliveryMessage.FrequencyCtrl buildPartial() {
        de.cache.DeliveryMessage.FrequencyCtrl result = new de.cache.DeliveryMessage.FrequencyCtrl(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isWholeDuration_ = isWholeDuration_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.validHour_ = validHour_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.frequency_ = frequency_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.intervalSec_ = intervalSec_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.cache.DeliveryMessage.FrequencyCtrl) {
          return mergeFrom((de.cache.DeliveryMessage.FrequencyCtrl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.cache.DeliveryMessage.FrequencyCtrl other) {
        if (other == de.cache.DeliveryMessage.FrequencyCtrl.getDefaultInstance()) return this;
        if (other.hasIsWholeDuration()) {
          setIsWholeDuration(other.getIsWholeDuration());
        }
        if (other.hasValidHour()) {
          setValidHour(other.getValidHour());
        }
        if (other.hasFrequency()) {
          setFrequency(other.getFrequency());
        }
        if (other.hasIntervalSec()) {
          setIntervalSec(other.getIntervalSec());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.cache.DeliveryMessage.FrequencyCtrl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.cache.DeliveryMessage.FrequencyCtrl) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private de.cache.DeliveryMessage.GlobalSwitch isWholeDuration_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
      /**
       * <code>optional .de.cache.GlobalSwitch isWholeDuration = 1;</code>
       *
       * <pre>
       *该级别频率定向的全程定向标示，1为全局，0表示循环
       * </pre>
       */
      public boolean hasIsWholeDuration() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .de.cache.GlobalSwitch isWholeDuration = 1;</code>
       *
       * <pre>
       *该级别频率定向的全程定向标示，1为全局，0表示循环
       * </pre>
       */
      public de.cache.DeliveryMessage.GlobalSwitch getIsWholeDuration() {
        return isWholeDuration_;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch isWholeDuration = 1;</code>
       *
       * <pre>
       *该级别频率定向的全程定向标示，1为全局，0表示循环
       * </pre>
       */
      public Builder setIsWholeDuration(de.cache.DeliveryMessage.GlobalSwitch value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        isWholeDuration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch isWholeDuration = 1;</code>
       *
       * <pre>
       *该级别频率定向的全程定向标示，1为全局，0表示循环
       * </pre>
       */
      public Builder clearIsWholeDuration() {
        bitField0_ = (bitField0_ & ~0x00000001);
        isWholeDuration_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        onChanged();
        return this;
      }

      private int validHour_ ;
      /**
       * <code>optional int32 validHour = 2;</code>
       *
       * <pre>
       *该级别频率定向的循环时间，如定向5小时内播放10次，则此处值为5，
       *如果定向为全局定向，即不考虑循环时间，忽略validHour的取值
       * </pre>
       */
      public boolean hasValidHour() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 validHour = 2;</code>
       *
       * <pre>
       *该级别频率定向的循环时间，如定向5小时内播放10次，则此处值为5，
       *如果定向为全局定向，即不考虑循环时间，忽略validHour的取值
       * </pre>
       */
      public int getValidHour() {
        return validHour_;
      }
      /**
       * <code>optional int32 validHour = 2;</code>
       *
       * <pre>
       *该级别频率定向的循环时间，如定向5小时内播放10次，则此处值为5，
       *如果定向为全局定向，即不考虑循环时间，忽略validHour的取值
       * </pre>
       */
      public Builder setValidHour(int value) {
        bitField0_ |= 0x00000002;
        validHour_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 validHour = 2;</code>
       *
       * <pre>
       *该级别频率定向的循环时间，如定向5小时内播放10次，则此处值为5，
       *如果定向为全局定向，即不考虑循环时间，忽略validHour的取值
       * </pre>
       */
      public Builder clearValidHour() {
        bitField0_ = (bitField0_ & ~0x00000002);
        validHour_ = 0;
        onChanged();
        return this;
      }

      private int frequency_ ;
      /**
       * <code>optional int32 frequency = 3;</code>
       *
       * <pre>
       *该级别频次定向中单次循环内的控制次数
       * </pre>
       */
      public boolean hasFrequency() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 frequency = 3;</code>
       *
       * <pre>
       *该级别频次定向中单次循环内的控制次数
       * </pre>
       */
      public int getFrequency() {
        return frequency_;
      }
      /**
       * <code>optional int32 frequency = 3;</code>
       *
       * <pre>
       *该级别频次定向中单次循环内的控制次数
       * </pre>
       */
      public Builder setFrequency(int value) {
        bitField0_ |= 0x00000004;
        frequency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 frequency = 3;</code>
       *
       * <pre>
       *该级别频次定向中单次循环内的控制次数
       * </pre>
       */
      public Builder clearFrequency() {
        bitField0_ = (bitField0_ & ~0x00000004);
        frequency_ = 0;
        onChanged();
        return this;
      }

      private int intervalSec_ ;
      /**
       * <code>optional int32 intervalSec = 4;</code>
       *
       * <pre>
       *该级别频率定向的投放间隔，单位为秒
       * </pre>
       */
      public boolean hasIntervalSec() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 intervalSec = 4;</code>
       *
       * <pre>
       *该级别频率定向的投放间隔，单位为秒
       * </pre>
       */
      public int getIntervalSec() {
        return intervalSec_;
      }
      /**
       * <code>optional int32 intervalSec = 4;</code>
       *
       * <pre>
       *该级别频率定向的投放间隔，单位为秒
       * </pre>
       */
      public Builder setIntervalSec(int value) {
        bitField0_ |= 0x00000008;
        intervalSec_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 intervalSec = 4;</code>
       *
       * <pre>
       *该级别频率定向的投放间隔，单位为秒
       * </pre>
       */
      public Builder clearIntervalSec() {
        bitField0_ = (bitField0_ & ~0x00000008);
        intervalSec_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:de.cache.FrequencyCtrl)
    }

    static {
      defaultInstance = new FrequencyCtrl(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:de.cache.FrequencyCtrl)
  }

  public interface OrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.cache.Order)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *订单id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *订单id
     * </pre>
     */
    long getId();

    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    boolean hasCmd();
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    de.cache.DeliveryMessage.Command getCmd();

    /**
     * <code>optional int64 advertiserId = 3;</code>
     *
     * <pre>
     *广告主id
     * </pre>
     */
    boolean hasAdvertiserId();
    /**
     * <code>optional int64 advertiserId = 3;</code>
     *
     * <pre>
     *广告主id
     * </pre>
     */
    long getAdvertiserId();

    /**
     * <code>optional int64 startTimestamp = 4;</code>
     *
     * <pre>
     *订单开始日期(unix timestamp)
     * </pre>
     */
    boolean hasStartTimestamp();
    /**
     * <code>optional int64 startTimestamp = 4;</code>
     *
     * <pre>
     *订单开始日期(unix timestamp)
     * </pre>
     */
    long getStartTimestamp();

    /**
     * <code>optional int64 endTimestamp = 5;</code>
     *
     * <pre>
     *订单结束日期(unix timestamp)
     * </pre>
     */
    boolean hasEndTimestamp();
    /**
     * <code>optional int64 endTimestamp = 5;</code>
     *
     * <pre>
     *订单结束日期(unix timestamp)
     * </pre>
     */
    long getEndTimestamp();

    /**
     * <code>optional .de.cache.FrequencyCtrl frequencyTargeting = 6;</code>
     *
     * <pre>
     *订单级频率定向,unassigned 关闭该定向功能
     * </pre>
     */
    boolean hasFrequencyTargeting();
    /**
     * <code>optional .de.cache.FrequencyCtrl frequencyTargeting = 6;</code>
     *
     * <pre>
     *订单级频率定向,unassigned 关闭该定向功能
     * </pre>
     */
    de.cache.DeliveryMessage.FrequencyCtrl getFrequencyTargeting();
    /**
     * <code>optional .de.cache.FrequencyCtrl frequencyTargeting = 6;</code>
     *
     * <pre>
     *订单级频率定向,unassigned 关闭该定向功能
     * </pre>
     */
    de.cache.DeliveryMessage.FrequencyCtrlOrBuilder getFrequencyTargetingOrBuilder();

    /**
     * <code>optional .de.cache.ControlledMask advertiserMask = 7;</code>
     *
     * <pre>
     *受控于Advertiser级show/click/percent/budget数量控制标示(1.点击上限受控 2.显示上限受控 4.CPD百分比受控 8.预算价格受控) (取值范围0-15)
     * </pre>
     */
    boolean hasAdvertiserMask();
    /**
     * <code>optional .de.cache.ControlledMask advertiserMask = 7;</code>
     *
     * <pre>
     *受控于Advertiser级show/click/percent/budget数量控制标示(1.点击上限受控 2.显示上限受控 4.CPD百分比受控 8.预算价格受控) (取值范围0-15)
     * </pre>
     */
    de.cache.DeliveryMessage.ControlledMask getAdvertiserMask();

    /**
     * <code>optional .de.cache.DeliveryMethod method = 8;</code>
     *
     * <pre>
     *-----
     *count.impression, 整个订单的总显示数量上限
     * 该订单下接受订单级显示上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告显示总量上限
     * =0时,该订单下所有接受订单级别显示上限的投放将关闭不再投放
     *count.percentage, 订单级别的百分比控制(与投放级别以及订单级别的百分比是乘法关系)
     *  受控投放的真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
     *  =100,不做该级别的百分比控制
     *  =0,该订单下所有接受订单级别百分比控制的投放将关闭不再投放
     *count.click, 订单级别的点击上限控制
     *  该订单下接受订单级点击上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告点击总量上限，由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
     *  =0,该订单组下所有接受订单组级别点击上限的投放将关闭不再投放
     *count.budget, 订单级别的预算金额总上限(单位:百万分之一元)
     *  该订单下接受订单级预算上限控制的所有投放(包括CPM/CPD/CPC形式的金额预算投放,包括竞价和刊例价)金额预算总量上限
     *  =0,该订单组下所有接受订单组级别预算限制的投放将关闭不再投放
     * </pre>
     */
    boolean hasMethod();
    /**
     * <code>optional .de.cache.DeliveryMethod method = 8;</code>
     *
     * <pre>
     *-----
     *count.impression, 整个订单的总显示数量上限
     * 该订单下接受订单级显示上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告显示总量上限
     * =0时,该订单下所有接受订单级别显示上限的投放将关闭不再投放
     *count.percentage, 订单级别的百分比控制(与投放级别以及订单级别的百分比是乘法关系)
     *  受控投放的真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
     *  =100,不做该级别的百分比控制
     *  =0,该订单下所有接受订单级别百分比控制的投放将关闭不再投放
     *count.click, 订单级别的点击上限控制
     *  该订单下接受订单级点击上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告点击总量上限，由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
     *  =0,该订单组下所有接受订单组级别点击上限的投放将关闭不再投放
     *count.budget, 订单级别的预算金额总上限(单位:百万分之一元)
     *  该订单下接受订单级预算上限控制的所有投放(包括CPM/CPD/CPC形式的金额预算投放,包括竞价和刊例价)金额预算总量上限
     *  =0,该订单组下所有接受订单组级别预算限制的投放将关闭不再投放
     * </pre>
     */
    de.cache.DeliveryMessage.DeliveryMethod getMethod();
    /**
     * <code>optional .de.cache.DeliveryMethod method = 8;</code>
     *
     * <pre>
     *-----
     *count.impression, 整个订单的总显示数量上限
     * 该订单下接受订单级显示上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告显示总量上限
     * =0时,该订单下所有接受订单级别显示上限的投放将关闭不再投放
     *count.percentage, 订单级别的百分比控制(与投放级别以及订单级别的百分比是乘法关系)
     *  受控投放的真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
     *  =100,不做该级别的百分比控制
     *  =0,该订单下所有接受订单级别百分比控制的投放将关闭不再投放
     *count.click, 订单级别的点击上限控制
     *  该订单下接受订单级点击上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告点击总量上限，由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
     *  =0,该订单组下所有接受订单组级别点击上限的投放将关闭不再投放
     *count.budget, 订单级别的预算金额总上限(单位:百万分之一元)
     *  该订单下接受订单级预算上限控制的所有投放(包括CPM/CPD/CPC形式的金额预算投放,包括竞价和刊例价)金额预算总量上限
     *  =0,该订单组下所有接受订单组级别预算限制的投放将关闭不再投放
     * </pre>
     */
    de.cache.DeliveryMessage.DeliveryMethodOrBuilder getMethodOrBuilder();

    /**
     * <code>optional .de.cache.GlobalSwitch status = 9 [default = ON];</code>
     *
     * <pre>
     *数据状态（1=有效、0=无效）
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional .de.cache.GlobalSwitch status = 9 [default = ON];</code>
     *
     * <pre>
     *数据状态（1=有效、0=无效）
     * </pre>
     */
    de.cache.DeliveryMessage.GlobalSwitch getStatus();
  }
  /**
   * Protobuf type {@code de.cache.Order}
   *
   * <pre>
   *订单数据
   * </pre>
   */
  public static final class Order extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:de.cache.Order)
      OrderOrBuilder {
    // Use Order.newBuilder() to construct.
    private Order(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Order(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Order defaultInstance;
    public static Order getDefaultInstance() {
      return defaultInstance;
    }

    public Order getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Order(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.Command value = de.cache.DeliveryMessage.Command.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                cmd_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              advertiserId_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              startTimestamp_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              endTimestamp_ = input.readInt64();
              break;
            }
            case 50: {
              de.cache.DeliveryMessage.FrequencyCtrl.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = frequencyTargeting_.toBuilder();
              }
              frequencyTargeting_ = input.readMessage(de.cache.DeliveryMessage.FrequencyCtrl.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(frequencyTargeting_);
                frequencyTargeting_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.ControlledMask value = de.cache.DeliveryMessage.ControlledMask.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                advertiserMask_ = value;
              }
              break;
            }
            case 66: {
              de.cache.DeliveryMessage.DeliveryMethod.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = method_.toBuilder();
              }
              method_ = input.readMessage(de.cache.DeliveryMessage.DeliveryMethod.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(method_);
                method_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 72: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.GlobalSwitch value = de.cache.DeliveryMessage.GlobalSwitch.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(9, rawValue);
              } else {
                bitField0_ |= 0x00000100;
                status_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.internal_static_de_cache_Order_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.cache.DeliveryMessage.internal_static_de_cache_Order_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.cache.DeliveryMessage.Order.class, de.cache.DeliveryMessage.Order.Builder.class);
    }

    public static com.google.protobuf.Parser<Order> PARSER =
        new com.google.protobuf.AbstractParser<Order>() {
      public Order parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Order(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Order> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *订单id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *订单id
     * </pre>
     */
    public long getId() {
      return id_;
    }

    public static final int CMD_FIELD_NUMBER = 2;
    private de.cache.DeliveryMessage.Command cmd_;
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    public boolean hasCmd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    public de.cache.DeliveryMessage.Command getCmd() {
      return cmd_;
    }

    public static final int ADVERTISERID_FIELD_NUMBER = 3;
    private long advertiserId_;
    /**
     * <code>optional int64 advertiserId = 3;</code>
     *
     * <pre>
     *广告主id
     * </pre>
     */
    public boolean hasAdvertiserId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 advertiserId = 3;</code>
     *
     * <pre>
     *广告主id
     * </pre>
     */
    public long getAdvertiserId() {
      return advertiserId_;
    }

    public static final int STARTTIMESTAMP_FIELD_NUMBER = 4;
    private long startTimestamp_;
    /**
     * <code>optional int64 startTimestamp = 4;</code>
     *
     * <pre>
     *订单开始日期(unix timestamp)
     * </pre>
     */
    public boolean hasStartTimestamp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 startTimestamp = 4;</code>
     *
     * <pre>
     *订单开始日期(unix timestamp)
     * </pre>
     */
    public long getStartTimestamp() {
      return startTimestamp_;
    }

    public static final int ENDTIMESTAMP_FIELD_NUMBER = 5;
    private long endTimestamp_;
    /**
     * <code>optional int64 endTimestamp = 5;</code>
     *
     * <pre>
     *订单结束日期(unix timestamp)
     * </pre>
     */
    public boolean hasEndTimestamp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 endTimestamp = 5;</code>
     *
     * <pre>
     *订单结束日期(unix timestamp)
     * </pre>
     */
    public long getEndTimestamp() {
      return endTimestamp_;
    }

    public static final int FREQUENCYTARGETING_FIELD_NUMBER = 6;
    private de.cache.DeliveryMessage.FrequencyCtrl frequencyTargeting_;
    /**
     * <code>optional .de.cache.FrequencyCtrl frequencyTargeting = 6;</code>
     *
     * <pre>
     *订单级频率定向,unassigned 关闭该定向功能
     * </pre>
     */
    public boolean hasFrequencyTargeting() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .de.cache.FrequencyCtrl frequencyTargeting = 6;</code>
     *
     * <pre>
     *订单级频率定向,unassigned 关闭该定向功能
     * </pre>
     */
    public de.cache.DeliveryMessage.FrequencyCtrl getFrequencyTargeting() {
      return frequencyTargeting_;
    }
    /**
     * <code>optional .de.cache.FrequencyCtrl frequencyTargeting = 6;</code>
     *
     * <pre>
     *订单级频率定向,unassigned 关闭该定向功能
     * </pre>
     */
    public de.cache.DeliveryMessage.FrequencyCtrlOrBuilder getFrequencyTargetingOrBuilder() {
      return frequencyTargeting_;
    }

    public static final int ADVERTISERMASK_FIELD_NUMBER = 7;
    private de.cache.DeliveryMessage.ControlledMask advertiserMask_;
    /**
     * <code>optional .de.cache.ControlledMask advertiserMask = 7;</code>
     *
     * <pre>
     *受控于Advertiser级show/click/percent/budget数量控制标示(1.点击上限受控 2.显示上限受控 4.CPD百分比受控 8.预算价格受控) (取值范围0-15)
     * </pre>
     */
    public boolean hasAdvertiserMask() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .de.cache.ControlledMask advertiserMask = 7;</code>
     *
     * <pre>
     *受控于Advertiser级show/click/percent/budget数量控制标示(1.点击上限受控 2.显示上限受控 4.CPD百分比受控 8.预算价格受控) (取值范围0-15)
     * </pre>
     */
    public de.cache.DeliveryMessage.ControlledMask getAdvertiserMask() {
      return advertiserMask_;
    }

    public static final int METHOD_FIELD_NUMBER = 8;
    private de.cache.DeliveryMessage.DeliveryMethod method_;
    /**
     * <code>optional .de.cache.DeliveryMethod method = 8;</code>
     *
     * <pre>
     *-----
     *count.impression, 整个订单的总显示数量上限
     * 该订单下接受订单级显示上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告显示总量上限
     * =0时,该订单下所有接受订单级别显示上限的投放将关闭不再投放
     *count.percentage, 订单级别的百分比控制(与投放级别以及订单级别的百分比是乘法关系)
     *  受控投放的真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
     *  =100,不做该级别的百分比控制
     *  =0,该订单下所有接受订单级别百分比控制的投放将关闭不再投放
     *count.click, 订单级别的点击上限控制
     *  该订单下接受订单级点击上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告点击总量上限，由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
     *  =0,该订单组下所有接受订单组级别点击上限的投放将关闭不再投放
     *count.budget, 订单级别的预算金额总上限(单位:百万分之一元)
     *  该订单下接受订单级预算上限控制的所有投放(包括CPM/CPD/CPC形式的金额预算投放,包括竞价和刊例价)金额预算总量上限
     *  =0,该订单组下所有接受订单组级别预算限制的投放将关闭不再投放
     * </pre>
     */
    public boolean hasMethod() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .de.cache.DeliveryMethod method = 8;</code>
     *
     * <pre>
     *-----
     *count.impression, 整个订单的总显示数量上限
     * 该订单下接受订单级显示上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告显示总量上限
     * =0时,该订单下所有接受订单级别显示上限的投放将关闭不再投放
     *count.percentage, 订单级别的百分比控制(与投放级别以及订单级别的百分比是乘法关系)
     *  受控投放的真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
     *  =100,不做该级别的百分比控制
     *  =0,该订单下所有接受订单级别百分比控制的投放将关闭不再投放
     *count.click, 订单级别的点击上限控制
     *  该订单下接受订单级点击上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告点击总量上限，由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
     *  =0,该订单组下所有接受订单组级别点击上限的投放将关闭不再投放
     *count.budget, 订单级别的预算金额总上限(单位:百万分之一元)
     *  该订单下接受订单级预算上限控制的所有投放(包括CPM/CPD/CPC形式的金额预算投放,包括竞价和刊例价)金额预算总量上限
     *  =0,该订单组下所有接受订单组级别预算限制的投放将关闭不再投放
     * </pre>
     */
    public de.cache.DeliveryMessage.DeliveryMethod getMethod() {
      return method_;
    }
    /**
     * <code>optional .de.cache.DeliveryMethod method = 8;</code>
     *
     * <pre>
     *-----
     *count.impression, 整个订单的总显示数量上限
     * 该订单下接受订单级显示上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告显示总量上限
     * =0时,该订单下所有接受订单级别显示上限的投放将关闭不再投放
     *count.percentage, 订单级别的百分比控制(与投放级别以及订单级别的百分比是乘法关系)
     *  受控投放的真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
     *  =100,不做该级别的百分比控制
     *  =0,该订单下所有接受订单级别百分比控制的投放将关闭不再投放
     *count.click, 订单级别的点击上限控制
     *  该订单下接受订单级点击上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告点击总量上限，由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
     *  =0,该订单组下所有接受订单组级别点击上限的投放将关闭不再投放
     *count.budget, 订单级别的预算金额总上限(单位:百万分之一元)
     *  该订单下接受订单级预算上限控制的所有投放(包括CPM/CPD/CPC形式的金额预算投放,包括竞价和刊例价)金额预算总量上限
     *  =0,该订单组下所有接受订单组级别预算限制的投放将关闭不再投放
     * </pre>
     */
    public de.cache.DeliveryMessage.DeliveryMethodOrBuilder getMethodOrBuilder() {
      return method_;
    }

    public static final int STATUS_FIELD_NUMBER = 9;
    private de.cache.DeliveryMessage.GlobalSwitch status_;
    /**
     * <code>optional .de.cache.GlobalSwitch status = 9 [default = ON];</code>
     *
     * <pre>
     *数据状态（1=有效、0=无效）
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .de.cache.GlobalSwitch status = 9 [default = ON];</code>
     *
     * <pre>
     *数据状态（1=有效、0=无效）
     * </pre>
     */
    public de.cache.DeliveryMessage.GlobalSwitch getStatus() {
      return status_;
    }

    private void initFields() {
      id_ = 0L;
      cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      advertiserId_ = 0L;
      startTimestamp_ = 0L;
      endTimestamp_ = 0L;
      frequencyTargeting_ = de.cache.DeliveryMessage.FrequencyCtrl.getDefaultInstance();
      advertiserMask_ = de.cache.DeliveryMessage.ControlledMask.UN_CONTROL;
      method_ = de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance();
      status_ = de.cache.DeliveryMessage.GlobalSwitch.ON;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, advertiserId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, startTimestamp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, endTimestamp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, frequencyTargeting_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(7, advertiserMask_.getNumber());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, method_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeEnum(9, status_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, advertiserId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, startTimestamp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, endTimestamp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, frequencyTargeting_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, advertiserMask_.getNumber());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, method_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, status_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.cache.DeliveryMessage.Order parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.Order parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Order parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.Order parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Order parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.Order parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Order parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.cache.DeliveryMessage.Order parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Order parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.Order parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.cache.DeliveryMessage.Order prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code de.cache.Order}
     *
     * <pre>
     *订单数据
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:de.cache.Order)
        de.cache.DeliveryMessage.OrderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Order_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Order_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.Order.class, de.cache.DeliveryMessage.Order.Builder.class);
      }

      // Construct using de.cache.DeliveryMessage.Order.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFrequencyTargetingFieldBuilder();
          getMethodFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        bitField0_ = (bitField0_ & ~0x00000002);
        advertiserId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        startTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        endTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (frequencyTargetingBuilder_ == null) {
          frequencyTargeting_ = de.cache.DeliveryMessage.FrequencyCtrl.getDefaultInstance();
        } else {
          frequencyTargetingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        advertiserMask_ = de.cache.DeliveryMessage.ControlledMask.UN_CONTROL;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (methodBuilder_ == null) {
          method_ = de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance();
        } else {
          methodBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        status_ = de.cache.DeliveryMessage.GlobalSwitch.ON;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Order_descriptor;
      }

      public de.cache.DeliveryMessage.Order getDefaultInstanceForType() {
        return de.cache.DeliveryMessage.Order.getDefaultInstance();
      }

      public de.cache.DeliveryMessage.Order build() {
        de.cache.DeliveryMessage.Order result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.cache.DeliveryMessage.Order buildPartial() {
        de.cache.DeliveryMessage.Order result = new de.cache.DeliveryMessage.Order(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cmd_ = cmd_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.advertiserId_ = advertiserId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.startTimestamp_ = startTimestamp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.endTimestamp_ = endTimestamp_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (frequencyTargetingBuilder_ == null) {
          result.frequencyTargeting_ = frequencyTargeting_;
        } else {
          result.frequencyTargeting_ = frequencyTargetingBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.advertiserMask_ = advertiserMask_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (methodBuilder_ == null) {
          result.method_ = method_;
        } else {
          result.method_ = methodBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.status_ = status_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.cache.DeliveryMessage.Order) {
          return mergeFrom((de.cache.DeliveryMessage.Order)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.cache.DeliveryMessage.Order other) {
        if (other == de.cache.DeliveryMessage.Order.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCmd()) {
          setCmd(other.getCmd());
        }
        if (other.hasAdvertiserId()) {
          setAdvertiserId(other.getAdvertiserId());
        }
        if (other.hasStartTimestamp()) {
          setStartTimestamp(other.getStartTimestamp());
        }
        if (other.hasEndTimestamp()) {
          setEndTimestamp(other.getEndTimestamp());
        }
        if (other.hasFrequencyTargeting()) {
          mergeFrequencyTargeting(other.getFrequencyTargeting());
        }
        if (other.hasAdvertiserMask()) {
          setAdvertiserMask(other.getAdvertiserMask());
        }
        if (other.hasMethod()) {
          mergeMethod(other.getMethod());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.cache.DeliveryMessage.Order parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.cache.DeliveryMessage.Order) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *订单id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *订单id
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *订单id
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *订单id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.Command cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public boolean hasCmd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public de.cache.DeliveryMessage.Command getCmd() {
        return cmd_;
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public Builder setCmd(de.cache.DeliveryMessage.Command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        cmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public Builder clearCmd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        onChanged();
        return this;
      }

      private long advertiserId_ ;
      /**
       * <code>optional int64 advertiserId = 3;</code>
       *
       * <pre>
       *广告主id
       * </pre>
       */
      public boolean hasAdvertiserId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 advertiserId = 3;</code>
       *
       * <pre>
       *广告主id
       * </pre>
       */
      public long getAdvertiserId() {
        return advertiserId_;
      }
      /**
       * <code>optional int64 advertiserId = 3;</code>
       *
       * <pre>
       *广告主id
       * </pre>
       */
      public Builder setAdvertiserId(long value) {
        bitField0_ |= 0x00000004;
        advertiserId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 advertiserId = 3;</code>
       *
       * <pre>
       *广告主id
       * </pre>
       */
      public Builder clearAdvertiserId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        advertiserId_ = 0L;
        onChanged();
        return this;
      }

      private long startTimestamp_ ;
      /**
       * <code>optional int64 startTimestamp = 4;</code>
       *
       * <pre>
       *订单开始日期(unix timestamp)
       * </pre>
       */
      public boolean hasStartTimestamp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 startTimestamp = 4;</code>
       *
       * <pre>
       *订单开始日期(unix timestamp)
       * </pre>
       */
      public long getStartTimestamp() {
        return startTimestamp_;
      }
      /**
       * <code>optional int64 startTimestamp = 4;</code>
       *
       * <pre>
       *订单开始日期(unix timestamp)
       * </pre>
       */
      public Builder setStartTimestamp(long value) {
        bitField0_ |= 0x00000008;
        startTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 startTimestamp = 4;</code>
       *
       * <pre>
       *订单开始日期(unix timestamp)
       * </pre>
       */
      public Builder clearStartTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        startTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private long endTimestamp_ ;
      /**
       * <code>optional int64 endTimestamp = 5;</code>
       *
       * <pre>
       *订单结束日期(unix timestamp)
       * </pre>
       */
      public boolean hasEndTimestamp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 endTimestamp = 5;</code>
       *
       * <pre>
       *订单结束日期(unix timestamp)
       * </pre>
       */
      public long getEndTimestamp() {
        return endTimestamp_;
      }
      /**
       * <code>optional int64 endTimestamp = 5;</code>
       *
       * <pre>
       *订单结束日期(unix timestamp)
       * </pre>
       */
      public Builder setEndTimestamp(long value) {
        bitField0_ |= 0x00000010;
        endTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 endTimestamp = 5;</code>
       *
       * <pre>
       *订单结束日期(unix timestamp)
       * </pre>
       */
      public Builder clearEndTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        endTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.FrequencyCtrl frequencyTargeting_ = de.cache.DeliveryMessage.FrequencyCtrl.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.FrequencyCtrl, de.cache.DeliveryMessage.FrequencyCtrl.Builder, de.cache.DeliveryMessage.FrequencyCtrlOrBuilder> frequencyTargetingBuilder_;
      /**
       * <code>optional .de.cache.FrequencyCtrl frequencyTargeting = 6;</code>
       *
       * <pre>
       *订单级频率定向,unassigned 关闭该定向功能
       * </pre>
       */
      public boolean hasFrequencyTargeting() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .de.cache.FrequencyCtrl frequencyTargeting = 6;</code>
       *
       * <pre>
       *订单级频率定向,unassigned 关闭该定向功能
       * </pre>
       */
      public de.cache.DeliveryMessage.FrequencyCtrl getFrequencyTargeting() {
        if (frequencyTargetingBuilder_ == null) {
          return frequencyTargeting_;
        } else {
          return frequencyTargetingBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .de.cache.FrequencyCtrl frequencyTargeting = 6;</code>
       *
       * <pre>
       *订单级频率定向,unassigned 关闭该定向功能
       * </pre>
       */
      public Builder setFrequencyTargeting(de.cache.DeliveryMessage.FrequencyCtrl value) {
        if (frequencyTargetingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          frequencyTargeting_ = value;
          onChanged();
        } else {
          frequencyTargetingBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .de.cache.FrequencyCtrl frequencyTargeting = 6;</code>
       *
       * <pre>
       *订单级频率定向,unassigned 关闭该定向功能
       * </pre>
       */
      public Builder setFrequencyTargeting(
          de.cache.DeliveryMessage.FrequencyCtrl.Builder builderForValue) {
        if (frequencyTargetingBuilder_ == null) {
          frequencyTargeting_ = builderForValue.build();
          onChanged();
        } else {
          frequencyTargetingBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .de.cache.FrequencyCtrl frequencyTargeting = 6;</code>
       *
       * <pre>
       *订单级频率定向,unassigned 关闭该定向功能
       * </pre>
       */
      public Builder mergeFrequencyTargeting(de.cache.DeliveryMessage.FrequencyCtrl value) {
        if (frequencyTargetingBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              frequencyTargeting_ != de.cache.DeliveryMessage.FrequencyCtrl.getDefaultInstance()) {
            frequencyTargeting_ =
              de.cache.DeliveryMessage.FrequencyCtrl.newBuilder(frequencyTargeting_).mergeFrom(value).buildPartial();
          } else {
            frequencyTargeting_ = value;
          }
          onChanged();
        } else {
          frequencyTargetingBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .de.cache.FrequencyCtrl frequencyTargeting = 6;</code>
       *
       * <pre>
       *订单级频率定向,unassigned 关闭该定向功能
       * </pre>
       */
      public Builder clearFrequencyTargeting() {
        if (frequencyTargetingBuilder_ == null) {
          frequencyTargeting_ = de.cache.DeliveryMessage.FrequencyCtrl.getDefaultInstance();
          onChanged();
        } else {
          frequencyTargetingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .de.cache.FrequencyCtrl frequencyTargeting = 6;</code>
       *
       * <pre>
       *订单级频率定向,unassigned 关闭该定向功能
       * </pre>
       */
      public de.cache.DeliveryMessage.FrequencyCtrl.Builder getFrequencyTargetingBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getFrequencyTargetingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .de.cache.FrequencyCtrl frequencyTargeting = 6;</code>
       *
       * <pre>
       *订单级频率定向,unassigned 关闭该定向功能
       * </pre>
       */
      public de.cache.DeliveryMessage.FrequencyCtrlOrBuilder getFrequencyTargetingOrBuilder() {
        if (frequencyTargetingBuilder_ != null) {
          return frequencyTargetingBuilder_.getMessageOrBuilder();
        } else {
          return frequencyTargeting_;
        }
      }
      /**
       * <code>optional .de.cache.FrequencyCtrl frequencyTargeting = 6;</code>
       *
       * <pre>
       *订单级频率定向,unassigned 关闭该定向功能
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.FrequencyCtrl, de.cache.DeliveryMessage.FrequencyCtrl.Builder, de.cache.DeliveryMessage.FrequencyCtrlOrBuilder> 
          getFrequencyTargetingFieldBuilder() {
        if (frequencyTargetingBuilder_ == null) {
          frequencyTargetingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.cache.DeliveryMessage.FrequencyCtrl, de.cache.DeliveryMessage.FrequencyCtrl.Builder, de.cache.DeliveryMessage.FrequencyCtrlOrBuilder>(
                  getFrequencyTargeting(),
                  getParentForChildren(),
                  isClean());
          frequencyTargeting_ = null;
        }
        return frequencyTargetingBuilder_;
      }

      private de.cache.DeliveryMessage.ControlledMask advertiserMask_ = de.cache.DeliveryMessage.ControlledMask.UN_CONTROL;
      /**
       * <code>optional .de.cache.ControlledMask advertiserMask = 7;</code>
       *
       * <pre>
       *受控于Advertiser级show/click/percent/budget数量控制标示(1.点击上限受控 2.显示上限受控 4.CPD百分比受控 8.预算价格受控) (取值范围0-15)
       * </pre>
       */
      public boolean hasAdvertiserMask() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .de.cache.ControlledMask advertiserMask = 7;</code>
       *
       * <pre>
       *受控于Advertiser级show/click/percent/budget数量控制标示(1.点击上限受控 2.显示上限受控 4.CPD百分比受控 8.预算价格受控) (取值范围0-15)
       * </pre>
       */
      public de.cache.DeliveryMessage.ControlledMask getAdvertiserMask() {
        return advertiserMask_;
      }
      /**
       * <code>optional .de.cache.ControlledMask advertiserMask = 7;</code>
       *
       * <pre>
       *受控于Advertiser级show/click/percent/budget数量控制标示(1.点击上限受控 2.显示上限受控 4.CPD百分比受控 8.预算价格受控) (取值范围0-15)
       * </pre>
       */
      public Builder setAdvertiserMask(de.cache.DeliveryMessage.ControlledMask value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        advertiserMask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.ControlledMask advertiserMask = 7;</code>
       *
       * <pre>
       *受控于Advertiser级show/click/percent/budget数量控制标示(1.点击上限受控 2.显示上限受控 4.CPD百分比受控 8.预算价格受控) (取值范围0-15)
       * </pre>
       */
      public Builder clearAdvertiserMask() {
        bitField0_ = (bitField0_ & ~0x00000040);
        advertiserMask_ = de.cache.DeliveryMessage.ControlledMask.UN_CONTROL;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.DeliveryMethod method_ = de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.DeliveryMethod, de.cache.DeliveryMessage.DeliveryMethod.Builder, de.cache.DeliveryMessage.DeliveryMethodOrBuilder> methodBuilder_;
      /**
       * <code>optional .de.cache.DeliveryMethod method = 8;</code>
       *
       * <pre>
       *-----
       *count.impression, 整个订单的总显示数量上限
       * 该订单下接受订单级显示上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告显示总量上限
       * =0时,该订单下所有接受订单级别显示上限的投放将关闭不再投放
       *count.percentage, 订单级别的百分比控制(与投放级别以及订单级别的百分比是乘法关系)
       *  受控投放的真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
       *  =100,不做该级别的百分比控制
       *  =0,该订单下所有接受订单级别百分比控制的投放将关闭不再投放
       *count.click, 订单级别的点击上限控制
       *  该订单下接受订单级点击上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告点击总量上限，由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
       *  =0,该订单组下所有接受订单组级别点击上限的投放将关闭不再投放
       *count.budget, 订单级别的预算金额总上限(单位:百万分之一元)
       *  该订单下接受订单级预算上限控制的所有投放(包括CPM/CPD/CPC形式的金额预算投放,包括竞价和刊例价)金额预算总量上限
       *  =0,该订单组下所有接受订单组级别预算限制的投放将关闭不再投放
       * </pre>
       */
      public boolean hasMethod() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 8;</code>
       *
       * <pre>
       *-----
       *count.impression, 整个订单的总显示数量上限
       * 该订单下接受订单级显示上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告显示总量上限
       * =0时,该订单下所有接受订单级别显示上限的投放将关闭不再投放
       *count.percentage, 订单级别的百分比控制(与投放级别以及订单级别的百分比是乘法关系)
       *  受控投放的真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
       *  =100,不做该级别的百分比控制
       *  =0,该订单下所有接受订单级别百分比控制的投放将关闭不再投放
       *count.click, 订单级别的点击上限控制
       *  该订单下接受订单级点击上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告点击总量上限，由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
       *  =0,该订单组下所有接受订单组级别点击上限的投放将关闭不再投放
       *count.budget, 订单级别的预算金额总上限(单位:百万分之一元)
       *  该订单下接受订单级预算上限控制的所有投放(包括CPM/CPD/CPC形式的金额预算投放,包括竞价和刊例价)金额预算总量上限
       *  =0,该订单组下所有接受订单组级别预算限制的投放将关闭不再投放
       * </pre>
       */
      public de.cache.DeliveryMessage.DeliveryMethod getMethod() {
        if (methodBuilder_ == null) {
          return method_;
        } else {
          return methodBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 8;</code>
       *
       * <pre>
       *-----
       *count.impression, 整个订单的总显示数量上限
       * 该订单下接受订单级显示上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告显示总量上限
       * =0时,该订单下所有接受订单级别显示上限的投放将关闭不再投放
       *count.percentage, 订单级别的百分比控制(与投放级别以及订单级别的百分比是乘法关系)
       *  受控投放的真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
       *  =100,不做该级别的百分比控制
       *  =0,该订单下所有接受订单级别百分比控制的投放将关闭不再投放
       *count.click, 订单级别的点击上限控制
       *  该订单下接受订单级点击上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告点击总量上限，由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
       *  =0,该订单组下所有接受订单组级别点击上限的投放将关闭不再投放
       *count.budget, 订单级别的预算金额总上限(单位:百万分之一元)
       *  该订单下接受订单级预算上限控制的所有投放(包括CPM/CPD/CPC形式的金额预算投放,包括竞价和刊例价)金额预算总量上限
       *  =0,该订单组下所有接受订单组级别预算限制的投放将关闭不再投放
       * </pre>
       */
      public Builder setMethod(de.cache.DeliveryMessage.DeliveryMethod value) {
        if (methodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          method_ = value;
          onChanged();
        } else {
          methodBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 8;</code>
       *
       * <pre>
       *-----
       *count.impression, 整个订单的总显示数量上限
       * 该订单下接受订单级显示上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告显示总量上限
       * =0时,该订单下所有接受订单级别显示上限的投放将关闭不再投放
       *count.percentage, 订单级别的百分比控制(与投放级别以及订单级别的百分比是乘法关系)
       *  受控投放的真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
       *  =100,不做该级别的百分比控制
       *  =0,该订单下所有接受订单级别百分比控制的投放将关闭不再投放
       *count.click, 订单级别的点击上限控制
       *  该订单下接受订单级点击上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告点击总量上限，由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
       *  =0,该订单组下所有接受订单组级别点击上限的投放将关闭不再投放
       *count.budget, 订单级别的预算金额总上限(单位:百万分之一元)
       *  该订单下接受订单级预算上限控制的所有投放(包括CPM/CPD/CPC形式的金额预算投放,包括竞价和刊例价)金额预算总量上限
       *  =0,该订单组下所有接受订单组级别预算限制的投放将关闭不再投放
       * </pre>
       */
      public Builder setMethod(
          de.cache.DeliveryMessage.DeliveryMethod.Builder builderForValue) {
        if (methodBuilder_ == null) {
          method_ = builderForValue.build();
          onChanged();
        } else {
          methodBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 8;</code>
       *
       * <pre>
       *-----
       *count.impression, 整个订单的总显示数量上限
       * 该订单下接受订单级显示上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告显示总量上限
       * =0时,该订单下所有接受订单级别显示上限的投放将关闭不再投放
       *count.percentage, 订单级别的百分比控制(与投放级别以及订单级别的百分比是乘法关系)
       *  受控投放的真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
       *  =100,不做该级别的百分比控制
       *  =0,该订单下所有接受订单级别百分比控制的投放将关闭不再投放
       *count.click, 订单级别的点击上限控制
       *  该订单下接受订单级点击上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告点击总量上限，由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
       *  =0,该订单组下所有接受订单组级别点击上限的投放将关闭不再投放
       *count.budget, 订单级别的预算金额总上限(单位:百万分之一元)
       *  该订单下接受订单级预算上限控制的所有投放(包括CPM/CPD/CPC形式的金额预算投放,包括竞价和刊例价)金额预算总量上限
       *  =0,该订单组下所有接受订单组级别预算限制的投放将关闭不再投放
       * </pre>
       */
      public Builder mergeMethod(de.cache.DeliveryMessage.DeliveryMethod value) {
        if (methodBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              method_ != de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance()) {
            method_ =
              de.cache.DeliveryMessage.DeliveryMethod.newBuilder(method_).mergeFrom(value).buildPartial();
          } else {
            method_ = value;
          }
          onChanged();
        } else {
          methodBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 8;</code>
       *
       * <pre>
       *-----
       *count.impression, 整个订单的总显示数量上限
       * 该订单下接受订单级显示上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告显示总量上限
       * =0时,该订单下所有接受订单级别显示上限的投放将关闭不再投放
       *count.percentage, 订单级别的百分比控制(与投放级别以及订单级别的百分比是乘法关系)
       *  受控投放的真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
       *  =100,不做该级别的百分比控制
       *  =0,该订单下所有接受订单级别百分比控制的投放将关闭不再投放
       *count.click, 订单级别的点击上限控制
       *  该订单下接受订单级点击上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告点击总量上限，由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
       *  =0,该订单组下所有接受订单组级别点击上限的投放将关闭不再投放
       *count.budget, 订单级别的预算金额总上限(单位:百万分之一元)
       *  该订单下接受订单级预算上限控制的所有投放(包括CPM/CPD/CPC形式的金额预算投放,包括竞价和刊例价)金额预算总量上限
       *  =0,该订单组下所有接受订单组级别预算限制的投放将关闭不再投放
       * </pre>
       */
      public Builder clearMethod() {
        if (methodBuilder_ == null) {
          method_ = de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance();
          onChanged();
        } else {
          methodBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 8;</code>
       *
       * <pre>
       *-----
       *count.impression, 整个订单的总显示数量上限
       * 该订单下接受订单级显示上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告显示总量上限
       * =0时,该订单下所有接受订单级别显示上限的投放将关闭不再投放
       *count.percentage, 订单级别的百分比控制(与投放级别以及订单级别的百分比是乘法关系)
       *  受控投放的真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
       *  =100,不做该级别的百分比控制
       *  =0,该订单下所有接受订单级别百分比控制的投放将关闭不再投放
       *count.click, 订单级别的点击上限控制
       *  该订单下接受订单级点击上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告点击总量上限，由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
       *  =0,该订单组下所有接受订单组级别点击上限的投放将关闭不再投放
       *count.budget, 订单级别的预算金额总上限(单位:百万分之一元)
       *  该订单下接受订单级预算上限控制的所有投放(包括CPM/CPD/CPC形式的金额预算投放,包括竞价和刊例价)金额预算总量上限
       *  =0,该订单组下所有接受订单组级别预算限制的投放将关闭不再投放
       * </pre>
       */
      public de.cache.DeliveryMessage.DeliveryMethod.Builder getMethodBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getMethodFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 8;</code>
       *
       * <pre>
       *-----
       *count.impression, 整个订单的总显示数量上限
       * 该订单下接受订单级显示上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告显示总量上限
       * =0时,该订单下所有接受订单级别显示上限的投放将关闭不再投放
       *count.percentage, 订单级别的百分比控制(与投放级别以及订单级别的百分比是乘法关系)
       *  受控投放的真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
       *  =100,不做该级别的百分比控制
       *  =0,该订单下所有接受订单级别百分比控制的投放将关闭不再投放
       *count.click, 订单级别的点击上限控制
       *  该订单下接受订单级点击上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告点击总量上限，由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
       *  =0,该订单组下所有接受订单组级别点击上限的投放将关闭不再投放
       *count.budget, 订单级别的预算金额总上限(单位:百万分之一元)
       *  该订单下接受订单级预算上限控制的所有投放(包括CPM/CPD/CPC形式的金额预算投放,包括竞价和刊例价)金额预算总量上限
       *  =0,该订单组下所有接受订单组级别预算限制的投放将关闭不再投放
       * </pre>
       */
      public de.cache.DeliveryMessage.DeliveryMethodOrBuilder getMethodOrBuilder() {
        if (methodBuilder_ != null) {
          return methodBuilder_.getMessageOrBuilder();
        } else {
          return method_;
        }
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 8;</code>
       *
       * <pre>
       *-----
       *count.impression, 整个订单的总显示数量上限
       * 该订单下接受订单级显示上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告显示总量上限
       * =0时,该订单下所有接受订单级别显示上限的投放将关闭不再投放
       *count.percentage, 订单级别的百分比控制(与投放级别以及订单级别的百分比是乘法关系)
       *  受控投放的真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
       *  =100,不做该级别的百分比控制
       *  =0,该订单下所有接受订单级别百分比控制的投放将关闭不再投放
       *count.click, 订单级别的点击上限控制
       *  该订单下接受订单级点击上限控制的所有投放(包括CPC/CPM/CPD/CPMV/CPDV)广告点击总量上限，由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
       *  =0,该订单组下所有接受订单组级别点击上限的投放将关闭不再投放
       *count.budget, 订单级别的预算金额总上限(单位:百万分之一元)
       *  该订单下接受订单级预算上限控制的所有投放(包括CPM/CPD/CPC形式的金额预算投放,包括竞价和刊例价)金额预算总量上限
       *  =0,该订单组下所有接受订单组级别预算限制的投放将关闭不再投放
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.DeliveryMethod, de.cache.DeliveryMessage.DeliveryMethod.Builder, de.cache.DeliveryMessage.DeliveryMethodOrBuilder> 
          getMethodFieldBuilder() {
        if (methodBuilder_ == null) {
          methodBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.cache.DeliveryMessage.DeliveryMethod, de.cache.DeliveryMessage.DeliveryMethod.Builder, de.cache.DeliveryMessage.DeliveryMethodOrBuilder>(
                  getMethod(),
                  getParentForChildren(),
                  isClean());
          method_ = null;
        }
        return methodBuilder_;
      }

      private de.cache.DeliveryMessage.GlobalSwitch status_ = de.cache.DeliveryMessage.GlobalSwitch.ON;
      /**
       * <code>optional .de.cache.GlobalSwitch status = 9 [default = ON];</code>
       *
       * <pre>
       *数据状态（1=有效、0=无效）
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .de.cache.GlobalSwitch status = 9 [default = ON];</code>
       *
       * <pre>
       *数据状态（1=有效、0=无效）
       * </pre>
       */
      public de.cache.DeliveryMessage.GlobalSwitch getStatus() {
        return status_;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch status = 9 [default = ON];</code>
       *
       * <pre>
       *数据状态（1=有效、0=无效）
       * </pre>
       */
      public Builder setStatus(de.cache.DeliveryMessage.GlobalSwitch value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch status = 9 [default = ON];</code>
       *
       * <pre>
       *数据状态（1=有效、0=无效）
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000100);
        status_ = de.cache.DeliveryMessage.GlobalSwitch.ON;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:de.cache.Order)
    }

    static {
      defaultInstance = new Order(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:de.cache.Order)
  }

  public interface SolutionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.cache.Solution)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *投放id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *投放id
     * </pre>
     */
    long getId();

    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    boolean hasCmd();
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    de.cache.DeliveryMessage.Command getCmd();

    /**
     * <code>optional int64 orderId = 3;</code>
     *
     * <pre>
     *订单id
     * </pre>
     */
    boolean hasOrderId();
    /**
     * <code>optional int64 orderId = 3;</code>
     *
     * <pre>
     *订单id
     * </pre>
     */
    long getOrderId();

    /**
     * <code>optional int32 priority = 4 [default = 15];</code>
     *
     * <pre>
     *投放的优先级别（1-N，1最大，N最小）
     * </pre>
     */
    boolean hasPriority();
    /**
     * <code>optional int32 priority = 4 [default = 15];</code>
     *
     * <pre>
     *投放的优先级别（1-N，1最大，N最小）
     * </pre>
     */
    int getPriority();

    /**
     * <code>optional int64 startTimestamp = 5;</code>
     *
     * <pre>
     *投放结束日期
     * </pre>
     */
    boolean hasStartTimestamp();
    /**
     * <code>optional int64 startTimestamp = 5;</code>
     *
     * <pre>
     *投放结束日期
     * </pre>
     */
    long getStartTimestamp();

    /**
     * <code>optional int64 endTimestamp = 6;</code>
     *
     * <pre>
     *投放结束时间
     * </pre>
     */
    boolean hasEndTimestamp();
    /**
     * <code>optional int64 endTimestamp = 6;</code>
     *
     * <pre>
     *投放结束时间
     * </pre>
     */
    long getEndTimestamp();

    /**
     * <code>optional .de.cache.GlobalSwitch timePreference = 7;</code>
     *
     * <pre>
     *投放数量控制方式,=0 按数量投,过时补投至投放完全,=1 按时间投，过时未投放完不再补投
     * </pre>
     */
    boolean hasTimePreference();
    /**
     * <code>optional .de.cache.GlobalSwitch timePreference = 7;</code>
     *
     * <pre>
     *投放数量控制方式,=0 按数量投,过时补投至投放完全,=1 按时间投，过时未投放完不再补投
     * </pre>
     */
    de.cache.DeliveryMessage.GlobalSwitch getTimePreference();

    /**
     * <code>optional .de.cache.GlobalSwitch speedupControl = 8 [default = OFF];</code>
     *
     * <pre>
     *speedControl投放速度控制，=0,按广告位(网站)流量分配投放，也就是将所有投放量按广告位(网站)流量分配到整个投放期，如果没有流量数据，就按照均匀分配。
     *=1,尽快投放，不做投放流量控制，尽快把广告投完
     * </pre>
     */
    boolean hasSpeedupControl();
    /**
     * <code>optional .de.cache.GlobalSwitch speedupControl = 8 [default = OFF];</code>
     *
     * <pre>
     *speedControl投放速度控制，=0,按广告位(网站)流量分配投放，也就是将所有投放量按广告位(网站)流量分配到整个投放期，如果没有流量数据，就按照均匀分配。
     *=1,尽快投放，不做投放流量控制，尽快把广告投完
     * </pre>
     */
    de.cache.DeliveryMessage.GlobalSwitch getSpeedupControl();

    /**
     * <code>optional .de.cache.Solution.DeliveryType deliveryType = 9;</code>
     */
    boolean hasDeliveryType();
    /**
     * <code>optional .de.cache.Solution.DeliveryType deliveryType = 9;</code>
     */
    de.cache.DeliveryMessage.Solution.DeliveryType getDeliveryType();

    /**
     * <code>optional .de.cache.DeliveryMethod method = 10;</code>
     *
     * <pre>
     *-----
     *count.impression, 投放级的总显示数量上限(包括CPC/CPM/CPD/CPMV/CPDV)
     * CPM时: impression必须&gt;0, 否则投放将不投放
     * 非CPM时: &gt;0,该值为显示上限; =0 or unassigned,无显示上限
     *count.percentage, 投放百分比
     *  目前只有CPD和CPC以及CPDV才有百分比控制概念。
     *  CPD和CPDV时:必须&gt;0且&lt;=100; =0 or unassigned将不投放
     *  如果该投放接受订单级的百分比控制，那其：
     *       真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
     *count.click, 点击数量,由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
     *  CPC/CPCV时,该值必须&gt;0; 否则投放将关闭
     *  其他类别时(CPM/CPD/CPMV/CPDV)为广告点击总量上限; =0 or unassigned,无点击上限
     *count.budget, 预算金额总上限(单位:百万分之一元)
     *  竞价或者刊例价投放时该值必须&gt;0; 否则投放将关闭
     *  其他类别是是为金额控制上限,=0 or unassigned,无金额上限
     * </pre>
     */
    boolean hasMethod();
    /**
     * <code>optional .de.cache.DeliveryMethod method = 10;</code>
     *
     * <pre>
     *-----
     *count.impression, 投放级的总显示数量上限(包括CPC/CPM/CPD/CPMV/CPDV)
     * CPM时: impression必须&gt;0, 否则投放将不投放
     * 非CPM时: &gt;0,该值为显示上限; =0 or unassigned,无显示上限
     *count.percentage, 投放百分比
     *  目前只有CPD和CPC以及CPDV才有百分比控制概念。
     *  CPD和CPDV时:必须&gt;0且&lt;=100; =0 or unassigned将不投放
     *  如果该投放接受订单级的百分比控制，那其：
     *       真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
     *count.click, 点击数量,由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
     *  CPC/CPCV时,该值必须&gt;0; 否则投放将关闭
     *  其他类别时(CPM/CPD/CPMV/CPDV)为广告点击总量上限; =0 or unassigned,无点击上限
     *count.budget, 预算金额总上限(单位:百万分之一元)
     *  竞价或者刊例价投放时该值必须&gt;0; 否则投放将关闭
     *  其他类别是是为金额控制上限,=0 or unassigned,无金额上限
     * </pre>
     */
    de.cache.DeliveryMessage.DeliveryMethod getMethod();
    /**
     * <code>optional .de.cache.DeliveryMethod method = 10;</code>
     *
     * <pre>
     *-----
     *count.impression, 投放级的总显示数量上限(包括CPC/CPM/CPD/CPMV/CPDV)
     * CPM时: impression必须&gt;0, 否则投放将不投放
     * 非CPM时: &gt;0,该值为显示上限; =0 or unassigned,无显示上限
     *count.percentage, 投放百分比
     *  目前只有CPD和CPC以及CPDV才有百分比控制概念。
     *  CPD和CPDV时:必须&gt;0且&lt;=100; =0 or unassigned将不投放
     *  如果该投放接受订单级的百分比控制，那其：
     *       真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
     *count.click, 点击数量,由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
     *  CPC/CPCV时,该值必须&gt;0; 否则投放将关闭
     *  其他类别时(CPM/CPD/CPMV/CPDV)为广告点击总量上限; =0 or unassigned,无点击上限
     *count.budget, 预算金额总上限(单位:百万分之一元)
     *  竞价或者刊例价投放时该值必须&gt;0; 否则投放将关闭
     *  其他类别是是为金额控制上限,=0 or unassigned,无金额上限
     * </pre>
     */
    de.cache.DeliveryMessage.DeliveryMethodOrBuilder getMethodOrBuilder();

    /**
     * <code>optional .de.cache.ControlledMask orderCtrlFlag = 11 [default = UN_CONTROL];</code>
     *
     * <pre>
     *受控于订单级CPM/CPC/CPD/budget控制标示
     *(1.点击上限受控 2.显示上限受控 4.CPD百分比受控 8.预算价格受控) (取值范围0-15)(s/d.$orderid)
     *cpm显示上限受控，cpc点击上限受控，cpm刊例价或者竞价以及cpc刊例价和竞价是价格受控
     * </pre>
     */
    boolean hasOrderCtrlFlag();
    /**
     * <code>optional .de.cache.ControlledMask orderCtrlFlag = 11 [default = UN_CONTROL];</code>
     *
     * <pre>
     *受控于订单级CPM/CPC/CPD/budget控制标示
     *(1.点击上限受控 2.显示上限受控 4.CPD百分比受控 8.预算价格受控) (取值范围0-15)(s/d.$orderid)
     *cpm显示上限受控，cpc点击上限受控，cpm刊例价或者竞价以及cpc刊例价和竞价是价格受控
     * </pre>
     */
    de.cache.DeliveryMessage.ControlledMask getOrderCtrlFlag();

    /**
     * <code>optional .de.cache.GlobalSwitch frequencyPreference = 12 [default = OFF];</code>
     *
     * <pre>
     *频次优先投放(追投)，0=关闭，1=开启, 满足条件后优先投放，直至其频次耗完
     * </pre>
     */
    boolean hasFrequencyPreference();
    /**
     * <code>optional .de.cache.GlobalSwitch frequencyPreference = 12 [default = OFF];</code>
     *
     * <pre>
     *频次优先投放(追投)，0=关闭，1=开启, 满足条件后优先投放，直至其频次耗完
     * </pre>
     */
    de.cache.DeliveryMessage.GlobalSwitch getFrequencyPreference();

    /**
     * <code>optional .de.cache.Solution.BidInfo bidInfo = 13;</code>
     *
     * <pre>
     *出价信息
     * </pre>
     */
    boolean hasBidInfo();
    /**
     * <code>optional .de.cache.Solution.BidInfo bidInfo = 13;</code>
     *
     * <pre>
     *出价信息
     * </pre>
     */
    de.cache.DeliveryMessage.Solution.BidInfo getBidInfo();
    /**
     * <code>optional .de.cache.Solution.BidInfo bidInfo = 13;</code>
     *
     * <pre>
     *出价信息
     * </pre>
     */
    de.cache.DeliveryMessage.Solution.BidInfoOrBuilder getBidInfoOrBuilder();

    /**
     * <code>optional .de.cache.GlobalSwitch distributeFlag = 14 [default = OFF];</code>
     *
     * <pre>
     *流量分发标示,0=普通投放，1=流量分发投放
     * </pre>
     */
    boolean hasDistributeFlag();
    /**
     * <code>optional .de.cache.GlobalSwitch distributeFlag = 14 [default = OFF];</code>
     *
     * <pre>
     *流量分发标示,0=普通投放，1=流量分发投放
     * </pre>
     */
    de.cache.DeliveryMessage.GlobalSwitch getDistributeFlag();

    /**
     * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
     *
     * <pre>
     *排期信息Config
     * </pre>
     */
    java.util.List<de.cache.DeliveryMessage.Solution.SpotPlan> 
        getSpotPlanList();
    /**
     * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
     *
     * <pre>
     *排期信息Config
     * </pre>
     */
    de.cache.DeliveryMessage.Solution.SpotPlan getSpotPlan(int index);
    /**
     * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
     *
     * <pre>
     *排期信息Config
     * </pre>
     */
    int getSpotPlanCount();
    /**
     * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
     *
     * <pre>
     *排期信息Config
     * </pre>
     */
    java.util.List<? extends de.cache.DeliveryMessage.Solution.SpotPlanOrBuilder> 
        getSpotPlanOrBuilderList();
    /**
     * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
     *
     * <pre>
     *排期信息Config
     * </pre>
     */
    de.cache.DeliveryMessage.Solution.SpotPlanOrBuilder getSpotPlanOrBuilder(
        int index);

    /**
     * <code>optional .de.cache.Solution.SolutionTarget targets = 16;</code>
     *
     * <pre>
     *投放定向信息
     * </pre>
     */
    boolean hasTargets();
    /**
     * <code>optional .de.cache.Solution.SolutionTarget targets = 16;</code>
     *
     * <pre>
     *投放定向信息
     * </pre>
     */
    de.cache.DeliveryMessage.Solution.SolutionTarget getTargets();
    /**
     * <code>optional .de.cache.Solution.SolutionTarget targets = 16;</code>
     *
     * <pre>
     *投放定向信息
     * </pre>
     */
    de.cache.DeliveryMessage.Solution.SolutionTargetOrBuilder getTargetsOrBuilder();

    /**
     * <code>repeated int64 channelId = 17;</code>
     *
     * <pre>
     *绑定广告Ids
     * </pre>
     */
    java.util.List<java.lang.Long> getChannelIdList();
    /**
     * <code>repeated int64 channelId = 17;</code>
     *
     * <pre>
     *绑定广告Ids
     * </pre>
     */
    int getChannelIdCount();
    /**
     * <code>repeated int64 channelId = 17;</code>
     *
     * <pre>
     *绑定广告Ids
     * </pre>
     */
    long getChannelId(int index);

    /**
     * <code>repeated int64 bannerId = 18;</code>
     *
     * <pre>
     *绑定创意Ids
     * </pre>
     */
    java.util.List<java.lang.Long> getBannerIdList();
    /**
     * <code>repeated int64 bannerId = 18;</code>
     *
     * <pre>
     *绑定创意Ids
     * </pre>
     */
    int getBannerIdCount();
    /**
     * <code>repeated int64 bannerId = 18;</code>
     *
     * <pre>
     *绑定创意Ids
     * </pre>
     */
    long getBannerId(int index);

    /**
     * <code>optional int64 bannerPoolId = 19;</code>
     *
     * <pre>
     *(报表用)bannerGroup的父级
     * </pre>
     */
    boolean hasBannerPoolId();
    /**
     * <code>optional int64 bannerPoolId = 19;</code>
     *
     * <pre>
     *(报表用)bannerGroup的父级
     * </pre>
     */
    long getBannerPoolId();

    /**
     * <code>optional int64 bannerGroupId = 20;</code>
     *
     * <pre>
     *(报表用)创意组id,抽象组合,并非是真实banner的父级,与投放唯一对应
     * </pre>
     */
    boolean hasBannerGroupId();
    /**
     * <code>optional int64 bannerGroupId = 20;</code>
     *
     * <pre>
     *(报表用)创意组id,抽象组合,并非是真实banner的父级,与投放唯一对应
     * </pre>
     */
    long getBannerGroupId();

    /**
     * <code>optional .de.cache.GlobalSwitch status = 21 [default = ON];</code>
     *
     * <pre>
     *数据状态（1=有效、0=无效）
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional .de.cache.GlobalSwitch status = 21 [default = ON];</code>
     *
     * <pre>
     *数据状态（1=有效、0=无效）
     * </pre>
     */
    de.cache.DeliveryMessage.GlobalSwitch getStatus();

    /**
     * <code>optional int64 price = 22;</code>
     *
     * <pre>
     *价格（imedia使用）
     * </pre>
     */
    boolean hasPrice();
    /**
     * <code>optional int64 price = 22;</code>
     *
     * <pre>
     *价格（imedia使用）
     * </pre>
     */
    long getPrice();

    /**
     * <code>optional int64 extraEffectIndicators = 23;</code>
     *
     * <pre>
     *附加效果指标的限值
     * </pre>
     */
    boolean hasExtraEffectIndicators();
    /**
     * <code>optional int64 extraEffectIndicators = 23;</code>
     *
     * <pre>
     *附加效果指标的限值
     * </pre>
     */
    long getExtraEffectIndicators();

    /**
     * <code>repeated int64 adNetworkId = 24;</code>
     *
     * <pre>
     *策略投放的adnetworkIds
     * </pre>
     */
    java.util.List<java.lang.Long> getAdNetworkIdList();
    /**
     * <code>repeated int64 adNetworkId = 24;</code>
     *
     * <pre>
     *策略投放的adnetworkIds
     * </pre>
     */
    int getAdNetworkIdCount();
    /**
     * <code>repeated int64 adNetworkId = 24;</code>
     *
     * <pre>
     *策略投放的adnetworkIds
     * </pre>
     */
    long getAdNetworkId(int index);
  }
  /**
   * Protobuf type {@code de.cache.Solution}
   *
   * <pre>
   *投放数据
   * </pre>
   */
  public static final class Solution extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:de.cache.Solution)
      SolutionOrBuilder {
    // Use Solution.newBuilder() to construct.
    private Solution(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Solution(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Solution defaultInstance;
    public static Solution getDefaultInstance() {
      return defaultInstance;
    }

    public Solution getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Solution(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.Command value = de.cache.DeliveryMessage.Command.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                cmd_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              orderId_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              priority_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              startTimestamp_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              endTimestamp_ = input.readInt64();
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.GlobalSwitch value = de.cache.DeliveryMessage.GlobalSwitch.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                timePreference_ = value;
              }
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.GlobalSwitch value = de.cache.DeliveryMessage.GlobalSwitch.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                speedupControl_ = value;
              }
              break;
            }
            case 72: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.Solution.DeliveryType value = de.cache.DeliveryMessage.Solution.DeliveryType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(9, rawValue);
              } else {
                bitField0_ |= 0x00000100;
                deliveryType_ = value;
              }
              break;
            }
            case 82: {
              de.cache.DeliveryMessage.DeliveryMethod.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = method_.toBuilder();
              }
              method_ = input.readMessage(de.cache.DeliveryMessage.DeliveryMethod.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(method_);
                method_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 88: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.ControlledMask value = de.cache.DeliveryMessage.ControlledMask.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(11, rawValue);
              } else {
                bitField0_ |= 0x00000400;
                orderCtrlFlag_ = value;
              }
              break;
            }
            case 96: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.GlobalSwitch value = de.cache.DeliveryMessage.GlobalSwitch.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(12, rawValue);
              } else {
                bitField0_ |= 0x00000800;
                frequencyPreference_ = value;
              }
              break;
            }
            case 106: {
              de.cache.DeliveryMessage.Solution.BidInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) == 0x00001000)) {
                subBuilder = bidInfo_.toBuilder();
              }
              bidInfo_ = input.readMessage(de.cache.DeliveryMessage.Solution.BidInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bidInfo_);
                bidInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
            case 112: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.GlobalSwitch value = de.cache.DeliveryMessage.GlobalSwitch.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(14, rawValue);
              } else {
                bitField0_ |= 0x00002000;
                distributeFlag_ = value;
              }
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                spotPlan_ = new java.util.ArrayList<de.cache.DeliveryMessage.Solution.SpotPlan>();
                mutable_bitField0_ |= 0x00004000;
              }
              spotPlan_.add(input.readMessage(de.cache.DeliveryMessage.Solution.SpotPlan.PARSER, extensionRegistry));
              break;
            }
            case 130: {
              de.cache.DeliveryMessage.Solution.SolutionTarget.Builder subBuilder = null;
              if (((bitField0_ & 0x00004000) == 0x00004000)) {
                subBuilder = targets_.toBuilder();
              }
              targets_ = input.readMessage(de.cache.DeliveryMessage.Solution.SolutionTarget.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(targets_);
                targets_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00004000;
              break;
            }
            case 136: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                channelId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00010000;
              }
              channelId_.add(input.readInt64());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                channelId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00010000;
              }
              while (input.getBytesUntilLimit() > 0) {
                channelId_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 144: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                bannerId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00020000;
              }
              bannerId_.add(input.readInt64());
              break;
            }
            case 146: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
                bannerId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00020000;
              }
              while (input.getBytesUntilLimit() > 0) {
                bannerId_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 152: {
              bitField0_ |= 0x00008000;
              bannerPoolId_ = input.readInt64();
              break;
            }
            case 160: {
              bitField0_ |= 0x00010000;
              bannerGroupId_ = input.readInt64();
              break;
            }
            case 168: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.GlobalSwitch value = de.cache.DeliveryMessage.GlobalSwitch.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(21, rawValue);
              } else {
                bitField0_ |= 0x00020000;
                status_ = value;
              }
              break;
            }
            case 176: {
              bitField0_ |= 0x00040000;
              price_ = input.readInt64();
              break;
            }
            case 184: {
              bitField0_ |= 0x00080000;
              extraEffectIndicators_ = input.readInt64();
              break;
            }
            case 192: {
              if (!((mutable_bitField0_ & 0x00800000) == 0x00800000)) {
                adNetworkId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00800000;
              }
              adNetworkId_.add(input.readInt64());
              break;
            }
            case 194: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00800000) == 0x00800000) && input.getBytesUntilLimit() > 0) {
                adNetworkId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00800000;
              }
              while (input.getBytesUntilLimit() > 0) {
                adNetworkId_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          spotPlan_ = java.util.Collections.unmodifiableList(spotPlan_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          channelId_ = java.util.Collections.unmodifiableList(channelId_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          bannerId_ = java.util.Collections.unmodifiableList(bannerId_);
        }
        if (((mutable_bitField0_ & 0x00800000) == 0x00800000)) {
          adNetworkId_ = java.util.Collections.unmodifiableList(adNetworkId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.internal_static_de_cache_Solution_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.cache.DeliveryMessage.internal_static_de_cache_Solution_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.cache.DeliveryMessage.Solution.class, de.cache.DeliveryMessage.Solution.Builder.class);
    }

    public static com.google.protobuf.Parser<Solution> PARSER =
        new com.google.protobuf.AbstractParser<Solution>() {
      public Solution parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Solution(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Solution> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code de.cache.Solution.DeliveryType}
     *
     * <pre>
     *投放的类型
     * </pre>
     */
    public enum DeliveryType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CPM = 0;</code>
       *
       * <pre>
       *=0表示为cpm投放，显示数量在第10字段count中指定
       * </pre>
       */
      CPM(0, 0),
      /**
       * <code>CPD = 1;</code>
       *
       * <pre>
       *=1表示为cpd投放,百分比数量在第11个字段percent中指定，如果有上限在第12和13字段中maxcount中指定
       * </pre>
       */
      CPD(1, 1),
      /**
       * <code>CPC = 2;</code>
       *
       * <pre>
       *=2表示为CPC投放，点击数量在第10字段count中指定，如果有显示上限在第12和13字段中maxcount中指定
       * </pre>
       */
      CPC(2, 2),
      /**
       * <code>CPM_CAP_FOR_PRICES = 3;</code>
       *
       * <pre>
       *=3表示为CPM限价投放，使用第二价成交,限价金额在创意属性中设置
       * </pre>
       */
      CPM_CAP_FOR_PRICES(3, 3),
      /**
       * <code>CPC_CAP_FOR_PRICES = 4;</code>
       *
       * <pre>
       *=4表示为CPC限价投放，使用第二价成交,限价金额在创意属性中设置
       * </pre>
       */
      CPC_CAP_FOR_PRICES(4, 4),
      /**
       * <code>CPM_QUOTED_PRICES = 5;</code>
       *
       * <pre>
       *=5表示为CPM刊例价投放，具体单价在创意的相应字段中，在第10个字段count中存放投放级别的预算限制，如果还有订单级别的预算限制需要与第36个字段结合才能受订单级别预算控制
       * </pre>
       */
      CPM_QUOTED_PRICES(5, 5),
      /**
       * <code>CPC_QUOTED_PRICES = 6;</code>
       *
       * <pre>
       *=6表示为CPC刊例价投放，具体单价在创意的相应字段中，在第10个字段count中存放投放级别的预算限制，如果还有订单级别的预算限制需要与第36个字段结合才能受订单级别预算控制，如果有显示上限在第12和13字段中maxcount中指定与config表中percentflag字段值对应
       * </pre>
       */
      CPC_QUOTED_PRICES(6, 6),
      ;

      /**
       * <code>CPM = 0;</code>
       *
       * <pre>
       *=0表示为cpm投放，显示数量在第10字段count中指定
       * </pre>
       */
      public static final int CPM_VALUE = 0;
      /**
       * <code>CPD = 1;</code>
       *
       * <pre>
       *=1表示为cpd投放,百分比数量在第11个字段percent中指定，如果有上限在第12和13字段中maxcount中指定
       * </pre>
       */
      public static final int CPD_VALUE = 1;
      /**
       * <code>CPC = 2;</code>
       *
       * <pre>
       *=2表示为CPC投放，点击数量在第10字段count中指定，如果有显示上限在第12和13字段中maxcount中指定
       * </pre>
       */
      public static final int CPC_VALUE = 2;
      /**
       * <code>CPM_CAP_FOR_PRICES = 3;</code>
       *
       * <pre>
       *=3表示为CPM限价投放，使用第二价成交,限价金额在创意属性中设置
       * </pre>
       */
      public static final int CPM_CAP_FOR_PRICES_VALUE = 3;
      /**
       * <code>CPC_CAP_FOR_PRICES = 4;</code>
       *
       * <pre>
       *=4表示为CPC限价投放，使用第二价成交,限价金额在创意属性中设置
       * </pre>
       */
      public static final int CPC_CAP_FOR_PRICES_VALUE = 4;
      /**
       * <code>CPM_QUOTED_PRICES = 5;</code>
       *
       * <pre>
       *=5表示为CPM刊例价投放，具体单价在创意的相应字段中，在第10个字段count中存放投放级别的预算限制，如果还有订单级别的预算限制需要与第36个字段结合才能受订单级别预算控制
       * </pre>
       */
      public static final int CPM_QUOTED_PRICES_VALUE = 5;
      /**
       * <code>CPC_QUOTED_PRICES = 6;</code>
       *
       * <pre>
       *=6表示为CPC刊例价投放，具体单价在创意的相应字段中，在第10个字段count中存放投放级别的预算限制，如果还有订单级别的预算限制需要与第36个字段结合才能受订单级别预算控制，如果有显示上限在第12和13字段中maxcount中指定与config表中percentflag字段值对应
       * </pre>
       */
      public static final int CPC_QUOTED_PRICES_VALUE = 6;


      public final int getNumber() { return value; }

      public static DeliveryType valueOf(int value) {
        switch (value) {
          case 0: return CPM;
          case 1: return CPD;
          case 2: return CPC;
          case 3: return CPM_CAP_FOR_PRICES;
          case 4: return CPC_CAP_FOR_PRICES;
          case 5: return CPM_QUOTED_PRICES;
          case 6: return CPC_QUOTED_PRICES;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DeliveryType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<DeliveryType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DeliveryType>() {
              public DeliveryType findValueByNumber(int number) {
                return DeliveryType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.Solution.getDescriptor().getEnumTypes().get(0);
      }

      private static final DeliveryType[] VALUES = values();

      public static DeliveryType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private DeliveryType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:de.cache.Solution.DeliveryType)
    }

    public interface BidInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:de.cache.Solution.BidInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .de.cache.GlobalSwitch dynamicBid = 1;</code>
       *
       * <pre>
       *出价方式, OFF:固定出价,ON:智能出价
       * </pre>
       */
      boolean hasDynamicBid();
      /**
       * <code>optional .de.cache.GlobalSwitch dynamicBid = 1;</code>
       *
       * <pre>
       *出价方式, OFF:固定出价,ON:智能出价
       * </pre>
       */
      de.cache.DeliveryMessage.GlobalSwitch getDynamicBid();

      /**
       * <code>optional .de.cache.Solution.BidInfo.BidTargetType bidTarget = 2;</code>
       *
       * <pre>
       *出价目标(cpc|cpm|cpa|ROI)
       * </pre>
       */
      boolean hasBidTarget();
      /**
       * <code>optional .de.cache.Solution.BidInfo.BidTargetType bidTarget = 2;</code>
       *
       * <pre>
       *出价目标(cpc|cpm|cpa|ROI)
       * </pre>
       */
      de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType getBidTarget();

      /**
       * <code>optional .de.cache.Solution.BidInfo.BidTargetType optimizeTarget = 3;</code>
       *
       * <pre>
       *优化目标,cpm/cpc/cpa/roi,优化目标的价格在创意属性中
       * </pre>
       */
      boolean hasOptimizeTarget();
      /**
       * <code>optional .de.cache.Solution.BidInfo.BidTargetType optimizeTarget = 3;</code>
       *
       * <pre>
       *优化目标,cpm/cpc/cpa/roi,优化目标的价格在创意属性中
       * </pre>
       */
      de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType getOptimizeTarget();
    }
    /**
     * Protobuf type {@code de.cache.Solution.BidInfo}
     */
    public static final class BidInfo extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:de.cache.Solution.BidInfo)
        BidInfoOrBuilder {
      // Use BidInfo.newBuilder() to construct.
      private BidInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private BidInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final BidInfo defaultInstance;
      public static BidInfo getDefaultInstance() {
        return defaultInstance;
      }

      public BidInfo getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private BidInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.GlobalSwitch value = de.cache.DeliveryMessage.GlobalSwitch.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  dynamicBid_ = value;
                }
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType value = de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  bidTarget_ = value;
                }
                break;
              }
              case 24: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType value = de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(3, rawValue);
                } else {
                  bitField0_ |= 0x00000004;
                  optimizeTarget_ = value;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Solution_BidInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Solution_BidInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.Solution.BidInfo.class, de.cache.DeliveryMessage.Solution.BidInfo.Builder.class);
      }

      public static com.google.protobuf.Parser<BidInfo> PARSER =
          new com.google.protobuf.AbstractParser<BidInfo>() {
        public BidInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BidInfo(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<BidInfo> getParserForType() {
        return PARSER;
      }

      /**
       * Protobuf enum {@code de.cache.Solution.BidInfo.BidTargetType}
       *
       * <pre>
       *edit by nick 2014-05-30 (修改对应值)
       * </pre>
       */
      public enum BidTargetType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>CPM = 3;</code>
         */
        CPM(0, 3),
        /**
         * <code>CPC = 4;</code>
         */
        CPC(1, 4),
        /**
         * <code>CPA = 7;</code>
         */
        CPA(2, 7),
        /**
         * <code>ROI = 8;</code>
         */
        ROI(3, 8),
        ;

        /**
         * <code>CPM = 3;</code>
         */
        public static final int CPM_VALUE = 3;
        /**
         * <code>CPC = 4;</code>
         */
        public static final int CPC_VALUE = 4;
        /**
         * <code>CPA = 7;</code>
         */
        public static final int CPA_VALUE = 7;
        /**
         * <code>ROI = 8;</code>
         */
        public static final int ROI_VALUE = 8;


        public final int getNumber() { return value; }

        public static BidTargetType valueOf(int value) {
          switch (value) {
            case 3: return CPM;
            case 4: return CPC;
            case 7: return CPA;
            case 8: return ROI;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<BidTargetType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<BidTargetType>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<BidTargetType>() {
                public BidTargetType findValueByNumber(int number) {
                  return BidTargetType.valueOf(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return de.cache.DeliveryMessage.Solution.BidInfo.getDescriptor().getEnumTypes().get(0);
        }

        private static final BidTargetType[] VALUES = values();

        public static BidTargetType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private BidTargetType(int index, int value) {
          this.index = index;
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:de.cache.Solution.BidInfo.BidTargetType)
      }

      private int bitField0_;
      public static final int DYNAMICBID_FIELD_NUMBER = 1;
      private de.cache.DeliveryMessage.GlobalSwitch dynamicBid_;
      /**
       * <code>optional .de.cache.GlobalSwitch dynamicBid = 1;</code>
       *
       * <pre>
       *出价方式, OFF:固定出价,ON:智能出价
       * </pre>
       */
      public boolean hasDynamicBid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .de.cache.GlobalSwitch dynamicBid = 1;</code>
       *
       * <pre>
       *出价方式, OFF:固定出价,ON:智能出价
       * </pre>
       */
      public de.cache.DeliveryMessage.GlobalSwitch getDynamicBid() {
        return dynamicBid_;
      }

      public static final int BIDTARGET_FIELD_NUMBER = 2;
      private de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType bidTarget_;
      /**
       * <code>optional .de.cache.Solution.BidInfo.BidTargetType bidTarget = 2;</code>
       *
       * <pre>
       *出价目标(cpc|cpm|cpa|ROI)
       * </pre>
       */
      public boolean hasBidTarget() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .de.cache.Solution.BidInfo.BidTargetType bidTarget = 2;</code>
       *
       * <pre>
       *出价目标(cpc|cpm|cpa|ROI)
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType getBidTarget() {
        return bidTarget_;
      }

      public static final int OPTIMIZETARGET_FIELD_NUMBER = 3;
      private de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType optimizeTarget_;
      /**
       * <code>optional .de.cache.Solution.BidInfo.BidTargetType optimizeTarget = 3;</code>
       *
       * <pre>
       *优化目标,cpm/cpc/cpa/roi,优化目标的价格在创意属性中
       * </pre>
       */
      public boolean hasOptimizeTarget() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .de.cache.Solution.BidInfo.BidTargetType optimizeTarget = 3;</code>
       *
       * <pre>
       *优化目标,cpm/cpc/cpa/roi,优化目标的价格在创意属性中
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType getOptimizeTarget() {
        return optimizeTarget_;
      }

      private void initFields() {
        dynamicBid_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        bidTarget_ = de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType.CPM;
        optimizeTarget_ = de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType.CPM;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, dynamicBid_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, bidTarget_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeEnum(3, optimizeTarget_.getNumber());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, dynamicBid_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, bidTarget_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, optimizeTarget_.getNumber());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static de.cache.DeliveryMessage.Solution.BidInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.cache.DeliveryMessage.Solution.BidInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Solution.BidInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.cache.DeliveryMessage.Solution.BidInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Solution.BidInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.cache.DeliveryMessage.Solution.BidInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Solution.BidInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static de.cache.DeliveryMessage.Solution.BidInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Solution.BidInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.cache.DeliveryMessage.Solution.BidInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(de.cache.DeliveryMessage.Solution.BidInfo prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code de.cache.Solution.BidInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:de.cache.Solution.BidInfo)
          de.cache.DeliveryMessage.Solution.BidInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Solution_BidInfo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Solution_BidInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  de.cache.DeliveryMessage.Solution.BidInfo.class, de.cache.DeliveryMessage.Solution.BidInfo.Builder.class);
        }

        // Construct using de.cache.DeliveryMessage.Solution.BidInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          dynamicBid_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
          bitField0_ = (bitField0_ & ~0x00000001);
          bidTarget_ = de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType.CPM;
          bitField0_ = (bitField0_ & ~0x00000002);
          optimizeTarget_ = de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType.CPM;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Solution_BidInfo_descriptor;
        }

        public de.cache.DeliveryMessage.Solution.BidInfo getDefaultInstanceForType() {
          return de.cache.DeliveryMessage.Solution.BidInfo.getDefaultInstance();
        }

        public de.cache.DeliveryMessage.Solution.BidInfo build() {
          de.cache.DeliveryMessage.Solution.BidInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public de.cache.DeliveryMessage.Solution.BidInfo buildPartial() {
          de.cache.DeliveryMessage.Solution.BidInfo result = new de.cache.DeliveryMessage.Solution.BidInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.dynamicBid_ = dynamicBid_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.bidTarget_ = bidTarget_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.optimizeTarget_ = optimizeTarget_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof de.cache.DeliveryMessage.Solution.BidInfo) {
            return mergeFrom((de.cache.DeliveryMessage.Solution.BidInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(de.cache.DeliveryMessage.Solution.BidInfo other) {
          if (other == de.cache.DeliveryMessage.Solution.BidInfo.getDefaultInstance()) return this;
          if (other.hasDynamicBid()) {
            setDynamicBid(other.getDynamicBid());
          }
          if (other.hasBidTarget()) {
            setBidTarget(other.getBidTarget());
          }
          if (other.hasOptimizeTarget()) {
            setOptimizeTarget(other.getOptimizeTarget());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          de.cache.DeliveryMessage.Solution.BidInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (de.cache.DeliveryMessage.Solution.BidInfo) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private de.cache.DeliveryMessage.GlobalSwitch dynamicBid_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        /**
         * <code>optional .de.cache.GlobalSwitch dynamicBid = 1;</code>
         *
         * <pre>
         *出价方式, OFF:固定出价,ON:智能出价
         * </pre>
         */
        public boolean hasDynamicBid() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .de.cache.GlobalSwitch dynamicBid = 1;</code>
         *
         * <pre>
         *出价方式, OFF:固定出价,ON:智能出价
         * </pre>
         */
        public de.cache.DeliveryMessage.GlobalSwitch getDynamicBid() {
          return dynamicBid_;
        }
        /**
         * <code>optional .de.cache.GlobalSwitch dynamicBid = 1;</code>
         *
         * <pre>
         *出价方式, OFF:固定出价,ON:智能出价
         * </pre>
         */
        public Builder setDynamicBid(de.cache.DeliveryMessage.GlobalSwitch value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          dynamicBid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.GlobalSwitch dynamicBid = 1;</code>
         *
         * <pre>
         *出价方式, OFF:固定出价,ON:智能出价
         * </pre>
         */
        public Builder clearDynamicBid() {
          bitField0_ = (bitField0_ & ~0x00000001);
          dynamicBid_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType bidTarget_ = de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType.CPM;
        /**
         * <code>optional .de.cache.Solution.BidInfo.BidTargetType bidTarget = 2;</code>
         *
         * <pre>
         *出价目标(cpc|cpm|cpa|ROI)
         * </pre>
         */
        public boolean hasBidTarget() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .de.cache.Solution.BidInfo.BidTargetType bidTarget = 2;</code>
         *
         * <pre>
         *出价目标(cpc|cpm|cpa|ROI)
         * </pre>
         */
        public de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType getBidTarget() {
          return bidTarget_;
        }
        /**
         * <code>optional .de.cache.Solution.BidInfo.BidTargetType bidTarget = 2;</code>
         *
         * <pre>
         *出价目标(cpc|cpm|cpa|ROI)
         * </pre>
         */
        public Builder setBidTarget(de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          bidTarget_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.Solution.BidInfo.BidTargetType bidTarget = 2;</code>
         *
         * <pre>
         *出价目标(cpc|cpm|cpa|ROI)
         * </pre>
         */
        public Builder clearBidTarget() {
          bitField0_ = (bitField0_ & ~0x00000002);
          bidTarget_ = de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType.CPM;
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType optimizeTarget_ = de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType.CPM;
        /**
         * <code>optional .de.cache.Solution.BidInfo.BidTargetType optimizeTarget = 3;</code>
         *
         * <pre>
         *优化目标,cpm/cpc/cpa/roi,优化目标的价格在创意属性中
         * </pre>
         */
        public boolean hasOptimizeTarget() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .de.cache.Solution.BidInfo.BidTargetType optimizeTarget = 3;</code>
         *
         * <pre>
         *优化目标,cpm/cpc/cpa/roi,优化目标的价格在创意属性中
         * </pre>
         */
        public de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType getOptimizeTarget() {
          return optimizeTarget_;
        }
        /**
         * <code>optional .de.cache.Solution.BidInfo.BidTargetType optimizeTarget = 3;</code>
         *
         * <pre>
         *优化目标,cpm/cpc/cpa/roi,优化目标的价格在创意属性中
         * </pre>
         */
        public Builder setOptimizeTarget(de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000004;
          optimizeTarget_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.Solution.BidInfo.BidTargetType optimizeTarget = 3;</code>
         *
         * <pre>
         *优化目标,cpm/cpc/cpa/roi,优化目标的价格在创意属性中
         * </pre>
         */
        public Builder clearOptimizeTarget() {
          bitField0_ = (bitField0_ & ~0x00000004);
          optimizeTarget_ = de.cache.DeliveryMessage.Solution.BidInfo.BidTargetType.CPM;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:de.cache.Solution.BidInfo)
      }

      static {
        defaultInstance = new BidInfo(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:de.cache.Solution.BidInfo)
    }

    public interface SpotPlanOrBuilder extends
        // @@protoc_insertion_point(interface_extends:de.cache.Solution.SpotPlan)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *排期id
       * </pre>
       */
      boolean hasId();
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *排期id
       * </pre>
       */
      long getId();

      /**
       * <code>optional int64 startTimestamp = 2;</code>
       *
       * <pre>
       *投放开始时间
       * </pre>
       */
      boolean hasStartTimestamp();
      /**
       * <code>optional int64 startTimestamp = 2;</code>
       *
       * <pre>
       *投放开始时间
       * </pre>
       */
      long getStartTimestamp();

      /**
       * <code>optional int64 endTimestamp = 3;</code>
       *
       * <pre>
       *投放结束时间,必须大于等于beginTime
       * </pre>
       */
      boolean hasEndTimestamp();
      /**
       * <code>optional int64 endTimestamp = 3;</code>
       *
       * <pre>
       *投放结束时间,必须大于等于beginTime
       * </pre>
       */
      long getEndTimestamp();

      /**
       * <code>optional int32 dailyStartTime = 4;</code>
       *
       * <pre>
       *时间段定向 每天投放开始时间(秒数,0...86400)
       * </pre>
       */
      boolean hasDailyStartTime();
      /**
       * <code>optional int32 dailyStartTime = 4;</code>
       *
       * <pre>
       *时间段定向 每天投放开始时间(秒数,0...86400)
       * </pre>
       */
      int getDailyStartTime();

      /**
       * <code>optional int32 dailyEndTime = 5;</code>
       *
       * <pre>
       *时间段定向 每天投放结束时间(秒数,0...86400)必须大于等于beginTime
       * </pre>
       */
      boolean hasDailyEndTime();
      /**
       * <code>optional int32 dailyEndTime = 5;</code>
       *
       * <pre>
       *时间段定向 每天投放结束时间(秒数,0...86400)必须大于等于beginTime
       * </pre>
       */
      int getDailyEndTime();

      /**
       * <code>repeated int32 dayOfWeek = 6;</code>
       *
       * <pre>
       *dayOfWeek和dayOfMonth取并集，如果而者均没有设置或都=0时,忽略日期限制(即每天都投放)
       * </pre>
       */
      java.util.List<java.lang.Integer> getDayOfWeekList();
      /**
       * <code>repeated int32 dayOfWeek = 6;</code>
       *
       * <pre>
       *dayOfWeek和dayOfMonth取并集，如果而者均没有设置或都=0时,忽略日期限制(即每天都投放)
       * </pre>
       */
      int getDayOfWeekCount();
      /**
       * <code>repeated int32 dayOfWeek = 6;</code>
       *
       * <pre>
       *dayOfWeek和dayOfMonth取并集，如果而者均没有设置或都=0时,忽略日期限制(即每天都投放)
       * </pre>
       */
      int getDayOfWeek(int index);

      /**
       * <code>optional .de.cache.DeliveryMethod method = 7;</code>
       *
       * <pre>
       *Config级别的投放量: unassigned或=0时共享solution中量的设置,该级别无限制
       * </pre>
       */
      boolean hasMethod();
      /**
       * <code>optional .de.cache.DeliveryMethod method = 7;</code>
       *
       * <pre>
       *Config级别的投放量: unassigned或=0时共享solution中量的设置,该级别无限制
       * </pre>
       */
      de.cache.DeliveryMessage.DeliveryMethod getMethod();
      /**
       * <code>optional .de.cache.DeliveryMethod method = 7;</code>
       *
       * <pre>
       *Config级别的投放量: unassigned或=0时共享solution中量的设置,该级别无限制
       * </pre>
       */
      de.cache.DeliveryMessage.DeliveryMethodOrBuilder getMethodOrBuilder();
    }
    /**
     * Protobuf type {@code de.cache.Solution.SpotPlan}
     *
     * <pre>
     *投放排期数据Config
     * </pre>
     */
    public static final class SpotPlan extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:de.cache.Solution.SpotPlan)
        SpotPlanOrBuilder {
      // Use SpotPlan.newBuilder() to construct.
      private SpotPlan(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SpotPlan(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SpotPlan defaultInstance;
      public static SpotPlan getDefaultInstance() {
        return defaultInstance;
      }

      public SpotPlan getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SpotPlan(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                id_ = input.readInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                startTimestamp_ = input.readInt64();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                endTimestamp_ = input.readInt64();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                dailyStartTime_ = input.readInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                dailyEndTime_ = input.readInt32();
                break;
              }
              case 48: {
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                  dayOfWeek_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000020;
                }
                dayOfWeek_.add(input.readInt32());
                break;
              }
              case 50: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                  dayOfWeek_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000020;
                }
                while (input.getBytesUntilLimit() > 0) {
                  dayOfWeek_.add(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 58: {
                de.cache.DeliveryMessage.DeliveryMethod.Builder subBuilder = null;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                  subBuilder = method_.toBuilder();
                }
                method_ = input.readMessage(de.cache.DeliveryMessage.DeliveryMethod.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(method_);
                  method_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000020;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
            dayOfWeek_ = java.util.Collections.unmodifiableList(dayOfWeek_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Solution_SpotPlan_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Solution_SpotPlan_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.Solution.SpotPlan.class, de.cache.DeliveryMessage.Solution.SpotPlan.Builder.class);
      }

      public static com.google.protobuf.Parser<SpotPlan> PARSER =
          new com.google.protobuf.AbstractParser<SpotPlan>() {
        public SpotPlan parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SpotPlan(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SpotPlan> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ID_FIELD_NUMBER = 1;
      private long id_;
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *排期id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *排期id
       * </pre>
       */
      public long getId() {
        return id_;
      }

      public static final int STARTTIMESTAMP_FIELD_NUMBER = 2;
      private long startTimestamp_;
      /**
       * <code>optional int64 startTimestamp = 2;</code>
       *
       * <pre>
       *投放开始时间
       * </pre>
       */
      public boolean hasStartTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 startTimestamp = 2;</code>
       *
       * <pre>
       *投放开始时间
       * </pre>
       */
      public long getStartTimestamp() {
        return startTimestamp_;
      }

      public static final int ENDTIMESTAMP_FIELD_NUMBER = 3;
      private long endTimestamp_;
      /**
       * <code>optional int64 endTimestamp = 3;</code>
       *
       * <pre>
       *投放结束时间,必须大于等于beginTime
       * </pre>
       */
      public boolean hasEndTimestamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 endTimestamp = 3;</code>
       *
       * <pre>
       *投放结束时间,必须大于等于beginTime
       * </pre>
       */
      public long getEndTimestamp() {
        return endTimestamp_;
      }

      public static final int DAILYSTARTTIME_FIELD_NUMBER = 4;
      private int dailyStartTime_;
      /**
       * <code>optional int32 dailyStartTime = 4;</code>
       *
       * <pre>
       *时间段定向 每天投放开始时间(秒数,0...86400)
       * </pre>
       */
      public boolean hasDailyStartTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 dailyStartTime = 4;</code>
       *
       * <pre>
       *时间段定向 每天投放开始时间(秒数,0...86400)
       * </pre>
       */
      public int getDailyStartTime() {
        return dailyStartTime_;
      }

      public static final int DAILYENDTIME_FIELD_NUMBER = 5;
      private int dailyEndTime_;
      /**
       * <code>optional int32 dailyEndTime = 5;</code>
       *
       * <pre>
       *时间段定向 每天投放结束时间(秒数,0...86400)必须大于等于beginTime
       * </pre>
       */
      public boolean hasDailyEndTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 dailyEndTime = 5;</code>
       *
       * <pre>
       *时间段定向 每天投放结束时间(秒数,0...86400)必须大于等于beginTime
       * </pre>
       */
      public int getDailyEndTime() {
        return dailyEndTime_;
      }

      public static final int DAYOFWEEK_FIELD_NUMBER = 6;
      private java.util.List<java.lang.Integer> dayOfWeek_;
      /**
       * <code>repeated int32 dayOfWeek = 6;</code>
       *
       * <pre>
       *dayOfWeek和dayOfMonth取并集，如果而者均没有设置或都=0时,忽略日期限制(即每天都投放)
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDayOfWeekList() {
        return dayOfWeek_;
      }
      /**
       * <code>repeated int32 dayOfWeek = 6;</code>
       *
       * <pre>
       *dayOfWeek和dayOfMonth取并集，如果而者均没有设置或都=0时,忽略日期限制(即每天都投放)
       * </pre>
       */
      public int getDayOfWeekCount() {
        return dayOfWeek_.size();
      }
      /**
       * <code>repeated int32 dayOfWeek = 6;</code>
       *
       * <pre>
       *dayOfWeek和dayOfMonth取并集，如果而者均没有设置或都=0时,忽略日期限制(即每天都投放)
       * </pre>
       */
      public int getDayOfWeek(int index) {
        return dayOfWeek_.get(index);
      }

      public static final int METHOD_FIELD_NUMBER = 7;
      private de.cache.DeliveryMessage.DeliveryMethod method_;
      /**
       * <code>optional .de.cache.DeliveryMethod method = 7;</code>
       *
       * <pre>
       *Config级别的投放量: unassigned或=0时共享solution中量的设置,该级别无限制
       * </pre>
       */
      public boolean hasMethod() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 7;</code>
       *
       * <pre>
       *Config级别的投放量: unassigned或=0时共享solution中量的设置,该级别无限制
       * </pre>
       */
      public de.cache.DeliveryMessage.DeliveryMethod getMethod() {
        return method_;
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 7;</code>
       *
       * <pre>
       *Config级别的投放量: unassigned或=0时共享solution中量的设置,该级别无限制
       * </pre>
       */
      public de.cache.DeliveryMessage.DeliveryMethodOrBuilder getMethodOrBuilder() {
        return method_;
      }

      private void initFields() {
        id_ = 0L;
        startTimestamp_ = 0L;
        endTimestamp_ = 0L;
        dailyStartTime_ = 0;
        dailyEndTime_ = 0;
        dayOfWeek_ = java.util.Collections.emptyList();
        method_ = de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt64(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt64(2, startTimestamp_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt64(3, endTimestamp_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, dailyStartTime_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(5, dailyEndTime_);
        }
        for (int i = 0; i < dayOfWeek_.size(); i++) {
          output.writeInt32(6, dayOfWeek_.get(i));
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeMessage(7, method_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, startTimestamp_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(3, endTimestamp_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, dailyStartTime_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, dailyEndTime_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < dayOfWeek_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dayOfWeek_.get(i));
          }
          size += dataSize;
          size += 1 * getDayOfWeekList().size();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, method_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static de.cache.DeliveryMessage.Solution.SpotPlan parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.cache.DeliveryMessage.Solution.SpotPlan parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Solution.SpotPlan parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.cache.DeliveryMessage.Solution.SpotPlan parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Solution.SpotPlan parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.cache.DeliveryMessage.Solution.SpotPlan parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Solution.SpotPlan parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static de.cache.DeliveryMessage.Solution.SpotPlan parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Solution.SpotPlan parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.cache.DeliveryMessage.Solution.SpotPlan parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(de.cache.DeliveryMessage.Solution.SpotPlan prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code de.cache.Solution.SpotPlan}
       *
       * <pre>
       *投放排期数据Config
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:de.cache.Solution.SpotPlan)
          de.cache.DeliveryMessage.Solution.SpotPlanOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Solution_SpotPlan_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Solution_SpotPlan_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  de.cache.DeliveryMessage.Solution.SpotPlan.class, de.cache.DeliveryMessage.Solution.SpotPlan.Builder.class);
        }

        // Construct using de.cache.DeliveryMessage.Solution.SpotPlan.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getMethodFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          id_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          startTimestamp_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          endTimestamp_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000004);
          dailyStartTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          dailyEndTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          dayOfWeek_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          if (methodBuilder_ == null) {
            method_ = de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance();
          } else {
            methodBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Solution_SpotPlan_descriptor;
        }

        public de.cache.DeliveryMessage.Solution.SpotPlan getDefaultInstanceForType() {
          return de.cache.DeliveryMessage.Solution.SpotPlan.getDefaultInstance();
        }

        public de.cache.DeliveryMessage.Solution.SpotPlan build() {
          de.cache.DeliveryMessage.Solution.SpotPlan result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public de.cache.DeliveryMessage.Solution.SpotPlan buildPartial() {
          de.cache.DeliveryMessage.Solution.SpotPlan result = new de.cache.DeliveryMessage.Solution.SpotPlan(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.startTimestamp_ = startTimestamp_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.endTimestamp_ = endTimestamp_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.dailyStartTime_ = dailyStartTime_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.dailyEndTime_ = dailyEndTime_;
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            dayOfWeek_ = java.util.Collections.unmodifiableList(dayOfWeek_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.dayOfWeek_ = dayOfWeek_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000020;
          }
          if (methodBuilder_ == null) {
            result.method_ = method_;
          } else {
            result.method_ = methodBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof de.cache.DeliveryMessage.Solution.SpotPlan) {
            return mergeFrom((de.cache.DeliveryMessage.Solution.SpotPlan)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(de.cache.DeliveryMessage.Solution.SpotPlan other) {
          if (other == de.cache.DeliveryMessage.Solution.SpotPlan.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasStartTimestamp()) {
            setStartTimestamp(other.getStartTimestamp());
          }
          if (other.hasEndTimestamp()) {
            setEndTimestamp(other.getEndTimestamp());
          }
          if (other.hasDailyStartTime()) {
            setDailyStartTime(other.getDailyStartTime());
          }
          if (other.hasDailyEndTime()) {
            setDailyEndTime(other.getDailyEndTime());
          }
          if (!other.dayOfWeek_.isEmpty()) {
            if (dayOfWeek_.isEmpty()) {
              dayOfWeek_ = other.dayOfWeek_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureDayOfWeekIsMutable();
              dayOfWeek_.addAll(other.dayOfWeek_);
            }
            onChanged();
          }
          if (other.hasMethod()) {
            mergeMethod(other.getMethod());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          de.cache.DeliveryMessage.Solution.SpotPlan parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (de.cache.DeliveryMessage.Solution.SpotPlan) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long id_ ;
        /**
         * <code>optional int64 id = 1;</code>
         *
         * <pre>
         *排期id
         * </pre>
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int64 id = 1;</code>
         *
         * <pre>
         *排期id
         * </pre>
         */
        public long getId() {
          return id_;
        }
        /**
         * <code>optional int64 id = 1;</code>
         *
         * <pre>
         *排期id
         * </pre>
         */
        public Builder setId(long value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 id = 1;</code>
         *
         * <pre>
         *排期id
         * </pre>
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0L;
          onChanged();
          return this;
        }

        private long startTimestamp_ ;
        /**
         * <code>optional int64 startTimestamp = 2;</code>
         *
         * <pre>
         *投放开始时间
         * </pre>
         */
        public boolean hasStartTimestamp() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int64 startTimestamp = 2;</code>
         *
         * <pre>
         *投放开始时间
         * </pre>
         */
        public long getStartTimestamp() {
          return startTimestamp_;
        }
        /**
         * <code>optional int64 startTimestamp = 2;</code>
         *
         * <pre>
         *投放开始时间
         * </pre>
         */
        public Builder setStartTimestamp(long value) {
          bitField0_ |= 0x00000002;
          startTimestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 startTimestamp = 2;</code>
         *
         * <pre>
         *投放开始时间
         * </pre>
         */
        public Builder clearStartTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000002);
          startTimestamp_ = 0L;
          onChanged();
          return this;
        }

        private long endTimestamp_ ;
        /**
         * <code>optional int64 endTimestamp = 3;</code>
         *
         * <pre>
         *投放结束时间,必须大于等于beginTime
         * </pre>
         */
        public boolean hasEndTimestamp() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int64 endTimestamp = 3;</code>
         *
         * <pre>
         *投放结束时间,必须大于等于beginTime
         * </pre>
         */
        public long getEndTimestamp() {
          return endTimestamp_;
        }
        /**
         * <code>optional int64 endTimestamp = 3;</code>
         *
         * <pre>
         *投放结束时间,必须大于等于beginTime
         * </pre>
         */
        public Builder setEndTimestamp(long value) {
          bitField0_ |= 0x00000004;
          endTimestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 endTimestamp = 3;</code>
         *
         * <pre>
         *投放结束时间,必须大于等于beginTime
         * </pre>
         */
        public Builder clearEndTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000004);
          endTimestamp_ = 0L;
          onChanged();
          return this;
        }

        private int dailyStartTime_ ;
        /**
         * <code>optional int32 dailyStartTime = 4;</code>
         *
         * <pre>
         *时间段定向 每天投放开始时间(秒数,0...86400)
         * </pre>
         */
        public boolean hasDailyStartTime() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 dailyStartTime = 4;</code>
         *
         * <pre>
         *时间段定向 每天投放开始时间(秒数,0...86400)
         * </pre>
         */
        public int getDailyStartTime() {
          return dailyStartTime_;
        }
        /**
         * <code>optional int32 dailyStartTime = 4;</code>
         *
         * <pre>
         *时间段定向 每天投放开始时间(秒数,0...86400)
         * </pre>
         */
        public Builder setDailyStartTime(int value) {
          bitField0_ |= 0x00000008;
          dailyStartTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 dailyStartTime = 4;</code>
         *
         * <pre>
         *时间段定向 每天投放开始时间(秒数,0...86400)
         * </pre>
         */
        public Builder clearDailyStartTime() {
          bitField0_ = (bitField0_ & ~0x00000008);
          dailyStartTime_ = 0;
          onChanged();
          return this;
        }

        private int dailyEndTime_ ;
        /**
         * <code>optional int32 dailyEndTime = 5;</code>
         *
         * <pre>
         *时间段定向 每天投放结束时间(秒数,0...86400)必须大于等于beginTime
         * </pre>
         */
        public boolean hasDailyEndTime() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional int32 dailyEndTime = 5;</code>
         *
         * <pre>
         *时间段定向 每天投放结束时间(秒数,0...86400)必须大于等于beginTime
         * </pre>
         */
        public int getDailyEndTime() {
          return dailyEndTime_;
        }
        /**
         * <code>optional int32 dailyEndTime = 5;</code>
         *
         * <pre>
         *时间段定向 每天投放结束时间(秒数,0...86400)必须大于等于beginTime
         * </pre>
         */
        public Builder setDailyEndTime(int value) {
          bitField0_ |= 0x00000010;
          dailyEndTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 dailyEndTime = 5;</code>
         *
         * <pre>
         *时间段定向 每天投放结束时间(秒数,0...86400)必须大于等于beginTime
         * </pre>
         */
        public Builder clearDailyEndTime() {
          bitField0_ = (bitField0_ & ~0x00000010);
          dailyEndTime_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> dayOfWeek_ = java.util.Collections.emptyList();
        private void ensureDayOfWeekIsMutable() {
          if (!((bitField0_ & 0x00000020) == 0x00000020)) {
            dayOfWeek_ = new java.util.ArrayList<java.lang.Integer>(dayOfWeek_);
            bitField0_ |= 0x00000020;
           }
        }
        /**
         * <code>repeated int32 dayOfWeek = 6;</code>
         *
         * <pre>
         *dayOfWeek和dayOfMonth取并集，如果而者均没有设置或都=0时,忽略日期限制(即每天都投放)
         * </pre>
         */
        public java.util.List<java.lang.Integer>
            getDayOfWeekList() {
          return java.util.Collections.unmodifiableList(dayOfWeek_);
        }
        /**
         * <code>repeated int32 dayOfWeek = 6;</code>
         *
         * <pre>
         *dayOfWeek和dayOfMonth取并集，如果而者均没有设置或都=0时,忽略日期限制(即每天都投放)
         * </pre>
         */
        public int getDayOfWeekCount() {
          return dayOfWeek_.size();
        }
        /**
         * <code>repeated int32 dayOfWeek = 6;</code>
         *
         * <pre>
         *dayOfWeek和dayOfMonth取并集，如果而者均没有设置或都=0时,忽略日期限制(即每天都投放)
         * </pre>
         */
        public int getDayOfWeek(int index) {
          return dayOfWeek_.get(index);
        }
        /**
         * <code>repeated int32 dayOfWeek = 6;</code>
         *
         * <pre>
         *dayOfWeek和dayOfMonth取并集，如果而者均没有设置或都=0时,忽略日期限制(即每天都投放)
         * </pre>
         */
        public Builder setDayOfWeek(
            int index, int value) {
          ensureDayOfWeekIsMutable();
          dayOfWeek_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 dayOfWeek = 6;</code>
         *
         * <pre>
         *dayOfWeek和dayOfMonth取并集，如果而者均没有设置或都=0时,忽略日期限制(即每天都投放)
         * </pre>
         */
        public Builder addDayOfWeek(int value) {
          ensureDayOfWeekIsMutable();
          dayOfWeek_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 dayOfWeek = 6;</code>
         *
         * <pre>
         *dayOfWeek和dayOfMonth取并集，如果而者均没有设置或都=0时,忽略日期限制(即每天都投放)
         * </pre>
         */
        public Builder addAllDayOfWeek(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureDayOfWeekIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dayOfWeek_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 dayOfWeek = 6;</code>
         *
         * <pre>
         *dayOfWeek和dayOfMonth取并集，如果而者均没有设置或都=0时,忽略日期限制(即每天都投放)
         * </pre>
         */
        public Builder clearDayOfWeek() {
          dayOfWeek_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.DeliveryMethod method_ = de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            de.cache.DeliveryMessage.DeliveryMethod, de.cache.DeliveryMessage.DeliveryMethod.Builder, de.cache.DeliveryMessage.DeliveryMethodOrBuilder> methodBuilder_;
        /**
         * <code>optional .de.cache.DeliveryMethod method = 7;</code>
         *
         * <pre>
         *Config级别的投放量: unassigned或=0时共享solution中量的设置,该级别无限制
         * </pre>
         */
        public boolean hasMethod() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional .de.cache.DeliveryMethod method = 7;</code>
         *
         * <pre>
         *Config级别的投放量: unassigned或=0时共享solution中量的设置,该级别无限制
         * </pre>
         */
        public de.cache.DeliveryMessage.DeliveryMethod getMethod() {
          if (methodBuilder_ == null) {
            return method_;
          } else {
            return methodBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .de.cache.DeliveryMethod method = 7;</code>
         *
         * <pre>
         *Config级别的投放量: unassigned或=0时共享solution中量的设置,该级别无限制
         * </pre>
         */
        public Builder setMethod(de.cache.DeliveryMessage.DeliveryMethod value) {
          if (methodBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            method_ = value;
            onChanged();
          } else {
            methodBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000040;
          return this;
        }
        /**
         * <code>optional .de.cache.DeliveryMethod method = 7;</code>
         *
         * <pre>
         *Config级别的投放量: unassigned或=0时共享solution中量的设置,该级别无限制
         * </pre>
         */
        public Builder setMethod(
            de.cache.DeliveryMessage.DeliveryMethod.Builder builderForValue) {
          if (methodBuilder_ == null) {
            method_ = builderForValue.build();
            onChanged();
          } else {
            methodBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000040;
          return this;
        }
        /**
         * <code>optional .de.cache.DeliveryMethod method = 7;</code>
         *
         * <pre>
         *Config级别的投放量: unassigned或=0时共享solution中量的设置,该级别无限制
         * </pre>
         */
        public Builder mergeMethod(de.cache.DeliveryMessage.DeliveryMethod value) {
          if (methodBuilder_ == null) {
            if (((bitField0_ & 0x00000040) == 0x00000040) &&
                method_ != de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance()) {
              method_ =
                de.cache.DeliveryMessage.DeliveryMethod.newBuilder(method_).mergeFrom(value).buildPartial();
            } else {
              method_ = value;
            }
            onChanged();
          } else {
            methodBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000040;
          return this;
        }
        /**
         * <code>optional .de.cache.DeliveryMethod method = 7;</code>
         *
         * <pre>
         *Config级别的投放量: unassigned或=0时共享solution中量的设置,该级别无限制
         * </pre>
         */
        public Builder clearMethod() {
          if (methodBuilder_ == null) {
            method_ = de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance();
            onChanged();
          } else {
            methodBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }
        /**
         * <code>optional .de.cache.DeliveryMethod method = 7;</code>
         *
         * <pre>
         *Config级别的投放量: unassigned或=0时共享solution中量的设置,该级别无限制
         * </pre>
         */
        public de.cache.DeliveryMessage.DeliveryMethod.Builder getMethodBuilder() {
          bitField0_ |= 0x00000040;
          onChanged();
          return getMethodFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .de.cache.DeliveryMethod method = 7;</code>
         *
         * <pre>
         *Config级别的投放量: unassigned或=0时共享solution中量的设置,该级别无限制
         * </pre>
         */
        public de.cache.DeliveryMessage.DeliveryMethodOrBuilder getMethodOrBuilder() {
          if (methodBuilder_ != null) {
            return methodBuilder_.getMessageOrBuilder();
          } else {
            return method_;
          }
        }
        /**
         * <code>optional .de.cache.DeliveryMethod method = 7;</code>
         *
         * <pre>
         *Config级别的投放量: unassigned或=0时共享solution中量的设置,该级别无限制
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            de.cache.DeliveryMessage.DeliveryMethod, de.cache.DeliveryMessage.DeliveryMethod.Builder, de.cache.DeliveryMessage.DeliveryMethodOrBuilder> 
            getMethodFieldBuilder() {
          if (methodBuilder_ == null) {
            methodBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                de.cache.DeliveryMessage.DeliveryMethod, de.cache.DeliveryMessage.DeliveryMethod.Builder, de.cache.DeliveryMessage.DeliveryMethodOrBuilder>(
                    getMethod(),
                    getParentForChildren(),
                    isClean());
            method_ = null;
          }
          return methodBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:de.cache.Solution.SpotPlan)
      }

      static {
        defaultInstance = new SpotPlan(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:de.cache.Solution.SpotPlan)
    }

    public interface SolutionTargetOrBuilder extends
        // @@protoc_insertion_point(interface_extends:de.cache.Solution.SolutionTarget)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .de.cache.FrequencyCtrl frequencyCtrl = 1;</code>
       *
       * <pre>
       *投放级显示频次定向
       * </pre>
       */
      boolean hasFrequencyCtrl();
      /**
       * <code>optional .de.cache.FrequencyCtrl frequencyCtrl = 1;</code>
       *
       * <pre>
       *投放级显示频次定向
       * </pre>
       */
      de.cache.DeliveryMessage.FrequencyCtrl getFrequencyCtrl();
      /**
       * <code>optional .de.cache.FrequencyCtrl frequencyCtrl = 1;</code>
       *
       * <pre>
       *投放级显示频次定向
       * </pre>
       */
      de.cache.DeliveryMessage.FrequencyCtrlOrBuilder getFrequencyCtrlOrBuilder();

      /**
       * <code>optional .de.cache.GlobalSwitch orderFrequency = 2 [default = ON];</code>
       *
       * <pre>
       *订单级显示频次控制标示，ON受控、OFF不受控
       * </pre>
       */
      boolean hasOrderFrequency();
      /**
       * <code>optional .de.cache.GlobalSwitch orderFrequency = 2 [default = ON];</code>
       *
       * <pre>
       *订单级显示频次控制标示，ON受控、OFF不受控
       * </pre>
       */
      de.cache.DeliveryMessage.GlobalSwitch getOrderFrequency();

      /**
       * <code>optional .de.cache.FrequencyCtrl clickFrequency = 3;</code>
       *
       * <pre>
       *点击频次定向,clickFrequency.intervalSec取值被忽略
       * </pre>
       */
      boolean hasClickFrequency();
      /**
       * <code>optional .de.cache.FrequencyCtrl clickFrequency = 3;</code>
       *
       * <pre>
       *点击频次定向,clickFrequency.intervalSec取值被忽略
       * </pre>
       */
      de.cache.DeliveryMessage.FrequencyCtrl getClickFrequency();
      /**
       * <code>optional .de.cache.FrequencyCtrl clickFrequency = 3;</code>
       *
       * <pre>
       *点击频次定向,clickFrequency.intervalSec取值被忽略
       * </pre>
       */
      de.cache.DeliveryMessage.FrequencyCtrlOrBuilder getClickFrequencyOrBuilder();

      /**
       * <code>optional .de.cache.GlobalSwitch stopImpressionWhenMaxClick = 4 [default = OFF];</code>
       *
       * <pre>
       *点击频次控制显示标识，0=当点击频次达到上限时不控制显示，1=点击频次达到上限的时候需要控制不显示
       * </pre>
       */
      boolean hasStopImpressionWhenMaxClick();
      /**
       * <code>optional .de.cache.GlobalSwitch stopImpressionWhenMaxClick = 4 [default = OFF];</code>
       *
       * <pre>
       *点击频次控制显示标识，0=当点击频次达到上限时不控制显示，1=点击频次达到上限的时候需要控制不显示
       * </pre>
       */
      de.cache.DeliveryMessage.GlobalSwitch getStopImpressionWhenMaxClick();

      /**
       * <code>optional .de.cache.TargetFlag locationFlag = 5 [default = CLOSE];</code>
       *
       * <pre>
       *地域定向标识，0不定向、1定向、2非定向
       * </pre>
       */
      boolean hasLocationFlag();
      /**
       * <code>optional .de.cache.TargetFlag locationFlag = 5 [default = CLOSE];</code>
       *
       * <pre>
       *地域定向标识，0不定向、1定向、2非定向
       * </pre>
       */
      de.cache.DeliveryMessage.TargetFlag getLocationFlag();

      /**
       * <code>repeated string location = 6;</code>
       *
       * <pre>
       *地域定向内容，本字段目前内容全部由6位或以上字母组成，支持*通配符.例中国重庆表示为CNCQ*,CN表示中国,CQ表示重庆.*表示重庆下辖的所有二级城市。美国则表示为US*
       * </pre>
       */
      com.google.protobuf.ProtocolStringList
          getLocationList();
      /**
       * <code>repeated string location = 6;</code>
       *
       * <pre>
       *地域定向内容，本字段目前内容全部由6位或以上字母组成，支持*通配符.例中国重庆表示为CNCQ*,CN表示中国,CQ表示重庆.*表示重庆下辖的所有二级城市。美国则表示为US*
       * </pre>
       */
      int getLocationCount();
      /**
       * <code>repeated string location = 6;</code>
       *
       * <pre>
       *地域定向内容，本字段目前内容全部由6位或以上字母组成，支持*通配符.例中国重庆表示为CNCQ*,CN表示中国,CQ表示重庆.*表示重庆下辖的所有二级城市。美国则表示为US*
       * </pre>
       */
      java.lang.String getLocation(int index);
      /**
       * <code>repeated string location = 6;</code>
       *
       * <pre>
       *地域定向内容，本字段目前内容全部由6位或以上字母组成，支持*通配符.例中国重庆表示为CNCQ*,CN表示中国,CQ表示重庆.*表示重庆下辖的所有二级城市。美国则表示为US*
       * </pre>
       */
      com.google.protobuf.ByteString
          getLocationBytes(int index);

      /**
       * <code>optional .de.cache.TargetFlag universityFlag = 7 [default = CLOSE];</code>
       *
       * <pre>
       *大学用户(教育网IP.)定向标示，0不定向、1定向、2非定向
       * </pre>
       */
      boolean hasUniversityFlag();
      /**
       * <code>optional .de.cache.TargetFlag universityFlag = 7 [default = CLOSE];</code>
       *
       * <pre>
       *大学用户(教育网IP.)定向标示，0不定向、1定向、2非定向
       * </pre>
       */
      de.cache.DeliveryMessage.TargetFlag getUniversityFlag();

      /**
       * <code>optional .de.cache.TargetFlag languageFlag = 8 [default = CLOSE];</code>
       *
       * <pre>
       *浏览器语言定向标识，0不定向、1定向、2非定向
       * </pre>
       */
      boolean hasLanguageFlag();
      /**
       * <code>optional .de.cache.TargetFlag languageFlag = 8 [default = CLOSE];</code>
       *
       * <pre>
       *浏览器语言定向标识，0不定向、1定向、2非定向
       * </pre>
       */
      de.cache.DeliveryMessage.TargetFlag getLanguageFlag();

      /**
       * <code>repeated string language = 9;</code>
       *
       * <pre>
       *浏览器语言定向的具体内容，一般格式为"大语种代号-区域代号",多个语种时使用','分隔开,如"`zh-cn,zh-hk,en,en-za`",Zh表示汉语 cn表示大陆简体
       * </pre>
       */
      com.google.protobuf.ProtocolStringList
          getLanguageList();
      /**
       * <code>repeated string language = 9;</code>
       *
       * <pre>
       *浏览器语言定向的具体内容，一般格式为"大语种代号-区域代号",多个语种时使用','分隔开,如"`zh-cn,zh-hk,en,en-za`",Zh表示汉语 cn表示大陆简体
       * </pre>
       */
      int getLanguageCount();
      /**
       * <code>repeated string language = 9;</code>
       *
       * <pre>
       *浏览器语言定向的具体内容，一般格式为"大语种代号-区域代号",多个语种时使用','分隔开,如"`zh-cn,zh-hk,en,en-za`",Zh表示汉语 cn表示大陆简体
       * </pre>
       */
      java.lang.String getLanguage(int index);
      /**
       * <code>repeated string language = 9;</code>
       *
       * <pre>
       *浏览器语言定向的具体内容，一般格式为"大语种代号-区域代号",多个语种时使用','分隔开,如"`zh-cn,zh-hk,en,en-za`",Zh表示汉语 cn表示大陆简体
       * </pre>
       */
      com.google.protobuf.ByteString
          getLanguageBytes(int index);

      /**
       * <code>optional .de.cache.TargetFlag osFlag = 10 [default = CLOSE];</code>
       *
       * <pre>
       *操作系统定向标识，0不定向、1定向、2非定向
       * </pre>
       */
      boolean hasOsFlag();
      /**
       * <code>optional .de.cache.TargetFlag osFlag = 10 [default = CLOSE];</code>
       *
       * <pre>
       *操作系统定向标识，0不定向、1定向、2非定向
       * </pre>
       */
      de.cache.DeliveryMessage.TargetFlag getOsFlag();

      /**
       * <code>repeated string os = 11;</code>
       *
       * <pre>
       *定向的操作系统名称， 如Windows 98,Win98,Win32,Android,Android 2.1等,定向操作方式均是使用字符串查询匹配，也就是支持 sysname+version*匹配，如：HTC_Android 2.1系统，使用HTC、HTC_Android、HTC_Android 2等定向条件均能定向成功。
       * </pre>
       */
      com.google.protobuf.ProtocolStringList
          getOsList();
      /**
       * <code>repeated string os = 11;</code>
       *
       * <pre>
       *定向的操作系统名称， 如Windows 98,Win98,Win32,Android,Android 2.1等,定向操作方式均是使用字符串查询匹配，也就是支持 sysname+version*匹配，如：HTC_Android 2.1系统，使用HTC、HTC_Android、HTC_Android 2等定向条件均能定向成功。
       * </pre>
       */
      int getOsCount();
      /**
       * <code>repeated string os = 11;</code>
       *
       * <pre>
       *定向的操作系统名称， 如Windows 98,Win98,Win32,Android,Android 2.1等,定向操作方式均是使用字符串查询匹配，也就是支持 sysname+version*匹配，如：HTC_Android 2.1系统，使用HTC、HTC_Android、HTC_Android 2等定向条件均能定向成功。
       * </pre>
       */
      java.lang.String getOs(int index);
      /**
       * <code>repeated string os = 11;</code>
       *
       * <pre>
       *定向的操作系统名称， 如Windows 98,Win98,Win32,Android,Android 2.1等,定向操作方式均是使用字符串查询匹配，也就是支持 sysname+version*匹配，如：HTC_Android 2.1系统，使用HTC、HTC_Android、HTC_Android 2等定向条件均能定向成功。
       * </pre>
       */
      com.google.protobuf.ByteString
          getOsBytes(int index);

      /**
       * <code>optional .de.cache.GlobalSwitch linkageFlag = 12 [default = OFF];</code>
       *
       * <pre>
       *投放联动标识，0非联动、1联动
       * </pre>
       */
      boolean hasLinkageFlag();
      /**
       * <code>optional .de.cache.GlobalSwitch linkageFlag = 12 [default = OFF];</code>
       *
       * <pre>
       *投放联动标识，0非联动、1联动
       * </pre>
       */
      de.cache.DeliveryMessage.GlobalSwitch getLinkageFlag();

      /**
       * <code>optional .de.cache.TargetFlag keywordFlag = 13 [default = CLOSE];</code>
       *
       * <pre>
       *关键字定向标识，0不定向、1定向、2非定向
       * </pre>
       */
      boolean hasKeywordFlag();
      /**
       * <code>optional .de.cache.TargetFlag keywordFlag = 13 [default = CLOSE];</code>
       *
       * <pre>
       *关键字定向标识，0不定向、1定向、2非定向
       * </pre>
       */
      de.cache.DeliveryMessage.TargetFlag getKeywordFlag();

      /**
       * <code>optional string keyword = 14;</code>
       *
       * <pre>
       *关键字定向的具体关键字和值(关系表达式)，如“w=上海|w=中国|s=美国”，
       *表示广告遇到“w=上海”或者“w=中国”或者“s=美国”的字符串参数的时候，就优先播放。
       *与solution表中GID=投放solutionid 的子记录（channeltype=c）的keyword字段值对应。该关系表达式详细格式描述见相关文档
       * </pre>
       */
      boolean hasKeyword();
      /**
       * <code>optional string keyword = 14;</code>
       *
       * <pre>
       *关键字定向的具体关键字和值(关系表达式)，如“w=上海|w=中国|s=美国”，
       *表示广告遇到“w=上海”或者“w=中国”或者“s=美国”的字符串参数的时候，就优先播放。
       *与solution表中GID=投放solutionid 的子记录（channeltype=c）的keyword字段值对应。该关系表达式详细格式描述见相关文档
       * </pre>
       */
      java.lang.String getKeyword();
      /**
       * <code>optional string keyword = 14;</code>
       *
       * <pre>
       *关键字定向的具体关键字和值(关系表达式)，如“w=上海|w=中国|s=美国”，
       *表示广告遇到“w=上海”或者“w=中国”或者“s=美国”的字符串参数的时候，就优先播放。
       *与solution表中GID=投放solutionid 的子记录（channeltype=c）的keyword字段值对应。该关系表达式详细格式描述见相关文档
       * </pre>
       */
      com.google.protobuf.ByteString
          getKeywordBytes();

      /**
       * <code>optional .de.cache.TargetFlag browserFlag = 15 [default = CLOSE];</code>
       *
       * <pre>
       *浏览器定向标识，0不定向、1定向、2非定向
       * </pre>
       */
      boolean hasBrowserFlag();
      /**
       * <code>optional .de.cache.TargetFlag browserFlag = 15 [default = CLOSE];</code>
       *
       * <pre>
       *浏览器定向标识，0不定向、1定向、2非定向
       * </pre>
       */
      de.cache.DeliveryMessage.TargetFlag getBrowserFlag();

      /**
       * <code>repeated string browser = 16;</code>
       *
       * <pre>
       *浏览器定向的具体浏览器代码
       * </pre>
       */
      com.google.protobuf.ProtocolStringList
          getBrowserList();
      /**
       * <code>repeated string browser = 16;</code>
       *
       * <pre>
       *浏览器定向的具体浏览器代码
       * </pre>
       */
      int getBrowserCount();
      /**
       * <code>repeated string browser = 16;</code>
       *
       * <pre>
       *浏览器定向的具体浏览器代码
       * </pre>
       */
      java.lang.String getBrowser(int index);
      /**
       * <code>repeated string browser = 16;</code>
       *
       * <pre>
       *浏览器定向的具体浏览器代码
       * </pre>
       */
      com.google.protobuf.ByteString
          getBrowserBytes(int index);

      /**
       * <code>optional .de.cache.GlobalSwitch demographicFlag = 17 [default = OFF];</code>
       *
       * <pre>
       *人口属性智能定向标识,0=关闭，1=开启
       * </pre>
       */
      boolean hasDemographicFlag();
      /**
       * <code>optional .de.cache.GlobalSwitch demographicFlag = 17 [default = OFF];</code>
       *
       * <pre>
       *人口属性智能定向标识,0=关闭，1=开启
       * </pre>
       */
      de.cache.DeliveryMessage.GlobalSwitch getDemographicFlag();

      /**
       * <code>optional .de.cache.TargetFlag audienceTargetFlag = 18 [default = CLOSE];</code>
       *
       * <pre>
       *人群定向标示，0不定向、1定向、2非定向
       * </pre>
       */
      boolean hasAudienceTargetFlag();
      /**
       * <code>optional .de.cache.TargetFlag audienceTargetFlag = 18 [default = CLOSE];</code>
       *
       * <pre>
       *人群定向标示，0不定向、1定向、2非定向
       * </pre>
       */
      de.cache.DeliveryMessage.TargetFlag getAudienceTargetFlag();

      /**
       * <code>optional string audienceTarget = 19;</code>
       *
       * <pre>
       *人群定向信息, size=0时,关闭该功能
       * </pre>
       */
      boolean hasAudienceTarget();
      /**
       * <code>optional string audienceTarget = 19;</code>
       *
       * <pre>
       *人群定向信息, size=0时,关闭该功能
       * </pre>
       */
      java.lang.String getAudienceTarget();
      /**
       * <code>optional string audienceTarget = 19;</code>
       *
       * <pre>
       *人群定向信息, size=0时,关闭该功能
       * </pre>
       */
      com.google.protobuf.ByteString
          getAudienceTargetBytes();

      /**
       * <code>optional .de.cache.GlobalSwitch csFlag = 20 [default = OFF];</code>
       *
       * <pre>
       *语义定向:上下文打分定向标示，0无定向、1有定向
       * </pre>
       */
      boolean hasCsFlag();
      /**
       * <code>optional .de.cache.GlobalSwitch csFlag = 20 [default = OFF];</code>
       *
       * <pre>
       *语义定向:上下文打分定向标示，0无定向、1有定向
       * </pre>
       */
      de.cache.DeliveryMessage.GlobalSwitch getCsFlag();

      /**
       * <code>optional .de.cache.TargetFlag contentTargetFlag = 21 [default = CLOSE];</code>
       *
       * <pre>
       *内容定向标示，0不定向、1定向、2非定向
       * </pre>
       */
      boolean hasContentTargetFlag();
      /**
       * <code>optional .de.cache.TargetFlag contentTargetFlag = 21 [default = CLOSE];</code>
       *
       * <pre>
       *内容定向标示，0不定向、1定向、2非定向
       * </pre>
       */
      de.cache.DeliveryMessage.TargetFlag getContentTargetFlag();

      /**
       * <code>optional string contentTarget = 22;</code>
       *
       * <pre>
       *内容定向信息, size=0时,关闭该功能
       * </pre>
       */
      boolean hasContentTarget();
      /**
       * <code>optional string contentTarget = 22;</code>
       *
       * <pre>
       *内容定向信息, size=0时,关闭该功能
       * </pre>
       */
      java.lang.String getContentTarget();
      /**
       * <code>optional string contentTarget = 22;</code>
       *
       * <pre>
       *内容定向信息, size=0时,关闭该功能
       * </pre>
       */
      com.google.protobuf.ByteString
          getContentTargetBytes();

      /**
       * <code>optional .de.cache.TargetFlag retargetingFlag = 23 [default = CLOSE];</code>
       *
       * <pre>
       *重定向标示，0不定向、1定向、2非定向
       * </pre>
       */
      boolean hasRetargetingFlag();
      /**
       * <code>optional .de.cache.TargetFlag retargetingFlag = 23 [default = CLOSE];</code>
       *
       * <pre>
       *重定向标示，0不定向、1定向、2非定向
       * </pre>
       */
      de.cache.DeliveryMessage.TargetFlag getRetargetingFlag();

      /**
       * <code>optional string retargeting = 24;</code>
       *
       * <pre>
       *重定向信息, size=0时,关闭该功能
       * </pre>
       */
      boolean hasRetargeting();
      /**
       * <code>optional string retargeting = 24;</code>
       *
       * <pre>
       *重定向信息, size=0时,关闭该功能
       * </pre>
       */
      java.lang.String getRetargeting();
      /**
       * <code>optional string retargeting = 24;</code>
       *
       * <pre>
       *重定向信息, size=0时,关闭该功能
       * </pre>
       */
      com.google.protobuf.ByteString
          getRetargetingBytes();

      /**
       * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
       *
       * <pre>
       *winmax定向文件
       * </pre>
       */
      java.util.List<de.cache.DeliveryMessage.CacheFile> 
          getDealFilesList();
      /**
       * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
       *
       * <pre>
       *winmax定向文件
       * </pre>
       */
      de.cache.DeliveryMessage.CacheFile getDealFiles(int index);
      /**
       * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
       *
       * <pre>
       *winmax定向文件
       * </pre>
       */
      int getDealFilesCount();
      /**
       * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
       *
       * <pre>
       *winmax定向文件
       * </pre>
       */
      java.util.List<? extends de.cache.DeliveryMessage.CacheFileOrBuilder> 
          getDealFilesOrBuilderList();
      /**
       * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
       *
       * <pre>
       *winmax定向文件
       * </pre>
       */
      de.cache.DeliveryMessage.CacheFileOrBuilder getDealFilesOrBuilder(
          int index);

      /**
       * <code>optional string cpaOwnerType = 26;</code>
       *
       * <pre>
       *cpa归属类型
       * </pre>
       */
      boolean hasCpaOwnerType();
      /**
       * <code>optional string cpaOwnerType = 26;</code>
       *
       * <pre>
       *cpa归属类型
       * </pre>
       */
      java.lang.String getCpaOwnerType();
      /**
       * <code>optional string cpaOwnerType = 26;</code>
       *
       * <pre>
       *cpa归属类型
       * </pre>
       */
      com.google.protobuf.ByteString
          getCpaOwnerTypeBytes();

      /**
       * <code>repeated string btTag = 27;</code>
       *
       * <pre>
       *BT定向tag关系表达式,多个表达式间或关系, size=0时,关闭该功能
       * </pre>
       */
      com.google.protobuf.ProtocolStringList
          getBtTagList();
      /**
       * <code>repeated string btTag = 27;</code>
       *
       * <pre>
       *BT定向tag关系表达式,多个表达式间或关系, size=0时,关闭该功能
       * </pre>
       */
      int getBtTagCount();
      /**
       * <code>repeated string btTag = 27;</code>
       *
       * <pre>
       *BT定向tag关系表达式,多个表达式间或关系, size=0时,关闭该功能
       * </pre>
       */
      java.lang.String getBtTag(int index);
      /**
       * <code>repeated string btTag = 27;</code>
       *
       * <pre>
       *BT定向tag关系表达式,多个表达式间或关系, size=0时,关闭该功能
       * </pre>
       */
      com.google.protobuf.ByteString
          getBtTagBytes(int index);

      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
       */
      java.util.List<de.cache.DeliveryMessage.IPSection> 
          getIpWhitelistList();
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
       */
      de.cache.DeliveryMessage.IPSection getIpWhitelist(int index);
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
       */
      int getIpWhitelistCount();
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
       */
      java.util.List<? extends de.cache.DeliveryMessage.IPSectionOrBuilder> 
          getIpWhitelistOrBuilderList();
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
       */
      de.cache.DeliveryMessage.IPSectionOrBuilder getIpWhitelistOrBuilder(
          int index);

      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
       */
      java.util.List<de.cache.DeliveryMessage.IPSection> 
          getIpBlacklistList();
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
       */
      de.cache.DeliveryMessage.IPSection getIpBlacklist(int index);
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
       */
      int getIpBlacklistCount();
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
       */
      java.util.List<? extends de.cache.DeliveryMessage.IPSectionOrBuilder> 
          getIpBlacklistOrBuilderList();
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
       */
      de.cache.DeliveryMessage.IPSectionOrBuilder getIpBlacklistOrBuilder(
          int index);

      /**
       * <code>optional string forceSolutionTimes = 30;</code>
       *
       * <pre>
       *强制投放时间，如：8:00-10:00表示8点到10点可以强制投放，多个时间段以逗号分隔。为0或空表示没有强制投放
       * </pre>
       */
      boolean hasForceSolutionTimes();
      /**
       * <code>optional string forceSolutionTimes = 30;</code>
       *
       * <pre>
       *强制投放时间，如：8:00-10:00表示8点到10点可以强制投放，多个时间段以逗号分隔。为0或空表示没有强制投放
       * </pre>
       */
      java.lang.String getForceSolutionTimes();
      /**
       * <code>optional string forceSolutionTimes = 30;</code>
       *
       * <pre>
       *强制投放时间，如：8:00-10:00表示8点到10点可以强制投放，多个时间段以逗号分隔。为0或空表示没有强制投放
       * </pre>
       */
      com.google.protobuf.ByteString
          getForceSolutionTimesBytes();

      /**
       * <code>optional .de.cache.BlackAndWhiteList referrer = 31;</code>
       *
       * <pre>
       *Referrer定向
       * </pre>
       */
      boolean hasReferrer();
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrer = 31;</code>
       *
       * <pre>
       *Referrer定向
       * </pre>
       */
      de.cache.DeliveryMessage.BlackAndWhiteList getReferrer();
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrer = 31;</code>
       *
       * <pre>
       *Referrer定向
       * </pre>
       */
      de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder getReferrerOrBuilder();

      /**
       * <code>optional .de.cache.GlobalSwitch inheritFromGConf = 32 [default = OFF];</code>
       *
       * <pre>
       *表示是否继承db级别的referer黑白名单控制，0=不继承，1=继承
       * </pre>
       */
      boolean hasInheritFromGConf();
      /**
       * <code>optional .de.cache.GlobalSwitch inheritFromGConf = 32 [default = OFF];</code>
       *
       * <pre>
       *表示是否继承db级别的referer黑白名单控制，0=不继承，1=继承
       * </pre>
       */
      de.cache.DeliveryMessage.GlobalSwitch getInheritFromGConf();

      /**
       * <code>optional .de.cache.CacheFile device = 33;</code>
       *
       * <pre>
       *target下的文件名(d.$sid)。
       *文件内容为：/AdNetworkId/{NativeCode，不同记录间支持and和or的关系。以","或"()"分隔，其中“，”表示or关系，“（）”表示and关系。
       *Type取值：=0 DESKTOP；=1 HIGHEND_PHONE；=2 TABLET
       *Platform取值: android, iphone, palm
       *Make: string,Device make (如： Nokia, Samsung).
       *Model: string, Device model(如：N70, Galaxy.)
       *cache生成规则：
       *1）Type为DESKTOP时， Platform/Make/Model 永远为空，如：“/2/0”
       *2) 在大类不做定向时，不允许小类为空，且最后不加”/”。如“/2/1/android/Nokia”，但是不允许“/2/1/android//N70”
       *3) string全为小写
       * </pre>
       */
      boolean hasDevice();
      /**
       * <code>optional .de.cache.CacheFile device = 33;</code>
       *
       * <pre>
       *target下的文件名(d.$sid)。
       *文件内容为：/AdNetworkId/{NativeCode，不同记录间支持and和or的关系。以","或"()"分隔，其中“，”表示or关系，“（）”表示and关系。
       *Type取值：=0 DESKTOP；=1 HIGHEND_PHONE；=2 TABLET
       *Platform取值: android, iphone, palm
       *Make: string,Device make (如： Nokia, Samsung).
       *Model: string, Device model(如：N70, Galaxy.)
       *cache生成规则：
       *1）Type为DESKTOP时， Platform/Make/Model 永远为空，如：“/2/0”
       *2) 在大类不做定向时，不允许小类为空，且最后不加”/”。如“/2/1/android/Nokia”，但是不允许“/2/1/android//N70”
       *3) string全为小写
       * </pre>
       */
      de.cache.DeliveryMessage.CacheFile getDevice();
      /**
       * <code>optional .de.cache.CacheFile device = 33;</code>
       *
       * <pre>
       *target下的文件名(d.$sid)。
       *文件内容为：/AdNetworkId/{NativeCode，不同记录间支持and和or的关系。以","或"()"分隔，其中“，”表示or关系，“（）”表示and关系。
       *Type取值：=0 DESKTOP；=1 HIGHEND_PHONE；=2 TABLET
       *Platform取值: android, iphone, palm
       *Make: string,Device make (如： Nokia, Samsung).
       *Model: string, Device model(如：N70, Galaxy.)
       *cache生成规则：
       *1）Type为DESKTOP时， Platform/Make/Model 永远为空，如：“/2/0”
       *2) 在大类不做定向时，不允许小类为空，且最后不加”/”。如“/2/1/android/Nokia”，但是不允许“/2/1/android//N70”
       *3) string全为小写
       * </pre>
       */
      de.cache.DeliveryMessage.CacheFileOrBuilder getDeviceOrBuilder();

      /**
       * <code>optional .de.cache.CacheFile appData = 34;</code>
       *
       * <pre>
       *ref下的文件名(ai.$sid)，文件内容：0/1(白黑) &#92;t exchange_id &#92;t app_id
       * </pre>
       */
      boolean hasAppData();
      /**
       * <code>optional .de.cache.CacheFile appData = 34;</code>
       *
       * <pre>
       *ref下的文件名(ai.$sid)，文件内容：0/1(白黑) &#92;t exchange_id &#92;t app_id
       * </pre>
       */
      de.cache.DeliveryMessage.CacheFile getAppData();
      /**
       * <code>optional .de.cache.CacheFile appData = 34;</code>
       *
       * <pre>
       *ref下的文件名(ai.$sid)，文件内容：0/1(白黑) &#92;t exchange_id &#92;t app_id
       * </pre>
       */
      de.cache.DeliveryMessage.CacheFileOrBuilder getAppDataOrBuilder();

      /**
       * <code>optional .de.cache.CacheFile positioningOrder = 35;</code>
       *
       * <pre>
       * target下的文件名， 文件内容为/AdNetwork/0(非视频), /AdNetwork/1/前贴 ，支持与”()” 或”,”
       * </pre>
       */
      boolean hasPositioningOrder();
      /**
       * <code>optional .de.cache.CacheFile positioningOrder = 35;</code>
       *
       * <pre>
       * target下的文件名， 文件内容为/AdNetwork/0(非视频), /AdNetwork/1/前贴 ，支持与”()” 或”,”
       * </pre>
       */
      de.cache.DeliveryMessage.CacheFile getPositioningOrder();
      /**
       * <code>optional .de.cache.CacheFile positioningOrder = 35;</code>
       *
       * <pre>
       * target下的文件名， 文件内容为/AdNetwork/0(非视频), /AdNetwork/1/前贴 ，支持与”()” 或”,”
       * </pre>
       */
      de.cache.DeliveryMessage.CacheFileOrBuilder getPositioningOrderOrBuilder();

      /**
       * <code>repeated .de.cache.TrafficSource trafficSource = 36;</code>
       *
       * <pre>
       *投放的的流量来源定向  add by nick 2014-05-23
       * </pre>
       */
      java.util.List<de.cache.DeliveryMessage.TrafficSource> getTrafficSourceList();
      /**
       * <code>repeated .de.cache.TrafficSource trafficSource = 36;</code>
       *
       * <pre>
       *投放的的流量来源定向  add by nick 2014-05-23
       * </pre>
       */
      int getTrafficSourceCount();
      /**
       * <code>repeated .de.cache.TrafficSource trafficSource = 36;</code>
       *
       * <pre>
       *投放的的流量来源定向  add by nick 2014-05-23
       * </pre>
       */
      de.cache.DeliveryMessage.TrafficSource getTrafficSource(int index);

      /**
       * <code>repeated string tagIds = 37;</code>
       *
       * <pre>
       * 广告位ID定向内容
       * </pre>
       */
      com.google.protobuf.ProtocolStringList
          getTagIdsList();
      /**
       * <code>repeated string tagIds = 37;</code>
       *
       * <pre>
       * 广告位ID定向内容
       * </pre>
       */
      int getTagIdsCount();
      /**
       * <code>repeated string tagIds = 37;</code>
       *
       * <pre>
       * 广告位ID定向内容
       * </pre>
       */
      java.lang.String getTagIds(int index);
      /**
       * <code>repeated string tagIds = 37;</code>
       *
       * <pre>
       * 广告位ID定向内容
       * </pre>
       */
      com.google.protobuf.ByteString
          getTagIdsBytes(int index);

      /**
       * <code>optional string PMPDealId = 38;</code>
       *
       * <pre>
       *PMP 定向内容
       * </pre>
       */
      boolean hasPMPDealId();
      /**
       * <code>optional string PMPDealId = 38;</code>
       *
       * <pre>
       *PMP 定向内容
       * </pre>
       */
      java.lang.String getPMPDealId();
      /**
       * <code>optional string PMPDealId = 38;</code>
       *
       * <pre>
       *PMP 定向内容
       * </pre>
       */
      com.google.protobuf.ByteString
          getPMPDealIdBytes();

      /**
       * <code>repeated .de.cache.Solution.SolutionTarget.Carrier carrier = 39;</code>
       *
       * <pre>
       *运营商,如中国移动、中国联通
       * </pre>
       */
      java.util.List<de.cache.DeliveryMessage.Solution.SolutionTarget.Carrier> getCarrierList();
      /**
       * <code>repeated .de.cache.Solution.SolutionTarget.Carrier carrier = 39;</code>
       *
       * <pre>
       *运营商,如中国移动、中国联通
       * </pre>
       */
      int getCarrierCount();
      /**
       * <code>repeated .de.cache.Solution.SolutionTarget.Carrier carrier = 39;</code>
       *
       * <pre>
       *运营商,如中国移动、中国联通
       * </pre>
       */
      de.cache.DeliveryMessage.Solution.SolutionTarget.Carrier getCarrier(int index);

      /**
       * <code>repeated .de.cache.Solution.SolutionTarget.ConnectionType connection_type = 40;</code>
       *
       * <pre>
       *设备联网方式,如 Wifi、3g
       * </pre>
       */
      java.util.List<de.cache.DeliveryMessage.Solution.SolutionTarget.ConnectionType> getConnectionTypeList();
      /**
       * <code>repeated .de.cache.Solution.SolutionTarget.ConnectionType connection_type = 40;</code>
       *
       * <pre>
       *设备联网方式,如 Wifi、3g
       * </pre>
       */
      int getConnectionTypeCount();
      /**
       * <code>repeated .de.cache.Solution.SolutionTarget.ConnectionType connection_type = 40;</code>
       *
       * <pre>
       *设备联网方式,如 Wifi、3g
       * </pre>
       */
      de.cache.DeliveryMessage.Solution.SolutionTarget.ConnectionType getConnectionType(int index);

      /**
       * <code>optional .de.cache.Solution.SolutionTarget.demoTargetContent demographicTarget = 41;</code>
       *
       * <pre>
       *人群属性定向内容
       * </pre>
       */
      boolean hasDemographicTarget();
      /**
       * <code>optional .de.cache.Solution.SolutionTarget.demoTargetContent demographicTarget = 41;</code>
       *
       * <pre>
       *人群属性定向内容
       * </pre>
       */
      de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent getDemographicTarget();
      /**
       * <code>optional .de.cache.Solution.SolutionTarget.demoTargetContent demographicTarget = 41;</code>
       *
       * <pre>
       *人群属性定向内容
       * </pre>
       */
      de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContentOrBuilder getDemographicTargetOrBuilder();
    }
    /**
     * Protobuf type {@code de.cache.Solution.SolutionTarget}
     *
     * <pre>
     *投放定向信息
     * </pre>
     */
    public static final class SolutionTarget extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:de.cache.Solution.SolutionTarget)
        SolutionTargetOrBuilder {
      // Use SolutionTarget.newBuilder() to construct.
      private SolutionTarget(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SolutionTarget(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SolutionTarget defaultInstance;
      public static SolutionTarget getDefaultInstance() {
        return defaultInstance;
      }

      public SolutionTarget getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SolutionTarget(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        int mutable_bitField1_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                de.cache.DeliveryMessage.FrequencyCtrl.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = frequencyCtrl_.toBuilder();
                }
                frequencyCtrl_ = input.readMessage(de.cache.DeliveryMessage.FrequencyCtrl.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(frequencyCtrl_);
                  frequencyCtrl_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.GlobalSwitch value = de.cache.DeliveryMessage.GlobalSwitch.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  orderFrequency_ = value;
                }
                break;
              }
              case 26: {
                de.cache.DeliveryMessage.FrequencyCtrl.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = clickFrequency_.toBuilder();
                }
                clickFrequency_ = input.readMessage(de.cache.DeliveryMessage.FrequencyCtrl.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(clickFrequency_);
                  clickFrequency_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.GlobalSwitch value = de.cache.DeliveryMessage.GlobalSwitch.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000008;
                  stopImpressionWhenMaxClick_ = value;
                }
                break;
              }
              case 40: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.TargetFlag value = de.cache.DeliveryMessage.TargetFlag.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(5, rawValue);
                } else {
                  bitField0_ |= 0x00000010;
                  locationFlag_ = value;
                }
                break;
              }
              case 50: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                  location_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000020;
                }
                location_.add(bs);
                break;
              }
              case 56: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.TargetFlag value = de.cache.DeliveryMessage.TargetFlag.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(7, rawValue);
                } else {
                  bitField0_ |= 0x00000020;
                  universityFlag_ = value;
                }
                break;
              }
              case 64: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.TargetFlag value = de.cache.DeliveryMessage.TargetFlag.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(8, rawValue);
                } else {
                  bitField0_ |= 0x00000040;
                  languageFlag_ = value;
                }
                break;
              }
              case 74: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                  language_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000100;
                }
                language_.add(bs);
                break;
              }
              case 80: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.TargetFlag value = de.cache.DeliveryMessage.TargetFlag.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(10, rawValue);
                } else {
                  bitField0_ |= 0x00000080;
                  osFlag_ = value;
                }
                break;
              }
              case 90: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                  os_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000400;
                }
                os_.add(bs);
                break;
              }
              case 96: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.GlobalSwitch value = de.cache.DeliveryMessage.GlobalSwitch.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(12, rawValue);
                } else {
                  bitField0_ |= 0x00000100;
                  linkageFlag_ = value;
                }
                break;
              }
              case 104: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.TargetFlag value = de.cache.DeliveryMessage.TargetFlag.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(13, rawValue);
                } else {
                  bitField0_ |= 0x00000200;
                  keywordFlag_ = value;
                }
                break;
              }
              case 114: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000400;
                keyword_ = bs;
                break;
              }
              case 120: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.TargetFlag value = de.cache.DeliveryMessage.TargetFlag.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(15, rawValue);
                } else {
                  bitField0_ |= 0x00000800;
                  browserFlag_ = value;
                }
                break;
              }
              case 130: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                  browser_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00008000;
                }
                browser_.add(bs);
                break;
              }
              case 136: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.GlobalSwitch value = de.cache.DeliveryMessage.GlobalSwitch.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(17, rawValue);
                } else {
                  bitField0_ |= 0x00001000;
                  demographicFlag_ = value;
                }
                break;
              }
              case 144: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.TargetFlag value = de.cache.DeliveryMessage.TargetFlag.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(18, rawValue);
                } else {
                  bitField0_ |= 0x00002000;
                  audienceTargetFlag_ = value;
                }
                break;
              }
              case 154: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00004000;
                audienceTarget_ = bs;
                break;
              }
              case 160: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.GlobalSwitch value = de.cache.DeliveryMessage.GlobalSwitch.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(20, rawValue);
                } else {
                  bitField0_ |= 0x00008000;
                  csFlag_ = value;
                }
                break;
              }
              case 168: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.TargetFlag value = de.cache.DeliveryMessage.TargetFlag.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(21, rawValue);
                } else {
                  bitField0_ |= 0x00010000;
                  contentTargetFlag_ = value;
                }
                break;
              }
              case 178: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00020000;
                contentTarget_ = bs;
                break;
              }
              case 184: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.TargetFlag value = de.cache.DeliveryMessage.TargetFlag.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(23, rawValue);
                } else {
                  bitField0_ |= 0x00040000;
                  retargetingFlag_ = value;
                }
                break;
              }
              case 194: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00080000;
                retargeting_ = bs;
                break;
              }
              case 202: {
                if (!((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
                  dealFiles_ = new java.util.ArrayList<de.cache.DeliveryMessage.CacheFile>();
                  mutable_bitField0_ |= 0x01000000;
                }
                dealFiles_.add(input.readMessage(de.cache.DeliveryMessage.CacheFile.PARSER, extensionRegistry));
                break;
              }
              case 210: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00100000;
                cpaOwnerType_ = bs;
                break;
              }
              case 218: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x04000000) == 0x04000000)) {
                  btTag_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x04000000;
                }
                btTag_.add(bs);
                break;
              }
              case 226: {
                if (!((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
                  ipWhitelist_ = new java.util.ArrayList<de.cache.DeliveryMessage.IPSection>();
                  mutable_bitField0_ |= 0x08000000;
                }
                ipWhitelist_.add(input.readMessage(de.cache.DeliveryMessage.IPSection.PARSER, extensionRegistry));
                break;
              }
              case 234: {
                if (!((mutable_bitField0_ & 0x10000000) == 0x10000000)) {
                  ipBlacklist_ = new java.util.ArrayList<de.cache.DeliveryMessage.IPSection>();
                  mutable_bitField0_ |= 0x10000000;
                }
                ipBlacklist_.add(input.readMessage(de.cache.DeliveryMessage.IPSection.PARSER, extensionRegistry));
                break;
              }
              case 242: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00200000;
                forceSolutionTimes_ = bs;
                break;
              }
              case 250: {
                de.cache.DeliveryMessage.BlackAndWhiteList.Builder subBuilder = null;
                if (((bitField0_ & 0x00400000) == 0x00400000)) {
                  subBuilder = referrer_.toBuilder();
                }
                referrer_ = input.readMessage(de.cache.DeliveryMessage.BlackAndWhiteList.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(referrer_);
                  referrer_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00400000;
                break;
              }
              case 256: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.GlobalSwitch value = de.cache.DeliveryMessage.GlobalSwitch.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(32, rawValue);
                } else {
                  bitField0_ |= 0x00800000;
                  inheritFromGConf_ = value;
                }
                break;
              }
              case 266: {
                de.cache.DeliveryMessage.CacheFile.Builder subBuilder = null;
                if (((bitField0_ & 0x01000000) == 0x01000000)) {
                  subBuilder = device_.toBuilder();
                }
                device_ = input.readMessage(de.cache.DeliveryMessage.CacheFile.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(device_);
                  device_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x01000000;
                break;
              }
              case 274: {
                de.cache.DeliveryMessage.CacheFile.Builder subBuilder = null;
                if (((bitField0_ & 0x02000000) == 0x02000000)) {
                  subBuilder = appData_.toBuilder();
                }
                appData_ = input.readMessage(de.cache.DeliveryMessage.CacheFile.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(appData_);
                  appData_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x02000000;
                break;
              }
              case 282: {
                de.cache.DeliveryMessage.CacheFile.Builder subBuilder = null;
                if (((bitField0_ & 0x04000000) == 0x04000000)) {
                  subBuilder = positioningOrder_.toBuilder();
                }
                positioningOrder_ = input.readMessage(de.cache.DeliveryMessage.CacheFile.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(positioningOrder_);
                  positioningOrder_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x04000000;
                break;
              }
              case 288: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.TrafficSource value = de.cache.DeliveryMessage.TrafficSource.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(36, rawValue);
                  } else {
                  if (!((mutable_bitField1_ & 0x00000008) == 0x00000008)) {
                    trafficSource_ = new java.util.ArrayList<de.cache.DeliveryMessage.TrafficSource>();
                    mutable_bitField1_ |= 0x00000008;
                  }
                  trafficSource_.add(value);
                }
                break;
              }
              case 290: {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while(input.getBytesUntilLimit() > 0) {
                  int rawValue = input.readEnum();
                  de.cache.DeliveryMessage.TrafficSource value = de.cache.DeliveryMessage.TrafficSource.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(36, rawValue);
                    } else {
                    if (!((mutable_bitField1_ & 0x00000008) == 0x00000008)) {
                      trafficSource_ = new java.util.ArrayList<de.cache.DeliveryMessage.TrafficSource>();
                      mutable_bitField1_ |= 0x00000008;
                    }
                    trafficSource_.add(value);
                  }
                }
                input.popLimit(oldLimit);
                break;
              }
              case 298: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField1_ & 0x00000010) == 0x00000010)) {
                  tagIds_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField1_ |= 0x00000010;
                }
                tagIds_.add(bs);
                break;
              }
              case 306: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x08000000;
                pMPDealId_ = bs;
                break;
              }
              case 312: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.Solution.SolutionTarget.Carrier value = de.cache.DeliveryMessage.Solution.SolutionTarget.Carrier.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(39, rawValue);
                  } else {
                  if (!((mutable_bitField1_ & 0x00000040) == 0x00000040)) {
                    carrier_ = new java.util.ArrayList<de.cache.DeliveryMessage.Solution.SolutionTarget.Carrier>();
                    mutable_bitField1_ |= 0x00000040;
                  }
                  carrier_.add(value);
                }
                break;
              }
              case 314: {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while(input.getBytesUntilLimit() > 0) {
                  int rawValue = input.readEnum();
                  de.cache.DeliveryMessage.Solution.SolutionTarget.Carrier value = de.cache.DeliveryMessage.Solution.SolutionTarget.Carrier.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(39, rawValue);
                    } else {
                    if (!((mutable_bitField1_ & 0x00000040) == 0x00000040)) {
                      carrier_ = new java.util.ArrayList<de.cache.DeliveryMessage.Solution.SolutionTarget.Carrier>();
                      mutable_bitField1_ |= 0x00000040;
                    }
                    carrier_.add(value);
                  }
                }
                input.popLimit(oldLimit);
                break;
              }
              case 320: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.Solution.SolutionTarget.ConnectionType value = de.cache.DeliveryMessage.Solution.SolutionTarget.ConnectionType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(40, rawValue);
                  } else {
                  if (!((mutable_bitField1_ & 0x00000080) == 0x00000080)) {
                    connectionType_ = new java.util.ArrayList<de.cache.DeliveryMessage.Solution.SolutionTarget.ConnectionType>();
                    mutable_bitField1_ |= 0x00000080;
                  }
                  connectionType_.add(value);
                }
                break;
              }
              case 322: {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while(input.getBytesUntilLimit() > 0) {
                  int rawValue = input.readEnum();
                  de.cache.DeliveryMessage.Solution.SolutionTarget.ConnectionType value = de.cache.DeliveryMessage.Solution.SolutionTarget.ConnectionType.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(40, rawValue);
                    } else {
                    if (!((mutable_bitField1_ & 0x00000080) == 0x00000080)) {
                      connectionType_ = new java.util.ArrayList<de.cache.DeliveryMessage.Solution.SolutionTarget.ConnectionType>();
                      mutable_bitField1_ |= 0x00000080;
                    }
                    connectionType_.add(value);
                  }
                }
                input.popLimit(oldLimit);
                break;
              }
              case 330: {
                de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent.Builder subBuilder = null;
                if (((bitField0_ & 0x10000000) == 0x10000000)) {
                  subBuilder = demographicTarget_.toBuilder();
                }
                demographicTarget_ = input.readMessage(de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(demographicTarget_);
                  demographicTarget_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x10000000;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
            location_ = location_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
            language_ = language_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
            os_ = os_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
            browser_ = browser_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
            dealFiles_ = java.util.Collections.unmodifiableList(dealFiles_);
          }
          if (((mutable_bitField0_ & 0x04000000) == 0x04000000)) {
            btTag_ = btTag_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
            ipWhitelist_ = java.util.Collections.unmodifiableList(ipWhitelist_);
          }
          if (((mutable_bitField0_ & 0x10000000) == 0x10000000)) {
            ipBlacklist_ = java.util.Collections.unmodifiableList(ipBlacklist_);
          }
          if (((mutable_bitField1_ & 0x00000008) == 0x00000008)) {
            trafficSource_ = java.util.Collections.unmodifiableList(trafficSource_);
          }
          if (((mutable_bitField1_ & 0x00000010) == 0x00000010)) {
            tagIds_ = tagIds_.getUnmodifiableView();
          }
          if (((mutable_bitField1_ & 0x00000040) == 0x00000040)) {
            carrier_ = java.util.Collections.unmodifiableList(carrier_);
          }
          if (((mutable_bitField1_ & 0x00000080) == 0x00000080)) {
            connectionType_ = java.util.Collections.unmodifiableList(connectionType_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Solution_SolutionTarget_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Solution_SolutionTarget_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.Solution.SolutionTarget.class, de.cache.DeliveryMessage.Solution.SolutionTarget.Builder.class);
      }

      public static com.google.protobuf.Parser<SolutionTarget> PARSER =
          new com.google.protobuf.AbstractParser<SolutionTarget>() {
        public SolutionTarget parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SolutionTarget(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SolutionTarget> getParserForType() {
        return PARSER;
      }

      /**
       * Protobuf enum {@code de.cache.Solution.SolutionTarget.Carrier}
       */
      public enum Carrier
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>CarrierUnknown = 0;</code>
         */
        CarrierUnknown(0, 0),
        /**
         * <code>ChinaMobile = 1;</code>
         */
        ChinaMobile(1, 1),
        /**
         * <code>ChinaUnicom = 2;</code>
         */
        ChinaUnicom(2, 2),
        /**
         * <code>ChinaTelecom = 3;</code>
         */
        ChinaTelecom(3, 3),
        ;

        /**
         * <code>CarrierUnknown = 0;</code>
         */
        public static final int CarrierUnknown_VALUE = 0;
        /**
         * <code>ChinaMobile = 1;</code>
         */
        public static final int ChinaMobile_VALUE = 1;
        /**
         * <code>ChinaUnicom = 2;</code>
         */
        public static final int ChinaUnicom_VALUE = 2;
        /**
         * <code>ChinaTelecom = 3;</code>
         */
        public static final int ChinaTelecom_VALUE = 3;


        public final int getNumber() { return value; }

        public static Carrier valueOf(int value) {
          switch (value) {
            case 0: return CarrierUnknown;
            case 1: return ChinaMobile;
            case 2: return ChinaUnicom;
            case 3: return ChinaTelecom;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Carrier>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<Carrier>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Carrier>() {
                public Carrier findValueByNumber(int number) {
                  return Carrier.valueOf(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return de.cache.DeliveryMessage.Solution.SolutionTarget.getDescriptor().getEnumTypes().get(0);
        }

        private static final Carrier[] VALUES = values();

        public static Carrier valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private Carrier(int index, int value) {
          this.index = index;
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:de.cache.Solution.SolutionTarget.Carrier)
      }

      /**
       * Protobuf enum {@code de.cache.Solution.SolutionTarget.ConnectionType}
       */
      public enum ConnectionType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>ConnTypeUnknown = 0;</code>
         */
        ConnTypeUnknown(0, 0),
        /**
         * <code>Wifi = 1;</code>
         */
        Wifi(1, 1),
        /**
         * <code>_2G = 2;</code>
         */
        _2G(2, 2),
        /**
         * <code>_3G = 3;</code>
         */
        _3G(3, 3),
        /**
         * <code>_4G = 4;</code>
         */
        _4G(4, 4),
        ;

        /**
         * <code>ConnTypeUnknown = 0;</code>
         */
        public static final int ConnTypeUnknown_VALUE = 0;
        /**
         * <code>Wifi = 1;</code>
         */
        public static final int Wifi_VALUE = 1;
        /**
         * <code>_2G = 2;</code>
         */
        public static final int _2G_VALUE = 2;
        /**
         * <code>_3G = 3;</code>
         */
        public static final int _3G_VALUE = 3;
        /**
         * <code>_4G = 4;</code>
         */
        public static final int _4G_VALUE = 4;


        public final int getNumber() { return value; }

        public static ConnectionType valueOf(int value) {
          switch (value) {
            case 0: return ConnTypeUnknown;
            case 1: return Wifi;
            case 2: return _2G;
            case 3: return _3G;
            case 4: return _4G;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<ConnectionType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<ConnectionType>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<ConnectionType>() {
                public ConnectionType findValueByNumber(int number) {
                  return ConnectionType.valueOf(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return de.cache.DeliveryMessage.Solution.SolutionTarget.getDescriptor().getEnumTypes().get(1);
        }

        private static final ConnectionType[] VALUES = values();

        public static ConnectionType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private ConnectionType(int index, int value) {
          this.index = index;
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:de.cache.Solution.SolutionTarget.ConnectionType)
      }

      public interface demoTargetContentOrBuilder extends
          // @@protoc_insertion_point(interface_extends:de.cache.Solution.SolutionTarget.demoTargetContent)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .de.cache.TargetFlag genderFlag = 1 [default = CLOSE];</code>
         *
         * <pre>
         *性别定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        boolean hasGenderFlag();
        /**
         * <code>optional .de.cache.TargetFlag genderFlag = 1 [default = CLOSE];</code>
         *
         * <pre>
         *性别定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        de.cache.DeliveryMessage.TargetFlag getGenderFlag();

        /**
         * <code>repeated string gender = 2;</code>
         *
         * <pre>
         *性别
         * </pre>
         */
        com.google.protobuf.ProtocolStringList
            getGenderList();
        /**
         * <code>repeated string gender = 2;</code>
         *
         * <pre>
         *性别
         * </pre>
         */
        int getGenderCount();
        /**
         * <code>repeated string gender = 2;</code>
         *
         * <pre>
         *性别
         * </pre>
         */
        java.lang.String getGender(int index);
        /**
         * <code>repeated string gender = 2;</code>
         *
         * <pre>
         *性别
         * </pre>
         */
        com.google.protobuf.ByteString
            getGenderBytes(int index);

        /**
         * <code>optional .de.cache.TargetFlag ageFlag = 3 [default = CLOSE];</code>
         *
         * <pre>
         *年龄定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        boolean hasAgeFlag();
        /**
         * <code>optional .de.cache.TargetFlag ageFlag = 3 [default = CLOSE];</code>
         *
         * <pre>
         *年龄定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        de.cache.DeliveryMessage.TargetFlag getAgeFlag();

        /**
         * <code>repeated string age = 4;</code>
         *
         * <pre>
         *年龄
         * </pre>
         */
        com.google.protobuf.ProtocolStringList
            getAgeList();
        /**
         * <code>repeated string age = 4;</code>
         *
         * <pre>
         *年龄
         * </pre>
         */
        int getAgeCount();
        /**
         * <code>repeated string age = 4;</code>
         *
         * <pre>
         *年龄
         * </pre>
         */
        java.lang.String getAge(int index);
        /**
         * <code>repeated string age = 4;</code>
         *
         * <pre>
         *年龄
         * </pre>
         */
        com.google.protobuf.ByteString
            getAgeBytes(int index);

        /**
         * <code>optional .de.cache.TargetFlag intentFlag = 5 [default = CLOSE];</code>
         *
         * <pre>
         *意向定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        boolean hasIntentFlag();
        /**
         * <code>optional .de.cache.TargetFlag intentFlag = 5 [default = CLOSE];</code>
         *
         * <pre>
         *意向定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        de.cache.DeliveryMessage.TargetFlag getIntentFlag();

        /**
         * <code>repeated string intent = 6;</code>
         *
         * <pre>
         *意向
         * </pre>
         */
        com.google.protobuf.ProtocolStringList
            getIntentList();
        /**
         * <code>repeated string intent = 6;</code>
         *
         * <pre>
         *意向
         * </pre>
         */
        int getIntentCount();
        /**
         * <code>repeated string intent = 6;</code>
         *
         * <pre>
         *意向
         * </pre>
         */
        java.lang.String getIntent(int index);
        /**
         * <code>repeated string intent = 6;</code>
         *
         * <pre>
         *意向
         * </pre>
         */
        com.google.protobuf.ByteString
            getIntentBytes(int index);

        /**
         * <code>optional .de.cache.TargetFlag interestFlag = 7 [default = CLOSE];</code>
         *
         * <pre>
         *兴趣定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        boolean hasInterestFlag();
        /**
         * <code>optional .de.cache.TargetFlag interestFlag = 7 [default = CLOSE];</code>
         *
         * <pre>
         *兴趣定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        de.cache.DeliveryMessage.TargetFlag getInterestFlag();

        /**
         * <code>repeated string interest = 8;</code>
         *
         * <pre>
         *兴趣
         * </pre>
         */
        com.google.protobuf.ProtocolStringList
            getInterestList();
        /**
         * <code>repeated string interest = 8;</code>
         *
         * <pre>
         *兴趣
         * </pre>
         */
        int getInterestCount();
        /**
         * <code>repeated string interest = 8;</code>
         *
         * <pre>
         *兴趣
         * </pre>
         */
        java.lang.String getInterest(int index);
        /**
         * <code>repeated string interest = 8;</code>
         *
         * <pre>
         *兴趣
         * </pre>
         */
        com.google.protobuf.ByteString
            getInterestBytes(int index);
      }
      /**
       * Protobuf type {@code de.cache.Solution.SolutionTarget.demoTargetContent}
       *
       * <pre>
       * 人群属性定向内容结构
       * </pre>
       */
      public static final class demoTargetContent extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:de.cache.Solution.SolutionTarget.demoTargetContent)
          demoTargetContentOrBuilder {
        // Use demoTargetContent.newBuilder() to construct.
        private demoTargetContent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private demoTargetContent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final demoTargetContent defaultInstance;
        public static demoTargetContent getDefaultInstance() {
          return defaultInstance;
        }

        public demoTargetContent getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private demoTargetContent(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  de.cache.DeliveryMessage.TargetFlag value = de.cache.DeliveryMessage.TargetFlag.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    genderFlag_ = value;
                  }
                  break;
                }
                case 18: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    gender_ = new com.google.protobuf.LazyStringArrayList();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  gender_.add(bs);
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  de.cache.DeliveryMessage.TargetFlag value = de.cache.DeliveryMessage.TargetFlag.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(3, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    ageFlag_ = value;
                  }
                  break;
                }
                case 34: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    age_ = new com.google.protobuf.LazyStringArrayList();
                    mutable_bitField0_ |= 0x00000008;
                  }
                  age_.add(bs);
                  break;
                }
                case 40: {
                  int rawValue = input.readEnum();
                  de.cache.DeliveryMessage.TargetFlag value = de.cache.DeliveryMessage.TargetFlag.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(5, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    intentFlag_ = value;
                  }
                  break;
                }
                case 50: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    intent_ = new com.google.protobuf.LazyStringArrayList();
                    mutable_bitField0_ |= 0x00000020;
                  }
                  intent_.add(bs);
                  break;
                }
                case 56: {
                  int rawValue = input.readEnum();
                  de.cache.DeliveryMessage.TargetFlag value = de.cache.DeliveryMessage.TargetFlag.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(7, rawValue);
                  } else {
                    bitField0_ |= 0x00000008;
                    interestFlag_ = value;
                  }
                  break;
                }
                case 66: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                    interest_ = new com.google.protobuf.LazyStringArrayList();
                    mutable_bitField0_ |= 0x00000080;
                  }
                  interest_.add(bs);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              gender_ = gender_.getUnmodifiableView();
            }
            if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              age_ = age_.getUnmodifiableView();
            }
            if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              intent_ = intent_.getUnmodifiableView();
            }
            if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
              interest_ = interest_.getUnmodifiableView();
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Solution_SolutionTarget_demoTargetContent_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Solution_SolutionTarget_demoTargetContent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent.class, de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent.Builder.class);
        }

        public static com.google.protobuf.Parser<demoTargetContent> PARSER =
            new com.google.protobuf.AbstractParser<demoTargetContent>() {
          public demoTargetContent parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new demoTargetContent(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<demoTargetContent> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int GENDERFLAG_FIELD_NUMBER = 1;
        private de.cache.DeliveryMessage.TargetFlag genderFlag_;
        /**
         * <code>optional .de.cache.TargetFlag genderFlag = 1 [default = CLOSE];</code>
         *
         * <pre>
         *性别定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public boolean hasGenderFlag() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .de.cache.TargetFlag genderFlag = 1 [default = CLOSE];</code>
         *
         * <pre>
         *性别定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public de.cache.DeliveryMessage.TargetFlag getGenderFlag() {
          return genderFlag_;
        }

        public static final int GENDER_FIELD_NUMBER = 2;
        private com.google.protobuf.LazyStringList gender_;
        /**
         * <code>repeated string gender = 2;</code>
         *
         * <pre>
         *性别
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getGenderList() {
          return gender_;
        }
        /**
         * <code>repeated string gender = 2;</code>
         *
         * <pre>
         *性别
         * </pre>
         */
        public int getGenderCount() {
          return gender_.size();
        }
        /**
         * <code>repeated string gender = 2;</code>
         *
         * <pre>
         *性别
         * </pre>
         */
        public java.lang.String getGender(int index) {
          return gender_.get(index);
        }
        /**
         * <code>repeated string gender = 2;</code>
         *
         * <pre>
         *性别
         * </pre>
         */
        public com.google.protobuf.ByteString
            getGenderBytes(int index) {
          return gender_.getByteString(index);
        }

        public static final int AGEFLAG_FIELD_NUMBER = 3;
        private de.cache.DeliveryMessage.TargetFlag ageFlag_;
        /**
         * <code>optional .de.cache.TargetFlag ageFlag = 3 [default = CLOSE];</code>
         *
         * <pre>
         *年龄定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public boolean hasAgeFlag() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .de.cache.TargetFlag ageFlag = 3 [default = CLOSE];</code>
         *
         * <pre>
         *年龄定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public de.cache.DeliveryMessage.TargetFlag getAgeFlag() {
          return ageFlag_;
        }

        public static final int AGE_FIELD_NUMBER = 4;
        private com.google.protobuf.LazyStringList age_;
        /**
         * <code>repeated string age = 4;</code>
         *
         * <pre>
         *年龄
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getAgeList() {
          return age_;
        }
        /**
         * <code>repeated string age = 4;</code>
         *
         * <pre>
         *年龄
         * </pre>
         */
        public int getAgeCount() {
          return age_.size();
        }
        /**
         * <code>repeated string age = 4;</code>
         *
         * <pre>
         *年龄
         * </pre>
         */
        public java.lang.String getAge(int index) {
          return age_.get(index);
        }
        /**
         * <code>repeated string age = 4;</code>
         *
         * <pre>
         *年龄
         * </pre>
         */
        public com.google.protobuf.ByteString
            getAgeBytes(int index) {
          return age_.getByteString(index);
        }

        public static final int INTENTFLAG_FIELD_NUMBER = 5;
        private de.cache.DeliveryMessage.TargetFlag intentFlag_;
        /**
         * <code>optional .de.cache.TargetFlag intentFlag = 5 [default = CLOSE];</code>
         *
         * <pre>
         *意向定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public boolean hasIntentFlag() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .de.cache.TargetFlag intentFlag = 5 [default = CLOSE];</code>
         *
         * <pre>
         *意向定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public de.cache.DeliveryMessage.TargetFlag getIntentFlag() {
          return intentFlag_;
        }

        public static final int INTENT_FIELD_NUMBER = 6;
        private com.google.protobuf.LazyStringList intent_;
        /**
         * <code>repeated string intent = 6;</code>
         *
         * <pre>
         *意向
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getIntentList() {
          return intent_;
        }
        /**
         * <code>repeated string intent = 6;</code>
         *
         * <pre>
         *意向
         * </pre>
         */
        public int getIntentCount() {
          return intent_.size();
        }
        /**
         * <code>repeated string intent = 6;</code>
         *
         * <pre>
         *意向
         * </pre>
         */
        public java.lang.String getIntent(int index) {
          return intent_.get(index);
        }
        /**
         * <code>repeated string intent = 6;</code>
         *
         * <pre>
         *意向
         * </pre>
         */
        public com.google.protobuf.ByteString
            getIntentBytes(int index) {
          return intent_.getByteString(index);
        }

        public static final int INTERESTFLAG_FIELD_NUMBER = 7;
        private de.cache.DeliveryMessage.TargetFlag interestFlag_;
        /**
         * <code>optional .de.cache.TargetFlag interestFlag = 7 [default = CLOSE];</code>
         *
         * <pre>
         *兴趣定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public boolean hasInterestFlag() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .de.cache.TargetFlag interestFlag = 7 [default = CLOSE];</code>
         *
         * <pre>
         *兴趣定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public de.cache.DeliveryMessage.TargetFlag getInterestFlag() {
          return interestFlag_;
        }

        public static final int INTEREST_FIELD_NUMBER = 8;
        private com.google.protobuf.LazyStringList interest_;
        /**
         * <code>repeated string interest = 8;</code>
         *
         * <pre>
         *兴趣
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getInterestList() {
          return interest_;
        }
        /**
         * <code>repeated string interest = 8;</code>
         *
         * <pre>
         *兴趣
         * </pre>
         */
        public int getInterestCount() {
          return interest_.size();
        }
        /**
         * <code>repeated string interest = 8;</code>
         *
         * <pre>
         *兴趣
         * </pre>
         */
        public java.lang.String getInterest(int index) {
          return interest_.get(index);
        }
        /**
         * <code>repeated string interest = 8;</code>
         *
         * <pre>
         *兴趣
         * </pre>
         */
        public com.google.protobuf.ByteString
            getInterestBytes(int index) {
          return interest_.getByteString(index);
        }

        private void initFields() {
          genderFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          gender_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          ageFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          age_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          intentFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          intent_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          interestFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          interest_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeEnum(1, genderFlag_.getNumber());
          }
          for (int i = 0; i < gender_.size(); i++) {
            output.writeBytes(2, gender_.getByteString(i));
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeEnum(3, ageFlag_.getNumber());
          }
          for (int i = 0; i < age_.size(); i++) {
            output.writeBytes(4, age_.getByteString(i));
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeEnum(5, intentFlag_.getNumber());
          }
          for (int i = 0; i < intent_.size(); i++) {
            output.writeBytes(6, intent_.getByteString(i));
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeEnum(7, interestFlag_.getNumber());
          }
          for (int i = 0; i < interest_.size(); i++) {
            output.writeBytes(8, interest_.getByteString(i));
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, genderFlag_.getNumber());
          }
          {
            int dataSize = 0;
            for (int i = 0; i < gender_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeBytesSizeNoTag(gender_.getByteString(i));
            }
            size += dataSize;
            size += 1 * getGenderList().size();
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(3, ageFlag_.getNumber());
          }
          {
            int dataSize = 0;
            for (int i = 0; i < age_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeBytesSizeNoTag(age_.getByteString(i));
            }
            size += dataSize;
            size += 1 * getAgeList().size();
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(5, intentFlag_.getNumber());
          }
          {
            int dataSize = 0;
            for (int i = 0; i < intent_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeBytesSizeNoTag(intent_.getByteString(i));
            }
            size += dataSize;
            size += 1 * getIntentList().size();
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(7, interestFlag_.getNumber());
          }
          {
            int dataSize = 0;
            for (int i = 0; i < interest_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeBytesSizeNoTag(interest_.getByteString(i));
            }
            size += dataSize;
            size += 1 * getInterestList().size();
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code de.cache.Solution.SolutionTarget.demoTargetContent}
         *
         * <pre>
         * 人群属性定向内容结构
         * </pre>
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:de.cache.Solution.SolutionTarget.demoTargetContent)
            de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContentOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return de.cache.DeliveryMessage.internal_static_de_cache_Solution_SolutionTarget_demoTargetContent_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return de.cache.DeliveryMessage.internal_static_de_cache_Solution_SolutionTarget_demoTargetContent_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent.class, de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent.Builder.class);
          }

          // Construct using de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            genderFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
            bitField0_ = (bitField0_ & ~0x00000001);
            gender_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000002);
            ageFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
            bitField0_ = (bitField0_ & ~0x00000004);
            age_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000008);
            intentFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
            bitField0_ = (bitField0_ & ~0x00000010);
            intent_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000020);
            interestFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
            bitField0_ = (bitField0_ & ~0x00000040);
            interest_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000080);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return de.cache.DeliveryMessage.internal_static_de_cache_Solution_SolutionTarget_demoTargetContent_descriptor;
          }

          public de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent getDefaultInstanceForType() {
            return de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent.getDefaultInstance();
          }

          public de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent build() {
            de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent buildPartial() {
            de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent result = new de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.genderFlag_ = genderFlag_;
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              gender_ = gender_.getUnmodifiableView();
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.gender_ = gender_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000002;
            }
            result.ageFlag_ = ageFlag_;
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              age_ = age_.getUnmodifiableView();
              bitField0_ = (bitField0_ & ~0x00000008);
            }
            result.age_ = age_;
            if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
              to_bitField0_ |= 0x00000004;
            }
            result.intentFlag_ = intentFlag_;
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
              intent_ = intent_.getUnmodifiableView();
              bitField0_ = (bitField0_ & ~0x00000020);
            }
            result.intent_ = intent_;
            if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
              to_bitField0_ |= 0x00000008;
            }
            result.interestFlag_ = interestFlag_;
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
              interest_ = interest_.getUnmodifiableView();
              bitField0_ = (bitField0_ & ~0x00000080);
            }
            result.interest_ = interest_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent) {
              return mergeFrom((de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent other) {
            if (other == de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent.getDefaultInstance()) return this;
            if (other.hasGenderFlag()) {
              setGenderFlag(other.getGenderFlag());
            }
            if (!other.gender_.isEmpty()) {
              if (gender_.isEmpty()) {
                gender_ = other.gender_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureGenderIsMutable();
                gender_.addAll(other.gender_);
              }
              onChanged();
            }
            if (other.hasAgeFlag()) {
              setAgeFlag(other.getAgeFlag());
            }
            if (!other.age_.isEmpty()) {
              if (age_.isEmpty()) {
                age_ = other.age_;
                bitField0_ = (bitField0_ & ~0x00000008);
              } else {
                ensureAgeIsMutable();
                age_.addAll(other.age_);
              }
              onChanged();
            }
            if (other.hasIntentFlag()) {
              setIntentFlag(other.getIntentFlag());
            }
            if (!other.intent_.isEmpty()) {
              if (intent_.isEmpty()) {
                intent_ = other.intent_;
                bitField0_ = (bitField0_ & ~0x00000020);
              } else {
                ensureIntentIsMutable();
                intent_.addAll(other.intent_);
              }
              onChanged();
            }
            if (other.hasInterestFlag()) {
              setInterestFlag(other.getInterestFlag());
            }
            if (!other.interest_.isEmpty()) {
              if (interest_.isEmpty()) {
                interest_ = other.interest_;
                bitField0_ = (bitField0_ & ~0x00000080);
              } else {
                ensureInterestIsMutable();
                interest_.addAll(other.interest_);
              }
              onChanged();
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private de.cache.DeliveryMessage.TargetFlag genderFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          /**
           * <code>optional .de.cache.TargetFlag genderFlag = 1 [default = CLOSE];</code>
           *
           * <pre>
           *性别定向标识，0不定向、1定向、2非定向
           * </pre>
           */
          public boolean hasGenderFlag() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional .de.cache.TargetFlag genderFlag = 1 [default = CLOSE];</code>
           *
           * <pre>
           *性别定向标识，0不定向、1定向、2非定向
           * </pre>
           */
          public de.cache.DeliveryMessage.TargetFlag getGenderFlag() {
            return genderFlag_;
          }
          /**
           * <code>optional .de.cache.TargetFlag genderFlag = 1 [default = CLOSE];</code>
           *
           * <pre>
           *性别定向标识，0不定向、1定向、2非定向
           * </pre>
           */
          public Builder setGenderFlag(de.cache.DeliveryMessage.TargetFlag value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            genderFlag_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional .de.cache.TargetFlag genderFlag = 1 [default = CLOSE];</code>
           *
           * <pre>
           *性别定向标识，0不定向、1定向、2非定向
           * </pre>
           */
          public Builder clearGenderFlag() {
            bitField0_ = (bitField0_ & ~0x00000001);
            genderFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
            onChanged();
            return this;
          }

          private com.google.protobuf.LazyStringList gender_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          private void ensureGenderIsMutable() {
            if (!((bitField0_ & 0x00000002) == 0x00000002)) {
              gender_ = new com.google.protobuf.LazyStringArrayList(gender_);
              bitField0_ |= 0x00000002;
             }
          }
          /**
           * <code>repeated string gender = 2;</code>
           *
           * <pre>
           *性别
           * </pre>
           */
          public com.google.protobuf.ProtocolStringList
              getGenderList() {
            return gender_.getUnmodifiableView();
          }
          /**
           * <code>repeated string gender = 2;</code>
           *
           * <pre>
           *性别
           * </pre>
           */
          public int getGenderCount() {
            return gender_.size();
          }
          /**
           * <code>repeated string gender = 2;</code>
           *
           * <pre>
           *性别
           * </pre>
           */
          public java.lang.String getGender(int index) {
            return gender_.get(index);
          }
          /**
           * <code>repeated string gender = 2;</code>
           *
           * <pre>
           *性别
           * </pre>
           */
          public com.google.protobuf.ByteString
              getGenderBytes(int index) {
            return gender_.getByteString(index);
          }
          /**
           * <code>repeated string gender = 2;</code>
           *
           * <pre>
           *性别
           * </pre>
           */
          public Builder setGender(
              int index, java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureGenderIsMutable();
            gender_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string gender = 2;</code>
           *
           * <pre>
           *性别
           * </pre>
           */
          public Builder addGender(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureGenderIsMutable();
            gender_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string gender = 2;</code>
           *
           * <pre>
           *性别
           * </pre>
           */
          public Builder addAllGender(
              java.lang.Iterable<java.lang.String> values) {
            ensureGenderIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, gender_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string gender = 2;</code>
           *
           * <pre>
           *性别
           * </pre>
           */
          public Builder clearGender() {
            gender_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string gender = 2;</code>
           *
           * <pre>
           *性别
           * </pre>
           */
          public Builder addGenderBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureGenderIsMutable();
            gender_.add(value);
            onChanged();
            return this;
          }

          private de.cache.DeliveryMessage.TargetFlag ageFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          /**
           * <code>optional .de.cache.TargetFlag ageFlag = 3 [default = CLOSE];</code>
           *
           * <pre>
           *年龄定向标识，0不定向、1定向、2非定向
           * </pre>
           */
          public boolean hasAgeFlag() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional .de.cache.TargetFlag ageFlag = 3 [default = CLOSE];</code>
           *
           * <pre>
           *年龄定向标识，0不定向、1定向、2非定向
           * </pre>
           */
          public de.cache.DeliveryMessage.TargetFlag getAgeFlag() {
            return ageFlag_;
          }
          /**
           * <code>optional .de.cache.TargetFlag ageFlag = 3 [default = CLOSE];</code>
           *
           * <pre>
           *年龄定向标识，0不定向、1定向、2非定向
           * </pre>
           */
          public Builder setAgeFlag(de.cache.DeliveryMessage.TargetFlag value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000004;
            ageFlag_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional .de.cache.TargetFlag ageFlag = 3 [default = CLOSE];</code>
           *
           * <pre>
           *年龄定向标识，0不定向、1定向、2非定向
           * </pre>
           */
          public Builder clearAgeFlag() {
            bitField0_ = (bitField0_ & ~0x00000004);
            ageFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
            onChanged();
            return this;
          }

          private com.google.protobuf.LazyStringList age_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          private void ensureAgeIsMutable() {
            if (!((bitField0_ & 0x00000008) == 0x00000008)) {
              age_ = new com.google.protobuf.LazyStringArrayList(age_);
              bitField0_ |= 0x00000008;
             }
          }
          /**
           * <code>repeated string age = 4;</code>
           *
           * <pre>
           *年龄
           * </pre>
           */
          public com.google.protobuf.ProtocolStringList
              getAgeList() {
            return age_.getUnmodifiableView();
          }
          /**
           * <code>repeated string age = 4;</code>
           *
           * <pre>
           *年龄
           * </pre>
           */
          public int getAgeCount() {
            return age_.size();
          }
          /**
           * <code>repeated string age = 4;</code>
           *
           * <pre>
           *年龄
           * </pre>
           */
          public java.lang.String getAge(int index) {
            return age_.get(index);
          }
          /**
           * <code>repeated string age = 4;</code>
           *
           * <pre>
           *年龄
           * </pre>
           */
          public com.google.protobuf.ByteString
              getAgeBytes(int index) {
            return age_.getByteString(index);
          }
          /**
           * <code>repeated string age = 4;</code>
           *
           * <pre>
           *年龄
           * </pre>
           */
          public Builder setAge(
              int index, java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureAgeIsMutable();
            age_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string age = 4;</code>
           *
           * <pre>
           *年龄
           * </pre>
           */
          public Builder addAge(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureAgeIsMutable();
            age_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string age = 4;</code>
           *
           * <pre>
           *年龄
           * </pre>
           */
          public Builder addAllAge(
              java.lang.Iterable<java.lang.String> values) {
            ensureAgeIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, age_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string age = 4;</code>
           *
           * <pre>
           *年龄
           * </pre>
           */
          public Builder clearAge() {
            age_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000008);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string age = 4;</code>
           *
           * <pre>
           *年龄
           * </pre>
           */
          public Builder addAgeBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureAgeIsMutable();
            age_.add(value);
            onChanged();
            return this;
          }

          private de.cache.DeliveryMessage.TargetFlag intentFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          /**
           * <code>optional .de.cache.TargetFlag intentFlag = 5 [default = CLOSE];</code>
           *
           * <pre>
           *意向定向标识，0不定向、1定向、2非定向
           * </pre>
           */
          public boolean hasIntentFlag() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
          }
          /**
           * <code>optional .de.cache.TargetFlag intentFlag = 5 [default = CLOSE];</code>
           *
           * <pre>
           *意向定向标识，0不定向、1定向、2非定向
           * </pre>
           */
          public de.cache.DeliveryMessage.TargetFlag getIntentFlag() {
            return intentFlag_;
          }
          /**
           * <code>optional .de.cache.TargetFlag intentFlag = 5 [default = CLOSE];</code>
           *
           * <pre>
           *意向定向标识，0不定向、1定向、2非定向
           * </pre>
           */
          public Builder setIntentFlag(de.cache.DeliveryMessage.TargetFlag value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000010;
            intentFlag_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional .de.cache.TargetFlag intentFlag = 5 [default = CLOSE];</code>
           *
           * <pre>
           *意向定向标识，0不定向、1定向、2非定向
           * </pre>
           */
          public Builder clearIntentFlag() {
            bitField0_ = (bitField0_ & ~0x00000010);
            intentFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
            onChanged();
            return this;
          }

          private com.google.protobuf.LazyStringList intent_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          private void ensureIntentIsMutable() {
            if (!((bitField0_ & 0x00000020) == 0x00000020)) {
              intent_ = new com.google.protobuf.LazyStringArrayList(intent_);
              bitField0_ |= 0x00000020;
             }
          }
          /**
           * <code>repeated string intent = 6;</code>
           *
           * <pre>
           *意向
           * </pre>
           */
          public com.google.protobuf.ProtocolStringList
              getIntentList() {
            return intent_.getUnmodifiableView();
          }
          /**
           * <code>repeated string intent = 6;</code>
           *
           * <pre>
           *意向
           * </pre>
           */
          public int getIntentCount() {
            return intent_.size();
          }
          /**
           * <code>repeated string intent = 6;</code>
           *
           * <pre>
           *意向
           * </pre>
           */
          public java.lang.String getIntent(int index) {
            return intent_.get(index);
          }
          /**
           * <code>repeated string intent = 6;</code>
           *
           * <pre>
           *意向
           * </pre>
           */
          public com.google.protobuf.ByteString
              getIntentBytes(int index) {
            return intent_.getByteString(index);
          }
          /**
           * <code>repeated string intent = 6;</code>
           *
           * <pre>
           *意向
           * </pre>
           */
          public Builder setIntent(
              int index, java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureIntentIsMutable();
            intent_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string intent = 6;</code>
           *
           * <pre>
           *意向
           * </pre>
           */
          public Builder addIntent(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureIntentIsMutable();
            intent_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string intent = 6;</code>
           *
           * <pre>
           *意向
           * </pre>
           */
          public Builder addAllIntent(
              java.lang.Iterable<java.lang.String> values) {
            ensureIntentIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, intent_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string intent = 6;</code>
           *
           * <pre>
           *意向
           * </pre>
           */
          public Builder clearIntent() {
            intent_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000020);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string intent = 6;</code>
           *
           * <pre>
           *意向
           * </pre>
           */
          public Builder addIntentBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureIntentIsMutable();
            intent_.add(value);
            onChanged();
            return this;
          }

          private de.cache.DeliveryMessage.TargetFlag interestFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          /**
           * <code>optional .de.cache.TargetFlag interestFlag = 7 [default = CLOSE];</code>
           *
           * <pre>
           *兴趣定向标识，0不定向、1定向、2非定向
           * </pre>
           */
          public boolean hasInterestFlag() {
            return ((bitField0_ & 0x00000040) == 0x00000040);
          }
          /**
           * <code>optional .de.cache.TargetFlag interestFlag = 7 [default = CLOSE];</code>
           *
           * <pre>
           *兴趣定向标识，0不定向、1定向、2非定向
           * </pre>
           */
          public de.cache.DeliveryMessage.TargetFlag getInterestFlag() {
            return interestFlag_;
          }
          /**
           * <code>optional .de.cache.TargetFlag interestFlag = 7 [default = CLOSE];</code>
           *
           * <pre>
           *兴趣定向标识，0不定向、1定向、2非定向
           * </pre>
           */
          public Builder setInterestFlag(de.cache.DeliveryMessage.TargetFlag value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000040;
            interestFlag_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional .de.cache.TargetFlag interestFlag = 7 [default = CLOSE];</code>
           *
           * <pre>
           *兴趣定向标识，0不定向、1定向、2非定向
           * </pre>
           */
          public Builder clearInterestFlag() {
            bitField0_ = (bitField0_ & ~0x00000040);
            interestFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
            onChanged();
            return this;
          }

          private com.google.protobuf.LazyStringList interest_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          private void ensureInterestIsMutable() {
            if (!((bitField0_ & 0x00000080) == 0x00000080)) {
              interest_ = new com.google.protobuf.LazyStringArrayList(interest_);
              bitField0_ |= 0x00000080;
             }
          }
          /**
           * <code>repeated string interest = 8;</code>
           *
           * <pre>
           *兴趣
           * </pre>
           */
          public com.google.protobuf.ProtocolStringList
              getInterestList() {
            return interest_.getUnmodifiableView();
          }
          /**
           * <code>repeated string interest = 8;</code>
           *
           * <pre>
           *兴趣
           * </pre>
           */
          public int getInterestCount() {
            return interest_.size();
          }
          /**
           * <code>repeated string interest = 8;</code>
           *
           * <pre>
           *兴趣
           * </pre>
           */
          public java.lang.String getInterest(int index) {
            return interest_.get(index);
          }
          /**
           * <code>repeated string interest = 8;</code>
           *
           * <pre>
           *兴趣
           * </pre>
           */
          public com.google.protobuf.ByteString
              getInterestBytes(int index) {
            return interest_.getByteString(index);
          }
          /**
           * <code>repeated string interest = 8;</code>
           *
           * <pre>
           *兴趣
           * </pre>
           */
          public Builder setInterest(
              int index, java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureInterestIsMutable();
            interest_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string interest = 8;</code>
           *
           * <pre>
           *兴趣
           * </pre>
           */
          public Builder addInterest(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureInterestIsMutable();
            interest_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string interest = 8;</code>
           *
           * <pre>
           *兴趣
           * </pre>
           */
          public Builder addAllInterest(
              java.lang.Iterable<java.lang.String> values) {
            ensureInterestIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, interest_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string interest = 8;</code>
           *
           * <pre>
           *兴趣
           * </pre>
           */
          public Builder clearInterest() {
            interest_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000080);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string interest = 8;</code>
           *
           * <pre>
           *兴趣
           * </pre>
           */
          public Builder addInterestBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureInterestIsMutable();
            interest_.add(value);
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:de.cache.Solution.SolutionTarget.demoTargetContent)
        }

        static {
          defaultInstance = new demoTargetContent(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:de.cache.Solution.SolutionTarget.demoTargetContent)
      }

      private int bitField0_;
      public static final int FREQUENCYCTRL_FIELD_NUMBER = 1;
      private de.cache.DeliveryMessage.FrequencyCtrl frequencyCtrl_;
      /**
       * <code>optional .de.cache.FrequencyCtrl frequencyCtrl = 1;</code>
       *
       * <pre>
       *投放级显示频次定向
       * </pre>
       */
      public boolean hasFrequencyCtrl() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .de.cache.FrequencyCtrl frequencyCtrl = 1;</code>
       *
       * <pre>
       *投放级显示频次定向
       * </pre>
       */
      public de.cache.DeliveryMessage.FrequencyCtrl getFrequencyCtrl() {
        return frequencyCtrl_;
      }
      /**
       * <code>optional .de.cache.FrequencyCtrl frequencyCtrl = 1;</code>
       *
       * <pre>
       *投放级显示频次定向
       * </pre>
       */
      public de.cache.DeliveryMessage.FrequencyCtrlOrBuilder getFrequencyCtrlOrBuilder() {
        return frequencyCtrl_;
      }

      public static final int ORDERFREQUENCY_FIELD_NUMBER = 2;
      private de.cache.DeliveryMessage.GlobalSwitch orderFrequency_;
      /**
       * <code>optional .de.cache.GlobalSwitch orderFrequency = 2 [default = ON];</code>
       *
       * <pre>
       *订单级显示频次控制标示，ON受控、OFF不受控
       * </pre>
       */
      public boolean hasOrderFrequency() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .de.cache.GlobalSwitch orderFrequency = 2 [default = ON];</code>
       *
       * <pre>
       *订单级显示频次控制标示，ON受控、OFF不受控
       * </pre>
       */
      public de.cache.DeliveryMessage.GlobalSwitch getOrderFrequency() {
        return orderFrequency_;
      }

      public static final int CLICKFREQUENCY_FIELD_NUMBER = 3;
      private de.cache.DeliveryMessage.FrequencyCtrl clickFrequency_;
      /**
       * <code>optional .de.cache.FrequencyCtrl clickFrequency = 3;</code>
       *
       * <pre>
       *点击频次定向,clickFrequency.intervalSec取值被忽略
       * </pre>
       */
      public boolean hasClickFrequency() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .de.cache.FrequencyCtrl clickFrequency = 3;</code>
       *
       * <pre>
       *点击频次定向,clickFrequency.intervalSec取值被忽略
       * </pre>
       */
      public de.cache.DeliveryMessage.FrequencyCtrl getClickFrequency() {
        return clickFrequency_;
      }
      /**
       * <code>optional .de.cache.FrequencyCtrl clickFrequency = 3;</code>
       *
       * <pre>
       *点击频次定向,clickFrequency.intervalSec取值被忽略
       * </pre>
       */
      public de.cache.DeliveryMessage.FrequencyCtrlOrBuilder getClickFrequencyOrBuilder() {
        return clickFrequency_;
      }

      public static final int STOPIMPRESSIONWHENMAXCLICK_FIELD_NUMBER = 4;
      private de.cache.DeliveryMessage.GlobalSwitch stopImpressionWhenMaxClick_;
      /**
       * <code>optional .de.cache.GlobalSwitch stopImpressionWhenMaxClick = 4 [default = OFF];</code>
       *
       * <pre>
       *点击频次控制显示标识，0=当点击频次达到上限时不控制显示，1=点击频次达到上限的时候需要控制不显示
       * </pre>
       */
      public boolean hasStopImpressionWhenMaxClick() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .de.cache.GlobalSwitch stopImpressionWhenMaxClick = 4 [default = OFF];</code>
       *
       * <pre>
       *点击频次控制显示标识，0=当点击频次达到上限时不控制显示，1=点击频次达到上限的时候需要控制不显示
       * </pre>
       */
      public de.cache.DeliveryMessage.GlobalSwitch getStopImpressionWhenMaxClick() {
        return stopImpressionWhenMaxClick_;
      }

      public static final int LOCATIONFLAG_FIELD_NUMBER = 5;
      private de.cache.DeliveryMessage.TargetFlag locationFlag_;
      /**
       * <code>optional .de.cache.TargetFlag locationFlag = 5 [default = CLOSE];</code>
       *
       * <pre>
       *地域定向标识，0不定向、1定向、2非定向
       * </pre>
       */
      public boolean hasLocationFlag() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .de.cache.TargetFlag locationFlag = 5 [default = CLOSE];</code>
       *
       * <pre>
       *地域定向标识，0不定向、1定向、2非定向
       * </pre>
       */
      public de.cache.DeliveryMessage.TargetFlag getLocationFlag() {
        return locationFlag_;
      }

      public static final int LOCATION_FIELD_NUMBER = 6;
      private com.google.protobuf.LazyStringList location_;
      /**
       * <code>repeated string location = 6;</code>
       *
       * <pre>
       *地域定向内容，本字段目前内容全部由6位或以上字母组成，支持*通配符.例中国重庆表示为CNCQ*,CN表示中国,CQ表示重庆.*表示重庆下辖的所有二级城市。美国则表示为US*
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getLocationList() {
        return location_;
      }
      /**
       * <code>repeated string location = 6;</code>
       *
       * <pre>
       *地域定向内容，本字段目前内容全部由6位或以上字母组成，支持*通配符.例中国重庆表示为CNCQ*,CN表示中国,CQ表示重庆.*表示重庆下辖的所有二级城市。美国则表示为US*
       * </pre>
       */
      public int getLocationCount() {
        return location_.size();
      }
      /**
       * <code>repeated string location = 6;</code>
       *
       * <pre>
       *地域定向内容，本字段目前内容全部由6位或以上字母组成，支持*通配符.例中国重庆表示为CNCQ*,CN表示中国,CQ表示重庆.*表示重庆下辖的所有二级城市。美国则表示为US*
       * </pre>
       */
      public java.lang.String getLocation(int index) {
        return location_.get(index);
      }
      /**
       * <code>repeated string location = 6;</code>
       *
       * <pre>
       *地域定向内容，本字段目前内容全部由6位或以上字母组成，支持*通配符.例中国重庆表示为CNCQ*,CN表示中国,CQ表示重庆.*表示重庆下辖的所有二级城市。美国则表示为US*
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLocationBytes(int index) {
        return location_.getByteString(index);
      }

      public static final int UNIVERSITYFLAG_FIELD_NUMBER = 7;
      private de.cache.DeliveryMessage.TargetFlag universityFlag_;
      /**
       * <code>optional .de.cache.TargetFlag universityFlag = 7 [default = CLOSE];</code>
       *
       * <pre>
       *大学用户(教育网IP.)定向标示，0不定向、1定向、2非定向
       * </pre>
       */
      public boolean hasUniversityFlag() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .de.cache.TargetFlag universityFlag = 7 [default = CLOSE];</code>
       *
       * <pre>
       *大学用户(教育网IP.)定向标示，0不定向、1定向、2非定向
       * </pre>
       */
      public de.cache.DeliveryMessage.TargetFlag getUniversityFlag() {
        return universityFlag_;
      }

      public static final int LANGUAGEFLAG_FIELD_NUMBER = 8;
      private de.cache.DeliveryMessage.TargetFlag languageFlag_;
      /**
       * <code>optional .de.cache.TargetFlag languageFlag = 8 [default = CLOSE];</code>
       *
       * <pre>
       *浏览器语言定向标识，0不定向、1定向、2非定向
       * </pre>
       */
      public boolean hasLanguageFlag() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .de.cache.TargetFlag languageFlag = 8 [default = CLOSE];</code>
       *
       * <pre>
       *浏览器语言定向标识，0不定向、1定向、2非定向
       * </pre>
       */
      public de.cache.DeliveryMessage.TargetFlag getLanguageFlag() {
        return languageFlag_;
      }

      public static final int LANGUAGE_FIELD_NUMBER = 9;
      private com.google.protobuf.LazyStringList language_;
      /**
       * <code>repeated string language = 9;</code>
       *
       * <pre>
       *浏览器语言定向的具体内容，一般格式为"大语种代号-区域代号",多个语种时使用','分隔开,如"`zh-cn,zh-hk,en,en-za`",Zh表示汉语 cn表示大陆简体
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getLanguageList() {
        return language_;
      }
      /**
       * <code>repeated string language = 9;</code>
       *
       * <pre>
       *浏览器语言定向的具体内容，一般格式为"大语种代号-区域代号",多个语种时使用','分隔开,如"`zh-cn,zh-hk,en,en-za`",Zh表示汉语 cn表示大陆简体
       * </pre>
       */
      public int getLanguageCount() {
        return language_.size();
      }
      /**
       * <code>repeated string language = 9;</code>
       *
       * <pre>
       *浏览器语言定向的具体内容，一般格式为"大语种代号-区域代号",多个语种时使用','分隔开,如"`zh-cn,zh-hk,en,en-za`",Zh表示汉语 cn表示大陆简体
       * </pre>
       */
      public java.lang.String getLanguage(int index) {
        return language_.get(index);
      }
      /**
       * <code>repeated string language = 9;</code>
       *
       * <pre>
       *浏览器语言定向的具体内容，一般格式为"大语种代号-区域代号",多个语种时使用','分隔开,如"`zh-cn,zh-hk,en,en-za`",Zh表示汉语 cn表示大陆简体
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLanguageBytes(int index) {
        return language_.getByteString(index);
      }

      public static final int OSFLAG_FIELD_NUMBER = 10;
      private de.cache.DeliveryMessage.TargetFlag osFlag_;
      /**
       * <code>optional .de.cache.TargetFlag osFlag = 10 [default = CLOSE];</code>
       *
       * <pre>
       *操作系统定向标识，0不定向、1定向、2非定向
       * </pre>
       */
      public boolean hasOsFlag() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .de.cache.TargetFlag osFlag = 10 [default = CLOSE];</code>
       *
       * <pre>
       *操作系统定向标识，0不定向、1定向、2非定向
       * </pre>
       */
      public de.cache.DeliveryMessage.TargetFlag getOsFlag() {
        return osFlag_;
      }

      public static final int OS_FIELD_NUMBER = 11;
      private com.google.protobuf.LazyStringList os_;
      /**
       * <code>repeated string os = 11;</code>
       *
       * <pre>
       *定向的操作系统名称， 如Windows 98,Win98,Win32,Android,Android 2.1等,定向操作方式均是使用字符串查询匹配，也就是支持 sysname+version*匹配，如：HTC_Android 2.1系统，使用HTC、HTC_Android、HTC_Android 2等定向条件均能定向成功。
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getOsList() {
        return os_;
      }
      /**
       * <code>repeated string os = 11;</code>
       *
       * <pre>
       *定向的操作系统名称， 如Windows 98,Win98,Win32,Android,Android 2.1等,定向操作方式均是使用字符串查询匹配，也就是支持 sysname+version*匹配，如：HTC_Android 2.1系统，使用HTC、HTC_Android、HTC_Android 2等定向条件均能定向成功。
       * </pre>
       */
      public int getOsCount() {
        return os_.size();
      }
      /**
       * <code>repeated string os = 11;</code>
       *
       * <pre>
       *定向的操作系统名称， 如Windows 98,Win98,Win32,Android,Android 2.1等,定向操作方式均是使用字符串查询匹配，也就是支持 sysname+version*匹配，如：HTC_Android 2.1系统，使用HTC、HTC_Android、HTC_Android 2等定向条件均能定向成功。
       * </pre>
       */
      public java.lang.String getOs(int index) {
        return os_.get(index);
      }
      /**
       * <code>repeated string os = 11;</code>
       *
       * <pre>
       *定向的操作系统名称， 如Windows 98,Win98,Win32,Android,Android 2.1等,定向操作方式均是使用字符串查询匹配，也就是支持 sysname+version*匹配，如：HTC_Android 2.1系统，使用HTC、HTC_Android、HTC_Android 2等定向条件均能定向成功。
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOsBytes(int index) {
        return os_.getByteString(index);
      }

      public static final int LINKAGEFLAG_FIELD_NUMBER = 12;
      private de.cache.DeliveryMessage.GlobalSwitch linkageFlag_;
      /**
       * <code>optional .de.cache.GlobalSwitch linkageFlag = 12 [default = OFF];</code>
       *
       * <pre>
       *投放联动标识，0非联动、1联动
       * </pre>
       */
      public boolean hasLinkageFlag() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .de.cache.GlobalSwitch linkageFlag = 12 [default = OFF];</code>
       *
       * <pre>
       *投放联动标识，0非联动、1联动
       * </pre>
       */
      public de.cache.DeliveryMessage.GlobalSwitch getLinkageFlag() {
        return linkageFlag_;
      }

      public static final int KEYWORDFLAG_FIELD_NUMBER = 13;
      private de.cache.DeliveryMessage.TargetFlag keywordFlag_;
      /**
       * <code>optional .de.cache.TargetFlag keywordFlag = 13 [default = CLOSE];</code>
       *
       * <pre>
       *关键字定向标识，0不定向、1定向、2非定向
       * </pre>
       */
      public boolean hasKeywordFlag() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .de.cache.TargetFlag keywordFlag = 13 [default = CLOSE];</code>
       *
       * <pre>
       *关键字定向标识，0不定向、1定向、2非定向
       * </pre>
       */
      public de.cache.DeliveryMessage.TargetFlag getKeywordFlag() {
        return keywordFlag_;
      }

      public static final int KEYWORD_FIELD_NUMBER = 14;
      private java.lang.Object keyword_;
      /**
       * <code>optional string keyword = 14;</code>
       *
       * <pre>
       *关键字定向的具体关键字和值(关系表达式)，如“w=上海|w=中国|s=美国”，
       *表示广告遇到“w=上海”或者“w=中国”或者“s=美国”的字符串参数的时候，就优先播放。
       *与solution表中GID=投放solutionid 的子记录（channeltype=c）的keyword字段值对应。该关系表达式详细格式描述见相关文档
       * </pre>
       */
      public boolean hasKeyword() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string keyword = 14;</code>
       *
       * <pre>
       *关键字定向的具体关键字和值(关系表达式)，如“w=上海|w=中国|s=美国”，
       *表示广告遇到“w=上海”或者“w=中国”或者“s=美国”的字符串参数的时候，就优先播放。
       *与solution表中GID=投放solutionid 的子记录（channeltype=c）的keyword字段值对应。该关系表达式详细格式描述见相关文档
       * </pre>
       */
      public java.lang.String getKeyword() {
        java.lang.Object ref = keyword_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            keyword_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string keyword = 14;</code>
       *
       * <pre>
       *关键字定向的具体关键字和值(关系表达式)，如“w=上海|w=中国|s=美国”，
       *表示广告遇到“w=上海”或者“w=中国”或者“s=美国”的字符串参数的时候，就优先播放。
       *与solution表中GID=投放solutionid 的子记录（channeltype=c）的keyword字段值对应。该关系表达式详细格式描述见相关文档
       * </pre>
       */
      public com.google.protobuf.ByteString
          getKeywordBytes() {
        java.lang.Object ref = keyword_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          keyword_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int BROWSERFLAG_FIELD_NUMBER = 15;
      private de.cache.DeliveryMessage.TargetFlag browserFlag_;
      /**
       * <code>optional .de.cache.TargetFlag browserFlag = 15 [default = CLOSE];</code>
       *
       * <pre>
       *浏览器定向标识，0不定向、1定向、2非定向
       * </pre>
       */
      public boolean hasBrowserFlag() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .de.cache.TargetFlag browserFlag = 15 [default = CLOSE];</code>
       *
       * <pre>
       *浏览器定向标识，0不定向、1定向、2非定向
       * </pre>
       */
      public de.cache.DeliveryMessage.TargetFlag getBrowserFlag() {
        return browserFlag_;
      }

      public static final int BROWSER_FIELD_NUMBER = 16;
      private com.google.protobuf.LazyStringList browser_;
      /**
       * <code>repeated string browser = 16;</code>
       *
       * <pre>
       *浏览器定向的具体浏览器代码
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getBrowserList() {
        return browser_;
      }
      /**
       * <code>repeated string browser = 16;</code>
       *
       * <pre>
       *浏览器定向的具体浏览器代码
       * </pre>
       */
      public int getBrowserCount() {
        return browser_.size();
      }
      /**
       * <code>repeated string browser = 16;</code>
       *
       * <pre>
       *浏览器定向的具体浏览器代码
       * </pre>
       */
      public java.lang.String getBrowser(int index) {
        return browser_.get(index);
      }
      /**
       * <code>repeated string browser = 16;</code>
       *
       * <pre>
       *浏览器定向的具体浏览器代码
       * </pre>
       */
      public com.google.protobuf.ByteString
          getBrowserBytes(int index) {
        return browser_.getByteString(index);
      }

      public static final int DEMOGRAPHICFLAG_FIELD_NUMBER = 17;
      private de.cache.DeliveryMessage.GlobalSwitch demographicFlag_;
      /**
       * <code>optional .de.cache.GlobalSwitch demographicFlag = 17 [default = OFF];</code>
       *
       * <pre>
       *人口属性智能定向标识,0=关闭，1=开启
       * </pre>
       */
      public boolean hasDemographicFlag() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .de.cache.GlobalSwitch demographicFlag = 17 [default = OFF];</code>
       *
       * <pre>
       *人口属性智能定向标识,0=关闭，1=开启
       * </pre>
       */
      public de.cache.DeliveryMessage.GlobalSwitch getDemographicFlag() {
        return demographicFlag_;
      }

      public static final int AUDIENCETARGETFLAG_FIELD_NUMBER = 18;
      private de.cache.DeliveryMessage.TargetFlag audienceTargetFlag_;
      /**
       * <code>optional .de.cache.TargetFlag audienceTargetFlag = 18 [default = CLOSE];</code>
       *
       * <pre>
       *人群定向标示，0不定向、1定向、2非定向
       * </pre>
       */
      public boolean hasAudienceTargetFlag() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .de.cache.TargetFlag audienceTargetFlag = 18 [default = CLOSE];</code>
       *
       * <pre>
       *人群定向标示，0不定向、1定向、2非定向
       * </pre>
       */
      public de.cache.DeliveryMessage.TargetFlag getAudienceTargetFlag() {
        return audienceTargetFlag_;
      }

      public static final int AUDIENCETARGET_FIELD_NUMBER = 19;
      private java.lang.Object audienceTarget_;
      /**
       * <code>optional string audienceTarget = 19;</code>
       *
       * <pre>
       *人群定向信息, size=0时,关闭该功能
       * </pre>
       */
      public boolean hasAudienceTarget() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional string audienceTarget = 19;</code>
       *
       * <pre>
       *人群定向信息, size=0时,关闭该功能
       * </pre>
       */
      public java.lang.String getAudienceTarget() {
        java.lang.Object ref = audienceTarget_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            audienceTarget_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string audienceTarget = 19;</code>
       *
       * <pre>
       *人群定向信息, size=0时,关闭该功能
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAudienceTargetBytes() {
        java.lang.Object ref = audienceTarget_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          audienceTarget_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int CSFLAG_FIELD_NUMBER = 20;
      private de.cache.DeliveryMessage.GlobalSwitch csFlag_;
      /**
       * <code>optional .de.cache.GlobalSwitch csFlag = 20 [default = OFF];</code>
       *
       * <pre>
       *语义定向:上下文打分定向标示，0无定向、1有定向
       * </pre>
       */
      public boolean hasCsFlag() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .de.cache.GlobalSwitch csFlag = 20 [default = OFF];</code>
       *
       * <pre>
       *语义定向:上下文打分定向标示，0无定向、1有定向
       * </pre>
       */
      public de.cache.DeliveryMessage.GlobalSwitch getCsFlag() {
        return csFlag_;
      }

      public static final int CONTENTTARGETFLAG_FIELD_NUMBER = 21;
      private de.cache.DeliveryMessage.TargetFlag contentTargetFlag_;
      /**
       * <code>optional .de.cache.TargetFlag contentTargetFlag = 21 [default = CLOSE];</code>
       *
       * <pre>
       *内容定向标示，0不定向、1定向、2非定向
       * </pre>
       */
      public boolean hasContentTargetFlag() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .de.cache.TargetFlag contentTargetFlag = 21 [default = CLOSE];</code>
       *
       * <pre>
       *内容定向标示，0不定向、1定向、2非定向
       * </pre>
       */
      public de.cache.DeliveryMessage.TargetFlag getContentTargetFlag() {
        return contentTargetFlag_;
      }

      public static final int CONTENTTARGET_FIELD_NUMBER = 22;
      private java.lang.Object contentTarget_;
      /**
       * <code>optional string contentTarget = 22;</code>
       *
       * <pre>
       *内容定向信息, size=0时,关闭该功能
       * </pre>
       */
      public boolean hasContentTarget() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional string contentTarget = 22;</code>
       *
       * <pre>
       *内容定向信息, size=0时,关闭该功能
       * </pre>
       */
      public java.lang.String getContentTarget() {
        java.lang.Object ref = contentTarget_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            contentTarget_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string contentTarget = 22;</code>
       *
       * <pre>
       *内容定向信息, size=0时,关闭该功能
       * </pre>
       */
      public com.google.protobuf.ByteString
          getContentTargetBytes() {
        java.lang.Object ref = contentTarget_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          contentTarget_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int RETARGETINGFLAG_FIELD_NUMBER = 23;
      private de.cache.DeliveryMessage.TargetFlag retargetingFlag_;
      /**
       * <code>optional .de.cache.TargetFlag retargetingFlag = 23 [default = CLOSE];</code>
       *
       * <pre>
       *重定向标示，0不定向、1定向、2非定向
       * </pre>
       */
      public boolean hasRetargetingFlag() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .de.cache.TargetFlag retargetingFlag = 23 [default = CLOSE];</code>
       *
       * <pre>
       *重定向标示，0不定向、1定向、2非定向
       * </pre>
       */
      public de.cache.DeliveryMessage.TargetFlag getRetargetingFlag() {
        return retargetingFlag_;
      }

      public static final int RETARGETING_FIELD_NUMBER = 24;
      private java.lang.Object retargeting_;
      /**
       * <code>optional string retargeting = 24;</code>
       *
       * <pre>
       *重定向信息, size=0时,关闭该功能
       * </pre>
       */
      public boolean hasRetargeting() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional string retargeting = 24;</code>
       *
       * <pre>
       *重定向信息, size=0时,关闭该功能
       * </pre>
       */
      public java.lang.String getRetargeting() {
        java.lang.Object ref = retargeting_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            retargeting_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string retargeting = 24;</code>
       *
       * <pre>
       *重定向信息, size=0时,关闭该功能
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRetargetingBytes() {
        java.lang.Object ref = retargeting_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          retargeting_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DEALFILES_FIELD_NUMBER = 25;
      private java.util.List<de.cache.DeliveryMessage.CacheFile> dealFiles_;
      /**
       * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
       *
       * <pre>
       *winmax定向文件
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.CacheFile> getDealFilesList() {
        return dealFiles_;
      }
      /**
       * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
       *
       * <pre>
       *winmax定向文件
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.CacheFileOrBuilder> 
          getDealFilesOrBuilderList() {
        return dealFiles_;
      }
      /**
       * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
       *
       * <pre>
       *winmax定向文件
       * </pre>
       */
      public int getDealFilesCount() {
        return dealFiles_.size();
      }
      /**
       * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
       *
       * <pre>
       *winmax定向文件
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFile getDealFiles(int index) {
        return dealFiles_.get(index);
      }
      /**
       * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
       *
       * <pre>
       *winmax定向文件
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFileOrBuilder getDealFilesOrBuilder(
          int index) {
        return dealFiles_.get(index);
      }

      public static final int CPAOWNERTYPE_FIELD_NUMBER = 26;
      private java.lang.Object cpaOwnerType_;
      /**
       * <code>optional string cpaOwnerType = 26;</code>
       *
       * <pre>
       *cpa归属类型
       * </pre>
       */
      public boolean hasCpaOwnerType() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional string cpaOwnerType = 26;</code>
       *
       * <pre>
       *cpa归属类型
       * </pre>
       */
      public java.lang.String getCpaOwnerType() {
        java.lang.Object ref = cpaOwnerType_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            cpaOwnerType_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string cpaOwnerType = 26;</code>
       *
       * <pre>
       *cpa归属类型
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCpaOwnerTypeBytes() {
        java.lang.Object ref = cpaOwnerType_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cpaOwnerType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int BTTAG_FIELD_NUMBER = 27;
      private com.google.protobuf.LazyStringList btTag_;
      /**
       * <code>repeated string btTag = 27;</code>
       *
       * <pre>
       *BT定向tag关系表达式,多个表达式间或关系, size=0时,关闭该功能
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getBtTagList() {
        return btTag_;
      }
      /**
       * <code>repeated string btTag = 27;</code>
       *
       * <pre>
       *BT定向tag关系表达式,多个表达式间或关系, size=0时,关闭该功能
       * </pre>
       */
      public int getBtTagCount() {
        return btTag_.size();
      }
      /**
       * <code>repeated string btTag = 27;</code>
       *
       * <pre>
       *BT定向tag关系表达式,多个表达式间或关系, size=0时,关闭该功能
       * </pre>
       */
      public java.lang.String getBtTag(int index) {
        return btTag_.get(index);
      }
      /**
       * <code>repeated string btTag = 27;</code>
       *
       * <pre>
       *BT定向tag关系表达式,多个表达式间或关系, size=0时,关闭该功能
       * </pre>
       */
      public com.google.protobuf.ByteString
          getBtTagBytes(int index) {
        return btTag_.getByteString(index);
      }

      public static final int IPWHITELIST_FIELD_NUMBER = 28;
      private java.util.List<de.cache.DeliveryMessage.IPSection> ipWhitelist_;
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
       */
      public java.util.List<de.cache.DeliveryMessage.IPSection> getIpWhitelistList() {
        return ipWhitelist_;
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.IPSectionOrBuilder> 
          getIpWhitelistOrBuilderList() {
        return ipWhitelist_;
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
       */
      public int getIpWhitelistCount() {
        return ipWhitelist_.size();
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
       */
      public de.cache.DeliveryMessage.IPSection getIpWhitelist(int index) {
        return ipWhitelist_.get(index);
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
       */
      public de.cache.DeliveryMessage.IPSectionOrBuilder getIpWhitelistOrBuilder(
          int index) {
        return ipWhitelist_.get(index);
      }

      public static final int IPBLACKLIST_FIELD_NUMBER = 29;
      private java.util.List<de.cache.DeliveryMessage.IPSection> ipBlacklist_;
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
       */
      public java.util.List<de.cache.DeliveryMessage.IPSection> getIpBlacklistList() {
        return ipBlacklist_;
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.IPSectionOrBuilder> 
          getIpBlacklistOrBuilderList() {
        return ipBlacklist_;
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
       */
      public int getIpBlacklistCount() {
        return ipBlacklist_.size();
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
       */
      public de.cache.DeliveryMessage.IPSection getIpBlacklist(int index) {
        return ipBlacklist_.get(index);
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
       */
      public de.cache.DeliveryMessage.IPSectionOrBuilder getIpBlacklistOrBuilder(
          int index) {
        return ipBlacklist_.get(index);
      }

      public static final int FORCESOLUTIONTIMES_FIELD_NUMBER = 30;
      private java.lang.Object forceSolutionTimes_;
      /**
       * <code>optional string forceSolutionTimes = 30;</code>
       *
       * <pre>
       *强制投放时间，如：8:00-10:00表示8点到10点可以强制投放，多个时间段以逗号分隔。为0或空表示没有强制投放
       * </pre>
       */
      public boolean hasForceSolutionTimes() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional string forceSolutionTimes = 30;</code>
       *
       * <pre>
       *强制投放时间，如：8:00-10:00表示8点到10点可以强制投放，多个时间段以逗号分隔。为0或空表示没有强制投放
       * </pre>
       */
      public java.lang.String getForceSolutionTimes() {
        java.lang.Object ref = forceSolutionTimes_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            forceSolutionTimes_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string forceSolutionTimes = 30;</code>
       *
       * <pre>
       *强制投放时间，如：8:00-10:00表示8点到10点可以强制投放，多个时间段以逗号分隔。为0或空表示没有强制投放
       * </pre>
       */
      public com.google.protobuf.ByteString
          getForceSolutionTimesBytes() {
        java.lang.Object ref = forceSolutionTimes_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          forceSolutionTimes_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int REFERRER_FIELD_NUMBER = 31;
      private de.cache.DeliveryMessage.BlackAndWhiteList referrer_;
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrer = 31;</code>
       *
       * <pre>
       *Referrer定向
       * </pre>
       */
      public boolean hasReferrer() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrer = 31;</code>
       *
       * <pre>
       *Referrer定向
       * </pre>
       */
      public de.cache.DeliveryMessage.BlackAndWhiteList getReferrer() {
        return referrer_;
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrer = 31;</code>
       *
       * <pre>
       *Referrer定向
       * </pre>
       */
      public de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder getReferrerOrBuilder() {
        return referrer_;
      }

      public static final int INHERITFROMGCONF_FIELD_NUMBER = 32;
      private de.cache.DeliveryMessage.GlobalSwitch inheritFromGConf_;
      /**
       * <code>optional .de.cache.GlobalSwitch inheritFromGConf = 32 [default = OFF];</code>
       *
       * <pre>
       *表示是否继承db级别的referer黑白名单控制，0=不继承，1=继承
       * </pre>
       */
      public boolean hasInheritFromGConf() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional .de.cache.GlobalSwitch inheritFromGConf = 32 [default = OFF];</code>
       *
       * <pre>
       *表示是否继承db级别的referer黑白名单控制，0=不继承，1=继承
       * </pre>
       */
      public de.cache.DeliveryMessage.GlobalSwitch getInheritFromGConf() {
        return inheritFromGConf_;
      }

      public static final int DEVICE_FIELD_NUMBER = 33;
      private de.cache.DeliveryMessage.CacheFile device_;
      /**
       * <code>optional .de.cache.CacheFile device = 33;</code>
       *
       * <pre>
       *target下的文件名(d.$sid)。
       *文件内容为：/AdNetworkId/{NativeCode，不同记录间支持and和or的关系。以","或"()"分隔，其中“，”表示or关系，“（）”表示and关系。
       *Type取值：=0 DESKTOP；=1 HIGHEND_PHONE；=2 TABLET
       *Platform取值: android, iphone, palm
       *Make: string,Device make (如： Nokia, Samsung).
       *Model: string, Device model(如：N70, Galaxy.)
       *cache生成规则：
       *1）Type为DESKTOP时， Platform/Make/Model 永远为空，如：“/2/0”
       *2) 在大类不做定向时，不允许小类为空，且最后不加”/”。如“/2/1/android/Nokia”，但是不允许“/2/1/android//N70”
       *3) string全为小写
       * </pre>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional .de.cache.CacheFile device = 33;</code>
       *
       * <pre>
       *target下的文件名(d.$sid)。
       *文件内容为：/AdNetworkId/{NativeCode，不同记录间支持and和or的关系。以","或"()"分隔，其中“，”表示or关系，“（）”表示and关系。
       *Type取值：=0 DESKTOP；=1 HIGHEND_PHONE；=2 TABLET
       *Platform取值: android, iphone, palm
       *Make: string,Device make (如： Nokia, Samsung).
       *Model: string, Device model(如：N70, Galaxy.)
       *cache生成规则：
       *1）Type为DESKTOP时， Platform/Make/Model 永远为空，如：“/2/0”
       *2) 在大类不做定向时，不允许小类为空，且最后不加”/”。如“/2/1/android/Nokia”，但是不允许“/2/1/android//N70”
       *3) string全为小写
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFile getDevice() {
        return device_;
      }
      /**
       * <code>optional .de.cache.CacheFile device = 33;</code>
       *
       * <pre>
       *target下的文件名(d.$sid)。
       *文件内容为：/AdNetworkId/{NativeCode，不同记录间支持and和or的关系。以","或"()"分隔，其中“，”表示or关系，“（）”表示and关系。
       *Type取值：=0 DESKTOP；=1 HIGHEND_PHONE；=2 TABLET
       *Platform取值: android, iphone, palm
       *Make: string,Device make (如： Nokia, Samsung).
       *Model: string, Device model(如：N70, Galaxy.)
       *cache生成规则：
       *1）Type为DESKTOP时， Platform/Make/Model 永远为空，如：“/2/0”
       *2) 在大类不做定向时，不允许小类为空，且最后不加”/”。如“/2/1/android/Nokia”，但是不允许“/2/1/android//N70”
       *3) string全为小写
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFileOrBuilder getDeviceOrBuilder() {
        return device_;
      }

      public static final int APPDATA_FIELD_NUMBER = 34;
      private de.cache.DeliveryMessage.CacheFile appData_;
      /**
       * <code>optional .de.cache.CacheFile appData = 34;</code>
       *
       * <pre>
       *ref下的文件名(ai.$sid)，文件内容：0/1(白黑) &#92;t exchange_id &#92;t app_id
       * </pre>
       */
      public boolean hasAppData() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional .de.cache.CacheFile appData = 34;</code>
       *
       * <pre>
       *ref下的文件名(ai.$sid)，文件内容：0/1(白黑) &#92;t exchange_id &#92;t app_id
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFile getAppData() {
        return appData_;
      }
      /**
       * <code>optional .de.cache.CacheFile appData = 34;</code>
       *
       * <pre>
       *ref下的文件名(ai.$sid)，文件内容：0/1(白黑) &#92;t exchange_id &#92;t app_id
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFileOrBuilder getAppDataOrBuilder() {
        return appData_;
      }

      public static final int POSITIONINGORDER_FIELD_NUMBER = 35;
      private de.cache.DeliveryMessage.CacheFile positioningOrder_;
      /**
       * <code>optional .de.cache.CacheFile positioningOrder = 35;</code>
       *
       * <pre>
       * target下的文件名， 文件内容为/AdNetwork/0(非视频), /AdNetwork/1/前贴 ，支持与”()” 或”,”
       * </pre>
       */
      public boolean hasPositioningOrder() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional .de.cache.CacheFile positioningOrder = 35;</code>
       *
       * <pre>
       * target下的文件名， 文件内容为/AdNetwork/0(非视频), /AdNetwork/1/前贴 ，支持与”()” 或”,”
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFile getPositioningOrder() {
        return positioningOrder_;
      }
      /**
       * <code>optional .de.cache.CacheFile positioningOrder = 35;</code>
       *
       * <pre>
       * target下的文件名， 文件内容为/AdNetwork/0(非视频), /AdNetwork/1/前贴 ，支持与”()” 或”,”
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFileOrBuilder getPositioningOrderOrBuilder() {
        return positioningOrder_;
      }

      public static final int TRAFFICSOURCE_FIELD_NUMBER = 36;
      private java.util.List<de.cache.DeliveryMessage.TrafficSource> trafficSource_;
      /**
       * <code>repeated .de.cache.TrafficSource trafficSource = 36;</code>
       *
       * <pre>
       *投放的的流量来源定向  add by nick 2014-05-23
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.TrafficSource> getTrafficSourceList() {
        return trafficSource_;
      }
      /**
       * <code>repeated .de.cache.TrafficSource trafficSource = 36;</code>
       *
       * <pre>
       *投放的的流量来源定向  add by nick 2014-05-23
       * </pre>
       */
      public int getTrafficSourceCount() {
        return trafficSource_.size();
      }
      /**
       * <code>repeated .de.cache.TrafficSource trafficSource = 36;</code>
       *
       * <pre>
       *投放的的流量来源定向  add by nick 2014-05-23
       * </pre>
       */
      public de.cache.DeliveryMessage.TrafficSource getTrafficSource(int index) {
        return trafficSource_.get(index);
      }

      public static final int TAGIDS_FIELD_NUMBER = 37;
      private com.google.protobuf.LazyStringList tagIds_;
      /**
       * <code>repeated string tagIds = 37;</code>
       *
       * <pre>
       * 广告位ID定向内容
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getTagIdsList() {
        return tagIds_;
      }
      /**
       * <code>repeated string tagIds = 37;</code>
       *
       * <pre>
       * 广告位ID定向内容
       * </pre>
       */
      public int getTagIdsCount() {
        return tagIds_.size();
      }
      /**
       * <code>repeated string tagIds = 37;</code>
       *
       * <pre>
       * 广告位ID定向内容
       * </pre>
       */
      public java.lang.String getTagIds(int index) {
        return tagIds_.get(index);
      }
      /**
       * <code>repeated string tagIds = 37;</code>
       *
       * <pre>
       * 广告位ID定向内容
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTagIdsBytes(int index) {
        return tagIds_.getByteString(index);
      }

      public static final int PMPDEALID_FIELD_NUMBER = 38;
      private java.lang.Object pMPDealId_;
      /**
       * <code>optional string PMPDealId = 38;</code>
       *
       * <pre>
       *PMP 定向内容
       * </pre>
       */
      public boolean hasPMPDealId() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional string PMPDealId = 38;</code>
       *
       * <pre>
       *PMP 定向内容
       * </pre>
       */
      public java.lang.String getPMPDealId() {
        java.lang.Object ref = pMPDealId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            pMPDealId_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string PMPDealId = 38;</code>
       *
       * <pre>
       *PMP 定向内容
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPMPDealIdBytes() {
        java.lang.Object ref = pMPDealId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pMPDealId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int CARRIER_FIELD_NUMBER = 39;
      private java.util.List<de.cache.DeliveryMessage.Solution.SolutionTarget.Carrier> carrier_;
      /**
       * <code>repeated .de.cache.Solution.SolutionTarget.Carrier carrier = 39;</code>
       *
       * <pre>
       *运营商,如中国移动、中国联通
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.Solution.SolutionTarget.Carrier> getCarrierList() {
        return carrier_;
      }
      /**
       * <code>repeated .de.cache.Solution.SolutionTarget.Carrier carrier = 39;</code>
       *
       * <pre>
       *运营商,如中国移动、中国联通
       * </pre>
       */
      public int getCarrierCount() {
        return carrier_.size();
      }
      /**
       * <code>repeated .de.cache.Solution.SolutionTarget.Carrier carrier = 39;</code>
       *
       * <pre>
       *运营商,如中国移动、中国联通
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution.SolutionTarget.Carrier getCarrier(int index) {
        return carrier_.get(index);
      }

      public static final int CONNECTION_TYPE_FIELD_NUMBER = 40;
      private java.util.List<de.cache.DeliveryMessage.Solution.SolutionTarget.ConnectionType> connectionType_;
      /**
       * <code>repeated .de.cache.Solution.SolutionTarget.ConnectionType connection_type = 40;</code>
       *
       * <pre>
       *设备联网方式,如 Wifi、3g
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.Solution.SolutionTarget.ConnectionType> getConnectionTypeList() {
        return connectionType_;
      }
      /**
       * <code>repeated .de.cache.Solution.SolutionTarget.ConnectionType connection_type = 40;</code>
       *
       * <pre>
       *设备联网方式,如 Wifi、3g
       * </pre>
       */
      public int getConnectionTypeCount() {
        return connectionType_.size();
      }
      /**
       * <code>repeated .de.cache.Solution.SolutionTarget.ConnectionType connection_type = 40;</code>
       *
       * <pre>
       *设备联网方式,如 Wifi、3g
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution.SolutionTarget.ConnectionType getConnectionType(int index) {
        return connectionType_.get(index);
      }

      public static final int DEMOGRAPHICTARGET_FIELD_NUMBER = 41;
      private de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent demographicTarget_;
      /**
       * <code>optional .de.cache.Solution.SolutionTarget.demoTargetContent demographicTarget = 41;</code>
       *
       * <pre>
       *人群属性定向内容
       * </pre>
       */
      public boolean hasDemographicTarget() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional .de.cache.Solution.SolutionTarget.demoTargetContent demographicTarget = 41;</code>
       *
       * <pre>
       *人群属性定向内容
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent getDemographicTarget() {
        return demographicTarget_;
      }
      /**
       * <code>optional .de.cache.Solution.SolutionTarget.demoTargetContent demographicTarget = 41;</code>
       *
       * <pre>
       *人群属性定向内容
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContentOrBuilder getDemographicTargetOrBuilder() {
        return demographicTarget_;
      }

      private void initFields() {
        frequencyCtrl_ = de.cache.DeliveryMessage.FrequencyCtrl.getDefaultInstance();
        orderFrequency_ = de.cache.DeliveryMessage.GlobalSwitch.ON;
        clickFrequency_ = de.cache.DeliveryMessage.FrequencyCtrl.getDefaultInstance();
        stopImpressionWhenMaxClick_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        locationFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
        location_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        universityFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
        languageFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
        language_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        osFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
        os_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        linkageFlag_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        keywordFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
        keyword_ = "";
        browserFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
        browser_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        demographicFlag_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        audienceTargetFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
        audienceTarget_ = "";
        csFlag_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        contentTargetFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
        contentTarget_ = "";
        retargetingFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
        retargeting_ = "";
        dealFiles_ = java.util.Collections.emptyList();
        cpaOwnerType_ = "";
        btTag_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        ipWhitelist_ = java.util.Collections.emptyList();
        ipBlacklist_ = java.util.Collections.emptyList();
        forceSolutionTimes_ = "";
        referrer_ = de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance();
        inheritFromGConf_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        device_ = de.cache.DeliveryMessage.CacheFile.getDefaultInstance();
        appData_ = de.cache.DeliveryMessage.CacheFile.getDefaultInstance();
        positioningOrder_ = de.cache.DeliveryMessage.CacheFile.getDefaultInstance();
        trafficSource_ = java.util.Collections.emptyList();
        tagIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        pMPDealId_ = "";
        carrier_ = java.util.Collections.emptyList();
        connectionType_ = java.util.Collections.emptyList();
        demographicTarget_ = de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        for (int i = 0; i < getIpWhitelistCount(); i++) {
          if (!getIpWhitelist(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        for (int i = 0; i < getIpBlacklistCount(); i++) {
          if (!getIpBlacklist(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, frequencyCtrl_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, orderFrequency_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, clickFrequency_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeEnum(4, stopImpressionWhenMaxClick_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeEnum(5, locationFlag_.getNumber());
        }
        for (int i = 0; i < location_.size(); i++) {
          output.writeBytes(6, location_.getByteString(i));
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeEnum(7, universityFlag_.getNumber());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeEnum(8, languageFlag_.getNumber());
        }
        for (int i = 0; i < language_.size(); i++) {
          output.writeBytes(9, language_.getByteString(i));
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeEnum(10, osFlag_.getNumber());
        }
        for (int i = 0; i < os_.size(); i++) {
          output.writeBytes(11, os_.getByteString(i));
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeEnum(12, linkageFlag_.getNumber());
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeEnum(13, keywordFlag_.getNumber());
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeBytes(14, getKeywordBytes());
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeEnum(15, browserFlag_.getNumber());
        }
        for (int i = 0; i < browser_.size(); i++) {
          output.writeBytes(16, browser_.getByteString(i));
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          output.writeEnum(17, demographicFlag_.getNumber());
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          output.writeEnum(18, audienceTargetFlag_.getNumber());
        }
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          output.writeBytes(19, getAudienceTargetBytes());
        }
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          output.writeEnum(20, csFlag_.getNumber());
        }
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          output.writeEnum(21, contentTargetFlag_.getNumber());
        }
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          output.writeBytes(22, getContentTargetBytes());
        }
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          output.writeEnum(23, retargetingFlag_.getNumber());
        }
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          output.writeBytes(24, getRetargetingBytes());
        }
        for (int i = 0; i < dealFiles_.size(); i++) {
          output.writeMessage(25, dealFiles_.get(i));
        }
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          output.writeBytes(26, getCpaOwnerTypeBytes());
        }
        for (int i = 0; i < btTag_.size(); i++) {
          output.writeBytes(27, btTag_.getByteString(i));
        }
        for (int i = 0; i < ipWhitelist_.size(); i++) {
          output.writeMessage(28, ipWhitelist_.get(i));
        }
        for (int i = 0; i < ipBlacklist_.size(); i++) {
          output.writeMessage(29, ipBlacklist_.get(i));
        }
        if (((bitField0_ & 0x00200000) == 0x00200000)) {
          output.writeBytes(30, getForceSolutionTimesBytes());
        }
        if (((bitField0_ & 0x00400000) == 0x00400000)) {
          output.writeMessage(31, referrer_);
        }
        if (((bitField0_ & 0x00800000) == 0x00800000)) {
          output.writeEnum(32, inheritFromGConf_.getNumber());
        }
        if (((bitField0_ & 0x01000000) == 0x01000000)) {
          output.writeMessage(33, device_);
        }
        if (((bitField0_ & 0x02000000) == 0x02000000)) {
          output.writeMessage(34, appData_);
        }
        if (((bitField0_ & 0x04000000) == 0x04000000)) {
          output.writeMessage(35, positioningOrder_);
        }
        for (int i = 0; i < trafficSource_.size(); i++) {
          output.writeEnum(36, trafficSource_.get(i).getNumber());
        }
        for (int i = 0; i < tagIds_.size(); i++) {
          output.writeBytes(37, tagIds_.getByteString(i));
        }
        if (((bitField0_ & 0x08000000) == 0x08000000)) {
          output.writeBytes(38, getPMPDealIdBytes());
        }
        for (int i = 0; i < carrier_.size(); i++) {
          output.writeEnum(39, carrier_.get(i).getNumber());
        }
        for (int i = 0; i < connectionType_.size(); i++) {
          output.writeEnum(40, connectionType_.get(i).getNumber());
        }
        if (((bitField0_ & 0x10000000) == 0x10000000)) {
          output.writeMessage(41, demographicTarget_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, frequencyCtrl_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, orderFrequency_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, clickFrequency_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, stopImpressionWhenMaxClick_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(5, locationFlag_.getNumber());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < location_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(location_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getLocationList().size();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(7, universityFlag_.getNumber());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(8, languageFlag_.getNumber());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < language_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(language_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getLanguageList().size();
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(10, osFlag_.getNumber());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < os_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(os_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getOsList().size();
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(12, linkageFlag_.getNumber());
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(13, keywordFlag_.getNumber());
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(14, getKeywordBytes());
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(15, browserFlag_.getNumber());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < browser_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(browser_.getByteString(i));
          }
          size += dataSize;
          size += 2 * getBrowserList().size();
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(17, demographicFlag_.getNumber());
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(18, audienceTargetFlag_.getNumber());
        }
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(19, getAudienceTargetBytes());
        }
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(20, csFlag_.getNumber());
        }
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(21, contentTargetFlag_.getNumber());
        }
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(22, getContentTargetBytes());
        }
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(23, retargetingFlag_.getNumber());
        }
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(24, getRetargetingBytes());
        }
        for (int i = 0; i < dealFiles_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(25, dealFiles_.get(i));
        }
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(26, getCpaOwnerTypeBytes());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < btTag_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(btTag_.getByteString(i));
          }
          size += dataSize;
          size += 2 * getBtTagList().size();
        }
        for (int i = 0; i < ipWhitelist_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(28, ipWhitelist_.get(i));
        }
        for (int i = 0; i < ipBlacklist_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(29, ipBlacklist_.get(i));
        }
        if (((bitField0_ & 0x00200000) == 0x00200000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(30, getForceSolutionTimesBytes());
        }
        if (((bitField0_ & 0x00400000) == 0x00400000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(31, referrer_);
        }
        if (((bitField0_ & 0x00800000) == 0x00800000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(32, inheritFromGConf_.getNumber());
        }
        if (((bitField0_ & 0x01000000) == 0x01000000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(33, device_);
        }
        if (((bitField0_ & 0x02000000) == 0x02000000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(34, appData_);
        }
        if (((bitField0_ & 0x04000000) == 0x04000000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(35, positioningOrder_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < trafficSource_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeEnumSizeNoTag(trafficSource_.get(i).getNumber());
          }
          size += dataSize;
          size += 2 * trafficSource_.size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < tagIds_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(tagIds_.getByteString(i));
          }
          size += dataSize;
          size += 2 * getTagIdsList().size();
        }
        if (((bitField0_ & 0x08000000) == 0x08000000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(38, getPMPDealIdBytes());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < carrier_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeEnumSizeNoTag(carrier_.get(i).getNumber());
          }
          size += dataSize;
          size += 2 * carrier_.size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < connectionType_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeEnumSizeNoTag(connectionType_.get(i).getNumber());
          }
          size += dataSize;
          size += 2 * connectionType_.size();
        }
        if (((bitField0_ & 0x10000000) == 0x10000000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(41, demographicTarget_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static de.cache.DeliveryMessage.Solution.SolutionTarget parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.cache.DeliveryMessage.Solution.SolutionTarget parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Solution.SolutionTarget parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.cache.DeliveryMessage.Solution.SolutionTarget parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Solution.SolutionTarget parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.cache.DeliveryMessage.Solution.SolutionTarget parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Solution.SolutionTarget parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static de.cache.DeliveryMessage.Solution.SolutionTarget parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Solution.SolutionTarget parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.cache.DeliveryMessage.Solution.SolutionTarget parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(de.cache.DeliveryMessage.Solution.SolutionTarget prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code de.cache.Solution.SolutionTarget}
       *
       * <pre>
       *投放定向信息
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:de.cache.Solution.SolutionTarget)
          de.cache.DeliveryMessage.Solution.SolutionTargetOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Solution_SolutionTarget_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Solution_SolutionTarget_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  de.cache.DeliveryMessage.Solution.SolutionTarget.class, de.cache.DeliveryMessage.Solution.SolutionTarget.Builder.class);
        }

        // Construct using de.cache.DeliveryMessage.Solution.SolutionTarget.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getFrequencyCtrlFieldBuilder();
            getClickFrequencyFieldBuilder();
            getDealFilesFieldBuilder();
            getIpWhitelistFieldBuilder();
            getIpBlacklistFieldBuilder();
            getReferrerFieldBuilder();
            getDeviceFieldBuilder();
            getAppDataFieldBuilder();
            getPositioningOrderFieldBuilder();
            getDemographicTargetFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (frequencyCtrlBuilder_ == null) {
            frequencyCtrl_ = de.cache.DeliveryMessage.FrequencyCtrl.getDefaultInstance();
          } else {
            frequencyCtrlBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          orderFrequency_ = de.cache.DeliveryMessage.GlobalSwitch.ON;
          bitField0_ = (bitField0_ & ~0x00000002);
          if (clickFrequencyBuilder_ == null) {
            clickFrequency_ = de.cache.DeliveryMessage.FrequencyCtrl.getDefaultInstance();
          } else {
            clickFrequencyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          stopImpressionWhenMaxClick_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
          bitField0_ = (bitField0_ & ~0x00000008);
          locationFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          bitField0_ = (bitField0_ & ~0x00000010);
          location_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000020);
          universityFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          bitField0_ = (bitField0_ & ~0x00000040);
          languageFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          bitField0_ = (bitField0_ & ~0x00000080);
          language_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000100);
          osFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          bitField0_ = (bitField0_ & ~0x00000200);
          os_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000400);
          linkageFlag_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
          bitField0_ = (bitField0_ & ~0x00000800);
          keywordFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          bitField0_ = (bitField0_ & ~0x00001000);
          keyword_ = "";
          bitField0_ = (bitField0_ & ~0x00002000);
          browserFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          bitField0_ = (bitField0_ & ~0x00004000);
          browser_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00008000);
          demographicFlag_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
          bitField0_ = (bitField0_ & ~0x00010000);
          audienceTargetFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          bitField0_ = (bitField0_ & ~0x00020000);
          audienceTarget_ = "";
          bitField0_ = (bitField0_ & ~0x00040000);
          csFlag_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
          bitField0_ = (bitField0_ & ~0x00080000);
          contentTargetFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          bitField0_ = (bitField0_ & ~0x00100000);
          contentTarget_ = "";
          bitField0_ = (bitField0_ & ~0x00200000);
          retargetingFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          bitField0_ = (bitField0_ & ~0x00400000);
          retargeting_ = "";
          bitField0_ = (bitField0_ & ~0x00800000);
          if (dealFilesBuilder_ == null) {
            dealFiles_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x01000000);
          } else {
            dealFilesBuilder_.clear();
          }
          cpaOwnerType_ = "";
          bitField0_ = (bitField0_ & ~0x02000000);
          btTag_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x04000000);
          if (ipWhitelistBuilder_ == null) {
            ipWhitelist_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x08000000);
          } else {
            ipWhitelistBuilder_.clear();
          }
          if (ipBlacklistBuilder_ == null) {
            ipBlacklist_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x10000000);
          } else {
            ipBlacklistBuilder_.clear();
          }
          forceSolutionTimes_ = "";
          bitField0_ = (bitField0_ & ~0x20000000);
          if (referrerBuilder_ == null) {
            referrer_ = de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance();
          } else {
            referrerBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x40000000);
          inheritFromGConf_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
          bitField0_ = (bitField0_ & ~0x80000000);
          if (deviceBuilder_ == null) {
            device_ = de.cache.DeliveryMessage.CacheFile.getDefaultInstance();
          } else {
            deviceBuilder_.clear();
          }
          bitField1_ = (bitField1_ & ~0x00000001);
          if (appDataBuilder_ == null) {
            appData_ = de.cache.DeliveryMessage.CacheFile.getDefaultInstance();
          } else {
            appDataBuilder_.clear();
          }
          bitField1_ = (bitField1_ & ~0x00000002);
          if (positioningOrderBuilder_ == null) {
            positioningOrder_ = de.cache.DeliveryMessage.CacheFile.getDefaultInstance();
          } else {
            positioningOrderBuilder_.clear();
          }
          bitField1_ = (bitField1_ & ~0x00000004);
          trafficSource_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000008);
          tagIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField1_ = (bitField1_ & ~0x00000010);
          pMPDealId_ = "";
          bitField1_ = (bitField1_ & ~0x00000020);
          carrier_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000040);
          connectionType_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000080);
          if (demographicTargetBuilder_ == null) {
            demographicTarget_ = de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent.getDefaultInstance();
          } else {
            demographicTargetBuilder_.clear();
          }
          bitField1_ = (bitField1_ & ~0x00000100);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Solution_SolutionTarget_descriptor;
        }

        public de.cache.DeliveryMessage.Solution.SolutionTarget getDefaultInstanceForType() {
          return de.cache.DeliveryMessage.Solution.SolutionTarget.getDefaultInstance();
        }

        public de.cache.DeliveryMessage.Solution.SolutionTarget build() {
          de.cache.DeliveryMessage.Solution.SolutionTarget result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public de.cache.DeliveryMessage.Solution.SolutionTarget buildPartial() {
          de.cache.DeliveryMessage.Solution.SolutionTarget result = new de.cache.DeliveryMessage.Solution.SolutionTarget(this);
          int from_bitField0_ = bitField0_;
          int from_bitField1_ = bitField1_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (frequencyCtrlBuilder_ == null) {
            result.frequencyCtrl_ = frequencyCtrl_;
          } else {
            result.frequencyCtrl_ = frequencyCtrlBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.orderFrequency_ = orderFrequency_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (clickFrequencyBuilder_ == null) {
            result.clickFrequency_ = clickFrequency_;
          } else {
            result.clickFrequency_ = clickFrequencyBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.stopImpressionWhenMaxClick_ = stopImpressionWhenMaxClick_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.locationFlag_ = locationFlag_;
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            location_ = location_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.location_ = location_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000020;
          }
          result.universityFlag_ = universityFlag_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000040;
          }
          result.languageFlag_ = languageFlag_;
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            language_ = language_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.language_ = language_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000080;
          }
          result.osFlag_ = osFlag_;
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            os_ = os_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.os_ = os_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000100;
          }
          result.linkageFlag_ = linkageFlag_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00000200;
          }
          result.keywordFlag_ = keywordFlag_;
          if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
            to_bitField0_ |= 0x00000400;
          }
          result.keyword_ = keyword_;
          if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
            to_bitField0_ |= 0x00000800;
          }
          result.browserFlag_ = browserFlag_;
          if (((bitField0_ & 0x00008000) == 0x00008000)) {
            browser_ = browser_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00008000);
          }
          result.browser_ = browser_;
          if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
            to_bitField0_ |= 0x00001000;
          }
          result.demographicFlag_ = demographicFlag_;
          if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
            to_bitField0_ |= 0x00002000;
          }
          result.audienceTargetFlag_ = audienceTargetFlag_;
          if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
            to_bitField0_ |= 0x00004000;
          }
          result.audienceTarget_ = audienceTarget_;
          if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
            to_bitField0_ |= 0x00008000;
          }
          result.csFlag_ = csFlag_;
          if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
            to_bitField0_ |= 0x00010000;
          }
          result.contentTargetFlag_ = contentTargetFlag_;
          if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
            to_bitField0_ |= 0x00020000;
          }
          result.contentTarget_ = contentTarget_;
          if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
            to_bitField0_ |= 0x00040000;
          }
          result.retargetingFlag_ = retargetingFlag_;
          if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
            to_bitField0_ |= 0x00080000;
          }
          result.retargeting_ = retargeting_;
          if (dealFilesBuilder_ == null) {
            if (((bitField0_ & 0x01000000) == 0x01000000)) {
              dealFiles_ = java.util.Collections.unmodifiableList(dealFiles_);
              bitField0_ = (bitField0_ & ~0x01000000);
            }
            result.dealFiles_ = dealFiles_;
          } else {
            result.dealFiles_ = dealFilesBuilder_.build();
          }
          if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
            to_bitField0_ |= 0x00100000;
          }
          result.cpaOwnerType_ = cpaOwnerType_;
          if (((bitField0_ & 0x04000000) == 0x04000000)) {
            btTag_ = btTag_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x04000000);
          }
          result.btTag_ = btTag_;
          if (ipWhitelistBuilder_ == null) {
            if (((bitField0_ & 0x08000000) == 0x08000000)) {
              ipWhitelist_ = java.util.Collections.unmodifiableList(ipWhitelist_);
              bitField0_ = (bitField0_ & ~0x08000000);
            }
            result.ipWhitelist_ = ipWhitelist_;
          } else {
            result.ipWhitelist_ = ipWhitelistBuilder_.build();
          }
          if (ipBlacklistBuilder_ == null) {
            if (((bitField0_ & 0x10000000) == 0x10000000)) {
              ipBlacklist_ = java.util.Collections.unmodifiableList(ipBlacklist_);
              bitField0_ = (bitField0_ & ~0x10000000);
            }
            result.ipBlacklist_ = ipBlacklist_;
          } else {
            result.ipBlacklist_ = ipBlacklistBuilder_.build();
          }
          if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
            to_bitField0_ |= 0x00200000;
          }
          result.forceSolutionTimes_ = forceSolutionTimes_;
          if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
            to_bitField0_ |= 0x00400000;
          }
          if (referrerBuilder_ == null) {
            result.referrer_ = referrer_;
          } else {
            result.referrer_ = referrerBuilder_.build();
          }
          if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
            to_bitField0_ |= 0x00800000;
          }
          result.inheritFromGConf_ = inheritFromGConf_;
          if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x01000000;
          }
          if (deviceBuilder_ == null) {
            result.device_ = device_;
          } else {
            result.device_ = deviceBuilder_.build();
          }
          if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x02000000;
          }
          if (appDataBuilder_ == null) {
            result.appData_ = appData_;
          } else {
            result.appData_ = appDataBuilder_.build();
          }
          if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x04000000;
          }
          if (positioningOrderBuilder_ == null) {
            result.positioningOrder_ = positioningOrder_;
          } else {
            result.positioningOrder_ = positioningOrderBuilder_.build();
          }
          if (((bitField1_ & 0x00000008) == 0x00000008)) {
            trafficSource_ = java.util.Collections.unmodifiableList(trafficSource_);
            bitField1_ = (bitField1_ & ~0x00000008);
          }
          result.trafficSource_ = trafficSource_;
          if (((bitField1_ & 0x00000010) == 0x00000010)) {
            tagIds_ = tagIds_.getUnmodifiableView();
            bitField1_ = (bitField1_ & ~0x00000010);
          }
          result.tagIds_ = tagIds_;
          if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x08000000;
          }
          result.pMPDealId_ = pMPDealId_;
          if (((bitField1_ & 0x00000040) == 0x00000040)) {
            carrier_ = java.util.Collections.unmodifiableList(carrier_);
            bitField1_ = (bitField1_ & ~0x00000040);
          }
          result.carrier_ = carrier_;
          if (((bitField1_ & 0x00000080) == 0x00000080)) {
            connectionType_ = java.util.Collections.unmodifiableList(connectionType_);
            bitField1_ = (bitField1_ & ~0x00000080);
          }
          result.connectionType_ = connectionType_;
          if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x10000000;
          }
          if (demographicTargetBuilder_ == null) {
            result.demographicTarget_ = demographicTarget_;
          } else {
            result.demographicTarget_ = demographicTargetBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof de.cache.DeliveryMessage.Solution.SolutionTarget) {
            return mergeFrom((de.cache.DeliveryMessage.Solution.SolutionTarget)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(de.cache.DeliveryMessage.Solution.SolutionTarget other) {
          if (other == de.cache.DeliveryMessage.Solution.SolutionTarget.getDefaultInstance()) return this;
          if (other.hasFrequencyCtrl()) {
            mergeFrequencyCtrl(other.getFrequencyCtrl());
          }
          if (other.hasOrderFrequency()) {
            setOrderFrequency(other.getOrderFrequency());
          }
          if (other.hasClickFrequency()) {
            mergeClickFrequency(other.getClickFrequency());
          }
          if (other.hasStopImpressionWhenMaxClick()) {
            setStopImpressionWhenMaxClick(other.getStopImpressionWhenMaxClick());
          }
          if (other.hasLocationFlag()) {
            setLocationFlag(other.getLocationFlag());
          }
          if (!other.location_.isEmpty()) {
            if (location_.isEmpty()) {
              location_ = other.location_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureLocationIsMutable();
              location_.addAll(other.location_);
            }
            onChanged();
          }
          if (other.hasUniversityFlag()) {
            setUniversityFlag(other.getUniversityFlag());
          }
          if (other.hasLanguageFlag()) {
            setLanguageFlag(other.getLanguageFlag());
          }
          if (!other.language_.isEmpty()) {
            if (language_.isEmpty()) {
              language_ = other.language_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureLanguageIsMutable();
              language_.addAll(other.language_);
            }
            onChanged();
          }
          if (other.hasOsFlag()) {
            setOsFlag(other.getOsFlag());
          }
          if (!other.os_.isEmpty()) {
            if (os_.isEmpty()) {
              os_ = other.os_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureOsIsMutable();
              os_.addAll(other.os_);
            }
            onChanged();
          }
          if (other.hasLinkageFlag()) {
            setLinkageFlag(other.getLinkageFlag());
          }
          if (other.hasKeywordFlag()) {
            setKeywordFlag(other.getKeywordFlag());
          }
          if (other.hasKeyword()) {
            bitField0_ |= 0x00002000;
            keyword_ = other.keyword_;
            onChanged();
          }
          if (other.hasBrowserFlag()) {
            setBrowserFlag(other.getBrowserFlag());
          }
          if (!other.browser_.isEmpty()) {
            if (browser_.isEmpty()) {
              browser_ = other.browser_;
              bitField0_ = (bitField0_ & ~0x00008000);
            } else {
              ensureBrowserIsMutable();
              browser_.addAll(other.browser_);
            }
            onChanged();
          }
          if (other.hasDemographicFlag()) {
            setDemographicFlag(other.getDemographicFlag());
          }
          if (other.hasAudienceTargetFlag()) {
            setAudienceTargetFlag(other.getAudienceTargetFlag());
          }
          if (other.hasAudienceTarget()) {
            bitField0_ |= 0x00040000;
            audienceTarget_ = other.audienceTarget_;
            onChanged();
          }
          if (other.hasCsFlag()) {
            setCsFlag(other.getCsFlag());
          }
          if (other.hasContentTargetFlag()) {
            setContentTargetFlag(other.getContentTargetFlag());
          }
          if (other.hasContentTarget()) {
            bitField0_ |= 0x00200000;
            contentTarget_ = other.contentTarget_;
            onChanged();
          }
          if (other.hasRetargetingFlag()) {
            setRetargetingFlag(other.getRetargetingFlag());
          }
          if (other.hasRetargeting()) {
            bitField0_ |= 0x00800000;
            retargeting_ = other.retargeting_;
            onChanged();
          }
          if (dealFilesBuilder_ == null) {
            if (!other.dealFiles_.isEmpty()) {
              if (dealFiles_.isEmpty()) {
                dealFiles_ = other.dealFiles_;
                bitField0_ = (bitField0_ & ~0x01000000);
              } else {
                ensureDealFilesIsMutable();
                dealFiles_.addAll(other.dealFiles_);
              }
              onChanged();
            }
          } else {
            if (!other.dealFiles_.isEmpty()) {
              if (dealFilesBuilder_.isEmpty()) {
                dealFilesBuilder_.dispose();
                dealFilesBuilder_ = null;
                dealFiles_ = other.dealFiles_;
                bitField0_ = (bitField0_ & ~0x01000000);
                dealFilesBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getDealFilesFieldBuilder() : null;
              } else {
                dealFilesBuilder_.addAllMessages(other.dealFiles_);
              }
            }
          }
          if (other.hasCpaOwnerType()) {
            bitField0_ |= 0x02000000;
            cpaOwnerType_ = other.cpaOwnerType_;
            onChanged();
          }
          if (!other.btTag_.isEmpty()) {
            if (btTag_.isEmpty()) {
              btTag_ = other.btTag_;
              bitField0_ = (bitField0_ & ~0x04000000);
            } else {
              ensureBtTagIsMutable();
              btTag_.addAll(other.btTag_);
            }
            onChanged();
          }
          if (ipWhitelistBuilder_ == null) {
            if (!other.ipWhitelist_.isEmpty()) {
              if (ipWhitelist_.isEmpty()) {
                ipWhitelist_ = other.ipWhitelist_;
                bitField0_ = (bitField0_ & ~0x08000000);
              } else {
                ensureIpWhitelistIsMutable();
                ipWhitelist_.addAll(other.ipWhitelist_);
              }
              onChanged();
            }
          } else {
            if (!other.ipWhitelist_.isEmpty()) {
              if (ipWhitelistBuilder_.isEmpty()) {
                ipWhitelistBuilder_.dispose();
                ipWhitelistBuilder_ = null;
                ipWhitelist_ = other.ipWhitelist_;
                bitField0_ = (bitField0_ & ~0x08000000);
                ipWhitelistBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getIpWhitelistFieldBuilder() : null;
              } else {
                ipWhitelistBuilder_.addAllMessages(other.ipWhitelist_);
              }
            }
          }
          if (ipBlacklistBuilder_ == null) {
            if (!other.ipBlacklist_.isEmpty()) {
              if (ipBlacklist_.isEmpty()) {
                ipBlacklist_ = other.ipBlacklist_;
                bitField0_ = (bitField0_ & ~0x10000000);
              } else {
                ensureIpBlacklistIsMutable();
                ipBlacklist_.addAll(other.ipBlacklist_);
              }
              onChanged();
            }
          } else {
            if (!other.ipBlacklist_.isEmpty()) {
              if (ipBlacklistBuilder_.isEmpty()) {
                ipBlacklistBuilder_.dispose();
                ipBlacklistBuilder_ = null;
                ipBlacklist_ = other.ipBlacklist_;
                bitField0_ = (bitField0_ & ~0x10000000);
                ipBlacklistBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getIpBlacklistFieldBuilder() : null;
              } else {
                ipBlacklistBuilder_.addAllMessages(other.ipBlacklist_);
              }
            }
          }
          if (other.hasForceSolutionTimes()) {
            bitField0_ |= 0x20000000;
            forceSolutionTimes_ = other.forceSolutionTimes_;
            onChanged();
          }
          if (other.hasReferrer()) {
            mergeReferrer(other.getReferrer());
          }
          if (other.hasInheritFromGConf()) {
            setInheritFromGConf(other.getInheritFromGConf());
          }
          if (other.hasDevice()) {
            mergeDevice(other.getDevice());
          }
          if (other.hasAppData()) {
            mergeAppData(other.getAppData());
          }
          if (other.hasPositioningOrder()) {
            mergePositioningOrder(other.getPositioningOrder());
          }
          if (!other.trafficSource_.isEmpty()) {
            if (trafficSource_.isEmpty()) {
              trafficSource_ = other.trafficSource_;
              bitField1_ = (bitField1_ & ~0x00000008);
            } else {
              ensureTrafficSourceIsMutable();
              trafficSource_.addAll(other.trafficSource_);
            }
            onChanged();
          }
          if (!other.tagIds_.isEmpty()) {
            if (tagIds_.isEmpty()) {
              tagIds_ = other.tagIds_;
              bitField1_ = (bitField1_ & ~0x00000010);
            } else {
              ensureTagIdsIsMutable();
              tagIds_.addAll(other.tagIds_);
            }
            onChanged();
          }
          if (other.hasPMPDealId()) {
            bitField1_ |= 0x00000020;
            pMPDealId_ = other.pMPDealId_;
            onChanged();
          }
          if (!other.carrier_.isEmpty()) {
            if (carrier_.isEmpty()) {
              carrier_ = other.carrier_;
              bitField1_ = (bitField1_ & ~0x00000040);
            } else {
              ensureCarrierIsMutable();
              carrier_.addAll(other.carrier_);
            }
            onChanged();
          }
          if (!other.connectionType_.isEmpty()) {
            if (connectionType_.isEmpty()) {
              connectionType_ = other.connectionType_;
              bitField1_ = (bitField1_ & ~0x00000080);
            } else {
              ensureConnectionTypeIsMutable();
              connectionType_.addAll(other.connectionType_);
            }
            onChanged();
          }
          if (other.hasDemographicTarget()) {
            mergeDemographicTarget(other.getDemographicTarget());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          for (int i = 0; i < getIpWhitelistCount(); i++) {
            if (!getIpWhitelist(i).isInitialized()) {
              
              return false;
            }
          }
          for (int i = 0; i < getIpBlacklistCount(); i++) {
            if (!getIpBlacklist(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          de.cache.DeliveryMessage.Solution.SolutionTarget parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (de.cache.DeliveryMessage.Solution.SolutionTarget) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;
        private int bitField1_;

        private de.cache.DeliveryMessage.FrequencyCtrl frequencyCtrl_ = de.cache.DeliveryMessage.FrequencyCtrl.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            de.cache.DeliveryMessage.FrequencyCtrl, de.cache.DeliveryMessage.FrequencyCtrl.Builder, de.cache.DeliveryMessage.FrequencyCtrlOrBuilder> frequencyCtrlBuilder_;
        /**
         * <code>optional .de.cache.FrequencyCtrl frequencyCtrl = 1;</code>
         *
         * <pre>
         *投放级显示频次定向
         * </pre>
         */
        public boolean hasFrequencyCtrl() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .de.cache.FrequencyCtrl frequencyCtrl = 1;</code>
         *
         * <pre>
         *投放级显示频次定向
         * </pre>
         */
        public de.cache.DeliveryMessage.FrequencyCtrl getFrequencyCtrl() {
          if (frequencyCtrlBuilder_ == null) {
            return frequencyCtrl_;
          } else {
            return frequencyCtrlBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .de.cache.FrequencyCtrl frequencyCtrl = 1;</code>
         *
         * <pre>
         *投放级显示频次定向
         * </pre>
         */
        public Builder setFrequencyCtrl(de.cache.DeliveryMessage.FrequencyCtrl value) {
          if (frequencyCtrlBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            frequencyCtrl_ = value;
            onChanged();
          } else {
            frequencyCtrlBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .de.cache.FrequencyCtrl frequencyCtrl = 1;</code>
         *
         * <pre>
         *投放级显示频次定向
         * </pre>
         */
        public Builder setFrequencyCtrl(
            de.cache.DeliveryMessage.FrequencyCtrl.Builder builderForValue) {
          if (frequencyCtrlBuilder_ == null) {
            frequencyCtrl_ = builderForValue.build();
            onChanged();
          } else {
            frequencyCtrlBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .de.cache.FrequencyCtrl frequencyCtrl = 1;</code>
         *
         * <pre>
         *投放级显示频次定向
         * </pre>
         */
        public Builder mergeFrequencyCtrl(de.cache.DeliveryMessage.FrequencyCtrl value) {
          if (frequencyCtrlBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                frequencyCtrl_ != de.cache.DeliveryMessage.FrequencyCtrl.getDefaultInstance()) {
              frequencyCtrl_ =
                de.cache.DeliveryMessage.FrequencyCtrl.newBuilder(frequencyCtrl_).mergeFrom(value).buildPartial();
            } else {
              frequencyCtrl_ = value;
            }
            onChanged();
          } else {
            frequencyCtrlBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .de.cache.FrequencyCtrl frequencyCtrl = 1;</code>
         *
         * <pre>
         *投放级显示频次定向
         * </pre>
         */
        public Builder clearFrequencyCtrl() {
          if (frequencyCtrlBuilder_ == null) {
            frequencyCtrl_ = de.cache.DeliveryMessage.FrequencyCtrl.getDefaultInstance();
            onChanged();
          } else {
            frequencyCtrlBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <code>optional .de.cache.FrequencyCtrl frequencyCtrl = 1;</code>
         *
         * <pre>
         *投放级显示频次定向
         * </pre>
         */
        public de.cache.DeliveryMessage.FrequencyCtrl.Builder getFrequencyCtrlBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getFrequencyCtrlFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .de.cache.FrequencyCtrl frequencyCtrl = 1;</code>
         *
         * <pre>
         *投放级显示频次定向
         * </pre>
         */
        public de.cache.DeliveryMessage.FrequencyCtrlOrBuilder getFrequencyCtrlOrBuilder() {
          if (frequencyCtrlBuilder_ != null) {
            return frequencyCtrlBuilder_.getMessageOrBuilder();
          } else {
            return frequencyCtrl_;
          }
        }
        /**
         * <code>optional .de.cache.FrequencyCtrl frequencyCtrl = 1;</code>
         *
         * <pre>
         *投放级显示频次定向
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            de.cache.DeliveryMessage.FrequencyCtrl, de.cache.DeliveryMessage.FrequencyCtrl.Builder, de.cache.DeliveryMessage.FrequencyCtrlOrBuilder> 
            getFrequencyCtrlFieldBuilder() {
          if (frequencyCtrlBuilder_ == null) {
            frequencyCtrlBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                de.cache.DeliveryMessage.FrequencyCtrl, de.cache.DeliveryMessage.FrequencyCtrl.Builder, de.cache.DeliveryMessage.FrequencyCtrlOrBuilder>(
                    getFrequencyCtrl(),
                    getParentForChildren(),
                    isClean());
            frequencyCtrl_ = null;
          }
          return frequencyCtrlBuilder_;
        }

        private de.cache.DeliveryMessage.GlobalSwitch orderFrequency_ = de.cache.DeliveryMessage.GlobalSwitch.ON;
        /**
         * <code>optional .de.cache.GlobalSwitch orderFrequency = 2 [default = ON];</code>
         *
         * <pre>
         *订单级显示频次控制标示，ON受控、OFF不受控
         * </pre>
         */
        public boolean hasOrderFrequency() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .de.cache.GlobalSwitch orderFrequency = 2 [default = ON];</code>
         *
         * <pre>
         *订单级显示频次控制标示，ON受控、OFF不受控
         * </pre>
         */
        public de.cache.DeliveryMessage.GlobalSwitch getOrderFrequency() {
          return orderFrequency_;
        }
        /**
         * <code>optional .de.cache.GlobalSwitch orderFrequency = 2 [default = ON];</code>
         *
         * <pre>
         *订单级显示频次控制标示，ON受控、OFF不受控
         * </pre>
         */
        public Builder setOrderFrequency(de.cache.DeliveryMessage.GlobalSwitch value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          orderFrequency_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.GlobalSwitch orderFrequency = 2 [default = ON];</code>
         *
         * <pre>
         *订单级显示频次控制标示，ON受控、OFF不受控
         * </pre>
         */
        public Builder clearOrderFrequency() {
          bitField0_ = (bitField0_ & ~0x00000002);
          orderFrequency_ = de.cache.DeliveryMessage.GlobalSwitch.ON;
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.FrequencyCtrl clickFrequency_ = de.cache.DeliveryMessage.FrequencyCtrl.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            de.cache.DeliveryMessage.FrequencyCtrl, de.cache.DeliveryMessage.FrequencyCtrl.Builder, de.cache.DeliveryMessage.FrequencyCtrlOrBuilder> clickFrequencyBuilder_;
        /**
         * <code>optional .de.cache.FrequencyCtrl clickFrequency = 3;</code>
         *
         * <pre>
         *点击频次定向,clickFrequency.intervalSec取值被忽略
         * </pre>
         */
        public boolean hasClickFrequency() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .de.cache.FrequencyCtrl clickFrequency = 3;</code>
         *
         * <pre>
         *点击频次定向,clickFrequency.intervalSec取值被忽略
         * </pre>
         */
        public de.cache.DeliveryMessage.FrequencyCtrl getClickFrequency() {
          if (clickFrequencyBuilder_ == null) {
            return clickFrequency_;
          } else {
            return clickFrequencyBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .de.cache.FrequencyCtrl clickFrequency = 3;</code>
         *
         * <pre>
         *点击频次定向,clickFrequency.intervalSec取值被忽略
         * </pre>
         */
        public Builder setClickFrequency(de.cache.DeliveryMessage.FrequencyCtrl value) {
          if (clickFrequencyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            clickFrequency_ = value;
            onChanged();
          } else {
            clickFrequencyBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .de.cache.FrequencyCtrl clickFrequency = 3;</code>
         *
         * <pre>
         *点击频次定向,clickFrequency.intervalSec取值被忽略
         * </pre>
         */
        public Builder setClickFrequency(
            de.cache.DeliveryMessage.FrequencyCtrl.Builder builderForValue) {
          if (clickFrequencyBuilder_ == null) {
            clickFrequency_ = builderForValue.build();
            onChanged();
          } else {
            clickFrequencyBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .de.cache.FrequencyCtrl clickFrequency = 3;</code>
         *
         * <pre>
         *点击频次定向,clickFrequency.intervalSec取值被忽略
         * </pre>
         */
        public Builder mergeClickFrequency(de.cache.DeliveryMessage.FrequencyCtrl value) {
          if (clickFrequencyBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                clickFrequency_ != de.cache.DeliveryMessage.FrequencyCtrl.getDefaultInstance()) {
              clickFrequency_ =
                de.cache.DeliveryMessage.FrequencyCtrl.newBuilder(clickFrequency_).mergeFrom(value).buildPartial();
            } else {
              clickFrequency_ = value;
            }
            onChanged();
          } else {
            clickFrequencyBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .de.cache.FrequencyCtrl clickFrequency = 3;</code>
         *
         * <pre>
         *点击频次定向,clickFrequency.intervalSec取值被忽略
         * </pre>
         */
        public Builder clearClickFrequency() {
          if (clickFrequencyBuilder_ == null) {
            clickFrequency_ = de.cache.DeliveryMessage.FrequencyCtrl.getDefaultInstance();
            onChanged();
          } else {
            clickFrequencyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>optional .de.cache.FrequencyCtrl clickFrequency = 3;</code>
         *
         * <pre>
         *点击频次定向,clickFrequency.intervalSec取值被忽略
         * </pre>
         */
        public de.cache.DeliveryMessage.FrequencyCtrl.Builder getClickFrequencyBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getClickFrequencyFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .de.cache.FrequencyCtrl clickFrequency = 3;</code>
         *
         * <pre>
         *点击频次定向,clickFrequency.intervalSec取值被忽略
         * </pre>
         */
        public de.cache.DeliveryMessage.FrequencyCtrlOrBuilder getClickFrequencyOrBuilder() {
          if (clickFrequencyBuilder_ != null) {
            return clickFrequencyBuilder_.getMessageOrBuilder();
          } else {
            return clickFrequency_;
          }
        }
        /**
         * <code>optional .de.cache.FrequencyCtrl clickFrequency = 3;</code>
         *
         * <pre>
         *点击频次定向,clickFrequency.intervalSec取值被忽略
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            de.cache.DeliveryMessage.FrequencyCtrl, de.cache.DeliveryMessage.FrequencyCtrl.Builder, de.cache.DeliveryMessage.FrequencyCtrlOrBuilder> 
            getClickFrequencyFieldBuilder() {
          if (clickFrequencyBuilder_ == null) {
            clickFrequencyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                de.cache.DeliveryMessage.FrequencyCtrl, de.cache.DeliveryMessage.FrequencyCtrl.Builder, de.cache.DeliveryMessage.FrequencyCtrlOrBuilder>(
                    getClickFrequency(),
                    getParentForChildren(),
                    isClean());
            clickFrequency_ = null;
          }
          return clickFrequencyBuilder_;
        }

        private de.cache.DeliveryMessage.GlobalSwitch stopImpressionWhenMaxClick_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        /**
         * <code>optional .de.cache.GlobalSwitch stopImpressionWhenMaxClick = 4 [default = OFF];</code>
         *
         * <pre>
         *点击频次控制显示标识，0=当点击频次达到上限时不控制显示，1=点击频次达到上限的时候需要控制不显示
         * </pre>
         */
        public boolean hasStopImpressionWhenMaxClick() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .de.cache.GlobalSwitch stopImpressionWhenMaxClick = 4 [default = OFF];</code>
         *
         * <pre>
         *点击频次控制显示标识，0=当点击频次达到上限时不控制显示，1=点击频次达到上限的时候需要控制不显示
         * </pre>
         */
        public de.cache.DeliveryMessage.GlobalSwitch getStopImpressionWhenMaxClick() {
          return stopImpressionWhenMaxClick_;
        }
        /**
         * <code>optional .de.cache.GlobalSwitch stopImpressionWhenMaxClick = 4 [default = OFF];</code>
         *
         * <pre>
         *点击频次控制显示标识，0=当点击频次达到上限时不控制显示，1=点击频次达到上限的时候需要控制不显示
         * </pre>
         */
        public Builder setStopImpressionWhenMaxClick(de.cache.DeliveryMessage.GlobalSwitch value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          stopImpressionWhenMaxClick_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.GlobalSwitch stopImpressionWhenMaxClick = 4 [default = OFF];</code>
         *
         * <pre>
         *点击频次控制显示标识，0=当点击频次达到上限时不控制显示，1=点击频次达到上限的时候需要控制不显示
         * </pre>
         */
        public Builder clearStopImpressionWhenMaxClick() {
          bitField0_ = (bitField0_ & ~0x00000008);
          stopImpressionWhenMaxClick_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.TargetFlag locationFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
        /**
         * <code>optional .de.cache.TargetFlag locationFlag = 5 [default = CLOSE];</code>
         *
         * <pre>
         *地域定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public boolean hasLocationFlag() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional .de.cache.TargetFlag locationFlag = 5 [default = CLOSE];</code>
         *
         * <pre>
         *地域定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public de.cache.DeliveryMessage.TargetFlag getLocationFlag() {
          return locationFlag_;
        }
        /**
         * <code>optional .de.cache.TargetFlag locationFlag = 5 [default = CLOSE];</code>
         *
         * <pre>
         *地域定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public Builder setLocationFlag(de.cache.DeliveryMessage.TargetFlag value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000010;
          locationFlag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.TargetFlag locationFlag = 5 [default = CLOSE];</code>
         *
         * <pre>
         *地域定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public Builder clearLocationFlag() {
          bitField0_ = (bitField0_ & ~0x00000010);
          locationFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList location_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureLocationIsMutable() {
          if (!((bitField0_ & 0x00000020) == 0x00000020)) {
            location_ = new com.google.protobuf.LazyStringArrayList(location_);
            bitField0_ |= 0x00000020;
           }
        }
        /**
         * <code>repeated string location = 6;</code>
         *
         * <pre>
         *地域定向内容，本字段目前内容全部由6位或以上字母组成，支持*通配符.例中国重庆表示为CNCQ*,CN表示中国,CQ表示重庆.*表示重庆下辖的所有二级城市。美国则表示为US*
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getLocationList() {
          return location_.getUnmodifiableView();
        }
        /**
         * <code>repeated string location = 6;</code>
         *
         * <pre>
         *地域定向内容，本字段目前内容全部由6位或以上字母组成，支持*通配符.例中国重庆表示为CNCQ*,CN表示中国,CQ表示重庆.*表示重庆下辖的所有二级城市。美国则表示为US*
         * </pre>
         */
        public int getLocationCount() {
          return location_.size();
        }
        /**
         * <code>repeated string location = 6;</code>
         *
         * <pre>
         *地域定向内容，本字段目前内容全部由6位或以上字母组成，支持*通配符.例中国重庆表示为CNCQ*,CN表示中国,CQ表示重庆.*表示重庆下辖的所有二级城市。美国则表示为US*
         * </pre>
         */
        public java.lang.String getLocation(int index) {
          return location_.get(index);
        }
        /**
         * <code>repeated string location = 6;</code>
         *
         * <pre>
         *地域定向内容，本字段目前内容全部由6位或以上字母组成，支持*通配符.例中国重庆表示为CNCQ*,CN表示中国,CQ表示重庆.*表示重庆下辖的所有二级城市。美国则表示为US*
         * </pre>
         */
        public com.google.protobuf.ByteString
            getLocationBytes(int index) {
          return location_.getByteString(index);
        }
        /**
         * <code>repeated string location = 6;</code>
         *
         * <pre>
         *地域定向内容，本字段目前内容全部由6位或以上字母组成，支持*通配符.例中国重庆表示为CNCQ*,CN表示中国,CQ表示重庆.*表示重庆下辖的所有二级城市。美国则表示为US*
         * </pre>
         */
        public Builder setLocation(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureLocationIsMutable();
          location_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string location = 6;</code>
         *
         * <pre>
         *地域定向内容，本字段目前内容全部由6位或以上字母组成，支持*通配符.例中国重庆表示为CNCQ*,CN表示中国,CQ表示重庆.*表示重庆下辖的所有二级城市。美国则表示为US*
         * </pre>
         */
        public Builder addLocation(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureLocationIsMutable();
          location_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string location = 6;</code>
         *
         * <pre>
         *地域定向内容，本字段目前内容全部由6位或以上字母组成，支持*通配符.例中国重庆表示为CNCQ*,CN表示中国,CQ表示重庆.*表示重庆下辖的所有二级城市。美国则表示为US*
         * </pre>
         */
        public Builder addAllLocation(
            java.lang.Iterable<java.lang.String> values) {
          ensureLocationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, location_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string location = 6;</code>
         *
         * <pre>
         *地域定向内容，本字段目前内容全部由6位或以上字母组成，支持*通配符.例中国重庆表示为CNCQ*,CN表示中国,CQ表示重庆.*表示重庆下辖的所有二级城市。美国则表示为US*
         * </pre>
         */
        public Builder clearLocation() {
          location_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string location = 6;</code>
         *
         * <pre>
         *地域定向内容，本字段目前内容全部由6位或以上字母组成，支持*通配符.例中国重庆表示为CNCQ*,CN表示中国,CQ表示重庆.*表示重庆下辖的所有二级城市。美国则表示为US*
         * </pre>
         */
        public Builder addLocationBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureLocationIsMutable();
          location_.add(value);
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.TargetFlag universityFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
        /**
         * <code>optional .de.cache.TargetFlag universityFlag = 7 [default = CLOSE];</code>
         *
         * <pre>
         *大学用户(教育网IP.)定向标示，0不定向、1定向、2非定向
         * </pre>
         */
        public boolean hasUniversityFlag() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional .de.cache.TargetFlag universityFlag = 7 [default = CLOSE];</code>
         *
         * <pre>
         *大学用户(教育网IP.)定向标示，0不定向、1定向、2非定向
         * </pre>
         */
        public de.cache.DeliveryMessage.TargetFlag getUniversityFlag() {
          return universityFlag_;
        }
        /**
         * <code>optional .de.cache.TargetFlag universityFlag = 7 [default = CLOSE];</code>
         *
         * <pre>
         *大学用户(教育网IP.)定向标示，0不定向、1定向、2非定向
         * </pre>
         */
        public Builder setUniversityFlag(de.cache.DeliveryMessage.TargetFlag value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000040;
          universityFlag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.TargetFlag universityFlag = 7 [default = CLOSE];</code>
         *
         * <pre>
         *大学用户(教育网IP.)定向标示，0不定向、1定向、2非定向
         * </pre>
         */
        public Builder clearUniversityFlag() {
          bitField0_ = (bitField0_ & ~0x00000040);
          universityFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.TargetFlag languageFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
        /**
         * <code>optional .de.cache.TargetFlag languageFlag = 8 [default = CLOSE];</code>
         *
         * <pre>
         *浏览器语言定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public boolean hasLanguageFlag() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional .de.cache.TargetFlag languageFlag = 8 [default = CLOSE];</code>
         *
         * <pre>
         *浏览器语言定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public de.cache.DeliveryMessage.TargetFlag getLanguageFlag() {
          return languageFlag_;
        }
        /**
         * <code>optional .de.cache.TargetFlag languageFlag = 8 [default = CLOSE];</code>
         *
         * <pre>
         *浏览器语言定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public Builder setLanguageFlag(de.cache.DeliveryMessage.TargetFlag value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000080;
          languageFlag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.TargetFlag languageFlag = 8 [default = CLOSE];</code>
         *
         * <pre>
         *浏览器语言定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public Builder clearLanguageFlag() {
          bitField0_ = (bitField0_ & ~0x00000080);
          languageFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList language_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureLanguageIsMutable() {
          if (!((bitField0_ & 0x00000100) == 0x00000100)) {
            language_ = new com.google.protobuf.LazyStringArrayList(language_);
            bitField0_ |= 0x00000100;
           }
        }
        /**
         * <code>repeated string language = 9;</code>
         *
         * <pre>
         *浏览器语言定向的具体内容，一般格式为"大语种代号-区域代号",多个语种时使用','分隔开,如"`zh-cn,zh-hk,en,en-za`",Zh表示汉语 cn表示大陆简体
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getLanguageList() {
          return language_.getUnmodifiableView();
        }
        /**
         * <code>repeated string language = 9;</code>
         *
         * <pre>
         *浏览器语言定向的具体内容，一般格式为"大语种代号-区域代号",多个语种时使用','分隔开,如"`zh-cn,zh-hk,en,en-za`",Zh表示汉语 cn表示大陆简体
         * </pre>
         */
        public int getLanguageCount() {
          return language_.size();
        }
        /**
         * <code>repeated string language = 9;</code>
         *
         * <pre>
         *浏览器语言定向的具体内容，一般格式为"大语种代号-区域代号",多个语种时使用','分隔开,如"`zh-cn,zh-hk,en,en-za`",Zh表示汉语 cn表示大陆简体
         * </pre>
         */
        public java.lang.String getLanguage(int index) {
          return language_.get(index);
        }
        /**
         * <code>repeated string language = 9;</code>
         *
         * <pre>
         *浏览器语言定向的具体内容，一般格式为"大语种代号-区域代号",多个语种时使用','分隔开,如"`zh-cn,zh-hk,en,en-za`",Zh表示汉语 cn表示大陆简体
         * </pre>
         */
        public com.google.protobuf.ByteString
            getLanguageBytes(int index) {
          return language_.getByteString(index);
        }
        /**
         * <code>repeated string language = 9;</code>
         *
         * <pre>
         *浏览器语言定向的具体内容，一般格式为"大语种代号-区域代号",多个语种时使用','分隔开,如"`zh-cn,zh-hk,en,en-za`",Zh表示汉语 cn表示大陆简体
         * </pre>
         */
        public Builder setLanguage(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureLanguageIsMutable();
          language_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string language = 9;</code>
         *
         * <pre>
         *浏览器语言定向的具体内容，一般格式为"大语种代号-区域代号",多个语种时使用','分隔开,如"`zh-cn,zh-hk,en,en-za`",Zh表示汉语 cn表示大陆简体
         * </pre>
         */
        public Builder addLanguage(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureLanguageIsMutable();
          language_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string language = 9;</code>
         *
         * <pre>
         *浏览器语言定向的具体内容，一般格式为"大语种代号-区域代号",多个语种时使用','分隔开,如"`zh-cn,zh-hk,en,en-za`",Zh表示汉语 cn表示大陆简体
         * </pre>
         */
        public Builder addAllLanguage(
            java.lang.Iterable<java.lang.String> values) {
          ensureLanguageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, language_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string language = 9;</code>
         *
         * <pre>
         *浏览器语言定向的具体内容，一般格式为"大语种代号-区域代号",多个语种时使用','分隔开,如"`zh-cn,zh-hk,en,en-za`",Zh表示汉语 cn表示大陆简体
         * </pre>
         */
        public Builder clearLanguage() {
          language_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string language = 9;</code>
         *
         * <pre>
         *浏览器语言定向的具体内容，一般格式为"大语种代号-区域代号",多个语种时使用','分隔开,如"`zh-cn,zh-hk,en,en-za`",Zh表示汉语 cn表示大陆简体
         * </pre>
         */
        public Builder addLanguageBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureLanguageIsMutable();
          language_.add(value);
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.TargetFlag osFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
        /**
         * <code>optional .de.cache.TargetFlag osFlag = 10 [default = CLOSE];</code>
         *
         * <pre>
         *操作系统定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public boolean hasOsFlag() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional .de.cache.TargetFlag osFlag = 10 [default = CLOSE];</code>
         *
         * <pre>
         *操作系统定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public de.cache.DeliveryMessage.TargetFlag getOsFlag() {
          return osFlag_;
        }
        /**
         * <code>optional .de.cache.TargetFlag osFlag = 10 [default = CLOSE];</code>
         *
         * <pre>
         *操作系统定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public Builder setOsFlag(de.cache.DeliveryMessage.TargetFlag value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000200;
          osFlag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.TargetFlag osFlag = 10 [default = CLOSE];</code>
         *
         * <pre>
         *操作系统定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public Builder clearOsFlag() {
          bitField0_ = (bitField0_ & ~0x00000200);
          osFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList os_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureOsIsMutable() {
          if (!((bitField0_ & 0x00000400) == 0x00000400)) {
            os_ = new com.google.protobuf.LazyStringArrayList(os_);
            bitField0_ |= 0x00000400;
           }
        }
        /**
         * <code>repeated string os = 11;</code>
         *
         * <pre>
         *定向的操作系统名称， 如Windows 98,Win98,Win32,Android,Android 2.1等,定向操作方式均是使用字符串查询匹配，也就是支持 sysname+version*匹配，如：HTC_Android 2.1系统，使用HTC、HTC_Android、HTC_Android 2等定向条件均能定向成功。
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getOsList() {
          return os_.getUnmodifiableView();
        }
        /**
         * <code>repeated string os = 11;</code>
         *
         * <pre>
         *定向的操作系统名称， 如Windows 98,Win98,Win32,Android,Android 2.1等,定向操作方式均是使用字符串查询匹配，也就是支持 sysname+version*匹配，如：HTC_Android 2.1系统，使用HTC、HTC_Android、HTC_Android 2等定向条件均能定向成功。
         * </pre>
         */
        public int getOsCount() {
          return os_.size();
        }
        /**
         * <code>repeated string os = 11;</code>
         *
         * <pre>
         *定向的操作系统名称， 如Windows 98,Win98,Win32,Android,Android 2.1等,定向操作方式均是使用字符串查询匹配，也就是支持 sysname+version*匹配，如：HTC_Android 2.1系统，使用HTC、HTC_Android、HTC_Android 2等定向条件均能定向成功。
         * </pre>
         */
        public java.lang.String getOs(int index) {
          return os_.get(index);
        }
        /**
         * <code>repeated string os = 11;</code>
         *
         * <pre>
         *定向的操作系统名称， 如Windows 98,Win98,Win32,Android,Android 2.1等,定向操作方式均是使用字符串查询匹配，也就是支持 sysname+version*匹配，如：HTC_Android 2.1系统，使用HTC、HTC_Android、HTC_Android 2等定向条件均能定向成功。
         * </pre>
         */
        public com.google.protobuf.ByteString
            getOsBytes(int index) {
          return os_.getByteString(index);
        }
        /**
         * <code>repeated string os = 11;</code>
         *
         * <pre>
         *定向的操作系统名称， 如Windows 98,Win98,Win32,Android,Android 2.1等,定向操作方式均是使用字符串查询匹配，也就是支持 sysname+version*匹配，如：HTC_Android 2.1系统，使用HTC、HTC_Android、HTC_Android 2等定向条件均能定向成功。
         * </pre>
         */
        public Builder setOs(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureOsIsMutable();
          os_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string os = 11;</code>
         *
         * <pre>
         *定向的操作系统名称， 如Windows 98,Win98,Win32,Android,Android 2.1等,定向操作方式均是使用字符串查询匹配，也就是支持 sysname+version*匹配，如：HTC_Android 2.1系统，使用HTC、HTC_Android、HTC_Android 2等定向条件均能定向成功。
         * </pre>
         */
        public Builder addOs(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureOsIsMutable();
          os_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string os = 11;</code>
         *
         * <pre>
         *定向的操作系统名称， 如Windows 98,Win98,Win32,Android,Android 2.1等,定向操作方式均是使用字符串查询匹配，也就是支持 sysname+version*匹配，如：HTC_Android 2.1系统，使用HTC、HTC_Android、HTC_Android 2等定向条件均能定向成功。
         * </pre>
         */
        public Builder addAllOs(
            java.lang.Iterable<java.lang.String> values) {
          ensureOsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, os_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string os = 11;</code>
         *
         * <pre>
         *定向的操作系统名称， 如Windows 98,Win98,Win32,Android,Android 2.1等,定向操作方式均是使用字符串查询匹配，也就是支持 sysname+version*匹配，如：HTC_Android 2.1系统，使用HTC、HTC_Android、HTC_Android 2等定向条件均能定向成功。
         * </pre>
         */
        public Builder clearOs() {
          os_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string os = 11;</code>
         *
         * <pre>
         *定向的操作系统名称， 如Windows 98,Win98,Win32,Android,Android 2.1等,定向操作方式均是使用字符串查询匹配，也就是支持 sysname+version*匹配，如：HTC_Android 2.1系统，使用HTC、HTC_Android、HTC_Android 2等定向条件均能定向成功。
         * </pre>
         */
        public Builder addOsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureOsIsMutable();
          os_.add(value);
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.GlobalSwitch linkageFlag_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        /**
         * <code>optional .de.cache.GlobalSwitch linkageFlag = 12 [default = OFF];</code>
         *
         * <pre>
         *投放联动标识，0非联动、1联动
         * </pre>
         */
        public boolean hasLinkageFlag() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional .de.cache.GlobalSwitch linkageFlag = 12 [default = OFF];</code>
         *
         * <pre>
         *投放联动标识，0非联动、1联动
         * </pre>
         */
        public de.cache.DeliveryMessage.GlobalSwitch getLinkageFlag() {
          return linkageFlag_;
        }
        /**
         * <code>optional .de.cache.GlobalSwitch linkageFlag = 12 [default = OFF];</code>
         *
         * <pre>
         *投放联动标识，0非联动、1联动
         * </pre>
         */
        public Builder setLinkageFlag(de.cache.DeliveryMessage.GlobalSwitch value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000800;
          linkageFlag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.GlobalSwitch linkageFlag = 12 [default = OFF];</code>
         *
         * <pre>
         *投放联动标识，0非联动、1联动
         * </pre>
         */
        public Builder clearLinkageFlag() {
          bitField0_ = (bitField0_ & ~0x00000800);
          linkageFlag_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.TargetFlag keywordFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
        /**
         * <code>optional .de.cache.TargetFlag keywordFlag = 13 [default = CLOSE];</code>
         *
         * <pre>
         *关键字定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public boolean hasKeywordFlag() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>optional .de.cache.TargetFlag keywordFlag = 13 [default = CLOSE];</code>
         *
         * <pre>
         *关键字定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public de.cache.DeliveryMessage.TargetFlag getKeywordFlag() {
          return keywordFlag_;
        }
        /**
         * <code>optional .de.cache.TargetFlag keywordFlag = 13 [default = CLOSE];</code>
         *
         * <pre>
         *关键字定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public Builder setKeywordFlag(de.cache.DeliveryMessage.TargetFlag value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00001000;
          keywordFlag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.TargetFlag keywordFlag = 13 [default = CLOSE];</code>
         *
         * <pre>
         *关键字定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public Builder clearKeywordFlag() {
          bitField0_ = (bitField0_ & ~0x00001000);
          keywordFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          onChanged();
          return this;
        }

        private java.lang.Object keyword_ = "";
        /**
         * <code>optional string keyword = 14;</code>
         *
         * <pre>
         *关键字定向的具体关键字和值(关系表达式)，如“w=上海|w=中国|s=美国”，
         *表示广告遇到“w=上海”或者“w=中国”或者“s=美国”的字符串参数的时候，就优先播放。
         *与solution表中GID=投放solutionid 的子记录（channeltype=c）的keyword字段值对应。该关系表达式详细格式描述见相关文档
         * </pre>
         */
        public boolean hasKeyword() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>optional string keyword = 14;</code>
         *
         * <pre>
         *关键字定向的具体关键字和值(关系表达式)，如“w=上海|w=中国|s=美国”，
         *表示广告遇到“w=上海”或者“w=中国”或者“s=美国”的字符串参数的时候，就优先播放。
         *与solution表中GID=投放solutionid 的子记录（channeltype=c）的keyword字段值对应。该关系表达式详细格式描述见相关文档
         * </pre>
         */
        public java.lang.String getKeyword() {
          java.lang.Object ref = keyword_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              keyword_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string keyword = 14;</code>
         *
         * <pre>
         *关键字定向的具体关键字和值(关系表达式)，如“w=上海|w=中国|s=美国”，
         *表示广告遇到“w=上海”或者“w=中国”或者“s=美国”的字符串参数的时候，就优先播放。
         *与solution表中GID=投放solutionid 的子记录（channeltype=c）的keyword字段值对应。该关系表达式详细格式描述见相关文档
         * </pre>
         */
        public com.google.protobuf.ByteString
            getKeywordBytes() {
          java.lang.Object ref = keyword_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            keyword_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string keyword = 14;</code>
         *
         * <pre>
         *关键字定向的具体关键字和值(关系表达式)，如“w=上海|w=中国|s=美国”，
         *表示广告遇到“w=上海”或者“w=中国”或者“s=美国”的字符串参数的时候，就优先播放。
         *与solution表中GID=投放solutionid 的子记录（channeltype=c）的keyword字段值对应。该关系表达式详细格式描述见相关文档
         * </pre>
         */
        public Builder setKeyword(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
          keyword_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string keyword = 14;</code>
         *
         * <pre>
         *关键字定向的具体关键字和值(关系表达式)，如“w=上海|w=中国|s=美国”，
         *表示广告遇到“w=上海”或者“w=中国”或者“s=美国”的字符串参数的时候，就优先播放。
         *与solution表中GID=投放solutionid 的子记录（channeltype=c）的keyword字段值对应。该关系表达式详细格式描述见相关文档
         * </pre>
         */
        public Builder clearKeyword() {
          bitField0_ = (bitField0_ & ~0x00002000);
          keyword_ = getDefaultInstance().getKeyword();
          onChanged();
          return this;
        }
        /**
         * <code>optional string keyword = 14;</code>
         *
         * <pre>
         *关键字定向的具体关键字和值(关系表达式)，如“w=上海|w=中国|s=美国”，
         *表示广告遇到“w=上海”或者“w=中国”或者“s=美国”的字符串参数的时候，就优先播放。
         *与solution表中GID=投放solutionid 的子记录（channeltype=c）的keyword字段值对应。该关系表达式详细格式描述见相关文档
         * </pre>
         */
        public Builder setKeywordBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
          keyword_ = value;
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.TargetFlag browserFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
        /**
         * <code>optional .de.cache.TargetFlag browserFlag = 15 [default = CLOSE];</code>
         *
         * <pre>
         *浏览器定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public boolean hasBrowserFlag() {
          return ((bitField0_ & 0x00004000) == 0x00004000);
        }
        /**
         * <code>optional .de.cache.TargetFlag browserFlag = 15 [default = CLOSE];</code>
         *
         * <pre>
         *浏览器定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public de.cache.DeliveryMessage.TargetFlag getBrowserFlag() {
          return browserFlag_;
        }
        /**
         * <code>optional .de.cache.TargetFlag browserFlag = 15 [default = CLOSE];</code>
         *
         * <pre>
         *浏览器定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public Builder setBrowserFlag(de.cache.DeliveryMessage.TargetFlag value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00004000;
          browserFlag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.TargetFlag browserFlag = 15 [default = CLOSE];</code>
         *
         * <pre>
         *浏览器定向标识，0不定向、1定向、2非定向
         * </pre>
         */
        public Builder clearBrowserFlag() {
          bitField0_ = (bitField0_ & ~0x00004000);
          browserFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList browser_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureBrowserIsMutable() {
          if (!((bitField0_ & 0x00008000) == 0x00008000)) {
            browser_ = new com.google.protobuf.LazyStringArrayList(browser_);
            bitField0_ |= 0x00008000;
           }
        }
        /**
         * <code>repeated string browser = 16;</code>
         *
         * <pre>
         *浏览器定向的具体浏览器代码
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getBrowserList() {
          return browser_.getUnmodifiableView();
        }
        /**
         * <code>repeated string browser = 16;</code>
         *
         * <pre>
         *浏览器定向的具体浏览器代码
         * </pre>
         */
        public int getBrowserCount() {
          return browser_.size();
        }
        /**
         * <code>repeated string browser = 16;</code>
         *
         * <pre>
         *浏览器定向的具体浏览器代码
         * </pre>
         */
        public java.lang.String getBrowser(int index) {
          return browser_.get(index);
        }
        /**
         * <code>repeated string browser = 16;</code>
         *
         * <pre>
         *浏览器定向的具体浏览器代码
         * </pre>
         */
        public com.google.protobuf.ByteString
            getBrowserBytes(int index) {
          return browser_.getByteString(index);
        }
        /**
         * <code>repeated string browser = 16;</code>
         *
         * <pre>
         *浏览器定向的具体浏览器代码
         * </pre>
         */
        public Builder setBrowser(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureBrowserIsMutable();
          browser_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string browser = 16;</code>
         *
         * <pre>
         *浏览器定向的具体浏览器代码
         * </pre>
         */
        public Builder addBrowser(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureBrowserIsMutable();
          browser_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string browser = 16;</code>
         *
         * <pre>
         *浏览器定向的具体浏览器代码
         * </pre>
         */
        public Builder addAllBrowser(
            java.lang.Iterable<java.lang.String> values) {
          ensureBrowserIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, browser_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string browser = 16;</code>
         *
         * <pre>
         *浏览器定向的具体浏览器代码
         * </pre>
         */
        public Builder clearBrowser() {
          browser_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00008000);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string browser = 16;</code>
         *
         * <pre>
         *浏览器定向的具体浏览器代码
         * </pre>
         */
        public Builder addBrowserBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureBrowserIsMutable();
          browser_.add(value);
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.GlobalSwitch demographicFlag_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        /**
         * <code>optional .de.cache.GlobalSwitch demographicFlag = 17 [default = OFF];</code>
         *
         * <pre>
         *人口属性智能定向标识,0=关闭，1=开启
         * </pre>
         */
        public boolean hasDemographicFlag() {
          return ((bitField0_ & 0x00010000) == 0x00010000);
        }
        /**
         * <code>optional .de.cache.GlobalSwitch demographicFlag = 17 [default = OFF];</code>
         *
         * <pre>
         *人口属性智能定向标识,0=关闭，1=开启
         * </pre>
         */
        public de.cache.DeliveryMessage.GlobalSwitch getDemographicFlag() {
          return demographicFlag_;
        }
        /**
         * <code>optional .de.cache.GlobalSwitch demographicFlag = 17 [default = OFF];</code>
         *
         * <pre>
         *人口属性智能定向标识,0=关闭，1=开启
         * </pre>
         */
        public Builder setDemographicFlag(de.cache.DeliveryMessage.GlobalSwitch value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00010000;
          demographicFlag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.GlobalSwitch demographicFlag = 17 [default = OFF];</code>
         *
         * <pre>
         *人口属性智能定向标识,0=关闭，1=开启
         * </pre>
         */
        public Builder clearDemographicFlag() {
          bitField0_ = (bitField0_ & ~0x00010000);
          demographicFlag_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.TargetFlag audienceTargetFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
        /**
         * <code>optional .de.cache.TargetFlag audienceTargetFlag = 18 [default = CLOSE];</code>
         *
         * <pre>
         *人群定向标示，0不定向、1定向、2非定向
         * </pre>
         */
        public boolean hasAudienceTargetFlag() {
          return ((bitField0_ & 0x00020000) == 0x00020000);
        }
        /**
         * <code>optional .de.cache.TargetFlag audienceTargetFlag = 18 [default = CLOSE];</code>
         *
         * <pre>
         *人群定向标示，0不定向、1定向、2非定向
         * </pre>
         */
        public de.cache.DeliveryMessage.TargetFlag getAudienceTargetFlag() {
          return audienceTargetFlag_;
        }
        /**
         * <code>optional .de.cache.TargetFlag audienceTargetFlag = 18 [default = CLOSE];</code>
         *
         * <pre>
         *人群定向标示，0不定向、1定向、2非定向
         * </pre>
         */
        public Builder setAudienceTargetFlag(de.cache.DeliveryMessage.TargetFlag value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00020000;
          audienceTargetFlag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.TargetFlag audienceTargetFlag = 18 [default = CLOSE];</code>
         *
         * <pre>
         *人群定向标示，0不定向、1定向、2非定向
         * </pre>
         */
        public Builder clearAudienceTargetFlag() {
          bitField0_ = (bitField0_ & ~0x00020000);
          audienceTargetFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          onChanged();
          return this;
        }

        private java.lang.Object audienceTarget_ = "";
        /**
         * <code>optional string audienceTarget = 19;</code>
         *
         * <pre>
         *人群定向信息, size=0时,关闭该功能
         * </pre>
         */
        public boolean hasAudienceTarget() {
          return ((bitField0_ & 0x00040000) == 0x00040000);
        }
        /**
         * <code>optional string audienceTarget = 19;</code>
         *
         * <pre>
         *人群定向信息, size=0时,关闭该功能
         * </pre>
         */
        public java.lang.String getAudienceTarget() {
          java.lang.Object ref = audienceTarget_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              audienceTarget_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string audienceTarget = 19;</code>
         *
         * <pre>
         *人群定向信息, size=0时,关闭该功能
         * </pre>
         */
        public com.google.protobuf.ByteString
            getAudienceTargetBytes() {
          java.lang.Object ref = audienceTarget_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            audienceTarget_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string audienceTarget = 19;</code>
         *
         * <pre>
         *人群定向信息, size=0时,关闭该功能
         * </pre>
         */
        public Builder setAudienceTarget(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
          audienceTarget_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string audienceTarget = 19;</code>
         *
         * <pre>
         *人群定向信息, size=0时,关闭该功能
         * </pre>
         */
        public Builder clearAudienceTarget() {
          bitField0_ = (bitField0_ & ~0x00040000);
          audienceTarget_ = getDefaultInstance().getAudienceTarget();
          onChanged();
          return this;
        }
        /**
         * <code>optional string audienceTarget = 19;</code>
         *
         * <pre>
         *人群定向信息, size=0时,关闭该功能
         * </pre>
         */
        public Builder setAudienceTargetBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
          audienceTarget_ = value;
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.GlobalSwitch csFlag_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        /**
         * <code>optional .de.cache.GlobalSwitch csFlag = 20 [default = OFF];</code>
         *
         * <pre>
         *语义定向:上下文打分定向标示，0无定向、1有定向
         * </pre>
         */
        public boolean hasCsFlag() {
          return ((bitField0_ & 0x00080000) == 0x00080000);
        }
        /**
         * <code>optional .de.cache.GlobalSwitch csFlag = 20 [default = OFF];</code>
         *
         * <pre>
         *语义定向:上下文打分定向标示，0无定向、1有定向
         * </pre>
         */
        public de.cache.DeliveryMessage.GlobalSwitch getCsFlag() {
          return csFlag_;
        }
        /**
         * <code>optional .de.cache.GlobalSwitch csFlag = 20 [default = OFF];</code>
         *
         * <pre>
         *语义定向:上下文打分定向标示，0无定向、1有定向
         * </pre>
         */
        public Builder setCsFlag(de.cache.DeliveryMessage.GlobalSwitch value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00080000;
          csFlag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.GlobalSwitch csFlag = 20 [default = OFF];</code>
         *
         * <pre>
         *语义定向:上下文打分定向标示，0无定向、1有定向
         * </pre>
         */
        public Builder clearCsFlag() {
          bitField0_ = (bitField0_ & ~0x00080000);
          csFlag_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.TargetFlag contentTargetFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
        /**
         * <code>optional .de.cache.TargetFlag contentTargetFlag = 21 [default = CLOSE];</code>
         *
         * <pre>
         *内容定向标示，0不定向、1定向、2非定向
         * </pre>
         */
        public boolean hasContentTargetFlag() {
          return ((bitField0_ & 0x00100000) == 0x00100000);
        }
        /**
         * <code>optional .de.cache.TargetFlag contentTargetFlag = 21 [default = CLOSE];</code>
         *
         * <pre>
         *内容定向标示，0不定向、1定向、2非定向
         * </pre>
         */
        public de.cache.DeliveryMessage.TargetFlag getContentTargetFlag() {
          return contentTargetFlag_;
        }
        /**
         * <code>optional .de.cache.TargetFlag contentTargetFlag = 21 [default = CLOSE];</code>
         *
         * <pre>
         *内容定向标示，0不定向、1定向、2非定向
         * </pre>
         */
        public Builder setContentTargetFlag(de.cache.DeliveryMessage.TargetFlag value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00100000;
          contentTargetFlag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.TargetFlag contentTargetFlag = 21 [default = CLOSE];</code>
         *
         * <pre>
         *内容定向标示，0不定向、1定向、2非定向
         * </pre>
         */
        public Builder clearContentTargetFlag() {
          bitField0_ = (bitField0_ & ~0x00100000);
          contentTargetFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          onChanged();
          return this;
        }

        private java.lang.Object contentTarget_ = "";
        /**
         * <code>optional string contentTarget = 22;</code>
         *
         * <pre>
         *内容定向信息, size=0时,关闭该功能
         * </pre>
         */
        public boolean hasContentTarget() {
          return ((bitField0_ & 0x00200000) == 0x00200000);
        }
        /**
         * <code>optional string contentTarget = 22;</code>
         *
         * <pre>
         *内容定向信息, size=0时,关闭该功能
         * </pre>
         */
        public java.lang.String getContentTarget() {
          java.lang.Object ref = contentTarget_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              contentTarget_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string contentTarget = 22;</code>
         *
         * <pre>
         *内容定向信息, size=0时,关闭该功能
         * </pre>
         */
        public com.google.protobuf.ByteString
            getContentTargetBytes() {
          java.lang.Object ref = contentTarget_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            contentTarget_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string contentTarget = 22;</code>
         *
         * <pre>
         *内容定向信息, size=0时,关闭该功能
         * </pre>
         */
        public Builder setContentTarget(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00200000;
          contentTarget_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string contentTarget = 22;</code>
         *
         * <pre>
         *内容定向信息, size=0时,关闭该功能
         * </pre>
         */
        public Builder clearContentTarget() {
          bitField0_ = (bitField0_ & ~0x00200000);
          contentTarget_ = getDefaultInstance().getContentTarget();
          onChanged();
          return this;
        }
        /**
         * <code>optional string contentTarget = 22;</code>
         *
         * <pre>
         *内容定向信息, size=0时,关闭该功能
         * </pre>
         */
        public Builder setContentTargetBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00200000;
          contentTarget_ = value;
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.TargetFlag retargetingFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
        /**
         * <code>optional .de.cache.TargetFlag retargetingFlag = 23 [default = CLOSE];</code>
         *
         * <pre>
         *重定向标示，0不定向、1定向、2非定向
         * </pre>
         */
        public boolean hasRetargetingFlag() {
          return ((bitField0_ & 0x00400000) == 0x00400000);
        }
        /**
         * <code>optional .de.cache.TargetFlag retargetingFlag = 23 [default = CLOSE];</code>
         *
         * <pre>
         *重定向标示，0不定向、1定向、2非定向
         * </pre>
         */
        public de.cache.DeliveryMessage.TargetFlag getRetargetingFlag() {
          return retargetingFlag_;
        }
        /**
         * <code>optional .de.cache.TargetFlag retargetingFlag = 23 [default = CLOSE];</code>
         *
         * <pre>
         *重定向标示，0不定向、1定向、2非定向
         * </pre>
         */
        public Builder setRetargetingFlag(de.cache.DeliveryMessage.TargetFlag value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00400000;
          retargetingFlag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.TargetFlag retargetingFlag = 23 [default = CLOSE];</code>
         *
         * <pre>
         *重定向标示，0不定向、1定向、2非定向
         * </pre>
         */
        public Builder clearRetargetingFlag() {
          bitField0_ = (bitField0_ & ~0x00400000);
          retargetingFlag_ = de.cache.DeliveryMessage.TargetFlag.CLOSE;
          onChanged();
          return this;
        }

        private java.lang.Object retargeting_ = "";
        /**
         * <code>optional string retargeting = 24;</code>
         *
         * <pre>
         *重定向信息, size=0时,关闭该功能
         * </pre>
         */
        public boolean hasRetargeting() {
          return ((bitField0_ & 0x00800000) == 0x00800000);
        }
        /**
         * <code>optional string retargeting = 24;</code>
         *
         * <pre>
         *重定向信息, size=0时,关闭该功能
         * </pre>
         */
        public java.lang.String getRetargeting() {
          java.lang.Object ref = retargeting_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              retargeting_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string retargeting = 24;</code>
         *
         * <pre>
         *重定向信息, size=0时,关闭该功能
         * </pre>
         */
        public com.google.protobuf.ByteString
            getRetargetingBytes() {
          java.lang.Object ref = retargeting_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            retargeting_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string retargeting = 24;</code>
         *
         * <pre>
         *重定向信息, size=0时,关闭该功能
         * </pre>
         */
        public Builder setRetargeting(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00800000;
          retargeting_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string retargeting = 24;</code>
         *
         * <pre>
         *重定向信息, size=0时,关闭该功能
         * </pre>
         */
        public Builder clearRetargeting() {
          bitField0_ = (bitField0_ & ~0x00800000);
          retargeting_ = getDefaultInstance().getRetargeting();
          onChanged();
          return this;
        }
        /**
         * <code>optional string retargeting = 24;</code>
         *
         * <pre>
         *重定向信息, size=0时,关闭该功能
         * </pre>
         */
        public Builder setRetargetingBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00800000;
          retargeting_ = value;
          onChanged();
          return this;
        }

        private java.util.List<de.cache.DeliveryMessage.CacheFile> dealFiles_ =
          java.util.Collections.emptyList();
        private void ensureDealFilesIsMutable() {
          if (!((bitField0_ & 0x01000000) == 0x01000000)) {
            dealFiles_ = new java.util.ArrayList<de.cache.DeliveryMessage.CacheFile>(dealFiles_);
            bitField0_ |= 0x01000000;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder> dealFilesBuilder_;

        /**
         * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
         *
         * <pre>
         *winmax定向文件
         * </pre>
         */
        public java.util.List<de.cache.DeliveryMessage.CacheFile> getDealFilesList() {
          if (dealFilesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(dealFiles_);
          } else {
            return dealFilesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
         *
         * <pre>
         *winmax定向文件
         * </pre>
         */
        public int getDealFilesCount() {
          if (dealFilesBuilder_ == null) {
            return dealFiles_.size();
          } else {
            return dealFilesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
         *
         * <pre>
         *winmax定向文件
         * </pre>
         */
        public de.cache.DeliveryMessage.CacheFile getDealFiles(int index) {
          if (dealFilesBuilder_ == null) {
            return dealFiles_.get(index);
          } else {
            return dealFilesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
         *
         * <pre>
         *winmax定向文件
         * </pre>
         */
        public Builder setDealFiles(
            int index, de.cache.DeliveryMessage.CacheFile value) {
          if (dealFilesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDealFilesIsMutable();
            dealFiles_.set(index, value);
            onChanged();
          } else {
            dealFilesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
         *
         * <pre>
         *winmax定向文件
         * </pre>
         */
        public Builder setDealFiles(
            int index, de.cache.DeliveryMessage.CacheFile.Builder builderForValue) {
          if (dealFilesBuilder_ == null) {
            ensureDealFilesIsMutable();
            dealFiles_.set(index, builderForValue.build());
            onChanged();
          } else {
            dealFilesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
         *
         * <pre>
         *winmax定向文件
         * </pre>
         */
        public Builder addDealFiles(de.cache.DeliveryMessage.CacheFile value) {
          if (dealFilesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDealFilesIsMutable();
            dealFiles_.add(value);
            onChanged();
          } else {
            dealFilesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
         *
         * <pre>
         *winmax定向文件
         * </pre>
         */
        public Builder addDealFiles(
            int index, de.cache.DeliveryMessage.CacheFile value) {
          if (dealFilesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDealFilesIsMutable();
            dealFiles_.add(index, value);
            onChanged();
          } else {
            dealFilesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
         *
         * <pre>
         *winmax定向文件
         * </pre>
         */
        public Builder addDealFiles(
            de.cache.DeliveryMessage.CacheFile.Builder builderForValue) {
          if (dealFilesBuilder_ == null) {
            ensureDealFilesIsMutable();
            dealFiles_.add(builderForValue.build());
            onChanged();
          } else {
            dealFilesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
         *
         * <pre>
         *winmax定向文件
         * </pre>
         */
        public Builder addDealFiles(
            int index, de.cache.DeliveryMessage.CacheFile.Builder builderForValue) {
          if (dealFilesBuilder_ == null) {
            ensureDealFilesIsMutable();
            dealFiles_.add(index, builderForValue.build());
            onChanged();
          } else {
            dealFilesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
         *
         * <pre>
         *winmax定向文件
         * </pre>
         */
        public Builder addAllDealFiles(
            java.lang.Iterable<? extends de.cache.DeliveryMessage.CacheFile> values) {
          if (dealFilesBuilder_ == null) {
            ensureDealFilesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, dealFiles_);
            onChanged();
          } else {
            dealFilesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
         *
         * <pre>
         *winmax定向文件
         * </pre>
         */
        public Builder clearDealFiles() {
          if (dealFilesBuilder_ == null) {
            dealFiles_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x01000000);
            onChanged();
          } else {
            dealFilesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
         *
         * <pre>
         *winmax定向文件
         * </pre>
         */
        public Builder removeDealFiles(int index) {
          if (dealFilesBuilder_ == null) {
            ensureDealFilesIsMutable();
            dealFiles_.remove(index);
            onChanged();
          } else {
            dealFilesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
         *
         * <pre>
         *winmax定向文件
         * </pre>
         */
        public de.cache.DeliveryMessage.CacheFile.Builder getDealFilesBuilder(
            int index) {
          return getDealFilesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
         *
         * <pre>
         *winmax定向文件
         * </pre>
         */
        public de.cache.DeliveryMessage.CacheFileOrBuilder getDealFilesOrBuilder(
            int index) {
          if (dealFilesBuilder_ == null) {
            return dealFiles_.get(index);  } else {
            return dealFilesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
         *
         * <pre>
         *winmax定向文件
         * </pre>
         */
        public java.util.List<? extends de.cache.DeliveryMessage.CacheFileOrBuilder> 
             getDealFilesOrBuilderList() {
          if (dealFilesBuilder_ != null) {
            return dealFilesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(dealFiles_);
          }
        }
        /**
         * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
         *
         * <pre>
         *winmax定向文件
         * </pre>
         */
        public de.cache.DeliveryMessage.CacheFile.Builder addDealFilesBuilder() {
          return getDealFilesFieldBuilder().addBuilder(
              de.cache.DeliveryMessage.CacheFile.getDefaultInstance());
        }
        /**
         * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
         *
         * <pre>
         *winmax定向文件
         * </pre>
         */
        public de.cache.DeliveryMessage.CacheFile.Builder addDealFilesBuilder(
            int index) {
          return getDealFilesFieldBuilder().addBuilder(
              index, de.cache.DeliveryMessage.CacheFile.getDefaultInstance());
        }
        /**
         * <code>repeated .de.cache.CacheFile dealFiles = 25;</code>
         *
         * <pre>
         *winmax定向文件
         * </pre>
         */
        public java.util.List<de.cache.DeliveryMessage.CacheFile.Builder> 
             getDealFilesBuilderList() {
          return getDealFilesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder> 
            getDealFilesFieldBuilder() {
          if (dealFilesBuilder_ == null) {
            dealFilesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder>(
                    dealFiles_,
                    ((bitField0_ & 0x01000000) == 0x01000000),
                    getParentForChildren(),
                    isClean());
            dealFiles_ = null;
          }
          return dealFilesBuilder_;
        }

        private java.lang.Object cpaOwnerType_ = "";
        /**
         * <code>optional string cpaOwnerType = 26;</code>
         *
         * <pre>
         *cpa归属类型
         * </pre>
         */
        public boolean hasCpaOwnerType() {
          return ((bitField0_ & 0x02000000) == 0x02000000);
        }
        /**
         * <code>optional string cpaOwnerType = 26;</code>
         *
         * <pre>
         *cpa归属类型
         * </pre>
         */
        public java.lang.String getCpaOwnerType() {
          java.lang.Object ref = cpaOwnerType_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              cpaOwnerType_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string cpaOwnerType = 26;</code>
         *
         * <pre>
         *cpa归属类型
         * </pre>
         */
        public com.google.protobuf.ByteString
            getCpaOwnerTypeBytes() {
          java.lang.Object ref = cpaOwnerType_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            cpaOwnerType_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string cpaOwnerType = 26;</code>
         *
         * <pre>
         *cpa归属类型
         * </pre>
         */
        public Builder setCpaOwnerType(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x02000000;
          cpaOwnerType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string cpaOwnerType = 26;</code>
         *
         * <pre>
         *cpa归属类型
         * </pre>
         */
        public Builder clearCpaOwnerType() {
          bitField0_ = (bitField0_ & ~0x02000000);
          cpaOwnerType_ = getDefaultInstance().getCpaOwnerType();
          onChanged();
          return this;
        }
        /**
         * <code>optional string cpaOwnerType = 26;</code>
         *
         * <pre>
         *cpa归属类型
         * </pre>
         */
        public Builder setCpaOwnerTypeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x02000000;
          cpaOwnerType_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList btTag_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureBtTagIsMutable() {
          if (!((bitField0_ & 0x04000000) == 0x04000000)) {
            btTag_ = new com.google.protobuf.LazyStringArrayList(btTag_);
            bitField0_ |= 0x04000000;
           }
        }
        /**
         * <code>repeated string btTag = 27;</code>
         *
         * <pre>
         *BT定向tag关系表达式,多个表达式间或关系, size=0时,关闭该功能
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getBtTagList() {
          return btTag_.getUnmodifiableView();
        }
        /**
         * <code>repeated string btTag = 27;</code>
         *
         * <pre>
         *BT定向tag关系表达式,多个表达式间或关系, size=0时,关闭该功能
         * </pre>
         */
        public int getBtTagCount() {
          return btTag_.size();
        }
        /**
         * <code>repeated string btTag = 27;</code>
         *
         * <pre>
         *BT定向tag关系表达式,多个表达式间或关系, size=0时,关闭该功能
         * </pre>
         */
        public java.lang.String getBtTag(int index) {
          return btTag_.get(index);
        }
        /**
         * <code>repeated string btTag = 27;</code>
         *
         * <pre>
         *BT定向tag关系表达式,多个表达式间或关系, size=0时,关闭该功能
         * </pre>
         */
        public com.google.protobuf.ByteString
            getBtTagBytes(int index) {
          return btTag_.getByteString(index);
        }
        /**
         * <code>repeated string btTag = 27;</code>
         *
         * <pre>
         *BT定向tag关系表达式,多个表达式间或关系, size=0时,关闭该功能
         * </pre>
         */
        public Builder setBtTag(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureBtTagIsMutable();
          btTag_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string btTag = 27;</code>
         *
         * <pre>
         *BT定向tag关系表达式,多个表达式间或关系, size=0时,关闭该功能
         * </pre>
         */
        public Builder addBtTag(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureBtTagIsMutable();
          btTag_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string btTag = 27;</code>
         *
         * <pre>
         *BT定向tag关系表达式,多个表达式间或关系, size=0时,关闭该功能
         * </pre>
         */
        public Builder addAllBtTag(
            java.lang.Iterable<java.lang.String> values) {
          ensureBtTagIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, btTag_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string btTag = 27;</code>
         *
         * <pre>
         *BT定向tag关系表达式,多个表达式间或关系, size=0时,关闭该功能
         * </pre>
         */
        public Builder clearBtTag() {
          btTag_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x04000000);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string btTag = 27;</code>
         *
         * <pre>
         *BT定向tag关系表达式,多个表达式间或关系, size=0时,关闭该功能
         * </pre>
         */
        public Builder addBtTagBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureBtTagIsMutable();
          btTag_.add(value);
          onChanged();
          return this;
        }

        private java.util.List<de.cache.DeliveryMessage.IPSection> ipWhitelist_ =
          java.util.Collections.emptyList();
        private void ensureIpWhitelistIsMutable() {
          if (!((bitField0_ & 0x08000000) == 0x08000000)) {
            ipWhitelist_ = new java.util.ArrayList<de.cache.DeliveryMessage.IPSection>(ipWhitelist_);
            bitField0_ |= 0x08000000;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            de.cache.DeliveryMessage.IPSection, de.cache.DeliveryMessage.IPSection.Builder, de.cache.DeliveryMessage.IPSectionOrBuilder> ipWhitelistBuilder_;

        /**
         * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
         */
        public java.util.List<de.cache.DeliveryMessage.IPSection> getIpWhitelistList() {
          if (ipWhitelistBuilder_ == null) {
            return java.util.Collections.unmodifiableList(ipWhitelist_);
          } else {
            return ipWhitelistBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
         */
        public int getIpWhitelistCount() {
          if (ipWhitelistBuilder_ == null) {
            return ipWhitelist_.size();
          } else {
            return ipWhitelistBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
         */
        public de.cache.DeliveryMessage.IPSection getIpWhitelist(int index) {
          if (ipWhitelistBuilder_ == null) {
            return ipWhitelist_.get(index);
          } else {
            return ipWhitelistBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
         */
        public Builder setIpWhitelist(
            int index, de.cache.DeliveryMessage.IPSection value) {
          if (ipWhitelistBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureIpWhitelistIsMutable();
            ipWhitelist_.set(index, value);
            onChanged();
          } else {
            ipWhitelistBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
         */
        public Builder setIpWhitelist(
            int index, de.cache.DeliveryMessage.IPSection.Builder builderForValue) {
          if (ipWhitelistBuilder_ == null) {
            ensureIpWhitelistIsMutable();
            ipWhitelist_.set(index, builderForValue.build());
            onChanged();
          } else {
            ipWhitelistBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
         */
        public Builder addIpWhitelist(de.cache.DeliveryMessage.IPSection value) {
          if (ipWhitelistBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureIpWhitelistIsMutable();
            ipWhitelist_.add(value);
            onChanged();
          } else {
            ipWhitelistBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
         */
        public Builder addIpWhitelist(
            int index, de.cache.DeliveryMessage.IPSection value) {
          if (ipWhitelistBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureIpWhitelistIsMutable();
            ipWhitelist_.add(index, value);
            onChanged();
          } else {
            ipWhitelistBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
         */
        public Builder addIpWhitelist(
            de.cache.DeliveryMessage.IPSection.Builder builderForValue) {
          if (ipWhitelistBuilder_ == null) {
            ensureIpWhitelistIsMutable();
            ipWhitelist_.add(builderForValue.build());
            onChanged();
          } else {
            ipWhitelistBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
         */
        public Builder addIpWhitelist(
            int index, de.cache.DeliveryMessage.IPSection.Builder builderForValue) {
          if (ipWhitelistBuilder_ == null) {
            ensureIpWhitelistIsMutable();
            ipWhitelist_.add(index, builderForValue.build());
            onChanged();
          } else {
            ipWhitelistBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
         */
        public Builder addAllIpWhitelist(
            java.lang.Iterable<? extends de.cache.DeliveryMessage.IPSection> values) {
          if (ipWhitelistBuilder_ == null) {
            ensureIpWhitelistIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, ipWhitelist_);
            onChanged();
          } else {
            ipWhitelistBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
         */
        public Builder clearIpWhitelist() {
          if (ipWhitelistBuilder_ == null) {
            ipWhitelist_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x08000000);
            onChanged();
          } else {
            ipWhitelistBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
         */
        public Builder removeIpWhitelist(int index) {
          if (ipWhitelistBuilder_ == null) {
            ensureIpWhitelistIsMutable();
            ipWhitelist_.remove(index);
            onChanged();
          } else {
            ipWhitelistBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
         */
        public de.cache.DeliveryMessage.IPSection.Builder getIpWhitelistBuilder(
            int index) {
          return getIpWhitelistFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
         */
        public de.cache.DeliveryMessage.IPSectionOrBuilder getIpWhitelistOrBuilder(
            int index) {
          if (ipWhitelistBuilder_ == null) {
            return ipWhitelist_.get(index);  } else {
            return ipWhitelistBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
         */
        public java.util.List<? extends de.cache.DeliveryMessage.IPSectionOrBuilder> 
             getIpWhitelistOrBuilderList() {
          if (ipWhitelistBuilder_ != null) {
            return ipWhitelistBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(ipWhitelist_);
          }
        }
        /**
         * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
         */
        public de.cache.DeliveryMessage.IPSection.Builder addIpWhitelistBuilder() {
          return getIpWhitelistFieldBuilder().addBuilder(
              de.cache.DeliveryMessage.IPSection.getDefaultInstance());
        }
        /**
         * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
         */
        public de.cache.DeliveryMessage.IPSection.Builder addIpWhitelistBuilder(
            int index) {
          return getIpWhitelistFieldBuilder().addBuilder(
              index, de.cache.DeliveryMessage.IPSection.getDefaultInstance());
        }
        /**
         * <code>repeated .de.cache.IPSection ipWhitelist = 28;</code>
         */
        public java.util.List<de.cache.DeliveryMessage.IPSection.Builder> 
             getIpWhitelistBuilderList() {
          return getIpWhitelistFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            de.cache.DeliveryMessage.IPSection, de.cache.DeliveryMessage.IPSection.Builder, de.cache.DeliveryMessage.IPSectionOrBuilder> 
            getIpWhitelistFieldBuilder() {
          if (ipWhitelistBuilder_ == null) {
            ipWhitelistBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                de.cache.DeliveryMessage.IPSection, de.cache.DeliveryMessage.IPSection.Builder, de.cache.DeliveryMessage.IPSectionOrBuilder>(
                    ipWhitelist_,
                    ((bitField0_ & 0x08000000) == 0x08000000),
                    getParentForChildren(),
                    isClean());
            ipWhitelist_ = null;
          }
          return ipWhitelistBuilder_;
        }

        private java.util.List<de.cache.DeliveryMessage.IPSection> ipBlacklist_ =
          java.util.Collections.emptyList();
        private void ensureIpBlacklistIsMutable() {
          if (!((bitField0_ & 0x10000000) == 0x10000000)) {
            ipBlacklist_ = new java.util.ArrayList<de.cache.DeliveryMessage.IPSection>(ipBlacklist_);
            bitField0_ |= 0x10000000;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            de.cache.DeliveryMessage.IPSection, de.cache.DeliveryMessage.IPSection.Builder, de.cache.DeliveryMessage.IPSectionOrBuilder> ipBlacklistBuilder_;

        /**
         * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
         */
        public java.util.List<de.cache.DeliveryMessage.IPSection> getIpBlacklistList() {
          if (ipBlacklistBuilder_ == null) {
            return java.util.Collections.unmodifiableList(ipBlacklist_);
          } else {
            return ipBlacklistBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
         */
        public int getIpBlacklistCount() {
          if (ipBlacklistBuilder_ == null) {
            return ipBlacklist_.size();
          } else {
            return ipBlacklistBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
         */
        public de.cache.DeliveryMessage.IPSection getIpBlacklist(int index) {
          if (ipBlacklistBuilder_ == null) {
            return ipBlacklist_.get(index);
          } else {
            return ipBlacklistBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
         */
        public Builder setIpBlacklist(
            int index, de.cache.DeliveryMessage.IPSection value) {
          if (ipBlacklistBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureIpBlacklistIsMutable();
            ipBlacklist_.set(index, value);
            onChanged();
          } else {
            ipBlacklistBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
         */
        public Builder setIpBlacklist(
            int index, de.cache.DeliveryMessage.IPSection.Builder builderForValue) {
          if (ipBlacklistBuilder_ == null) {
            ensureIpBlacklistIsMutable();
            ipBlacklist_.set(index, builderForValue.build());
            onChanged();
          } else {
            ipBlacklistBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
         */
        public Builder addIpBlacklist(de.cache.DeliveryMessage.IPSection value) {
          if (ipBlacklistBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureIpBlacklistIsMutable();
            ipBlacklist_.add(value);
            onChanged();
          } else {
            ipBlacklistBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
         */
        public Builder addIpBlacklist(
            int index, de.cache.DeliveryMessage.IPSection value) {
          if (ipBlacklistBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureIpBlacklistIsMutable();
            ipBlacklist_.add(index, value);
            onChanged();
          } else {
            ipBlacklistBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
         */
        public Builder addIpBlacklist(
            de.cache.DeliveryMessage.IPSection.Builder builderForValue) {
          if (ipBlacklistBuilder_ == null) {
            ensureIpBlacklistIsMutable();
            ipBlacklist_.add(builderForValue.build());
            onChanged();
          } else {
            ipBlacklistBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
         */
        public Builder addIpBlacklist(
            int index, de.cache.DeliveryMessage.IPSection.Builder builderForValue) {
          if (ipBlacklistBuilder_ == null) {
            ensureIpBlacklistIsMutable();
            ipBlacklist_.add(index, builderForValue.build());
            onChanged();
          } else {
            ipBlacklistBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
         */
        public Builder addAllIpBlacklist(
            java.lang.Iterable<? extends de.cache.DeliveryMessage.IPSection> values) {
          if (ipBlacklistBuilder_ == null) {
            ensureIpBlacklistIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, ipBlacklist_);
            onChanged();
          } else {
            ipBlacklistBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
         */
        public Builder clearIpBlacklist() {
          if (ipBlacklistBuilder_ == null) {
            ipBlacklist_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x10000000);
            onChanged();
          } else {
            ipBlacklistBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
         */
        public Builder removeIpBlacklist(int index) {
          if (ipBlacklistBuilder_ == null) {
            ensureIpBlacklistIsMutable();
            ipBlacklist_.remove(index);
            onChanged();
          } else {
            ipBlacklistBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
         */
        public de.cache.DeliveryMessage.IPSection.Builder getIpBlacklistBuilder(
            int index) {
          return getIpBlacklistFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
         */
        public de.cache.DeliveryMessage.IPSectionOrBuilder getIpBlacklistOrBuilder(
            int index) {
          if (ipBlacklistBuilder_ == null) {
            return ipBlacklist_.get(index);  } else {
            return ipBlacklistBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
         */
        public java.util.List<? extends de.cache.DeliveryMessage.IPSectionOrBuilder> 
             getIpBlacklistOrBuilderList() {
          if (ipBlacklistBuilder_ != null) {
            return ipBlacklistBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(ipBlacklist_);
          }
        }
        /**
         * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
         */
        public de.cache.DeliveryMessage.IPSection.Builder addIpBlacklistBuilder() {
          return getIpBlacklistFieldBuilder().addBuilder(
              de.cache.DeliveryMessage.IPSection.getDefaultInstance());
        }
        /**
         * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
         */
        public de.cache.DeliveryMessage.IPSection.Builder addIpBlacklistBuilder(
            int index) {
          return getIpBlacklistFieldBuilder().addBuilder(
              index, de.cache.DeliveryMessage.IPSection.getDefaultInstance());
        }
        /**
         * <code>repeated .de.cache.IPSection ipBlacklist = 29;</code>
         */
        public java.util.List<de.cache.DeliveryMessage.IPSection.Builder> 
             getIpBlacklistBuilderList() {
          return getIpBlacklistFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            de.cache.DeliveryMessage.IPSection, de.cache.DeliveryMessage.IPSection.Builder, de.cache.DeliveryMessage.IPSectionOrBuilder> 
            getIpBlacklistFieldBuilder() {
          if (ipBlacklistBuilder_ == null) {
            ipBlacklistBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                de.cache.DeliveryMessage.IPSection, de.cache.DeliveryMessage.IPSection.Builder, de.cache.DeliveryMessage.IPSectionOrBuilder>(
                    ipBlacklist_,
                    ((bitField0_ & 0x10000000) == 0x10000000),
                    getParentForChildren(),
                    isClean());
            ipBlacklist_ = null;
          }
          return ipBlacklistBuilder_;
        }

        private java.lang.Object forceSolutionTimes_ = "";
        /**
         * <code>optional string forceSolutionTimes = 30;</code>
         *
         * <pre>
         *强制投放时间，如：8:00-10:00表示8点到10点可以强制投放，多个时间段以逗号分隔。为0或空表示没有强制投放
         * </pre>
         */
        public boolean hasForceSolutionTimes() {
          return ((bitField0_ & 0x20000000) == 0x20000000);
        }
        /**
         * <code>optional string forceSolutionTimes = 30;</code>
         *
         * <pre>
         *强制投放时间，如：8:00-10:00表示8点到10点可以强制投放，多个时间段以逗号分隔。为0或空表示没有强制投放
         * </pre>
         */
        public java.lang.String getForceSolutionTimes() {
          java.lang.Object ref = forceSolutionTimes_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              forceSolutionTimes_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string forceSolutionTimes = 30;</code>
         *
         * <pre>
         *强制投放时间，如：8:00-10:00表示8点到10点可以强制投放，多个时间段以逗号分隔。为0或空表示没有强制投放
         * </pre>
         */
        public com.google.protobuf.ByteString
            getForceSolutionTimesBytes() {
          java.lang.Object ref = forceSolutionTimes_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            forceSolutionTimes_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string forceSolutionTimes = 30;</code>
         *
         * <pre>
         *强制投放时间，如：8:00-10:00表示8点到10点可以强制投放，多个时间段以逗号分隔。为0或空表示没有强制投放
         * </pre>
         */
        public Builder setForceSolutionTimes(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x20000000;
          forceSolutionTimes_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string forceSolutionTimes = 30;</code>
         *
         * <pre>
         *强制投放时间，如：8:00-10:00表示8点到10点可以强制投放，多个时间段以逗号分隔。为0或空表示没有强制投放
         * </pre>
         */
        public Builder clearForceSolutionTimes() {
          bitField0_ = (bitField0_ & ~0x20000000);
          forceSolutionTimes_ = getDefaultInstance().getForceSolutionTimes();
          onChanged();
          return this;
        }
        /**
         * <code>optional string forceSolutionTimes = 30;</code>
         *
         * <pre>
         *强制投放时间，如：8:00-10:00表示8点到10点可以强制投放，多个时间段以逗号分隔。为0或空表示没有强制投放
         * </pre>
         */
        public Builder setForceSolutionTimesBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x20000000;
          forceSolutionTimes_ = value;
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.BlackAndWhiteList referrer_ = de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            de.cache.DeliveryMessage.BlackAndWhiteList, de.cache.DeliveryMessage.BlackAndWhiteList.Builder, de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder> referrerBuilder_;
        /**
         * <code>optional .de.cache.BlackAndWhiteList referrer = 31;</code>
         *
         * <pre>
         *Referrer定向
         * </pre>
         */
        public boolean hasReferrer() {
          return ((bitField0_ & 0x40000000) == 0x40000000);
        }
        /**
         * <code>optional .de.cache.BlackAndWhiteList referrer = 31;</code>
         *
         * <pre>
         *Referrer定向
         * </pre>
         */
        public de.cache.DeliveryMessage.BlackAndWhiteList getReferrer() {
          if (referrerBuilder_ == null) {
            return referrer_;
          } else {
            return referrerBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .de.cache.BlackAndWhiteList referrer = 31;</code>
         *
         * <pre>
         *Referrer定向
         * </pre>
         */
        public Builder setReferrer(de.cache.DeliveryMessage.BlackAndWhiteList value) {
          if (referrerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            referrer_ = value;
            onChanged();
          } else {
            referrerBuilder_.setMessage(value);
          }
          bitField0_ |= 0x40000000;
          return this;
        }
        /**
         * <code>optional .de.cache.BlackAndWhiteList referrer = 31;</code>
         *
         * <pre>
         *Referrer定向
         * </pre>
         */
        public Builder setReferrer(
            de.cache.DeliveryMessage.BlackAndWhiteList.Builder builderForValue) {
          if (referrerBuilder_ == null) {
            referrer_ = builderForValue.build();
            onChanged();
          } else {
            referrerBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x40000000;
          return this;
        }
        /**
         * <code>optional .de.cache.BlackAndWhiteList referrer = 31;</code>
         *
         * <pre>
         *Referrer定向
         * </pre>
         */
        public Builder mergeReferrer(de.cache.DeliveryMessage.BlackAndWhiteList value) {
          if (referrerBuilder_ == null) {
            if (((bitField0_ & 0x40000000) == 0x40000000) &&
                referrer_ != de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance()) {
              referrer_ =
                de.cache.DeliveryMessage.BlackAndWhiteList.newBuilder(referrer_).mergeFrom(value).buildPartial();
            } else {
              referrer_ = value;
            }
            onChanged();
          } else {
            referrerBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x40000000;
          return this;
        }
        /**
         * <code>optional .de.cache.BlackAndWhiteList referrer = 31;</code>
         *
         * <pre>
         *Referrer定向
         * </pre>
         */
        public Builder clearReferrer() {
          if (referrerBuilder_ == null) {
            referrer_ = de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance();
            onChanged();
          } else {
            referrerBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x40000000);
          return this;
        }
        /**
         * <code>optional .de.cache.BlackAndWhiteList referrer = 31;</code>
         *
         * <pre>
         *Referrer定向
         * </pre>
         */
        public de.cache.DeliveryMessage.BlackAndWhiteList.Builder getReferrerBuilder() {
          bitField0_ |= 0x40000000;
          onChanged();
          return getReferrerFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .de.cache.BlackAndWhiteList referrer = 31;</code>
         *
         * <pre>
         *Referrer定向
         * </pre>
         */
        public de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder getReferrerOrBuilder() {
          if (referrerBuilder_ != null) {
            return referrerBuilder_.getMessageOrBuilder();
          } else {
            return referrer_;
          }
        }
        /**
         * <code>optional .de.cache.BlackAndWhiteList referrer = 31;</code>
         *
         * <pre>
         *Referrer定向
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            de.cache.DeliveryMessage.BlackAndWhiteList, de.cache.DeliveryMessage.BlackAndWhiteList.Builder, de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder> 
            getReferrerFieldBuilder() {
          if (referrerBuilder_ == null) {
            referrerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                de.cache.DeliveryMessage.BlackAndWhiteList, de.cache.DeliveryMessage.BlackAndWhiteList.Builder, de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder>(
                    getReferrer(),
                    getParentForChildren(),
                    isClean());
            referrer_ = null;
          }
          return referrerBuilder_;
        }

        private de.cache.DeliveryMessage.GlobalSwitch inheritFromGConf_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        /**
         * <code>optional .de.cache.GlobalSwitch inheritFromGConf = 32 [default = OFF];</code>
         *
         * <pre>
         *表示是否继承db级别的referer黑白名单控制，0=不继承，1=继承
         * </pre>
         */
        public boolean hasInheritFromGConf() {
          return ((bitField0_ & 0x80000000) == 0x80000000);
        }
        /**
         * <code>optional .de.cache.GlobalSwitch inheritFromGConf = 32 [default = OFF];</code>
         *
         * <pre>
         *表示是否继承db级别的referer黑白名单控制，0=不继承，1=继承
         * </pre>
         */
        public de.cache.DeliveryMessage.GlobalSwitch getInheritFromGConf() {
          return inheritFromGConf_;
        }
        /**
         * <code>optional .de.cache.GlobalSwitch inheritFromGConf = 32 [default = OFF];</code>
         *
         * <pre>
         *表示是否继承db级别的referer黑白名单控制，0=不继承，1=继承
         * </pre>
         */
        public Builder setInheritFromGConf(de.cache.DeliveryMessage.GlobalSwitch value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x80000000;
          inheritFromGConf_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.GlobalSwitch inheritFromGConf = 32 [default = OFF];</code>
         *
         * <pre>
         *表示是否继承db级别的referer黑白名单控制，0=不继承，1=继承
         * </pre>
         */
        public Builder clearInheritFromGConf() {
          bitField0_ = (bitField0_ & ~0x80000000);
          inheritFromGConf_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.CacheFile device_ = de.cache.DeliveryMessage.CacheFile.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder> deviceBuilder_;
        /**
         * <code>optional .de.cache.CacheFile device = 33;</code>
         *
         * <pre>
         *target下的文件名(d.$sid)。
         *文件内容为：/AdNetworkId/{NativeCode，不同记录间支持and和or的关系。以","或"()"分隔，其中“，”表示or关系，“（）”表示and关系。
         *Type取值：=0 DESKTOP；=1 HIGHEND_PHONE；=2 TABLET
         *Platform取值: android, iphone, palm
         *Make: string,Device make (如： Nokia, Samsung).
         *Model: string, Device model(如：N70, Galaxy.)
         *cache生成规则：
         *1）Type为DESKTOP时， Platform/Make/Model 永远为空，如：“/2/0”
         *2) 在大类不做定向时，不允许小类为空，且最后不加”/”。如“/2/1/android/Nokia”，但是不允许“/2/1/android//N70”
         *3) string全为小写
         * </pre>
         */
        public boolean hasDevice() {
          return ((bitField1_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .de.cache.CacheFile device = 33;</code>
         *
         * <pre>
         *target下的文件名(d.$sid)。
         *文件内容为：/AdNetworkId/{NativeCode，不同记录间支持and和or的关系。以","或"()"分隔，其中“，”表示or关系，“（）”表示and关系。
         *Type取值：=0 DESKTOP；=1 HIGHEND_PHONE；=2 TABLET
         *Platform取值: android, iphone, palm
         *Make: string,Device make (如： Nokia, Samsung).
         *Model: string, Device model(如：N70, Galaxy.)
         *cache生成规则：
         *1）Type为DESKTOP时， Platform/Make/Model 永远为空，如：“/2/0”
         *2) 在大类不做定向时，不允许小类为空，且最后不加”/”。如“/2/1/android/Nokia”，但是不允许“/2/1/android//N70”
         *3) string全为小写
         * </pre>
         */
        public de.cache.DeliveryMessage.CacheFile getDevice() {
          if (deviceBuilder_ == null) {
            return device_;
          } else {
            return deviceBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .de.cache.CacheFile device = 33;</code>
         *
         * <pre>
         *target下的文件名(d.$sid)。
         *文件内容为：/AdNetworkId/{NativeCode，不同记录间支持and和or的关系。以","或"()"分隔，其中“，”表示or关系，“（）”表示and关系。
         *Type取值：=0 DESKTOP；=1 HIGHEND_PHONE；=2 TABLET
         *Platform取值: android, iphone, palm
         *Make: string,Device make (如： Nokia, Samsung).
         *Model: string, Device model(如：N70, Galaxy.)
         *cache生成规则：
         *1）Type为DESKTOP时， Platform/Make/Model 永远为空，如：“/2/0”
         *2) 在大类不做定向时，不允许小类为空，且最后不加”/”。如“/2/1/android/Nokia”，但是不允许“/2/1/android//N70”
         *3) string全为小写
         * </pre>
         */
        public Builder setDevice(de.cache.DeliveryMessage.CacheFile value) {
          if (deviceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            device_ = value;
            onChanged();
          } else {
            deviceBuilder_.setMessage(value);
          }
          bitField1_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .de.cache.CacheFile device = 33;</code>
         *
         * <pre>
         *target下的文件名(d.$sid)。
         *文件内容为：/AdNetworkId/{NativeCode，不同记录间支持and和or的关系。以","或"()"分隔，其中“，”表示or关系，“（）”表示and关系。
         *Type取值：=0 DESKTOP；=1 HIGHEND_PHONE；=2 TABLET
         *Platform取值: android, iphone, palm
         *Make: string,Device make (如： Nokia, Samsung).
         *Model: string, Device model(如：N70, Galaxy.)
         *cache生成规则：
         *1）Type为DESKTOP时， Platform/Make/Model 永远为空，如：“/2/0”
         *2) 在大类不做定向时，不允许小类为空，且最后不加”/”。如“/2/1/android/Nokia”，但是不允许“/2/1/android//N70”
         *3) string全为小写
         * </pre>
         */
        public Builder setDevice(
            de.cache.DeliveryMessage.CacheFile.Builder builderForValue) {
          if (deviceBuilder_ == null) {
            device_ = builderForValue.build();
            onChanged();
          } else {
            deviceBuilder_.setMessage(builderForValue.build());
          }
          bitField1_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .de.cache.CacheFile device = 33;</code>
         *
         * <pre>
         *target下的文件名(d.$sid)。
         *文件内容为：/AdNetworkId/{NativeCode，不同记录间支持and和or的关系。以","或"()"分隔，其中“，”表示or关系，“（）”表示and关系。
         *Type取值：=0 DESKTOP；=1 HIGHEND_PHONE；=2 TABLET
         *Platform取值: android, iphone, palm
         *Make: string,Device make (如： Nokia, Samsung).
         *Model: string, Device model(如：N70, Galaxy.)
         *cache生成规则：
         *1）Type为DESKTOP时， Platform/Make/Model 永远为空，如：“/2/0”
         *2) 在大类不做定向时，不允许小类为空，且最后不加”/”。如“/2/1/android/Nokia”，但是不允许“/2/1/android//N70”
         *3) string全为小写
         * </pre>
         */
        public Builder mergeDevice(de.cache.DeliveryMessage.CacheFile value) {
          if (deviceBuilder_ == null) {
            if (((bitField1_ & 0x00000001) == 0x00000001) &&
                device_ != de.cache.DeliveryMessage.CacheFile.getDefaultInstance()) {
              device_ =
                de.cache.DeliveryMessage.CacheFile.newBuilder(device_).mergeFrom(value).buildPartial();
            } else {
              device_ = value;
            }
            onChanged();
          } else {
            deviceBuilder_.mergeFrom(value);
          }
          bitField1_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .de.cache.CacheFile device = 33;</code>
         *
         * <pre>
         *target下的文件名(d.$sid)。
         *文件内容为：/AdNetworkId/{NativeCode，不同记录间支持and和or的关系。以","或"()"分隔，其中“，”表示or关系，“（）”表示and关系。
         *Type取值：=0 DESKTOP；=1 HIGHEND_PHONE；=2 TABLET
         *Platform取值: android, iphone, palm
         *Make: string,Device make (如： Nokia, Samsung).
         *Model: string, Device model(如：N70, Galaxy.)
         *cache生成规则：
         *1）Type为DESKTOP时， Platform/Make/Model 永远为空，如：“/2/0”
         *2) 在大类不做定向时，不允许小类为空，且最后不加”/”。如“/2/1/android/Nokia”，但是不允许“/2/1/android//N70”
         *3) string全为小写
         * </pre>
         */
        public Builder clearDevice() {
          if (deviceBuilder_ == null) {
            device_ = de.cache.DeliveryMessage.CacheFile.getDefaultInstance();
            onChanged();
          } else {
            deviceBuilder_.clear();
          }
          bitField1_ = (bitField1_ & ~0x00000001);
          return this;
        }
        /**
         * <code>optional .de.cache.CacheFile device = 33;</code>
         *
         * <pre>
         *target下的文件名(d.$sid)。
         *文件内容为：/AdNetworkId/{NativeCode，不同记录间支持and和or的关系。以","或"()"分隔，其中“，”表示or关系，“（）”表示and关系。
         *Type取值：=0 DESKTOP；=1 HIGHEND_PHONE；=2 TABLET
         *Platform取值: android, iphone, palm
         *Make: string,Device make (如： Nokia, Samsung).
         *Model: string, Device model(如：N70, Galaxy.)
         *cache生成规则：
         *1）Type为DESKTOP时， Platform/Make/Model 永远为空，如：“/2/0”
         *2) 在大类不做定向时，不允许小类为空，且最后不加”/”。如“/2/1/android/Nokia”，但是不允许“/2/1/android//N70”
         *3) string全为小写
         * </pre>
         */
        public de.cache.DeliveryMessage.CacheFile.Builder getDeviceBuilder() {
          bitField1_ |= 0x00000001;
          onChanged();
          return getDeviceFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .de.cache.CacheFile device = 33;</code>
         *
         * <pre>
         *target下的文件名(d.$sid)。
         *文件内容为：/AdNetworkId/{NativeCode，不同记录间支持and和or的关系。以","或"()"分隔，其中“，”表示or关系，“（）”表示and关系。
         *Type取值：=0 DESKTOP；=1 HIGHEND_PHONE；=2 TABLET
         *Platform取值: android, iphone, palm
         *Make: string,Device make (如： Nokia, Samsung).
         *Model: string, Device model(如：N70, Galaxy.)
         *cache生成规则：
         *1）Type为DESKTOP时， Platform/Make/Model 永远为空，如：“/2/0”
         *2) 在大类不做定向时，不允许小类为空，且最后不加”/”。如“/2/1/android/Nokia”，但是不允许“/2/1/android//N70”
         *3) string全为小写
         * </pre>
         */
        public de.cache.DeliveryMessage.CacheFileOrBuilder getDeviceOrBuilder() {
          if (deviceBuilder_ != null) {
            return deviceBuilder_.getMessageOrBuilder();
          } else {
            return device_;
          }
        }
        /**
         * <code>optional .de.cache.CacheFile device = 33;</code>
         *
         * <pre>
         *target下的文件名(d.$sid)。
         *文件内容为：/AdNetworkId/{NativeCode，不同记录间支持and和or的关系。以","或"()"分隔，其中“，”表示or关系，“（）”表示and关系。
         *Type取值：=0 DESKTOP；=1 HIGHEND_PHONE；=2 TABLET
         *Platform取值: android, iphone, palm
         *Make: string,Device make (如： Nokia, Samsung).
         *Model: string, Device model(如：N70, Galaxy.)
         *cache生成规则：
         *1）Type为DESKTOP时， Platform/Make/Model 永远为空，如：“/2/0”
         *2) 在大类不做定向时，不允许小类为空，且最后不加”/”。如“/2/1/android/Nokia”，但是不允许“/2/1/android//N70”
         *3) string全为小写
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder> 
            getDeviceFieldBuilder() {
          if (deviceBuilder_ == null) {
            deviceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder>(
                    getDevice(),
                    getParentForChildren(),
                    isClean());
            device_ = null;
          }
          return deviceBuilder_;
        }

        private de.cache.DeliveryMessage.CacheFile appData_ = de.cache.DeliveryMessage.CacheFile.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder> appDataBuilder_;
        /**
         * <code>optional .de.cache.CacheFile appData = 34;</code>
         *
         * <pre>
         *ref下的文件名(ai.$sid)，文件内容：0/1(白黑) &#92;t exchange_id &#92;t app_id
         * </pre>
         */
        public boolean hasAppData() {
          return ((bitField1_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .de.cache.CacheFile appData = 34;</code>
         *
         * <pre>
         *ref下的文件名(ai.$sid)，文件内容：0/1(白黑) &#92;t exchange_id &#92;t app_id
         * </pre>
         */
        public de.cache.DeliveryMessage.CacheFile getAppData() {
          if (appDataBuilder_ == null) {
            return appData_;
          } else {
            return appDataBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .de.cache.CacheFile appData = 34;</code>
         *
         * <pre>
         *ref下的文件名(ai.$sid)，文件内容：0/1(白黑) &#92;t exchange_id &#92;t app_id
         * </pre>
         */
        public Builder setAppData(de.cache.DeliveryMessage.CacheFile value) {
          if (appDataBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            appData_ = value;
            onChanged();
          } else {
            appDataBuilder_.setMessage(value);
          }
          bitField1_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .de.cache.CacheFile appData = 34;</code>
         *
         * <pre>
         *ref下的文件名(ai.$sid)，文件内容：0/1(白黑) &#92;t exchange_id &#92;t app_id
         * </pre>
         */
        public Builder setAppData(
            de.cache.DeliveryMessage.CacheFile.Builder builderForValue) {
          if (appDataBuilder_ == null) {
            appData_ = builderForValue.build();
            onChanged();
          } else {
            appDataBuilder_.setMessage(builderForValue.build());
          }
          bitField1_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .de.cache.CacheFile appData = 34;</code>
         *
         * <pre>
         *ref下的文件名(ai.$sid)，文件内容：0/1(白黑) &#92;t exchange_id &#92;t app_id
         * </pre>
         */
        public Builder mergeAppData(de.cache.DeliveryMessage.CacheFile value) {
          if (appDataBuilder_ == null) {
            if (((bitField1_ & 0x00000002) == 0x00000002) &&
                appData_ != de.cache.DeliveryMessage.CacheFile.getDefaultInstance()) {
              appData_ =
                de.cache.DeliveryMessage.CacheFile.newBuilder(appData_).mergeFrom(value).buildPartial();
            } else {
              appData_ = value;
            }
            onChanged();
          } else {
            appDataBuilder_.mergeFrom(value);
          }
          bitField1_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .de.cache.CacheFile appData = 34;</code>
         *
         * <pre>
         *ref下的文件名(ai.$sid)，文件内容：0/1(白黑) &#92;t exchange_id &#92;t app_id
         * </pre>
         */
        public Builder clearAppData() {
          if (appDataBuilder_ == null) {
            appData_ = de.cache.DeliveryMessage.CacheFile.getDefaultInstance();
            onChanged();
          } else {
            appDataBuilder_.clear();
          }
          bitField1_ = (bitField1_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .de.cache.CacheFile appData = 34;</code>
         *
         * <pre>
         *ref下的文件名(ai.$sid)，文件内容：0/1(白黑) &#92;t exchange_id &#92;t app_id
         * </pre>
         */
        public de.cache.DeliveryMessage.CacheFile.Builder getAppDataBuilder() {
          bitField1_ |= 0x00000002;
          onChanged();
          return getAppDataFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .de.cache.CacheFile appData = 34;</code>
         *
         * <pre>
         *ref下的文件名(ai.$sid)，文件内容：0/1(白黑) &#92;t exchange_id &#92;t app_id
         * </pre>
         */
        public de.cache.DeliveryMessage.CacheFileOrBuilder getAppDataOrBuilder() {
          if (appDataBuilder_ != null) {
            return appDataBuilder_.getMessageOrBuilder();
          } else {
            return appData_;
          }
        }
        /**
         * <code>optional .de.cache.CacheFile appData = 34;</code>
         *
         * <pre>
         *ref下的文件名(ai.$sid)，文件内容：0/1(白黑) &#92;t exchange_id &#92;t app_id
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder> 
            getAppDataFieldBuilder() {
          if (appDataBuilder_ == null) {
            appDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder>(
                    getAppData(),
                    getParentForChildren(),
                    isClean());
            appData_ = null;
          }
          return appDataBuilder_;
        }

        private de.cache.DeliveryMessage.CacheFile positioningOrder_ = de.cache.DeliveryMessage.CacheFile.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder> positioningOrderBuilder_;
        /**
         * <code>optional .de.cache.CacheFile positioningOrder = 35;</code>
         *
         * <pre>
         * target下的文件名， 文件内容为/AdNetwork/0(非视频), /AdNetwork/1/前贴 ，支持与”()” 或”,”
         * </pre>
         */
        public boolean hasPositioningOrder() {
          return ((bitField1_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .de.cache.CacheFile positioningOrder = 35;</code>
         *
         * <pre>
         * target下的文件名， 文件内容为/AdNetwork/0(非视频), /AdNetwork/1/前贴 ，支持与”()” 或”,”
         * </pre>
         */
        public de.cache.DeliveryMessage.CacheFile getPositioningOrder() {
          if (positioningOrderBuilder_ == null) {
            return positioningOrder_;
          } else {
            return positioningOrderBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .de.cache.CacheFile positioningOrder = 35;</code>
         *
         * <pre>
         * target下的文件名， 文件内容为/AdNetwork/0(非视频), /AdNetwork/1/前贴 ，支持与”()” 或”,”
         * </pre>
         */
        public Builder setPositioningOrder(de.cache.DeliveryMessage.CacheFile value) {
          if (positioningOrderBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            positioningOrder_ = value;
            onChanged();
          } else {
            positioningOrderBuilder_.setMessage(value);
          }
          bitField1_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .de.cache.CacheFile positioningOrder = 35;</code>
         *
         * <pre>
         * target下的文件名， 文件内容为/AdNetwork/0(非视频), /AdNetwork/1/前贴 ，支持与”()” 或”,”
         * </pre>
         */
        public Builder setPositioningOrder(
            de.cache.DeliveryMessage.CacheFile.Builder builderForValue) {
          if (positioningOrderBuilder_ == null) {
            positioningOrder_ = builderForValue.build();
            onChanged();
          } else {
            positioningOrderBuilder_.setMessage(builderForValue.build());
          }
          bitField1_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .de.cache.CacheFile positioningOrder = 35;</code>
         *
         * <pre>
         * target下的文件名， 文件内容为/AdNetwork/0(非视频), /AdNetwork/1/前贴 ，支持与”()” 或”,”
         * </pre>
         */
        public Builder mergePositioningOrder(de.cache.DeliveryMessage.CacheFile value) {
          if (positioningOrderBuilder_ == null) {
            if (((bitField1_ & 0x00000004) == 0x00000004) &&
                positioningOrder_ != de.cache.DeliveryMessage.CacheFile.getDefaultInstance()) {
              positioningOrder_ =
                de.cache.DeliveryMessage.CacheFile.newBuilder(positioningOrder_).mergeFrom(value).buildPartial();
            } else {
              positioningOrder_ = value;
            }
            onChanged();
          } else {
            positioningOrderBuilder_.mergeFrom(value);
          }
          bitField1_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .de.cache.CacheFile positioningOrder = 35;</code>
         *
         * <pre>
         * target下的文件名， 文件内容为/AdNetwork/0(非视频), /AdNetwork/1/前贴 ，支持与”()” 或”,”
         * </pre>
         */
        public Builder clearPositioningOrder() {
          if (positioningOrderBuilder_ == null) {
            positioningOrder_ = de.cache.DeliveryMessage.CacheFile.getDefaultInstance();
            onChanged();
          } else {
            positioningOrderBuilder_.clear();
          }
          bitField1_ = (bitField1_ & ~0x00000004);
          return this;
        }
        /**
         * <code>optional .de.cache.CacheFile positioningOrder = 35;</code>
         *
         * <pre>
         * target下的文件名， 文件内容为/AdNetwork/0(非视频), /AdNetwork/1/前贴 ，支持与”()” 或”,”
         * </pre>
         */
        public de.cache.DeliveryMessage.CacheFile.Builder getPositioningOrderBuilder() {
          bitField1_ |= 0x00000004;
          onChanged();
          return getPositioningOrderFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .de.cache.CacheFile positioningOrder = 35;</code>
         *
         * <pre>
         * target下的文件名， 文件内容为/AdNetwork/0(非视频), /AdNetwork/1/前贴 ，支持与”()” 或”,”
         * </pre>
         */
        public de.cache.DeliveryMessage.CacheFileOrBuilder getPositioningOrderOrBuilder() {
          if (positioningOrderBuilder_ != null) {
            return positioningOrderBuilder_.getMessageOrBuilder();
          } else {
            return positioningOrder_;
          }
        }
        /**
         * <code>optional .de.cache.CacheFile positioningOrder = 35;</code>
         *
         * <pre>
         * target下的文件名， 文件内容为/AdNetwork/0(非视频), /AdNetwork/1/前贴 ，支持与”()” 或”,”
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder> 
            getPositioningOrderFieldBuilder() {
          if (positioningOrderBuilder_ == null) {
            positioningOrderBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder>(
                    getPositioningOrder(),
                    getParentForChildren(),
                    isClean());
            positioningOrder_ = null;
          }
          return positioningOrderBuilder_;
        }

        private java.util.List<de.cache.DeliveryMessage.TrafficSource> trafficSource_ =
          java.util.Collections.emptyList();
        private void ensureTrafficSourceIsMutable() {
          if (!((bitField1_ & 0x00000008) == 0x00000008)) {
            trafficSource_ = new java.util.ArrayList<de.cache.DeliveryMessage.TrafficSource>(trafficSource_);
            bitField1_ |= 0x00000008;
          }
        }
        /**
         * <code>repeated .de.cache.TrafficSource trafficSource = 36;</code>
         *
         * <pre>
         *投放的的流量来源定向  add by nick 2014-05-23
         * </pre>
         */
        public java.util.List<de.cache.DeliveryMessage.TrafficSource> getTrafficSourceList() {
          return java.util.Collections.unmodifiableList(trafficSource_);
        }
        /**
         * <code>repeated .de.cache.TrafficSource trafficSource = 36;</code>
         *
         * <pre>
         *投放的的流量来源定向  add by nick 2014-05-23
         * </pre>
         */
        public int getTrafficSourceCount() {
          return trafficSource_.size();
        }
        /**
         * <code>repeated .de.cache.TrafficSource trafficSource = 36;</code>
         *
         * <pre>
         *投放的的流量来源定向  add by nick 2014-05-23
         * </pre>
         */
        public de.cache.DeliveryMessage.TrafficSource getTrafficSource(int index) {
          return trafficSource_.get(index);
        }
        /**
         * <code>repeated .de.cache.TrafficSource trafficSource = 36;</code>
         *
         * <pre>
         *投放的的流量来源定向  add by nick 2014-05-23
         * </pre>
         */
        public Builder setTrafficSource(
            int index, de.cache.DeliveryMessage.TrafficSource value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTrafficSourceIsMutable();
          trafficSource_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated .de.cache.TrafficSource trafficSource = 36;</code>
         *
         * <pre>
         *投放的的流量来源定向  add by nick 2014-05-23
         * </pre>
         */
        public Builder addTrafficSource(de.cache.DeliveryMessage.TrafficSource value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTrafficSourceIsMutable();
          trafficSource_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated .de.cache.TrafficSource trafficSource = 36;</code>
         *
         * <pre>
         *投放的的流量来源定向  add by nick 2014-05-23
         * </pre>
         */
        public Builder addAllTrafficSource(
            java.lang.Iterable<? extends de.cache.DeliveryMessage.TrafficSource> values) {
          ensureTrafficSourceIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, trafficSource_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated .de.cache.TrafficSource trafficSource = 36;</code>
         *
         * <pre>
         *投放的的流量来源定向  add by nick 2014-05-23
         * </pre>
         */
        public Builder clearTrafficSource() {
          trafficSource_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000008);
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList tagIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureTagIdsIsMutable() {
          if (!((bitField1_ & 0x00000010) == 0x00000010)) {
            tagIds_ = new com.google.protobuf.LazyStringArrayList(tagIds_);
            bitField1_ |= 0x00000010;
           }
        }
        /**
         * <code>repeated string tagIds = 37;</code>
         *
         * <pre>
         * 广告位ID定向内容
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getTagIdsList() {
          return tagIds_.getUnmodifiableView();
        }
        /**
         * <code>repeated string tagIds = 37;</code>
         *
         * <pre>
         * 广告位ID定向内容
         * </pre>
         */
        public int getTagIdsCount() {
          return tagIds_.size();
        }
        /**
         * <code>repeated string tagIds = 37;</code>
         *
         * <pre>
         * 广告位ID定向内容
         * </pre>
         */
        public java.lang.String getTagIds(int index) {
          return tagIds_.get(index);
        }
        /**
         * <code>repeated string tagIds = 37;</code>
         *
         * <pre>
         * 广告位ID定向内容
         * </pre>
         */
        public com.google.protobuf.ByteString
            getTagIdsBytes(int index) {
          return tagIds_.getByteString(index);
        }
        /**
         * <code>repeated string tagIds = 37;</code>
         *
         * <pre>
         * 广告位ID定向内容
         * </pre>
         */
        public Builder setTagIds(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureTagIdsIsMutable();
          tagIds_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string tagIds = 37;</code>
         *
         * <pre>
         * 广告位ID定向内容
         * </pre>
         */
        public Builder addTagIds(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureTagIdsIsMutable();
          tagIds_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string tagIds = 37;</code>
         *
         * <pre>
         * 广告位ID定向内容
         * </pre>
         */
        public Builder addAllTagIds(
            java.lang.Iterable<java.lang.String> values) {
          ensureTagIdsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tagIds_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string tagIds = 37;</code>
         *
         * <pre>
         * 广告位ID定向内容
         * </pre>
         */
        public Builder clearTagIds() {
          tagIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField1_ = (bitField1_ & ~0x00000010);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string tagIds = 37;</code>
         *
         * <pre>
         * 广告位ID定向内容
         * </pre>
         */
        public Builder addTagIdsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureTagIdsIsMutable();
          tagIds_.add(value);
          onChanged();
          return this;
        }

        private java.lang.Object pMPDealId_ = "";
        /**
         * <code>optional string PMPDealId = 38;</code>
         *
         * <pre>
         *PMP 定向内容
         * </pre>
         */
        public boolean hasPMPDealId() {
          return ((bitField1_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional string PMPDealId = 38;</code>
         *
         * <pre>
         *PMP 定向内容
         * </pre>
         */
        public java.lang.String getPMPDealId() {
          java.lang.Object ref = pMPDealId_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              pMPDealId_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string PMPDealId = 38;</code>
         *
         * <pre>
         *PMP 定向内容
         * </pre>
         */
        public com.google.protobuf.ByteString
            getPMPDealIdBytes() {
          java.lang.Object ref = pMPDealId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            pMPDealId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string PMPDealId = 38;</code>
         *
         * <pre>
         *PMP 定向内容
         * </pre>
         */
        public Builder setPMPDealId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000020;
          pMPDealId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string PMPDealId = 38;</code>
         *
         * <pre>
         *PMP 定向内容
         * </pre>
         */
        public Builder clearPMPDealId() {
          bitField1_ = (bitField1_ & ~0x00000020);
          pMPDealId_ = getDefaultInstance().getPMPDealId();
          onChanged();
          return this;
        }
        /**
         * <code>optional string PMPDealId = 38;</code>
         *
         * <pre>
         *PMP 定向内容
         * </pre>
         */
        public Builder setPMPDealIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000020;
          pMPDealId_ = value;
          onChanged();
          return this;
        }

        private java.util.List<de.cache.DeliveryMessage.Solution.SolutionTarget.Carrier> carrier_ =
          java.util.Collections.emptyList();
        private void ensureCarrierIsMutable() {
          if (!((bitField1_ & 0x00000040) == 0x00000040)) {
            carrier_ = new java.util.ArrayList<de.cache.DeliveryMessage.Solution.SolutionTarget.Carrier>(carrier_);
            bitField1_ |= 0x00000040;
          }
        }
        /**
         * <code>repeated .de.cache.Solution.SolutionTarget.Carrier carrier = 39;</code>
         *
         * <pre>
         *运营商,如中国移动、中国联通
         * </pre>
         */
        public java.util.List<de.cache.DeliveryMessage.Solution.SolutionTarget.Carrier> getCarrierList() {
          return java.util.Collections.unmodifiableList(carrier_);
        }
        /**
         * <code>repeated .de.cache.Solution.SolutionTarget.Carrier carrier = 39;</code>
         *
         * <pre>
         *运营商,如中国移动、中国联通
         * </pre>
         */
        public int getCarrierCount() {
          return carrier_.size();
        }
        /**
         * <code>repeated .de.cache.Solution.SolutionTarget.Carrier carrier = 39;</code>
         *
         * <pre>
         *运营商,如中国移动、中国联通
         * </pre>
         */
        public de.cache.DeliveryMessage.Solution.SolutionTarget.Carrier getCarrier(int index) {
          return carrier_.get(index);
        }
        /**
         * <code>repeated .de.cache.Solution.SolutionTarget.Carrier carrier = 39;</code>
         *
         * <pre>
         *运营商,如中国移动、中国联通
         * </pre>
         */
        public Builder setCarrier(
            int index, de.cache.DeliveryMessage.Solution.SolutionTarget.Carrier value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarrierIsMutable();
          carrier_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated .de.cache.Solution.SolutionTarget.Carrier carrier = 39;</code>
         *
         * <pre>
         *运营商,如中国移动、中国联通
         * </pre>
         */
        public Builder addCarrier(de.cache.DeliveryMessage.Solution.SolutionTarget.Carrier value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarrierIsMutable();
          carrier_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated .de.cache.Solution.SolutionTarget.Carrier carrier = 39;</code>
         *
         * <pre>
         *运营商,如中国移动、中国联通
         * </pre>
         */
        public Builder addAllCarrier(
            java.lang.Iterable<? extends de.cache.DeliveryMessage.Solution.SolutionTarget.Carrier> values) {
          ensureCarrierIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, carrier_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated .de.cache.Solution.SolutionTarget.Carrier carrier = 39;</code>
         *
         * <pre>
         *运营商,如中国移动、中国联通
         * </pre>
         */
        public Builder clearCarrier() {
          carrier_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000040);
          onChanged();
          return this;
        }

        private java.util.List<de.cache.DeliveryMessage.Solution.SolutionTarget.ConnectionType> connectionType_ =
          java.util.Collections.emptyList();
        private void ensureConnectionTypeIsMutable() {
          if (!((bitField1_ & 0x00000080) == 0x00000080)) {
            connectionType_ = new java.util.ArrayList<de.cache.DeliveryMessage.Solution.SolutionTarget.ConnectionType>(connectionType_);
            bitField1_ |= 0x00000080;
          }
        }
        /**
         * <code>repeated .de.cache.Solution.SolutionTarget.ConnectionType connection_type = 40;</code>
         *
         * <pre>
         *设备联网方式,如 Wifi、3g
         * </pre>
         */
        public java.util.List<de.cache.DeliveryMessage.Solution.SolutionTarget.ConnectionType> getConnectionTypeList() {
          return java.util.Collections.unmodifiableList(connectionType_);
        }
        /**
         * <code>repeated .de.cache.Solution.SolutionTarget.ConnectionType connection_type = 40;</code>
         *
         * <pre>
         *设备联网方式,如 Wifi、3g
         * </pre>
         */
        public int getConnectionTypeCount() {
          return connectionType_.size();
        }
        /**
         * <code>repeated .de.cache.Solution.SolutionTarget.ConnectionType connection_type = 40;</code>
         *
         * <pre>
         *设备联网方式,如 Wifi、3g
         * </pre>
         */
        public de.cache.DeliveryMessage.Solution.SolutionTarget.ConnectionType getConnectionType(int index) {
          return connectionType_.get(index);
        }
        /**
         * <code>repeated .de.cache.Solution.SolutionTarget.ConnectionType connection_type = 40;</code>
         *
         * <pre>
         *设备联网方式,如 Wifi、3g
         * </pre>
         */
        public Builder setConnectionType(
            int index, de.cache.DeliveryMessage.Solution.SolutionTarget.ConnectionType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConnectionTypeIsMutable();
          connectionType_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated .de.cache.Solution.SolutionTarget.ConnectionType connection_type = 40;</code>
         *
         * <pre>
         *设备联网方式,如 Wifi、3g
         * </pre>
         */
        public Builder addConnectionType(de.cache.DeliveryMessage.Solution.SolutionTarget.ConnectionType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConnectionTypeIsMutable();
          connectionType_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated .de.cache.Solution.SolutionTarget.ConnectionType connection_type = 40;</code>
         *
         * <pre>
         *设备联网方式,如 Wifi、3g
         * </pre>
         */
        public Builder addAllConnectionType(
            java.lang.Iterable<? extends de.cache.DeliveryMessage.Solution.SolutionTarget.ConnectionType> values) {
          ensureConnectionTypeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, connectionType_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated .de.cache.Solution.SolutionTarget.ConnectionType connection_type = 40;</code>
         *
         * <pre>
         *设备联网方式,如 Wifi、3g
         * </pre>
         */
        public Builder clearConnectionType() {
          connectionType_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000080);
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent demographicTarget_ = de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent, de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent.Builder, de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContentOrBuilder> demographicTargetBuilder_;
        /**
         * <code>optional .de.cache.Solution.SolutionTarget.demoTargetContent demographicTarget = 41;</code>
         *
         * <pre>
         *人群属性定向内容
         * </pre>
         */
        public boolean hasDemographicTarget() {
          return ((bitField1_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional .de.cache.Solution.SolutionTarget.demoTargetContent demographicTarget = 41;</code>
         *
         * <pre>
         *人群属性定向内容
         * </pre>
         */
        public de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent getDemographicTarget() {
          if (demographicTargetBuilder_ == null) {
            return demographicTarget_;
          } else {
            return demographicTargetBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .de.cache.Solution.SolutionTarget.demoTargetContent demographicTarget = 41;</code>
         *
         * <pre>
         *人群属性定向内容
         * </pre>
         */
        public Builder setDemographicTarget(de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent value) {
          if (demographicTargetBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            demographicTarget_ = value;
            onChanged();
          } else {
            demographicTargetBuilder_.setMessage(value);
          }
          bitField1_ |= 0x00000100;
          return this;
        }
        /**
         * <code>optional .de.cache.Solution.SolutionTarget.demoTargetContent demographicTarget = 41;</code>
         *
         * <pre>
         *人群属性定向内容
         * </pre>
         */
        public Builder setDemographicTarget(
            de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent.Builder builderForValue) {
          if (demographicTargetBuilder_ == null) {
            demographicTarget_ = builderForValue.build();
            onChanged();
          } else {
            demographicTargetBuilder_.setMessage(builderForValue.build());
          }
          bitField1_ |= 0x00000100;
          return this;
        }
        /**
         * <code>optional .de.cache.Solution.SolutionTarget.demoTargetContent demographicTarget = 41;</code>
         *
         * <pre>
         *人群属性定向内容
         * </pre>
         */
        public Builder mergeDemographicTarget(de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent value) {
          if (demographicTargetBuilder_ == null) {
            if (((bitField1_ & 0x00000100) == 0x00000100) &&
                demographicTarget_ != de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent.getDefaultInstance()) {
              demographicTarget_ =
                de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent.newBuilder(demographicTarget_).mergeFrom(value).buildPartial();
            } else {
              demographicTarget_ = value;
            }
            onChanged();
          } else {
            demographicTargetBuilder_.mergeFrom(value);
          }
          bitField1_ |= 0x00000100;
          return this;
        }
        /**
         * <code>optional .de.cache.Solution.SolutionTarget.demoTargetContent demographicTarget = 41;</code>
         *
         * <pre>
         *人群属性定向内容
         * </pre>
         */
        public Builder clearDemographicTarget() {
          if (demographicTargetBuilder_ == null) {
            demographicTarget_ = de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent.getDefaultInstance();
            onChanged();
          } else {
            demographicTargetBuilder_.clear();
          }
          bitField1_ = (bitField1_ & ~0x00000100);
          return this;
        }
        /**
         * <code>optional .de.cache.Solution.SolutionTarget.demoTargetContent demographicTarget = 41;</code>
         *
         * <pre>
         *人群属性定向内容
         * </pre>
         */
        public de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent.Builder getDemographicTargetBuilder() {
          bitField1_ |= 0x00000100;
          onChanged();
          return getDemographicTargetFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .de.cache.Solution.SolutionTarget.demoTargetContent demographicTarget = 41;</code>
         *
         * <pre>
         *人群属性定向内容
         * </pre>
         */
        public de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContentOrBuilder getDemographicTargetOrBuilder() {
          if (demographicTargetBuilder_ != null) {
            return demographicTargetBuilder_.getMessageOrBuilder();
          } else {
            return demographicTarget_;
          }
        }
        /**
         * <code>optional .de.cache.Solution.SolutionTarget.demoTargetContent demographicTarget = 41;</code>
         *
         * <pre>
         *人群属性定向内容
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent, de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent.Builder, de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContentOrBuilder> 
            getDemographicTargetFieldBuilder() {
          if (demographicTargetBuilder_ == null) {
            demographicTargetBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent, de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContent.Builder, de.cache.DeliveryMessage.Solution.SolutionTarget.demoTargetContentOrBuilder>(
                    getDemographicTarget(),
                    getParentForChildren(),
                    isClean());
            demographicTarget_ = null;
          }
          return demographicTargetBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:de.cache.Solution.SolutionTarget)
      }

      static {
        defaultInstance = new SolutionTarget(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:de.cache.Solution.SolutionTarget)
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *投放id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *投放id
     * </pre>
     */
    public long getId() {
      return id_;
    }

    public static final int CMD_FIELD_NUMBER = 2;
    private de.cache.DeliveryMessage.Command cmd_;
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    public boolean hasCmd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    public de.cache.DeliveryMessage.Command getCmd() {
      return cmd_;
    }

    public static final int ORDERID_FIELD_NUMBER = 3;
    private long orderId_;
    /**
     * <code>optional int64 orderId = 3;</code>
     *
     * <pre>
     *订单id
     * </pre>
     */
    public boolean hasOrderId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 orderId = 3;</code>
     *
     * <pre>
     *订单id
     * </pre>
     */
    public long getOrderId() {
      return orderId_;
    }

    public static final int PRIORITY_FIELD_NUMBER = 4;
    private int priority_;
    /**
     * <code>optional int32 priority = 4 [default = 15];</code>
     *
     * <pre>
     *投放的优先级别（1-N，1最大，N最小）
     * </pre>
     */
    public boolean hasPriority() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 priority = 4 [default = 15];</code>
     *
     * <pre>
     *投放的优先级别（1-N，1最大，N最小）
     * </pre>
     */
    public int getPriority() {
      return priority_;
    }

    public static final int STARTTIMESTAMP_FIELD_NUMBER = 5;
    private long startTimestamp_;
    /**
     * <code>optional int64 startTimestamp = 5;</code>
     *
     * <pre>
     *投放结束日期
     * </pre>
     */
    public boolean hasStartTimestamp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 startTimestamp = 5;</code>
     *
     * <pre>
     *投放结束日期
     * </pre>
     */
    public long getStartTimestamp() {
      return startTimestamp_;
    }

    public static final int ENDTIMESTAMP_FIELD_NUMBER = 6;
    private long endTimestamp_;
    /**
     * <code>optional int64 endTimestamp = 6;</code>
     *
     * <pre>
     *投放结束时间
     * </pre>
     */
    public boolean hasEndTimestamp() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 endTimestamp = 6;</code>
     *
     * <pre>
     *投放结束时间
     * </pre>
     */
    public long getEndTimestamp() {
      return endTimestamp_;
    }

    public static final int TIMEPREFERENCE_FIELD_NUMBER = 7;
    private de.cache.DeliveryMessage.GlobalSwitch timePreference_;
    /**
     * <code>optional .de.cache.GlobalSwitch timePreference = 7;</code>
     *
     * <pre>
     *投放数量控制方式,=0 按数量投,过时补投至投放完全,=1 按时间投，过时未投放完不再补投
     * </pre>
     */
    public boolean hasTimePreference() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .de.cache.GlobalSwitch timePreference = 7;</code>
     *
     * <pre>
     *投放数量控制方式,=0 按数量投,过时补投至投放完全,=1 按时间投，过时未投放完不再补投
     * </pre>
     */
    public de.cache.DeliveryMessage.GlobalSwitch getTimePreference() {
      return timePreference_;
    }

    public static final int SPEEDUPCONTROL_FIELD_NUMBER = 8;
    private de.cache.DeliveryMessage.GlobalSwitch speedupControl_;
    /**
     * <code>optional .de.cache.GlobalSwitch speedupControl = 8 [default = OFF];</code>
     *
     * <pre>
     *speedControl投放速度控制，=0,按广告位(网站)流量分配投放，也就是将所有投放量按广告位(网站)流量分配到整个投放期，如果没有流量数据，就按照均匀分配。
     *=1,尽快投放，不做投放流量控制，尽快把广告投完
     * </pre>
     */
    public boolean hasSpeedupControl() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .de.cache.GlobalSwitch speedupControl = 8 [default = OFF];</code>
     *
     * <pre>
     *speedControl投放速度控制，=0,按广告位(网站)流量分配投放，也就是将所有投放量按广告位(网站)流量分配到整个投放期，如果没有流量数据，就按照均匀分配。
     *=1,尽快投放，不做投放流量控制，尽快把广告投完
     * </pre>
     */
    public de.cache.DeliveryMessage.GlobalSwitch getSpeedupControl() {
      return speedupControl_;
    }

    public static final int DELIVERYTYPE_FIELD_NUMBER = 9;
    private de.cache.DeliveryMessage.Solution.DeliveryType deliveryType_;
    /**
     * <code>optional .de.cache.Solution.DeliveryType deliveryType = 9;</code>
     */
    public boolean hasDeliveryType() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .de.cache.Solution.DeliveryType deliveryType = 9;</code>
     */
    public de.cache.DeliveryMessage.Solution.DeliveryType getDeliveryType() {
      return deliveryType_;
    }

    public static final int METHOD_FIELD_NUMBER = 10;
    private de.cache.DeliveryMessage.DeliveryMethod method_;
    /**
     * <code>optional .de.cache.DeliveryMethod method = 10;</code>
     *
     * <pre>
     *-----
     *count.impression, 投放级的总显示数量上限(包括CPC/CPM/CPD/CPMV/CPDV)
     * CPM时: impression必须&gt;0, 否则投放将不投放
     * 非CPM时: &gt;0,该值为显示上限; =0 or unassigned,无显示上限
     *count.percentage, 投放百分比
     *  目前只有CPD和CPC以及CPDV才有百分比控制概念。
     *  CPD和CPDV时:必须&gt;0且&lt;=100; =0 or unassigned将不投放
     *  如果该投放接受订单级的百分比控制，那其：
     *       真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
     *count.click, 点击数量,由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
     *  CPC/CPCV时,该值必须&gt;0; 否则投放将关闭
     *  其他类别时(CPM/CPD/CPMV/CPDV)为广告点击总量上限; =0 or unassigned,无点击上限
     *count.budget, 预算金额总上限(单位:百万分之一元)
     *  竞价或者刊例价投放时该值必须&gt;0; 否则投放将关闭
     *  其他类别是是为金额控制上限,=0 or unassigned,无金额上限
     * </pre>
     */
    public boolean hasMethod() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .de.cache.DeliveryMethod method = 10;</code>
     *
     * <pre>
     *-----
     *count.impression, 投放级的总显示数量上限(包括CPC/CPM/CPD/CPMV/CPDV)
     * CPM时: impression必须&gt;0, 否则投放将不投放
     * 非CPM时: &gt;0,该值为显示上限; =0 or unassigned,无显示上限
     *count.percentage, 投放百分比
     *  目前只有CPD和CPC以及CPDV才有百分比控制概念。
     *  CPD和CPDV时:必须&gt;0且&lt;=100; =0 or unassigned将不投放
     *  如果该投放接受订单级的百分比控制，那其：
     *       真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
     *count.click, 点击数量,由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
     *  CPC/CPCV时,该值必须&gt;0; 否则投放将关闭
     *  其他类别时(CPM/CPD/CPMV/CPDV)为广告点击总量上限; =0 or unassigned,无点击上限
     *count.budget, 预算金额总上限(单位:百万分之一元)
     *  竞价或者刊例价投放时该值必须&gt;0; 否则投放将关闭
     *  其他类别是是为金额控制上限,=0 or unassigned,无金额上限
     * </pre>
     */
    public de.cache.DeliveryMessage.DeliveryMethod getMethod() {
      return method_;
    }
    /**
     * <code>optional .de.cache.DeliveryMethod method = 10;</code>
     *
     * <pre>
     *-----
     *count.impression, 投放级的总显示数量上限(包括CPC/CPM/CPD/CPMV/CPDV)
     * CPM时: impression必须&gt;0, 否则投放将不投放
     * 非CPM时: &gt;0,该值为显示上限; =0 or unassigned,无显示上限
     *count.percentage, 投放百分比
     *  目前只有CPD和CPC以及CPDV才有百分比控制概念。
     *  CPD和CPDV时:必须&gt;0且&lt;=100; =0 or unassigned将不投放
     *  如果该投放接受订单级的百分比控制，那其：
     *       真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
     *count.click, 点击数量,由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
     *  CPC/CPCV时,该值必须&gt;0; 否则投放将关闭
     *  其他类别时(CPM/CPD/CPMV/CPDV)为广告点击总量上限; =0 or unassigned,无点击上限
     *count.budget, 预算金额总上限(单位:百万分之一元)
     *  竞价或者刊例价投放时该值必须&gt;0; 否则投放将关闭
     *  其他类别是是为金额控制上限,=0 or unassigned,无金额上限
     * </pre>
     */
    public de.cache.DeliveryMessage.DeliveryMethodOrBuilder getMethodOrBuilder() {
      return method_;
    }

    public static final int ORDERCTRLFLAG_FIELD_NUMBER = 11;
    private de.cache.DeliveryMessage.ControlledMask orderCtrlFlag_;
    /**
     * <code>optional .de.cache.ControlledMask orderCtrlFlag = 11 [default = UN_CONTROL];</code>
     *
     * <pre>
     *受控于订单级CPM/CPC/CPD/budget控制标示
     *(1.点击上限受控 2.显示上限受控 4.CPD百分比受控 8.预算价格受控) (取值范围0-15)(s/d.$orderid)
     *cpm显示上限受控，cpc点击上限受控，cpm刊例价或者竞价以及cpc刊例价和竞价是价格受控
     * </pre>
     */
    public boolean hasOrderCtrlFlag() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .de.cache.ControlledMask orderCtrlFlag = 11 [default = UN_CONTROL];</code>
     *
     * <pre>
     *受控于订单级CPM/CPC/CPD/budget控制标示
     *(1.点击上限受控 2.显示上限受控 4.CPD百分比受控 8.预算价格受控) (取值范围0-15)(s/d.$orderid)
     *cpm显示上限受控，cpc点击上限受控，cpm刊例价或者竞价以及cpc刊例价和竞价是价格受控
     * </pre>
     */
    public de.cache.DeliveryMessage.ControlledMask getOrderCtrlFlag() {
      return orderCtrlFlag_;
    }

    public static final int FREQUENCYPREFERENCE_FIELD_NUMBER = 12;
    private de.cache.DeliveryMessage.GlobalSwitch frequencyPreference_;
    /**
     * <code>optional .de.cache.GlobalSwitch frequencyPreference = 12 [default = OFF];</code>
     *
     * <pre>
     *频次优先投放(追投)，0=关闭，1=开启, 满足条件后优先投放，直至其频次耗完
     * </pre>
     */
    public boolean hasFrequencyPreference() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .de.cache.GlobalSwitch frequencyPreference = 12 [default = OFF];</code>
     *
     * <pre>
     *频次优先投放(追投)，0=关闭，1=开启, 满足条件后优先投放，直至其频次耗完
     * </pre>
     */
    public de.cache.DeliveryMessage.GlobalSwitch getFrequencyPreference() {
      return frequencyPreference_;
    }

    public static final int BIDINFO_FIELD_NUMBER = 13;
    private de.cache.DeliveryMessage.Solution.BidInfo bidInfo_;
    /**
     * <code>optional .de.cache.Solution.BidInfo bidInfo = 13;</code>
     *
     * <pre>
     *出价信息
     * </pre>
     */
    public boolean hasBidInfo() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .de.cache.Solution.BidInfo bidInfo = 13;</code>
     *
     * <pre>
     *出价信息
     * </pre>
     */
    public de.cache.DeliveryMessage.Solution.BidInfo getBidInfo() {
      return bidInfo_;
    }
    /**
     * <code>optional .de.cache.Solution.BidInfo bidInfo = 13;</code>
     *
     * <pre>
     *出价信息
     * </pre>
     */
    public de.cache.DeliveryMessage.Solution.BidInfoOrBuilder getBidInfoOrBuilder() {
      return bidInfo_;
    }

    public static final int DISTRIBUTEFLAG_FIELD_NUMBER = 14;
    private de.cache.DeliveryMessage.GlobalSwitch distributeFlag_;
    /**
     * <code>optional .de.cache.GlobalSwitch distributeFlag = 14 [default = OFF];</code>
     *
     * <pre>
     *流量分发标示,0=普通投放，1=流量分发投放
     * </pre>
     */
    public boolean hasDistributeFlag() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .de.cache.GlobalSwitch distributeFlag = 14 [default = OFF];</code>
     *
     * <pre>
     *流量分发标示,0=普通投放，1=流量分发投放
     * </pre>
     */
    public de.cache.DeliveryMessage.GlobalSwitch getDistributeFlag() {
      return distributeFlag_;
    }

    public static final int SPOTPLAN_FIELD_NUMBER = 15;
    private java.util.List<de.cache.DeliveryMessage.Solution.SpotPlan> spotPlan_;
    /**
     * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
     *
     * <pre>
     *排期信息Config
     * </pre>
     */
    public java.util.List<de.cache.DeliveryMessage.Solution.SpotPlan> getSpotPlanList() {
      return spotPlan_;
    }
    /**
     * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
     *
     * <pre>
     *排期信息Config
     * </pre>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.Solution.SpotPlanOrBuilder> 
        getSpotPlanOrBuilderList() {
      return spotPlan_;
    }
    /**
     * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
     *
     * <pre>
     *排期信息Config
     * </pre>
     */
    public int getSpotPlanCount() {
      return spotPlan_.size();
    }
    /**
     * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
     *
     * <pre>
     *排期信息Config
     * </pre>
     */
    public de.cache.DeliveryMessage.Solution.SpotPlan getSpotPlan(int index) {
      return spotPlan_.get(index);
    }
    /**
     * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
     *
     * <pre>
     *排期信息Config
     * </pre>
     */
    public de.cache.DeliveryMessage.Solution.SpotPlanOrBuilder getSpotPlanOrBuilder(
        int index) {
      return spotPlan_.get(index);
    }

    public static final int TARGETS_FIELD_NUMBER = 16;
    private de.cache.DeliveryMessage.Solution.SolutionTarget targets_;
    /**
     * <code>optional .de.cache.Solution.SolutionTarget targets = 16;</code>
     *
     * <pre>
     *投放定向信息
     * </pre>
     */
    public boolean hasTargets() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .de.cache.Solution.SolutionTarget targets = 16;</code>
     *
     * <pre>
     *投放定向信息
     * </pre>
     */
    public de.cache.DeliveryMessage.Solution.SolutionTarget getTargets() {
      return targets_;
    }
    /**
     * <code>optional .de.cache.Solution.SolutionTarget targets = 16;</code>
     *
     * <pre>
     *投放定向信息
     * </pre>
     */
    public de.cache.DeliveryMessage.Solution.SolutionTargetOrBuilder getTargetsOrBuilder() {
      return targets_;
    }

    public static final int CHANNELID_FIELD_NUMBER = 17;
    private java.util.List<java.lang.Long> channelId_;
    /**
     * <code>repeated int64 channelId = 17;</code>
     *
     * <pre>
     *绑定广告Ids
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getChannelIdList() {
      return channelId_;
    }
    /**
     * <code>repeated int64 channelId = 17;</code>
     *
     * <pre>
     *绑定广告Ids
     * </pre>
     */
    public int getChannelIdCount() {
      return channelId_.size();
    }
    /**
     * <code>repeated int64 channelId = 17;</code>
     *
     * <pre>
     *绑定广告Ids
     * </pre>
     */
    public long getChannelId(int index) {
      return channelId_.get(index);
    }

    public static final int BANNERID_FIELD_NUMBER = 18;
    private java.util.List<java.lang.Long> bannerId_;
    /**
     * <code>repeated int64 bannerId = 18;</code>
     *
     * <pre>
     *绑定创意Ids
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getBannerIdList() {
      return bannerId_;
    }
    /**
     * <code>repeated int64 bannerId = 18;</code>
     *
     * <pre>
     *绑定创意Ids
     * </pre>
     */
    public int getBannerIdCount() {
      return bannerId_.size();
    }
    /**
     * <code>repeated int64 bannerId = 18;</code>
     *
     * <pre>
     *绑定创意Ids
     * </pre>
     */
    public long getBannerId(int index) {
      return bannerId_.get(index);
    }

    public static final int BANNERPOOLID_FIELD_NUMBER = 19;
    private long bannerPoolId_;
    /**
     * <code>optional int64 bannerPoolId = 19;</code>
     *
     * <pre>
     *(报表用)bannerGroup的父级
     * </pre>
     */
    public boolean hasBannerPoolId() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int64 bannerPoolId = 19;</code>
     *
     * <pre>
     *(报表用)bannerGroup的父级
     * </pre>
     */
    public long getBannerPoolId() {
      return bannerPoolId_;
    }

    public static final int BANNERGROUPID_FIELD_NUMBER = 20;
    private long bannerGroupId_;
    /**
     * <code>optional int64 bannerGroupId = 20;</code>
     *
     * <pre>
     *(报表用)创意组id,抽象组合,并非是真实banner的父级,与投放唯一对应
     * </pre>
     */
    public boolean hasBannerGroupId() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int64 bannerGroupId = 20;</code>
     *
     * <pre>
     *(报表用)创意组id,抽象组合,并非是真实banner的父级,与投放唯一对应
     * </pre>
     */
    public long getBannerGroupId() {
      return bannerGroupId_;
    }

    public static final int STATUS_FIELD_NUMBER = 21;
    private de.cache.DeliveryMessage.GlobalSwitch status_;
    /**
     * <code>optional .de.cache.GlobalSwitch status = 21 [default = ON];</code>
     *
     * <pre>
     *数据状态（1=有效、0=无效）
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .de.cache.GlobalSwitch status = 21 [default = ON];</code>
     *
     * <pre>
     *数据状态（1=有效、0=无效）
     * </pre>
     */
    public de.cache.DeliveryMessage.GlobalSwitch getStatus() {
      return status_;
    }

    public static final int PRICE_FIELD_NUMBER = 22;
    private long price_;
    /**
     * <code>optional int64 price = 22;</code>
     *
     * <pre>
     *价格（imedia使用）
     * </pre>
     */
    public boolean hasPrice() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int64 price = 22;</code>
     *
     * <pre>
     *价格（imedia使用）
     * </pre>
     */
    public long getPrice() {
      return price_;
    }

    public static final int EXTRAEFFECTINDICATORS_FIELD_NUMBER = 23;
    private long extraEffectIndicators_;
    /**
     * <code>optional int64 extraEffectIndicators = 23;</code>
     *
     * <pre>
     *附加效果指标的限值
     * </pre>
     */
    public boolean hasExtraEffectIndicators() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int64 extraEffectIndicators = 23;</code>
     *
     * <pre>
     *附加效果指标的限值
     * </pre>
     */
    public long getExtraEffectIndicators() {
      return extraEffectIndicators_;
    }

    public static final int ADNETWORKID_FIELD_NUMBER = 24;
    private java.util.List<java.lang.Long> adNetworkId_;
    /**
     * <code>repeated int64 adNetworkId = 24;</code>
     *
     * <pre>
     *策略投放的adnetworkIds
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getAdNetworkIdList() {
      return adNetworkId_;
    }
    /**
     * <code>repeated int64 adNetworkId = 24;</code>
     *
     * <pre>
     *策略投放的adnetworkIds
     * </pre>
     */
    public int getAdNetworkIdCount() {
      return adNetworkId_.size();
    }
    /**
     * <code>repeated int64 adNetworkId = 24;</code>
     *
     * <pre>
     *策略投放的adnetworkIds
     * </pre>
     */
    public long getAdNetworkId(int index) {
      return adNetworkId_.get(index);
    }

    private void initFields() {
      id_ = 0L;
      cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      orderId_ = 0L;
      priority_ = 15;
      startTimestamp_ = 0L;
      endTimestamp_ = 0L;
      timePreference_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
      speedupControl_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
      deliveryType_ = de.cache.DeliveryMessage.Solution.DeliveryType.CPM;
      method_ = de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance();
      orderCtrlFlag_ = de.cache.DeliveryMessage.ControlledMask.UN_CONTROL;
      frequencyPreference_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
      bidInfo_ = de.cache.DeliveryMessage.Solution.BidInfo.getDefaultInstance();
      distributeFlag_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
      spotPlan_ = java.util.Collections.emptyList();
      targets_ = de.cache.DeliveryMessage.Solution.SolutionTarget.getDefaultInstance();
      channelId_ = java.util.Collections.emptyList();
      bannerId_ = java.util.Collections.emptyList();
      bannerPoolId_ = 0L;
      bannerGroupId_ = 0L;
      status_ = de.cache.DeliveryMessage.GlobalSwitch.ON;
      price_ = 0L;
      extraEffectIndicators_ = 0L;
      adNetworkId_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasTargets()) {
        if (!getTargets().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, orderId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, priority_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, startTimestamp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, endTimestamp_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(7, timePreference_.getNumber());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(8, speedupControl_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeEnum(9, deliveryType_.getNumber());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(10, method_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeEnum(11, orderCtrlFlag_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeEnum(12, frequencyPreference_.getNumber());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(13, bidInfo_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeEnum(14, distributeFlag_.getNumber());
      }
      for (int i = 0; i < spotPlan_.size(); i++) {
        output.writeMessage(15, spotPlan_.get(i));
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(16, targets_);
      }
      for (int i = 0; i < channelId_.size(); i++) {
        output.writeInt64(17, channelId_.get(i));
      }
      for (int i = 0; i < bannerId_.size(); i++) {
        output.writeInt64(18, bannerId_.get(i));
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(19, bannerPoolId_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt64(20, bannerGroupId_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeEnum(21, status_.getNumber());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt64(22, price_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt64(23, extraEffectIndicators_);
      }
      for (int i = 0; i < adNetworkId_.size(); i++) {
        output.writeInt64(24, adNetworkId_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, orderId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, priority_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, startTimestamp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, endTimestamp_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, timePreference_.getNumber());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, speedupControl_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, deliveryType_.getNumber());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, method_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, orderCtrlFlag_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, frequencyPreference_.getNumber());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, bidInfo_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(14, distributeFlag_.getNumber());
      }
      for (int i = 0; i < spotPlan_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, spotPlan_.get(i));
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, targets_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < channelId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(channelId_.get(i));
        }
        size += dataSize;
        size += 2 * getChannelIdList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bannerId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(bannerId_.get(i));
        }
        size += dataSize;
        size += 2 * getBannerIdList().size();
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(19, bannerPoolId_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(20, bannerGroupId_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(21, status_.getNumber());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(22, price_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(23, extraEffectIndicators_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < adNetworkId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(adNetworkId_.get(i));
        }
        size += dataSize;
        size += 2 * getAdNetworkIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.cache.DeliveryMessage.Solution parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.Solution parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Solution parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.Solution parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Solution parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.Solution parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Solution parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.cache.DeliveryMessage.Solution parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Solution parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.Solution parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.cache.DeliveryMessage.Solution prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code de.cache.Solution}
     *
     * <pre>
     *投放数据
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:de.cache.Solution)
        de.cache.DeliveryMessage.SolutionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Solution_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Solution_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.Solution.class, de.cache.DeliveryMessage.Solution.Builder.class);
      }

      // Construct using de.cache.DeliveryMessage.Solution.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMethodFieldBuilder();
          getBidInfoFieldBuilder();
          getSpotPlanFieldBuilder();
          getTargetsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        bitField0_ = (bitField0_ & ~0x00000002);
        orderId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        priority_ = 15;
        bitField0_ = (bitField0_ & ~0x00000008);
        startTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        endTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        timePreference_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        bitField0_ = (bitField0_ & ~0x00000040);
        speedupControl_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        bitField0_ = (bitField0_ & ~0x00000080);
        deliveryType_ = de.cache.DeliveryMessage.Solution.DeliveryType.CPM;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (methodBuilder_ == null) {
          method_ = de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance();
        } else {
          methodBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        orderCtrlFlag_ = de.cache.DeliveryMessage.ControlledMask.UN_CONTROL;
        bitField0_ = (bitField0_ & ~0x00000400);
        frequencyPreference_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        bitField0_ = (bitField0_ & ~0x00000800);
        if (bidInfoBuilder_ == null) {
          bidInfo_ = de.cache.DeliveryMessage.Solution.BidInfo.getDefaultInstance();
        } else {
          bidInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        distributeFlag_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        bitField0_ = (bitField0_ & ~0x00002000);
        if (spotPlanBuilder_ == null) {
          spotPlan_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          spotPlanBuilder_.clear();
        }
        if (targetsBuilder_ == null) {
          targets_ = de.cache.DeliveryMessage.Solution.SolutionTarget.getDefaultInstance();
        } else {
          targetsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        channelId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        bannerId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        bannerPoolId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00040000);
        bannerGroupId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00080000);
        status_ = de.cache.DeliveryMessage.GlobalSwitch.ON;
        bitField0_ = (bitField0_ & ~0x00100000);
        price_ = 0L;
        bitField0_ = (bitField0_ & ~0x00200000);
        extraEffectIndicators_ = 0L;
        bitField0_ = (bitField0_ & ~0x00400000);
        adNetworkId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00800000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Solution_descriptor;
      }

      public de.cache.DeliveryMessage.Solution getDefaultInstanceForType() {
        return de.cache.DeliveryMessage.Solution.getDefaultInstance();
      }

      public de.cache.DeliveryMessage.Solution build() {
        de.cache.DeliveryMessage.Solution result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.cache.DeliveryMessage.Solution buildPartial() {
        de.cache.DeliveryMessage.Solution result = new de.cache.DeliveryMessage.Solution(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cmd_ = cmd_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.orderId_ = orderId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.priority_ = priority_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.startTimestamp_ = startTimestamp_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.endTimestamp_ = endTimestamp_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.timePreference_ = timePreference_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.speedupControl_ = speedupControl_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.deliveryType_ = deliveryType_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (methodBuilder_ == null) {
          result.method_ = method_;
        } else {
          result.method_ = methodBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.orderCtrlFlag_ = orderCtrlFlag_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.frequencyPreference_ = frequencyPreference_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (bidInfoBuilder_ == null) {
          result.bidInfo_ = bidInfo_;
        } else {
          result.bidInfo_ = bidInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.distributeFlag_ = distributeFlag_;
        if (spotPlanBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            spotPlan_ = java.util.Collections.unmodifiableList(spotPlan_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.spotPlan_ = spotPlan_;
        } else {
          result.spotPlan_ = spotPlanBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        if (targetsBuilder_ == null) {
          result.targets_ = targets_;
        } else {
          result.targets_ = targetsBuilder_.build();
        }
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          channelId_ = java.util.Collections.unmodifiableList(channelId_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.channelId_ = channelId_;
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          bannerId_ = java.util.Collections.unmodifiableList(bannerId_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.bannerId_ = bannerId_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.bannerPoolId_ = bannerPoolId_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.bannerGroupId_ = bannerGroupId_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.price_ = price_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.extraEffectIndicators_ = extraEffectIndicators_;
        if (((bitField0_ & 0x00800000) == 0x00800000)) {
          adNetworkId_ = java.util.Collections.unmodifiableList(adNetworkId_);
          bitField0_ = (bitField0_ & ~0x00800000);
        }
        result.adNetworkId_ = adNetworkId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.cache.DeliveryMessage.Solution) {
          return mergeFrom((de.cache.DeliveryMessage.Solution)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.cache.DeliveryMessage.Solution other) {
        if (other == de.cache.DeliveryMessage.Solution.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCmd()) {
          setCmd(other.getCmd());
        }
        if (other.hasOrderId()) {
          setOrderId(other.getOrderId());
        }
        if (other.hasPriority()) {
          setPriority(other.getPriority());
        }
        if (other.hasStartTimestamp()) {
          setStartTimestamp(other.getStartTimestamp());
        }
        if (other.hasEndTimestamp()) {
          setEndTimestamp(other.getEndTimestamp());
        }
        if (other.hasTimePreference()) {
          setTimePreference(other.getTimePreference());
        }
        if (other.hasSpeedupControl()) {
          setSpeedupControl(other.getSpeedupControl());
        }
        if (other.hasDeliveryType()) {
          setDeliveryType(other.getDeliveryType());
        }
        if (other.hasMethod()) {
          mergeMethod(other.getMethod());
        }
        if (other.hasOrderCtrlFlag()) {
          setOrderCtrlFlag(other.getOrderCtrlFlag());
        }
        if (other.hasFrequencyPreference()) {
          setFrequencyPreference(other.getFrequencyPreference());
        }
        if (other.hasBidInfo()) {
          mergeBidInfo(other.getBidInfo());
        }
        if (other.hasDistributeFlag()) {
          setDistributeFlag(other.getDistributeFlag());
        }
        if (spotPlanBuilder_ == null) {
          if (!other.spotPlan_.isEmpty()) {
            if (spotPlan_.isEmpty()) {
              spotPlan_ = other.spotPlan_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureSpotPlanIsMutable();
              spotPlan_.addAll(other.spotPlan_);
            }
            onChanged();
          }
        } else {
          if (!other.spotPlan_.isEmpty()) {
            if (spotPlanBuilder_.isEmpty()) {
              spotPlanBuilder_.dispose();
              spotPlanBuilder_ = null;
              spotPlan_ = other.spotPlan_;
              bitField0_ = (bitField0_ & ~0x00004000);
              spotPlanBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSpotPlanFieldBuilder() : null;
            } else {
              spotPlanBuilder_.addAllMessages(other.spotPlan_);
            }
          }
        }
        if (other.hasTargets()) {
          mergeTargets(other.getTargets());
        }
        if (!other.channelId_.isEmpty()) {
          if (channelId_.isEmpty()) {
            channelId_ = other.channelId_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureChannelIdIsMutable();
            channelId_.addAll(other.channelId_);
          }
          onChanged();
        }
        if (!other.bannerId_.isEmpty()) {
          if (bannerId_.isEmpty()) {
            bannerId_ = other.bannerId_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureBannerIdIsMutable();
            bannerId_.addAll(other.bannerId_);
          }
          onChanged();
        }
        if (other.hasBannerPoolId()) {
          setBannerPoolId(other.getBannerPoolId());
        }
        if (other.hasBannerGroupId()) {
          setBannerGroupId(other.getBannerGroupId());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (other.hasExtraEffectIndicators()) {
          setExtraEffectIndicators(other.getExtraEffectIndicators());
        }
        if (!other.adNetworkId_.isEmpty()) {
          if (adNetworkId_.isEmpty()) {
            adNetworkId_ = other.adNetworkId_;
            bitField0_ = (bitField0_ & ~0x00800000);
          } else {
            ensureAdNetworkIdIsMutable();
            adNetworkId_.addAll(other.adNetworkId_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasTargets()) {
          if (!getTargets().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.cache.DeliveryMessage.Solution parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.cache.DeliveryMessage.Solution) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *投放id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *投放id
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *投放id
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *投放id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.Command cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public boolean hasCmd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public de.cache.DeliveryMessage.Command getCmd() {
        return cmd_;
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public Builder setCmd(de.cache.DeliveryMessage.Command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        cmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public Builder clearCmd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        onChanged();
        return this;
      }

      private long orderId_ ;
      /**
       * <code>optional int64 orderId = 3;</code>
       *
       * <pre>
       *订单id
       * </pre>
       */
      public boolean hasOrderId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 orderId = 3;</code>
       *
       * <pre>
       *订单id
       * </pre>
       */
      public long getOrderId() {
        return orderId_;
      }
      /**
       * <code>optional int64 orderId = 3;</code>
       *
       * <pre>
       *订单id
       * </pre>
       */
      public Builder setOrderId(long value) {
        bitField0_ |= 0x00000004;
        orderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 orderId = 3;</code>
       *
       * <pre>
       *订单id
       * </pre>
       */
      public Builder clearOrderId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        orderId_ = 0L;
        onChanged();
        return this;
      }

      private int priority_ = 15;
      /**
       * <code>optional int32 priority = 4 [default = 15];</code>
       *
       * <pre>
       *投放的优先级别（1-N，1最大，N最小）
       * </pre>
       */
      public boolean hasPriority() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 priority = 4 [default = 15];</code>
       *
       * <pre>
       *投放的优先级别（1-N，1最大，N最小）
       * </pre>
       */
      public int getPriority() {
        return priority_;
      }
      /**
       * <code>optional int32 priority = 4 [default = 15];</code>
       *
       * <pre>
       *投放的优先级别（1-N，1最大，N最小）
       * </pre>
       */
      public Builder setPriority(int value) {
        bitField0_ |= 0x00000008;
        priority_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 priority = 4 [default = 15];</code>
       *
       * <pre>
       *投放的优先级别（1-N，1最大，N最小）
       * </pre>
       */
      public Builder clearPriority() {
        bitField0_ = (bitField0_ & ~0x00000008);
        priority_ = 15;
        onChanged();
        return this;
      }

      private long startTimestamp_ ;
      /**
       * <code>optional int64 startTimestamp = 5;</code>
       *
       * <pre>
       *投放结束日期
       * </pre>
       */
      public boolean hasStartTimestamp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 startTimestamp = 5;</code>
       *
       * <pre>
       *投放结束日期
       * </pre>
       */
      public long getStartTimestamp() {
        return startTimestamp_;
      }
      /**
       * <code>optional int64 startTimestamp = 5;</code>
       *
       * <pre>
       *投放结束日期
       * </pre>
       */
      public Builder setStartTimestamp(long value) {
        bitField0_ |= 0x00000010;
        startTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 startTimestamp = 5;</code>
       *
       * <pre>
       *投放结束日期
       * </pre>
       */
      public Builder clearStartTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        startTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private long endTimestamp_ ;
      /**
       * <code>optional int64 endTimestamp = 6;</code>
       *
       * <pre>
       *投放结束时间
       * </pre>
       */
      public boolean hasEndTimestamp() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 endTimestamp = 6;</code>
       *
       * <pre>
       *投放结束时间
       * </pre>
       */
      public long getEndTimestamp() {
        return endTimestamp_;
      }
      /**
       * <code>optional int64 endTimestamp = 6;</code>
       *
       * <pre>
       *投放结束时间
       * </pre>
       */
      public Builder setEndTimestamp(long value) {
        bitField0_ |= 0x00000020;
        endTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 endTimestamp = 6;</code>
       *
       * <pre>
       *投放结束时间
       * </pre>
       */
      public Builder clearEndTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000020);
        endTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.GlobalSwitch timePreference_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
      /**
       * <code>optional .de.cache.GlobalSwitch timePreference = 7;</code>
       *
       * <pre>
       *投放数量控制方式,=0 按数量投,过时补投至投放完全,=1 按时间投，过时未投放完不再补投
       * </pre>
       */
      public boolean hasTimePreference() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .de.cache.GlobalSwitch timePreference = 7;</code>
       *
       * <pre>
       *投放数量控制方式,=0 按数量投,过时补投至投放完全,=1 按时间投，过时未投放完不再补投
       * </pre>
       */
      public de.cache.DeliveryMessage.GlobalSwitch getTimePreference() {
        return timePreference_;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch timePreference = 7;</code>
       *
       * <pre>
       *投放数量控制方式,=0 按数量投,过时补投至投放完全,=1 按时间投，过时未投放完不再补投
       * </pre>
       */
      public Builder setTimePreference(de.cache.DeliveryMessage.GlobalSwitch value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        timePreference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch timePreference = 7;</code>
       *
       * <pre>
       *投放数量控制方式,=0 按数量投,过时补投至投放完全,=1 按时间投，过时未投放完不再补投
       * </pre>
       */
      public Builder clearTimePreference() {
        bitField0_ = (bitField0_ & ~0x00000040);
        timePreference_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.GlobalSwitch speedupControl_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
      /**
       * <code>optional .de.cache.GlobalSwitch speedupControl = 8 [default = OFF];</code>
       *
       * <pre>
       *speedControl投放速度控制，=0,按广告位(网站)流量分配投放，也就是将所有投放量按广告位(网站)流量分配到整个投放期，如果没有流量数据，就按照均匀分配。
       *=1,尽快投放，不做投放流量控制，尽快把广告投完
       * </pre>
       */
      public boolean hasSpeedupControl() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .de.cache.GlobalSwitch speedupControl = 8 [default = OFF];</code>
       *
       * <pre>
       *speedControl投放速度控制，=0,按广告位(网站)流量分配投放，也就是将所有投放量按广告位(网站)流量分配到整个投放期，如果没有流量数据，就按照均匀分配。
       *=1,尽快投放，不做投放流量控制，尽快把广告投完
       * </pre>
       */
      public de.cache.DeliveryMessage.GlobalSwitch getSpeedupControl() {
        return speedupControl_;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch speedupControl = 8 [default = OFF];</code>
       *
       * <pre>
       *speedControl投放速度控制，=0,按广告位(网站)流量分配投放，也就是将所有投放量按广告位(网站)流量分配到整个投放期，如果没有流量数据，就按照均匀分配。
       *=1,尽快投放，不做投放流量控制，尽快把广告投完
       * </pre>
       */
      public Builder setSpeedupControl(de.cache.DeliveryMessage.GlobalSwitch value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        speedupControl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch speedupControl = 8 [default = OFF];</code>
       *
       * <pre>
       *speedControl投放速度控制，=0,按广告位(网站)流量分配投放，也就是将所有投放量按广告位(网站)流量分配到整个投放期，如果没有流量数据，就按照均匀分配。
       *=1,尽快投放，不做投放流量控制，尽快把广告投完
       * </pre>
       */
      public Builder clearSpeedupControl() {
        bitField0_ = (bitField0_ & ~0x00000080);
        speedupControl_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.Solution.DeliveryType deliveryType_ = de.cache.DeliveryMessage.Solution.DeliveryType.CPM;
      /**
       * <code>optional .de.cache.Solution.DeliveryType deliveryType = 9;</code>
       */
      public boolean hasDeliveryType() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .de.cache.Solution.DeliveryType deliveryType = 9;</code>
       */
      public de.cache.DeliveryMessage.Solution.DeliveryType getDeliveryType() {
        return deliveryType_;
      }
      /**
       * <code>optional .de.cache.Solution.DeliveryType deliveryType = 9;</code>
       */
      public Builder setDeliveryType(de.cache.DeliveryMessage.Solution.DeliveryType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        deliveryType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.Solution.DeliveryType deliveryType = 9;</code>
       */
      public Builder clearDeliveryType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        deliveryType_ = de.cache.DeliveryMessage.Solution.DeliveryType.CPM;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.DeliveryMethod method_ = de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.DeliveryMethod, de.cache.DeliveryMessage.DeliveryMethod.Builder, de.cache.DeliveryMessage.DeliveryMethodOrBuilder> methodBuilder_;
      /**
       * <code>optional .de.cache.DeliveryMethod method = 10;</code>
       *
       * <pre>
       *-----
       *count.impression, 投放级的总显示数量上限(包括CPC/CPM/CPD/CPMV/CPDV)
       * CPM时: impression必须&gt;0, 否则投放将不投放
       * 非CPM时: &gt;0,该值为显示上限; =0 or unassigned,无显示上限
       *count.percentage, 投放百分比
       *  目前只有CPD和CPC以及CPDV才有百分比控制概念。
       *  CPD和CPDV时:必须&gt;0且&lt;=100; =0 or unassigned将不投放
       *  如果该投放接受订单级的百分比控制，那其：
       *       真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
       *count.click, 点击数量,由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
       *  CPC/CPCV时,该值必须&gt;0; 否则投放将关闭
       *  其他类别时(CPM/CPD/CPMV/CPDV)为广告点击总量上限; =0 or unassigned,无点击上限
       *count.budget, 预算金额总上限(单位:百万分之一元)
       *  竞价或者刊例价投放时该值必须&gt;0; 否则投放将关闭
       *  其他类别是是为金额控制上限,=0 or unassigned,无金额上限
       * </pre>
       */
      public boolean hasMethod() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 10;</code>
       *
       * <pre>
       *-----
       *count.impression, 投放级的总显示数量上限(包括CPC/CPM/CPD/CPMV/CPDV)
       * CPM时: impression必须&gt;0, 否则投放将不投放
       * 非CPM时: &gt;0,该值为显示上限; =0 or unassigned,无显示上限
       *count.percentage, 投放百分比
       *  目前只有CPD和CPC以及CPDV才有百分比控制概念。
       *  CPD和CPDV时:必须&gt;0且&lt;=100; =0 or unassigned将不投放
       *  如果该投放接受订单级的百分比控制，那其：
       *       真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
       *count.click, 点击数量,由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
       *  CPC/CPCV时,该值必须&gt;0; 否则投放将关闭
       *  其他类别时(CPM/CPD/CPMV/CPDV)为广告点击总量上限; =0 or unassigned,无点击上限
       *count.budget, 预算金额总上限(单位:百万分之一元)
       *  竞价或者刊例价投放时该值必须&gt;0; 否则投放将关闭
       *  其他类别是是为金额控制上限,=0 or unassigned,无金额上限
       * </pre>
       */
      public de.cache.DeliveryMessage.DeliveryMethod getMethod() {
        if (methodBuilder_ == null) {
          return method_;
        } else {
          return methodBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 10;</code>
       *
       * <pre>
       *-----
       *count.impression, 投放级的总显示数量上限(包括CPC/CPM/CPD/CPMV/CPDV)
       * CPM时: impression必须&gt;0, 否则投放将不投放
       * 非CPM时: &gt;0,该值为显示上限; =0 or unassigned,无显示上限
       *count.percentage, 投放百分比
       *  目前只有CPD和CPC以及CPDV才有百分比控制概念。
       *  CPD和CPDV时:必须&gt;0且&lt;=100; =0 or unassigned将不投放
       *  如果该投放接受订单级的百分比控制，那其：
       *       真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
       *count.click, 点击数量,由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
       *  CPC/CPCV时,该值必须&gt;0; 否则投放将关闭
       *  其他类别时(CPM/CPD/CPMV/CPDV)为广告点击总量上限; =0 or unassigned,无点击上限
       *count.budget, 预算金额总上限(单位:百万分之一元)
       *  竞价或者刊例价投放时该值必须&gt;0; 否则投放将关闭
       *  其他类别是是为金额控制上限,=0 or unassigned,无金额上限
       * </pre>
       */
      public Builder setMethod(de.cache.DeliveryMessage.DeliveryMethod value) {
        if (methodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          method_ = value;
          onChanged();
        } else {
          methodBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 10;</code>
       *
       * <pre>
       *-----
       *count.impression, 投放级的总显示数量上限(包括CPC/CPM/CPD/CPMV/CPDV)
       * CPM时: impression必须&gt;0, 否则投放将不投放
       * 非CPM时: &gt;0,该值为显示上限; =0 or unassigned,无显示上限
       *count.percentage, 投放百分比
       *  目前只有CPD和CPC以及CPDV才有百分比控制概念。
       *  CPD和CPDV时:必须&gt;0且&lt;=100; =0 or unassigned将不投放
       *  如果该投放接受订单级的百分比控制，那其：
       *       真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
       *count.click, 点击数量,由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
       *  CPC/CPCV时,该值必须&gt;0; 否则投放将关闭
       *  其他类别时(CPM/CPD/CPMV/CPDV)为广告点击总量上限; =0 or unassigned,无点击上限
       *count.budget, 预算金额总上限(单位:百万分之一元)
       *  竞价或者刊例价投放时该值必须&gt;0; 否则投放将关闭
       *  其他类别是是为金额控制上限,=0 or unassigned,无金额上限
       * </pre>
       */
      public Builder setMethod(
          de.cache.DeliveryMessage.DeliveryMethod.Builder builderForValue) {
        if (methodBuilder_ == null) {
          method_ = builderForValue.build();
          onChanged();
        } else {
          methodBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 10;</code>
       *
       * <pre>
       *-----
       *count.impression, 投放级的总显示数量上限(包括CPC/CPM/CPD/CPMV/CPDV)
       * CPM时: impression必须&gt;0, 否则投放将不投放
       * 非CPM时: &gt;0,该值为显示上限; =0 or unassigned,无显示上限
       *count.percentage, 投放百分比
       *  目前只有CPD和CPC以及CPDV才有百分比控制概念。
       *  CPD和CPDV时:必须&gt;0且&lt;=100; =0 or unassigned将不投放
       *  如果该投放接受订单级的百分比控制，那其：
       *       真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
       *count.click, 点击数量,由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
       *  CPC/CPCV时,该值必须&gt;0; 否则投放将关闭
       *  其他类别时(CPM/CPD/CPMV/CPDV)为广告点击总量上限; =0 or unassigned,无点击上限
       *count.budget, 预算金额总上限(单位:百万分之一元)
       *  竞价或者刊例价投放时该值必须&gt;0; 否则投放将关闭
       *  其他类别是是为金额控制上限,=0 or unassigned,无金额上限
       * </pre>
       */
      public Builder mergeMethod(de.cache.DeliveryMessage.DeliveryMethod value) {
        if (methodBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              method_ != de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance()) {
            method_ =
              de.cache.DeliveryMessage.DeliveryMethod.newBuilder(method_).mergeFrom(value).buildPartial();
          } else {
            method_ = value;
          }
          onChanged();
        } else {
          methodBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 10;</code>
       *
       * <pre>
       *-----
       *count.impression, 投放级的总显示数量上限(包括CPC/CPM/CPD/CPMV/CPDV)
       * CPM时: impression必须&gt;0, 否则投放将不投放
       * 非CPM时: &gt;0,该值为显示上限; =0 or unassigned,无显示上限
       *count.percentage, 投放百分比
       *  目前只有CPD和CPC以及CPDV才有百分比控制概念。
       *  CPD和CPDV时:必须&gt;0且&lt;=100; =0 or unassigned将不投放
       *  如果该投放接受订单级的百分比控制，那其：
       *       真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
       *count.click, 点击数量,由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
       *  CPC/CPCV时,该值必须&gt;0; 否则投放将关闭
       *  其他类别时(CPM/CPD/CPMV/CPDV)为广告点击总量上限; =0 or unassigned,无点击上限
       *count.budget, 预算金额总上限(单位:百万分之一元)
       *  竞价或者刊例价投放时该值必须&gt;0; 否则投放将关闭
       *  其他类别是是为金额控制上限,=0 or unassigned,无金额上限
       * </pre>
       */
      public Builder clearMethod() {
        if (methodBuilder_ == null) {
          method_ = de.cache.DeliveryMessage.DeliveryMethod.getDefaultInstance();
          onChanged();
        } else {
          methodBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 10;</code>
       *
       * <pre>
       *-----
       *count.impression, 投放级的总显示数量上限(包括CPC/CPM/CPD/CPMV/CPDV)
       * CPM时: impression必须&gt;0, 否则投放将不投放
       * 非CPM时: &gt;0,该值为显示上限; =0 or unassigned,无显示上限
       *count.percentage, 投放百分比
       *  目前只有CPD和CPC以及CPDV才有百分比控制概念。
       *  CPD和CPDV时:必须&gt;0且&lt;=100; =0 or unassigned将不投放
       *  如果该投放接受订单级的百分比控制，那其：
       *       真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
       *count.click, 点击数量,由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
       *  CPC/CPCV时,该值必须&gt;0; 否则投放将关闭
       *  其他类别时(CPM/CPD/CPMV/CPDV)为广告点击总量上限; =0 or unassigned,无点击上限
       *count.budget, 预算金额总上限(单位:百万分之一元)
       *  竞价或者刊例价投放时该值必须&gt;0; 否则投放将关闭
       *  其他类别是是为金额控制上限,=0 or unassigned,无金额上限
       * </pre>
       */
      public de.cache.DeliveryMessage.DeliveryMethod.Builder getMethodBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getMethodFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 10;</code>
       *
       * <pre>
       *-----
       *count.impression, 投放级的总显示数量上限(包括CPC/CPM/CPD/CPMV/CPDV)
       * CPM时: impression必须&gt;0, 否则投放将不投放
       * 非CPM时: &gt;0,该值为显示上限; =0 or unassigned,无显示上限
       *count.percentage, 投放百分比
       *  目前只有CPD和CPC以及CPDV才有百分比控制概念。
       *  CPD和CPDV时:必须&gt;0且&lt;=100; =0 or unassigned将不投放
       *  如果该投放接受订单级的百分比控制，那其：
       *       真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
       *count.click, 点击数量,由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
       *  CPC/CPCV时,该值必须&gt;0; 否则投放将关闭
       *  其他类别时(CPM/CPD/CPMV/CPDV)为广告点击总量上限; =0 or unassigned,无点击上限
       *count.budget, 预算金额总上限(单位:百万分之一元)
       *  竞价或者刊例价投放时该值必须&gt;0; 否则投放将关闭
       *  其他类别是是为金额控制上限,=0 or unassigned,无金额上限
       * </pre>
       */
      public de.cache.DeliveryMessage.DeliveryMethodOrBuilder getMethodOrBuilder() {
        if (methodBuilder_ != null) {
          return methodBuilder_.getMessageOrBuilder();
        } else {
          return method_;
        }
      }
      /**
       * <code>optional .de.cache.DeliveryMethod method = 10;</code>
       *
       * <pre>
       *-----
       *count.impression, 投放级的总显示数量上限(包括CPC/CPM/CPD/CPMV/CPDV)
       * CPM时: impression必须&gt;0, 否则投放将不投放
       * 非CPM时: &gt;0,该值为显示上限; =0 or unassigned,无显示上限
       *count.percentage, 投放百分比
       *  目前只有CPD和CPC以及CPDV才有百分比控制概念。
       *  CPD和CPDV时:必须&gt;0且&lt;=100; =0 or unassigned将不投放
       *  如果该投放接受订单级的百分比控制，那其：
       *       真实百分比 = 投放级百分比 * 订单级百分比 * 订单组级百分比
       *count.click, 点击数量,由于点击行为晚于显示的延时性，所以在实际控制中该点击上限会出现控制不精准现象。
       *  CPC/CPCV时,该值必须&gt;0; 否则投放将关闭
       *  其他类别时(CPM/CPD/CPMV/CPDV)为广告点击总量上限; =0 or unassigned,无点击上限
       *count.budget, 预算金额总上限(单位:百万分之一元)
       *  竞价或者刊例价投放时该值必须&gt;0; 否则投放将关闭
       *  其他类别是是为金额控制上限,=0 or unassigned,无金额上限
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.DeliveryMethod, de.cache.DeliveryMessage.DeliveryMethod.Builder, de.cache.DeliveryMessage.DeliveryMethodOrBuilder> 
          getMethodFieldBuilder() {
        if (methodBuilder_ == null) {
          methodBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.cache.DeliveryMessage.DeliveryMethod, de.cache.DeliveryMessage.DeliveryMethod.Builder, de.cache.DeliveryMessage.DeliveryMethodOrBuilder>(
                  getMethod(),
                  getParentForChildren(),
                  isClean());
          method_ = null;
        }
        return methodBuilder_;
      }

      private de.cache.DeliveryMessage.ControlledMask orderCtrlFlag_ = de.cache.DeliveryMessage.ControlledMask.UN_CONTROL;
      /**
       * <code>optional .de.cache.ControlledMask orderCtrlFlag = 11 [default = UN_CONTROL];</code>
       *
       * <pre>
       *受控于订单级CPM/CPC/CPD/budget控制标示
       *(1.点击上限受控 2.显示上限受控 4.CPD百分比受控 8.预算价格受控) (取值范围0-15)(s/d.$orderid)
       *cpm显示上限受控，cpc点击上限受控，cpm刊例价或者竞价以及cpc刊例价和竞价是价格受控
       * </pre>
       */
      public boolean hasOrderCtrlFlag() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .de.cache.ControlledMask orderCtrlFlag = 11 [default = UN_CONTROL];</code>
       *
       * <pre>
       *受控于订单级CPM/CPC/CPD/budget控制标示
       *(1.点击上限受控 2.显示上限受控 4.CPD百分比受控 8.预算价格受控) (取值范围0-15)(s/d.$orderid)
       *cpm显示上限受控，cpc点击上限受控，cpm刊例价或者竞价以及cpc刊例价和竞价是价格受控
       * </pre>
       */
      public de.cache.DeliveryMessage.ControlledMask getOrderCtrlFlag() {
        return orderCtrlFlag_;
      }
      /**
       * <code>optional .de.cache.ControlledMask orderCtrlFlag = 11 [default = UN_CONTROL];</code>
       *
       * <pre>
       *受控于订单级CPM/CPC/CPD/budget控制标示
       *(1.点击上限受控 2.显示上限受控 4.CPD百分比受控 8.预算价格受控) (取值范围0-15)(s/d.$orderid)
       *cpm显示上限受控，cpc点击上限受控，cpm刊例价或者竞价以及cpc刊例价和竞价是价格受控
       * </pre>
       */
      public Builder setOrderCtrlFlag(de.cache.DeliveryMessage.ControlledMask value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000400;
        orderCtrlFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.ControlledMask orderCtrlFlag = 11 [default = UN_CONTROL];</code>
       *
       * <pre>
       *受控于订单级CPM/CPC/CPD/budget控制标示
       *(1.点击上限受控 2.显示上限受控 4.CPD百分比受控 8.预算价格受控) (取值范围0-15)(s/d.$orderid)
       *cpm显示上限受控，cpc点击上限受控，cpm刊例价或者竞价以及cpc刊例价和竞价是价格受控
       * </pre>
       */
      public Builder clearOrderCtrlFlag() {
        bitField0_ = (bitField0_ & ~0x00000400);
        orderCtrlFlag_ = de.cache.DeliveryMessage.ControlledMask.UN_CONTROL;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.GlobalSwitch frequencyPreference_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
      /**
       * <code>optional .de.cache.GlobalSwitch frequencyPreference = 12 [default = OFF];</code>
       *
       * <pre>
       *频次优先投放(追投)，0=关闭，1=开启, 满足条件后优先投放，直至其频次耗完
       * </pre>
       */
      public boolean hasFrequencyPreference() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .de.cache.GlobalSwitch frequencyPreference = 12 [default = OFF];</code>
       *
       * <pre>
       *频次优先投放(追投)，0=关闭，1=开启, 满足条件后优先投放，直至其频次耗完
       * </pre>
       */
      public de.cache.DeliveryMessage.GlobalSwitch getFrequencyPreference() {
        return frequencyPreference_;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch frequencyPreference = 12 [default = OFF];</code>
       *
       * <pre>
       *频次优先投放(追投)，0=关闭，1=开启, 满足条件后优先投放，直至其频次耗完
       * </pre>
       */
      public Builder setFrequencyPreference(de.cache.DeliveryMessage.GlobalSwitch value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000800;
        frequencyPreference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch frequencyPreference = 12 [default = OFF];</code>
       *
       * <pre>
       *频次优先投放(追投)，0=关闭，1=开启, 满足条件后优先投放，直至其频次耗完
       * </pre>
       */
      public Builder clearFrequencyPreference() {
        bitField0_ = (bitField0_ & ~0x00000800);
        frequencyPreference_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.Solution.BidInfo bidInfo_ = de.cache.DeliveryMessage.Solution.BidInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.Solution.BidInfo, de.cache.DeliveryMessage.Solution.BidInfo.Builder, de.cache.DeliveryMessage.Solution.BidInfoOrBuilder> bidInfoBuilder_;
      /**
       * <code>optional .de.cache.Solution.BidInfo bidInfo = 13;</code>
       *
       * <pre>
       *出价信息
       * </pre>
       */
      public boolean hasBidInfo() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .de.cache.Solution.BidInfo bidInfo = 13;</code>
       *
       * <pre>
       *出价信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution.BidInfo getBidInfo() {
        if (bidInfoBuilder_ == null) {
          return bidInfo_;
        } else {
          return bidInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .de.cache.Solution.BidInfo bidInfo = 13;</code>
       *
       * <pre>
       *出价信息
       * </pre>
       */
      public Builder setBidInfo(de.cache.DeliveryMessage.Solution.BidInfo value) {
        if (bidInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bidInfo_ = value;
          onChanged();
        } else {
          bidInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .de.cache.Solution.BidInfo bidInfo = 13;</code>
       *
       * <pre>
       *出价信息
       * </pre>
       */
      public Builder setBidInfo(
          de.cache.DeliveryMessage.Solution.BidInfo.Builder builderForValue) {
        if (bidInfoBuilder_ == null) {
          bidInfo_ = builderForValue.build();
          onChanged();
        } else {
          bidInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .de.cache.Solution.BidInfo bidInfo = 13;</code>
       *
       * <pre>
       *出价信息
       * </pre>
       */
      public Builder mergeBidInfo(de.cache.DeliveryMessage.Solution.BidInfo value) {
        if (bidInfoBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              bidInfo_ != de.cache.DeliveryMessage.Solution.BidInfo.getDefaultInstance()) {
            bidInfo_ =
              de.cache.DeliveryMessage.Solution.BidInfo.newBuilder(bidInfo_).mergeFrom(value).buildPartial();
          } else {
            bidInfo_ = value;
          }
          onChanged();
        } else {
          bidInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .de.cache.Solution.BidInfo bidInfo = 13;</code>
       *
       * <pre>
       *出价信息
       * </pre>
       */
      public Builder clearBidInfo() {
        if (bidInfoBuilder_ == null) {
          bidInfo_ = de.cache.DeliveryMessage.Solution.BidInfo.getDefaultInstance();
          onChanged();
        } else {
          bidInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .de.cache.Solution.BidInfo bidInfo = 13;</code>
       *
       * <pre>
       *出价信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution.BidInfo.Builder getBidInfoBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getBidInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .de.cache.Solution.BidInfo bidInfo = 13;</code>
       *
       * <pre>
       *出价信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution.BidInfoOrBuilder getBidInfoOrBuilder() {
        if (bidInfoBuilder_ != null) {
          return bidInfoBuilder_.getMessageOrBuilder();
        } else {
          return bidInfo_;
        }
      }
      /**
       * <code>optional .de.cache.Solution.BidInfo bidInfo = 13;</code>
       *
       * <pre>
       *出价信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.Solution.BidInfo, de.cache.DeliveryMessage.Solution.BidInfo.Builder, de.cache.DeliveryMessage.Solution.BidInfoOrBuilder> 
          getBidInfoFieldBuilder() {
        if (bidInfoBuilder_ == null) {
          bidInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.cache.DeliveryMessage.Solution.BidInfo, de.cache.DeliveryMessage.Solution.BidInfo.Builder, de.cache.DeliveryMessage.Solution.BidInfoOrBuilder>(
                  getBidInfo(),
                  getParentForChildren(),
                  isClean());
          bidInfo_ = null;
        }
        return bidInfoBuilder_;
      }

      private de.cache.DeliveryMessage.GlobalSwitch distributeFlag_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
      /**
       * <code>optional .de.cache.GlobalSwitch distributeFlag = 14 [default = OFF];</code>
       *
       * <pre>
       *流量分发标示,0=普通投放，1=流量分发投放
       * </pre>
       */
      public boolean hasDistributeFlag() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .de.cache.GlobalSwitch distributeFlag = 14 [default = OFF];</code>
       *
       * <pre>
       *流量分发标示,0=普通投放，1=流量分发投放
       * </pre>
       */
      public de.cache.DeliveryMessage.GlobalSwitch getDistributeFlag() {
        return distributeFlag_;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch distributeFlag = 14 [default = OFF];</code>
       *
       * <pre>
       *流量分发标示,0=普通投放，1=流量分发投放
       * </pre>
       */
      public Builder setDistributeFlag(de.cache.DeliveryMessage.GlobalSwitch value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00002000;
        distributeFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch distributeFlag = 14 [default = OFF];</code>
       *
       * <pre>
       *流量分发标示,0=普通投放，1=流量分发投放
       * </pre>
       */
      public Builder clearDistributeFlag() {
        bitField0_ = (bitField0_ & ~0x00002000);
        distributeFlag_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        onChanged();
        return this;
      }

      private java.util.List<de.cache.DeliveryMessage.Solution.SpotPlan> spotPlan_ =
        java.util.Collections.emptyList();
      private void ensureSpotPlanIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          spotPlan_ = new java.util.ArrayList<de.cache.DeliveryMessage.Solution.SpotPlan>(spotPlan_);
          bitField0_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.Solution.SpotPlan, de.cache.DeliveryMessage.Solution.SpotPlan.Builder, de.cache.DeliveryMessage.Solution.SpotPlanOrBuilder> spotPlanBuilder_;

      /**
       * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
       *
       * <pre>
       *排期信息Config
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.Solution.SpotPlan> getSpotPlanList() {
        if (spotPlanBuilder_ == null) {
          return java.util.Collections.unmodifiableList(spotPlan_);
        } else {
          return spotPlanBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
       *
       * <pre>
       *排期信息Config
       * </pre>
       */
      public int getSpotPlanCount() {
        if (spotPlanBuilder_ == null) {
          return spotPlan_.size();
        } else {
          return spotPlanBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
       *
       * <pre>
       *排期信息Config
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution.SpotPlan getSpotPlan(int index) {
        if (spotPlanBuilder_ == null) {
          return spotPlan_.get(index);
        } else {
          return spotPlanBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
       *
       * <pre>
       *排期信息Config
       * </pre>
       */
      public Builder setSpotPlan(
          int index, de.cache.DeliveryMessage.Solution.SpotPlan value) {
        if (spotPlanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpotPlanIsMutable();
          spotPlan_.set(index, value);
          onChanged();
        } else {
          spotPlanBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
       *
       * <pre>
       *排期信息Config
       * </pre>
       */
      public Builder setSpotPlan(
          int index, de.cache.DeliveryMessage.Solution.SpotPlan.Builder builderForValue) {
        if (spotPlanBuilder_ == null) {
          ensureSpotPlanIsMutable();
          spotPlan_.set(index, builderForValue.build());
          onChanged();
        } else {
          spotPlanBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
       *
       * <pre>
       *排期信息Config
       * </pre>
       */
      public Builder addSpotPlan(de.cache.DeliveryMessage.Solution.SpotPlan value) {
        if (spotPlanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpotPlanIsMutable();
          spotPlan_.add(value);
          onChanged();
        } else {
          spotPlanBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
       *
       * <pre>
       *排期信息Config
       * </pre>
       */
      public Builder addSpotPlan(
          int index, de.cache.DeliveryMessage.Solution.SpotPlan value) {
        if (spotPlanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpotPlanIsMutable();
          spotPlan_.add(index, value);
          onChanged();
        } else {
          spotPlanBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
       *
       * <pre>
       *排期信息Config
       * </pre>
       */
      public Builder addSpotPlan(
          de.cache.DeliveryMessage.Solution.SpotPlan.Builder builderForValue) {
        if (spotPlanBuilder_ == null) {
          ensureSpotPlanIsMutable();
          spotPlan_.add(builderForValue.build());
          onChanged();
        } else {
          spotPlanBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
       *
       * <pre>
       *排期信息Config
       * </pre>
       */
      public Builder addSpotPlan(
          int index, de.cache.DeliveryMessage.Solution.SpotPlan.Builder builderForValue) {
        if (spotPlanBuilder_ == null) {
          ensureSpotPlanIsMutable();
          spotPlan_.add(index, builderForValue.build());
          onChanged();
        } else {
          spotPlanBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
       *
       * <pre>
       *排期信息Config
       * </pre>
       */
      public Builder addAllSpotPlan(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.Solution.SpotPlan> values) {
        if (spotPlanBuilder_ == null) {
          ensureSpotPlanIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, spotPlan_);
          onChanged();
        } else {
          spotPlanBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
       *
       * <pre>
       *排期信息Config
       * </pre>
       */
      public Builder clearSpotPlan() {
        if (spotPlanBuilder_ == null) {
          spotPlan_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          spotPlanBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
       *
       * <pre>
       *排期信息Config
       * </pre>
       */
      public Builder removeSpotPlan(int index) {
        if (spotPlanBuilder_ == null) {
          ensureSpotPlanIsMutable();
          spotPlan_.remove(index);
          onChanged();
        } else {
          spotPlanBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
       *
       * <pre>
       *排期信息Config
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution.SpotPlan.Builder getSpotPlanBuilder(
          int index) {
        return getSpotPlanFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
       *
       * <pre>
       *排期信息Config
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution.SpotPlanOrBuilder getSpotPlanOrBuilder(
          int index) {
        if (spotPlanBuilder_ == null) {
          return spotPlan_.get(index);  } else {
          return spotPlanBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
       *
       * <pre>
       *排期信息Config
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.Solution.SpotPlanOrBuilder> 
           getSpotPlanOrBuilderList() {
        if (spotPlanBuilder_ != null) {
          return spotPlanBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(spotPlan_);
        }
      }
      /**
       * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
       *
       * <pre>
       *排期信息Config
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution.SpotPlan.Builder addSpotPlanBuilder() {
        return getSpotPlanFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.Solution.SpotPlan.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
       *
       * <pre>
       *排期信息Config
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution.SpotPlan.Builder addSpotPlanBuilder(
          int index) {
        return getSpotPlanFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.Solution.SpotPlan.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.Solution.SpotPlan spotPlan = 15;</code>
       *
       * <pre>
       *排期信息Config
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.Solution.SpotPlan.Builder> 
           getSpotPlanBuilderList() {
        return getSpotPlanFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.Solution.SpotPlan, de.cache.DeliveryMessage.Solution.SpotPlan.Builder, de.cache.DeliveryMessage.Solution.SpotPlanOrBuilder> 
          getSpotPlanFieldBuilder() {
        if (spotPlanBuilder_ == null) {
          spotPlanBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.Solution.SpotPlan, de.cache.DeliveryMessage.Solution.SpotPlan.Builder, de.cache.DeliveryMessage.Solution.SpotPlanOrBuilder>(
                  spotPlan_,
                  ((bitField0_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          spotPlan_ = null;
        }
        return spotPlanBuilder_;
      }

      private de.cache.DeliveryMessage.Solution.SolutionTarget targets_ = de.cache.DeliveryMessage.Solution.SolutionTarget.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.Solution.SolutionTarget, de.cache.DeliveryMessage.Solution.SolutionTarget.Builder, de.cache.DeliveryMessage.Solution.SolutionTargetOrBuilder> targetsBuilder_;
      /**
       * <code>optional .de.cache.Solution.SolutionTarget targets = 16;</code>
       *
       * <pre>
       *投放定向信息
       * </pre>
       */
      public boolean hasTargets() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .de.cache.Solution.SolutionTarget targets = 16;</code>
       *
       * <pre>
       *投放定向信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution.SolutionTarget getTargets() {
        if (targetsBuilder_ == null) {
          return targets_;
        } else {
          return targetsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .de.cache.Solution.SolutionTarget targets = 16;</code>
       *
       * <pre>
       *投放定向信息
       * </pre>
       */
      public Builder setTargets(de.cache.DeliveryMessage.Solution.SolutionTarget value) {
        if (targetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          targets_ = value;
          onChanged();
        } else {
          targetsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .de.cache.Solution.SolutionTarget targets = 16;</code>
       *
       * <pre>
       *投放定向信息
       * </pre>
       */
      public Builder setTargets(
          de.cache.DeliveryMessage.Solution.SolutionTarget.Builder builderForValue) {
        if (targetsBuilder_ == null) {
          targets_ = builderForValue.build();
          onChanged();
        } else {
          targetsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .de.cache.Solution.SolutionTarget targets = 16;</code>
       *
       * <pre>
       *投放定向信息
       * </pre>
       */
      public Builder mergeTargets(de.cache.DeliveryMessage.Solution.SolutionTarget value) {
        if (targetsBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000) &&
              targets_ != de.cache.DeliveryMessage.Solution.SolutionTarget.getDefaultInstance()) {
            targets_ =
              de.cache.DeliveryMessage.Solution.SolutionTarget.newBuilder(targets_).mergeFrom(value).buildPartial();
          } else {
            targets_ = value;
          }
          onChanged();
        } else {
          targetsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .de.cache.Solution.SolutionTarget targets = 16;</code>
       *
       * <pre>
       *投放定向信息
       * </pre>
       */
      public Builder clearTargets() {
        if (targetsBuilder_ == null) {
          targets_ = de.cache.DeliveryMessage.Solution.SolutionTarget.getDefaultInstance();
          onChanged();
        } else {
          targetsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .de.cache.Solution.SolutionTarget targets = 16;</code>
       *
       * <pre>
       *投放定向信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution.SolutionTarget.Builder getTargetsBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getTargetsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .de.cache.Solution.SolutionTarget targets = 16;</code>
       *
       * <pre>
       *投放定向信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution.SolutionTargetOrBuilder getTargetsOrBuilder() {
        if (targetsBuilder_ != null) {
          return targetsBuilder_.getMessageOrBuilder();
        } else {
          return targets_;
        }
      }
      /**
       * <code>optional .de.cache.Solution.SolutionTarget targets = 16;</code>
       *
       * <pre>
       *投放定向信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.Solution.SolutionTarget, de.cache.DeliveryMessage.Solution.SolutionTarget.Builder, de.cache.DeliveryMessage.Solution.SolutionTargetOrBuilder> 
          getTargetsFieldBuilder() {
        if (targetsBuilder_ == null) {
          targetsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.cache.DeliveryMessage.Solution.SolutionTarget, de.cache.DeliveryMessage.Solution.SolutionTarget.Builder, de.cache.DeliveryMessage.Solution.SolutionTargetOrBuilder>(
                  getTargets(),
                  getParentForChildren(),
                  isClean());
          targets_ = null;
        }
        return targetsBuilder_;
      }

      private java.util.List<java.lang.Long> channelId_ = java.util.Collections.emptyList();
      private void ensureChannelIdIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          channelId_ = new java.util.ArrayList<java.lang.Long>(channelId_);
          bitField0_ |= 0x00010000;
         }
      }
      /**
       * <code>repeated int64 channelId = 17;</code>
       *
       * <pre>
       *绑定广告Ids
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getChannelIdList() {
        return java.util.Collections.unmodifiableList(channelId_);
      }
      /**
       * <code>repeated int64 channelId = 17;</code>
       *
       * <pre>
       *绑定广告Ids
       * </pre>
       */
      public int getChannelIdCount() {
        return channelId_.size();
      }
      /**
       * <code>repeated int64 channelId = 17;</code>
       *
       * <pre>
       *绑定广告Ids
       * </pre>
       */
      public long getChannelId(int index) {
        return channelId_.get(index);
      }
      /**
       * <code>repeated int64 channelId = 17;</code>
       *
       * <pre>
       *绑定广告Ids
       * </pre>
       */
      public Builder setChannelId(
          int index, long value) {
        ensureChannelIdIsMutable();
        channelId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 channelId = 17;</code>
       *
       * <pre>
       *绑定广告Ids
       * </pre>
       */
      public Builder addChannelId(long value) {
        ensureChannelIdIsMutable();
        channelId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 channelId = 17;</code>
       *
       * <pre>
       *绑定广告Ids
       * </pre>
       */
      public Builder addAllChannelId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureChannelIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, channelId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 channelId = 17;</code>
       *
       * <pre>
       *绑定广告Ids
       * </pre>
       */
      public Builder clearChannelId() {
        channelId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> bannerId_ = java.util.Collections.emptyList();
      private void ensureBannerIdIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          bannerId_ = new java.util.ArrayList<java.lang.Long>(bannerId_);
          bitField0_ |= 0x00020000;
         }
      }
      /**
       * <code>repeated int64 bannerId = 18;</code>
       *
       * <pre>
       *绑定创意Ids
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getBannerIdList() {
        return java.util.Collections.unmodifiableList(bannerId_);
      }
      /**
       * <code>repeated int64 bannerId = 18;</code>
       *
       * <pre>
       *绑定创意Ids
       * </pre>
       */
      public int getBannerIdCount() {
        return bannerId_.size();
      }
      /**
       * <code>repeated int64 bannerId = 18;</code>
       *
       * <pre>
       *绑定创意Ids
       * </pre>
       */
      public long getBannerId(int index) {
        return bannerId_.get(index);
      }
      /**
       * <code>repeated int64 bannerId = 18;</code>
       *
       * <pre>
       *绑定创意Ids
       * </pre>
       */
      public Builder setBannerId(
          int index, long value) {
        ensureBannerIdIsMutable();
        bannerId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 bannerId = 18;</code>
       *
       * <pre>
       *绑定创意Ids
       * </pre>
       */
      public Builder addBannerId(long value) {
        ensureBannerIdIsMutable();
        bannerId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 bannerId = 18;</code>
       *
       * <pre>
       *绑定创意Ids
       * </pre>
       */
      public Builder addAllBannerId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureBannerIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, bannerId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 bannerId = 18;</code>
       *
       * <pre>
       *绑定创意Ids
       * </pre>
       */
      public Builder clearBannerId() {
        bannerId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }

      private long bannerPoolId_ ;
      /**
       * <code>optional int64 bannerPoolId = 19;</code>
       *
       * <pre>
       *(报表用)bannerGroup的父级
       * </pre>
       */
      public boolean hasBannerPoolId() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int64 bannerPoolId = 19;</code>
       *
       * <pre>
       *(报表用)bannerGroup的父级
       * </pre>
       */
      public long getBannerPoolId() {
        return bannerPoolId_;
      }
      /**
       * <code>optional int64 bannerPoolId = 19;</code>
       *
       * <pre>
       *(报表用)bannerGroup的父级
       * </pre>
       */
      public Builder setBannerPoolId(long value) {
        bitField0_ |= 0x00040000;
        bannerPoolId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 bannerPoolId = 19;</code>
       *
       * <pre>
       *(报表用)bannerGroup的父级
       * </pre>
       */
      public Builder clearBannerPoolId() {
        bitField0_ = (bitField0_ & ~0x00040000);
        bannerPoolId_ = 0L;
        onChanged();
        return this;
      }

      private long bannerGroupId_ ;
      /**
       * <code>optional int64 bannerGroupId = 20;</code>
       *
       * <pre>
       *(报表用)创意组id,抽象组合,并非是真实banner的父级,与投放唯一对应
       * </pre>
       */
      public boolean hasBannerGroupId() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int64 bannerGroupId = 20;</code>
       *
       * <pre>
       *(报表用)创意组id,抽象组合,并非是真实banner的父级,与投放唯一对应
       * </pre>
       */
      public long getBannerGroupId() {
        return bannerGroupId_;
      }
      /**
       * <code>optional int64 bannerGroupId = 20;</code>
       *
       * <pre>
       *(报表用)创意组id,抽象组合,并非是真实banner的父级,与投放唯一对应
       * </pre>
       */
      public Builder setBannerGroupId(long value) {
        bitField0_ |= 0x00080000;
        bannerGroupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 bannerGroupId = 20;</code>
       *
       * <pre>
       *(报表用)创意组id,抽象组合,并非是真实banner的父级,与投放唯一对应
       * </pre>
       */
      public Builder clearBannerGroupId() {
        bitField0_ = (bitField0_ & ~0x00080000);
        bannerGroupId_ = 0L;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.GlobalSwitch status_ = de.cache.DeliveryMessage.GlobalSwitch.ON;
      /**
       * <code>optional .de.cache.GlobalSwitch status = 21 [default = ON];</code>
       *
       * <pre>
       *数据状态（1=有效、0=无效）
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .de.cache.GlobalSwitch status = 21 [default = ON];</code>
       *
       * <pre>
       *数据状态（1=有效、0=无效）
       * </pre>
       */
      public de.cache.DeliveryMessage.GlobalSwitch getStatus() {
        return status_;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch status = 21 [default = ON];</code>
       *
       * <pre>
       *数据状态（1=有效、0=无效）
       * </pre>
       */
      public Builder setStatus(de.cache.DeliveryMessage.GlobalSwitch value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00100000;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch status = 21 [default = ON];</code>
       *
       * <pre>
       *数据状态（1=有效、0=无效）
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00100000);
        status_ = de.cache.DeliveryMessage.GlobalSwitch.ON;
        onChanged();
        return this;
      }

      private long price_ ;
      /**
       * <code>optional int64 price = 22;</code>
       *
       * <pre>
       *价格（imedia使用）
       * </pre>
       */
      public boolean hasPrice() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int64 price = 22;</code>
       *
       * <pre>
       *价格（imedia使用）
       * </pre>
       */
      public long getPrice() {
        return price_;
      }
      /**
       * <code>optional int64 price = 22;</code>
       *
       * <pre>
       *价格（imedia使用）
       * </pre>
       */
      public Builder setPrice(long value) {
        bitField0_ |= 0x00200000;
        price_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 price = 22;</code>
       *
       * <pre>
       *价格（imedia使用）
       * </pre>
       */
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00200000);
        price_ = 0L;
        onChanged();
        return this;
      }

      private long extraEffectIndicators_ ;
      /**
       * <code>optional int64 extraEffectIndicators = 23;</code>
       *
       * <pre>
       *附加效果指标的限值
       * </pre>
       */
      public boolean hasExtraEffectIndicators() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int64 extraEffectIndicators = 23;</code>
       *
       * <pre>
       *附加效果指标的限值
       * </pre>
       */
      public long getExtraEffectIndicators() {
        return extraEffectIndicators_;
      }
      /**
       * <code>optional int64 extraEffectIndicators = 23;</code>
       *
       * <pre>
       *附加效果指标的限值
       * </pre>
       */
      public Builder setExtraEffectIndicators(long value) {
        bitField0_ |= 0x00400000;
        extraEffectIndicators_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 extraEffectIndicators = 23;</code>
       *
       * <pre>
       *附加效果指标的限值
       * </pre>
       */
      public Builder clearExtraEffectIndicators() {
        bitField0_ = (bitField0_ & ~0x00400000);
        extraEffectIndicators_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> adNetworkId_ = java.util.Collections.emptyList();
      private void ensureAdNetworkIdIsMutable() {
        if (!((bitField0_ & 0x00800000) == 0x00800000)) {
          adNetworkId_ = new java.util.ArrayList<java.lang.Long>(adNetworkId_);
          bitField0_ |= 0x00800000;
         }
      }
      /**
       * <code>repeated int64 adNetworkId = 24;</code>
       *
       * <pre>
       *策略投放的adnetworkIds
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getAdNetworkIdList() {
        return java.util.Collections.unmodifiableList(adNetworkId_);
      }
      /**
       * <code>repeated int64 adNetworkId = 24;</code>
       *
       * <pre>
       *策略投放的adnetworkIds
       * </pre>
       */
      public int getAdNetworkIdCount() {
        return adNetworkId_.size();
      }
      /**
       * <code>repeated int64 adNetworkId = 24;</code>
       *
       * <pre>
       *策略投放的adnetworkIds
       * </pre>
       */
      public long getAdNetworkId(int index) {
        return adNetworkId_.get(index);
      }
      /**
       * <code>repeated int64 adNetworkId = 24;</code>
       *
       * <pre>
       *策略投放的adnetworkIds
       * </pre>
       */
      public Builder setAdNetworkId(
          int index, long value) {
        ensureAdNetworkIdIsMutable();
        adNetworkId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 adNetworkId = 24;</code>
       *
       * <pre>
       *策略投放的adnetworkIds
       * </pre>
       */
      public Builder addAdNetworkId(long value) {
        ensureAdNetworkIdIsMutable();
        adNetworkId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 adNetworkId = 24;</code>
       *
       * <pre>
       *策略投放的adnetworkIds
       * </pre>
       */
      public Builder addAllAdNetworkId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureAdNetworkIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, adNetworkId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 adNetworkId = 24;</code>
       *
       * <pre>
       *策略投放的adnetworkIds
       * </pre>
       */
      public Builder clearAdNetworkId() {
        adNetworkId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00800000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:de.cache.Solution)
    }

    static {
      defaultInstance = new Solution(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:de.cache.Solution)
  }

  public interface BannerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.cache.Banner)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *创意id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *创意id
     * </pre>
     */
    long getId();

    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加/修改、删除）
     * </pre>
     */
    boolean hasCmd();
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加/修改、删除）
     * </pre>
     */
    de.cache.DeliveryMessage.Command getCmd();

    /**
     * <code>optional int32 weight = 3;</code>
     *
     * <pre>
     *权重
     * </pre>
     */
    boolean hasWeight();
    /**
     * <code>optional int32 weight = 3;</code>
     *
     * <pre>
     *权重
     * </pre>
     */
    int getWeight();

    /**
     * <code>optional int64 startTimestamp = 4;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    boolean hasStartTimestamp();
    /**
     * <code>optional int64 startTimestamp = 4;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    long getStartTimestamp();

    /**
     * <code>optional int64 endTimestamp = 5;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    boolean hasEndTimestamp();
    /**
     * <code>optional int64 endTimestamp = 5;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    long getEndTimestamp();

    /**
     * <code>optional uint64 size = 6;</code>
     *
     * <pre>
     *素材大小(Byte)
     * </pre>
     */
    boolean hasSize();
    /**
     * <code>optional uint64 size = 6;</code>
     *
     * <pre>
     *素材大小(Byte)
     * </pre>
     */
    long getSize();

    /**
     * <code>optional string trackUrl = 7;</code>
     *
     * <pre>
     *显示监测地址
     * </pre>
     */
    boolean hasTrackUrl();
    /**
     * <code>optional string trackUrl = 7;</code>
     *
     * <pre>
     *显示监测地址
     * </pre>
     */
    java.lang.String getTrackUrl();
    /**
     * <code>optional string trackUrl = 7;</code>
     *
     * <pre>
     *显示监测地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getTrackUrlBytes();

    /**
     * <code>optional string tplName = 8;</code>
     *
     * <pre>
     *模板策略文件名(相对b目录) : 获取动态创意参数, otherFeatures.fileName=="b/p.${bannerid}.${dynamicTplId}"
     * </pre>
     */
    boolean hasTplName();
    /**
     * <code>optional string tplName = 8;</code>
     *
     * <pre>
     *模板策略文件名(相对b目录) : 获取动态创意参数, otherFeatures.fileName=="b/p.${bannerid}.${dynamicTplId}"
     * </pre>
     */
    java.lang.String getTplName();
    /**
     * <code>optional string tplName = 8;</code>
     *
     * <pre>
     *模板策略文件名(相对b目录) : 获取动态创意参数, otherFeatures.fileName=="b/p.${bannerid}.${dynamicTplId}"
     * </pre>
     */
    com.google.protobuf.ByteString
        getTplNameBytes();

    /**
     * <code>optional int32 width = 9;</code>
     *
     * <pre>
     *素材宽度
     * </pre>
     */
    boolean hasWidth();
    /**
     * <code>optional int32 width = 9;</code>
     *
     * <pre>
     *素材宽度
     * </pre>
     */
    int getWidth();

    /**
     * <code>optional int32 height = 10;</code>
     *
     * <pre>
     *素材高度
     * </pre>
     */
    boolean hasHeight();
    /**
     * <code>optional int32 height = 10;</code>
     *
     * <pre>
     *素材高度
     * </pre>
     */
    int getHeight();

    /**
     * <code>repeated .de.cache.TrafficSource trafficSource = 11;</code>
     *
     * <pre>
     *创意支持的流量来源
     * </pre>
     */
    java.util.List<de.cache.DeliveryMessage.TrafficSource> getTrafficSourceList();
    /**
     * <code>repeated .de.cache.TrafficSource trafficSource = 11;</code>
     *
     * <pre>
     *创意支持的流量来源
     * </pre>
     */
    int getTrafficSourceCount();
    /**
     * <code>repeated .de.cache.TrafficSource trafficSource = 11;</code>
     *
     * <pre>
     *创意支持的流量来源
     * </pre>
     */
    de.cache.DeliveryMessage.TrafficSource getTrafficSource(int index);

    /**
     * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
     */
    java.util.List<de.cache.DeliveryMessage.Banner.DisplayMethods> 
        getDisplayMethodList();
    /**
     * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
     */
    de.cache.DeliveryMessage.Banner.DisplayMethods getDisplayMethod(int index);
    /**
     * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
     */
    int getDisplayMethodCount();
    /**
     * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
     */
    java.util.List<? extends de.cache.DeliveryMessage.Banner.DisplayMethodsOrBuilder> 
        getDisplayMethodOrBuilderList();
    /**
     * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
     */
    de.cache.DeliveryMessage.Banner.DisplayMethodsOrBuilder getDisplayMethodOrBuilder(
        int index);

    /**
     * <code>optional .de.cache.GlobalSwitch Interstitial = 13 [default = OFF];</code>
     *
     * <pre>
     * </pre>
     */
    boolean hasInterstitial();
    /**
     * <code>optional .de.cache.GlobalSwitch Interstitial = 13 [default = OFF];</code>
     *
     * <pre>
     * </pre>
     */
    de.cache.DeliveryMessage.GlobalSwitch getInterstitial();

    /**
     * <code>optional .de.cache.GlobalSwitch mobileOptimized = 14 [default = OFF];</code>
     *
     * <pre>
     *移动优化
     * </pre>
     */
    boolean hasMobileOptimized();
    /**
     * <code>optional .de.cache.GlobalSwitch mobileOptimized = 14 [default = OFF];</code>
     *
     * <pre>
     *移动优化
     * </pre>
     */
    de.cache.DeliveryMessage.GlobalSwitch getMobileOptimized();

    /**
     * <code>optional .de.cache.GlobalSwitch status = 15 [default = ON];</code>
     *
     * <pre>
     *数据状态（1=有效、0=无效）
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional .de.cache.GlobalSwitch status = 15 [default = ON];</code>
     *
     * <pre>
     *数据状态（1=有效、0=无效）
     * </pre>
     */
    de.cache.DeliveryMessage.GlobalSwitch getStatus();

    /**
     * <code>optional string templateId = 16;</code>
     *
     * <pre>
     *创意类型, 对应g文件第9位
     * </pre>
     */
    boolean hasTemplateId();
    /**
     * <code>optional string templateId = 16;</code>
     *
     * <pre>
     *创意类型, 对应g文件第9位
     * </pre>
     */
    java.lang.String getTemplateId();
    /**
     * <code>optional string templateId = 16;</code>
     *
     * <pre>
     *创意类型, 对应g文件第9位
     * </pre>
     */
    com.google.protobuf.ByteString
        getTemplateIdBytes();

    /**
     * <code>optional int64 materialId = 17;</code>
     *
     * <pre>
     *素材ID,yaml文件使用
     * </pre>
     */
    boolean hasMaterialId();
    /**
     * <code>optional int64 materialId = 17;</code>
     *
     * <pre>
     *素材ID,yaml文件使用
     * </pre>
     */
    long getMaterialId();

    /**
     * <code>repeated int64 creativeType = 18;</code>
     *
     * <pre>
     *创意格式类型, g文件:第25位使用, 1:图文，2：视频，3：移动富媒体，4：富媒体, 6 : 移动创意类型
     * </pre>
     */
    java.util.List<java.lang.Long> getCreativeTypeList();
    /**
     * <code>repeated int64 creativeType = 18;</code>
     *
     * <pre>
     *创意格式类型, g文件:第25位使用, 1:图文，2：视频，3：移动富媒体，4：富媒体, 6 : 移动创意类型
     * </pre>
     */
    int getCreativeTypeCount();
    /**
     * <code>repeated int64 creativeType = 18;</code>
     *
     * <pre>
     *创意格式类型, g文件:第25位使用, 1:图文，2：视频，3：移动富媒体，4：富媒体, 6 : 移动创意类型
     * </pre>
     */
    long getCreativeType(int index);

    /**
     * <code>optional .de.cache.Banner.DynCreative dynCreative = 19;</code>
     *
     * <pre>
     *动态创意内容
     * </pre>
     */
    boolean hasDynCreative();
    /**
     * <code>optional .de.cache.Banner.DynCreative dynCreative = 19;</code>
     *
     * <pre>
     *动态创意内容
     * </pre>
     */
    de.cache.DeliveryMessage.Banner.DynCreative getDynCreative();
    /**
     * <code>optional .de.cache.Banner.DynCreative dynCreative = 19;</code>
     *
     * <pre>
     *动态创意内容
     * </pre>
     */
    de.cache.DeliveryMessage.Banner.DynCreativeOrBuilder getDynCreativeOrBuilder();

    /**
     * <code>repeated string clickMonUrl = 20;</code>
     *
     * <pre>
     *第三方点击监测地址
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getClickMonUrlList();
    /**
     * <code>repeated string clickMonUrl = 20;</code>
     *
     * <pre>
     *第三方点击监测地址
     * </pre>
     */
    int getClickMonUrlCount();
    /**
     * <code>repeated string clickMonUrl = 20;</code>
     *
     * <pre>
     *第三方点击监测地址
     * </pre>
     */
    java.lang.String getClickMonUrl(int index);
    /**
     * <code>repeated string clickMonUrl = 20;</code>
     *
     * <pre>
     *第三方点击监测地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getClickMonUrlBytes(int index);

    /**
     * <code>optional .de.cache.Banner.InteractionType interaction_type = 21;</code>
     *
     * <pre>
     * baidu: [App 允许的交互类型];
     * </pre>
     */
    boolean hasInteractionType();
    /**
     * <code>optional .de.cache.Banner.InteractionType interaction_type = 21;</code>
     *
     * <pre>
     * baidu: [App 允许的交互类型];
     * </pre>
     */
    de.cache.DeliveryMessage.Banner.InteractionType getInteractionType();

    /**
     * <code>optional int32 max_level = 22;</code>
     *
     * <pre>
     *max creative level
     * </pre>
     */
    boolean hasMaxLevel();
    /**
     * <code>optional int32 max_level = 22;</code>
     *
     * <pre>
     *max creative level
     * </pre>
     */
    int getMaxLevel();
  }
  /**
   * Protobuf type {@code de.cache.Banner}
   *
   * <pre>
   *创意数据
   * </pre>
   */
  public static final class Banner extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:de.cache.Banner)
      BannerOrBuilder {
    // Use Banner.newBuilder() to construct.
    private Banner(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Banner(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Banner defaultInstance;
    public static Banner getDefaultInstance() {
      return defaultInstance;
    }

    public Banner getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Banner(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.Command value = de.cache.DeliveryMessage.Command.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                cmd_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              weight_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              startTimestamp_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              endTimestamp_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              size_ = input.readUInt64();
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              trackUrl_ = bs;
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              tplName_ = bs;
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              width_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              height_ = input.readInt32();
              break;
            }
            case 88: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.TrafficSource value = de.cache.DeliveryMessage.TrafficSource.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(11, rawValue);
                } else {
                if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                  trafficSource_ = new java.util.ArrayList<de.cache.DeliveryMessage.TrafficSource>();
                  mutable_bitField0_ |= 0x00000400;
                }
                trafficSource_.add(value);
              }
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.TrafficSource value = de.cache.DeliveryMessage.TrafficSource.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(11, rawValue);
                  } else {
                  if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                    trafficSource_ = new java.util.ArrayList<de.cache.DeliveryMessage.TrafficSource>();
                    mutable_bitField0_ |= 0x00000400;
                  }
                  trafficSource_.add(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                displayMethod_ = new java.util.ArrayList<de.cache.DeliveryMessage.Banner.DisplayMethods>();
                mutable_bitField0_ |= 0x00000800;
              }
              displayMethod_.add(input.readMessage(de.cache.DeliveryMessage.Banner.DisplayMethods.PARSER, extensionRegistry));
              break;
            }
            case 104: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.GlobalSwitch value = de.cache.DeliveryMessage.GlobalSwitch.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(13, rawValue);
              } else {
                bitField0_ |= 0x00000400;
                interstitial_ = value;
              }
              break;
            }
            case 112: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.GlobalSwitch value = de.cache.DeliveryMessage.GlobalSwitch.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(14, rawValue);
              } else {
                bitField0_ |= 0x00000800;
                mobileOptimized_ = value;
              }
              break;
            }
            case 120: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.GlobalSwitch value = de.cache.DeliveryMessage.GlobalSwitch.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(15, rawValue);
              } else {
                bitField0_ |= 0x00001000;
                status_ = value;
              }
              break;
            }
            case 130: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00002000;
              templateId_ = bs;
              break;
            }
            case 136: {
              bitField0_ |= 0x00004000;
              materialId_ = input.readInt64();
              break;
            }
            case 144: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                creativeType_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00020000;
              }
              creativeType_.add(input.readInt64());
              break;
            }
            case 146: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
                creativeType_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00020000;
              }
              while (input.getBytesUntilLimit() > 0) {
                creativeType_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 154: {
              de.cache.DeliveryMessage.Banner.DynCreative.Builder subBuilder = null;
              if (((bitField0_ & 0x00008000) == 0x00008000)) {
                subBuilder = dynCreative_.toBuilder();
              }
              dynCreative_ = input.readMessage(de.cache.DeliveryMessage.Banner.DynCreative.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dynCreative_);
                dynCreative_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00008000;
              break;
            }
            case 162: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                clickMonUrl_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00080000;
              }
              clickMonUrl_.add(bs);
              break;
            }
            case 168: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.Banner.InteractionType value = de.cache.DeliveryMessage.Banner.InteractionType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(21, rawValue);
              } else {
                bitField0_ |= 0x00010000;
                interactionType_ = value;
              }
              break;
            }
            case 176: {
              bitField0_ |= 0x00020000;
              maxLevel_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          trafficSource_ = java.util.Collections.unmodifiableList(trafficSource_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          displayMethod_ = java.util.Collections.unmodifiableList(displayMethod_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          creativeType_ = java.util.Collections.unmodifiableList(creativeType_);
        }
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          clickMonUrl_ = clickMonUrl_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.internal_static_de_cache_Banner_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.cache.DeliveryMessage.internal_static_de_cache_Banner_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.cache.DeliveryMessage.Banner.class, de.cache.DeliveryMessage.Banner.Builder.class);
    }

    public static com.google.protobuf.Parser<Banner> PARSER =
        new com.google.protobuf.AbstractParser<Banner>() {
      public Banner parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Banner(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Banner> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code de.cache.Banner.InteractionType}
     *
     * <pre>
     * 电话、下载
     * </pre>
     */
    public enum InteractionType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>TELEPHONE = 0;</code>
       */
      TELEPHONE(0, 0),
      /**
       * <code>DOWNLOAD = 1;</code>
       */
      DOWNLOAD(1, 1),
      ;

      /**
       * <code>TELEPHONE = 0;</code>
       */
      public static final int TELEPHONE_VALUE = 0;
      /**
       * <code>DOWNLOAD = 1;</code>
       */
      public static final int DOWNLOAD_VALUE = 1;


      public final int getNumber() { return value; }

      public static InteractionType valueOf(int value) {
        switch (value) {
          case 0: return TELEPHONE;
          case 1: return DOWNLOAD;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<InteractionType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<InteractionType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<InteractionType>() {
              public InteractionType findValueByNumber(int number) {
                return InteractionType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.Banner.getDescriptor().getEnumTypes().get(0);
      }

      private static final InteractionType[] VALUES = values();

      public static InteractionType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private InteractionType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:de.cache.Banner.InteractionType)
    }

    public interface DisplayMethodsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:de.cache.Banner.DisplayMethods)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 adNetworkId = 1;</code>
       */
      boolean hasAdNetworkId();
      /**
       * <code>optional int32 adNetworkId = 1;</code>
       */
      int getAdNetworkId();

      /**
       * <code>optional string creativeType_unsed = 2;</code>
       *
       * <pre>
       *创意类型，模版字符名称，如flv、com //废弃，使用banner.creativeType
       * </pre>
       */
      boolean hasCreativeTypeUnsed();
      /**
       * <code>optional string creativeType_unsed = 2;</code>
       *
       * <pre>
       *创意类型，模版字符名称，如flv、com //废弃，使用banner.creativeType
       * </pre>
       */
      java.lang.String getCreativeTypeUnsed();
      /**
       * <code>optional string creativeType_unsed = 2;</code>
       *
       * <pre>
       *创意类型，模版字符名称，如flv、com //废弃，使用banner.creativeType
       * </pre>
       */
      com.google.protobuf.ByteString
          getCreativeTypeUnsedBytes();

      /**
       * <code>repeated string property = 3;</code>
       *
       * <pre>
       *创意的素材格式，如：mediamax 0-jpg，1-gif，2-swf，3-txt
       * </pre>
       */
      com.google.protobuf.ProtocolStringList
          getPropertyList();
      /**
       * <code>repeated string property = 3;</code>
       *
       * <pre>
       *创意的素材格式，如：mediamax 0-jpg，1-gif，2-swf，3-txt
       * </pre>
       */
      int getPropertyCount();
      /**
       * <code>repeated string property = 3;</code>
       *
       * <pre>
       *创意的素材格式，如：mediamax 0-jpg，1-gif，2-swf，3-txt
       * </pre>
       */
      java.lang.String getProperty(int index);
      /**
       * <code>repeated string property = 3;</code>
       *
       * <pre>
       *创意的素材格式，如：mediamax 0-jpg，1-gif，2-swf，3-txt
       * </pre>
       */
      com.google.protobuf.ByteString
          getPropertyBytes(int index);

      /**
       * <code>repeated string category = 4;</code>
       *
       * <pre>
       *创意所属行业，如：mediamax的X12Y01Z00v2012.1，表示网络服务
       * </pre>
       */
      com.google.protobuf.ProtocolStringList
          getCategoryList();
      /**
       * <code>repeated string category = 4;</code>
       *
       * <pre>
       *创意所属行业，如：mediamax的X12Y01Z00v2012.1，表示网络服务
       * </pre>
       */
      int getCategoryCount();
      /**
       * <code>repeated string category = 4;</code>
       *
       * <pre>
       *创意所属行业，如：mediamax的X12Y01Z00v2012.1，表示网络服务
       * </pre>
       */
      java.lang.String getCategory(int index);
      /**
       * <code>repeated string category = 4;</code>
       *
       * <pre>
       *创意所属行业，如：mediamax的X12Y01Z00v2012.1，表示网络服务
       * </pre>
       */
      com.google.protobuf.ByteString
          getCategoryBytes(int index);

      /**
       * <code>optional int64 responseId = 5;</code>
       *
       * <pre>
       *返回响应的创意id
       * </pre>
       */
      boolean hasResponseId();
      /**
       * <code>optional int64 responseId = 5;</code>
       *
       * <pre>
       *返回响应的创意id
       * </pre>
       */
      long getResponseId();

      /**
       * <code>optional string charset = 6;</code>
       *
       * <pre>
       *创意展示编码方式（GBK、UTF-8）
       * </pre>
       */
      boolean hasCharset();
      /**
       * <code>optional string charset = 6;</code>
       *
       * <pre>
       *创意展示编码方式（GBK、UTF-8）
       * </pre>
       */
      java.lang.String getCharset();
      /**
       * <code>optional string charset = 6;</code>
       *
       * <pre>
       *创意展示编码方式（GBK、UTF-8）
       * </pre>
       */
      com.google.protobuf.ByteString
          getCharsetBytes();

      /**
       * <code>optional string adType = 7;</code>
       *
       * <pre>
       *广告类型（smcustom=模板创意、custom=普通创意）
       * </pre>
       */
      boolean hasAdType();
      /**
       * <code>optional string adType = 7;</code>
       *
       * <pre>
       *广告类型（smcustom=模板创意、custom=普通创意）
       * </pre>
       */
      java.lang.String getAdType();
      /**
       * <code>optional string adType = 7;</code>
       *
       * <pre>
       *广告类型（smcustom=模板创意、custom=普通创意）
       * </pre>
       */
      com.google.protobuf.ByteString
          getAdTypeBytes();

      /**
       * <code>optional .de.cache.GlobalSwitch payFlag = 8 [default = OFF];</code>
       *
       * <pre>
       *付费标志（1为付费否则为0）
       * </pre>
       */
      boolean hasPayFlag();
      /**
       * <code>optional .de.cache.GlobalSwitch payFlag = 8 [default = OFF];</code>
       *
       * <pre>
       *付费标志（1为付费否则为0）
       * </pre>
       */
      de.cache.DeliveryMessage.GlobalSwitch getPayFlag();

      /**
       * <code>optional string tplCode = 9;</code>
       *
       * <pre>
       *创意模板的标识名，调用效果展示js方式使用
       * </pre>
       */
      boolean hasTplCode();
      /**
       * <code>optional string tplCode = 9;</code>
       *
       * <pre>
       *创意模板的标识名，调用效果展示js方式使用
       * </pre>
       */
      java.lang.String getTplCode();
      /**
       * <code>optional string tplCode = 9;</code>
       *
       * <pre>
       *创意模板的标识名，调用效果展示js方式使用
       * </pre>
       */
      com.google.protobuf.ByteString
          getTplCodeBytes();

      /**
       * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
       *
       * <pre>
       *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
       * </pre>
       */
      java.util.List<de.cache.DeliveryMessage.KeyValue> 
          getCustomInfoList();
      /**
       * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
       *
       * <pre>
       *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
       * </pre>
       */
      de.cache.DeliveryMessage.KeyValue getCustomInfo(int index);
      /**
       * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
       *
       * <pre>
       *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
       * </pre>
       */
      int getCustomInfoCount();
      /**
       * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
       *
       * <pre>
       *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
       * </pre>
       */
      java.util.List<? extends de.cache.DeliveryMessage.KeyValueOrBuilder> 
          getCustomInfoOrBuilderList();
      /**
       * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
       *
       * <pre>
       *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
       * </pre>
       */
      de.cache.DeliveryMessage.KeyValueOrBuilder getCustomInfoOrBuilder(
          int index);

      /**
       * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
       *
       * <pre>
       *创意素材
       * </pre>
       */
      java.util.List<de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo> 
          getMaterialList();
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
       *
       * <pre>
       *创意素材
       * </pre>
       */
      de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo getMaterial(int index);
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
       *
       * <pre>
       *创意素材
       * </pre>
       */
      int getMaterialCount();
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
       *
       * <pre>
       *创意素材
       * </pre>
       */
      java.util.List<? extends de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfoOrBuilder> 
          getMaterialOrBuilderList();
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
       *
       * <pre>
       *创意素材
       * </pre>
       */
      de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfoOrBuilder getMaterialOrBuilder(
          int index);

      /**
       * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
       *
       * <pre>
       *营销点代码
       * </pre>
       */
      java.util.List<de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint> 
          getTrackPointList();
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
       *
       * <pre>
       *营销点代码
       * </pre>
       */
      de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint getTrackPoint(int index);
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
       *
       * <pre>
       *营销点代码
       * </pre>
       */
      int getTrackPointCount();
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
       *
       * <pre>
       *营销点代码
       * </pre>
       */
      java.util.List<? extends de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPointOrBuilder> 
          getTrackPointOrBuilderList();
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
       *
       * <pre>
       *营销点代码
       * </pre>
       */
      de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPointOrBuilder getTrackPointOrBuilder(
          int index);

      /**
       * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
       *
       * <pre>
       *第三方监测代码  还支持 vedio third URL
       * </pre>
       */
      java.util.List<de.cache.DeliveryMessage.KeyValue> 
          getThirdUrlList();
      /**
       * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
       *
       * <pre>
       *第三方监测代码  还支持 vedio third URL
       * </pre>
       */
      de.cache.DeliveryMessage.KeyValue getThirdUrl(int index);
      /**
       * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
       *
       * <pre>
       *第三方监测代码  还支持 vedio third URL
       * </pre>
       */
      int getThirdUrlCount();
      /**
       * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
       *
       * <pre>
       *第三方监测代码  还支持 vedio third URL
       * </pre>
       */
      java.util.List<? extends de.cache.DeliveryMessage.KeyValueOrBuilder> 
          getThirdUrlOrBuilderList();
      /**
       * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
       *
       * <pre>
       *第三方监测代码  还支持 vedio third URL
       * </pre>
       */
      de.cache.DeliveryMessage.KeyValueOrBuilder getThirdUrlOrBuilder(
          int index);

      /**
       * <code>optional string targetOfNewWin = 14;</code>
       *
       * <pre>
       *广告创意点击后的浏览器打开方式
       * </pre>
       */
      boolean hasTargetOfNewWin();
      /**
       * <code>optional string targetOfNewWin = 14;</code>
       *
       * <pre>
       *广告创意点击后的浏览器打开方式
       * </pre>
       */
      java.lang.String getTargetOfNewWin();
      /**
       * <code>optional string targetOfNewWin = 14;</code>
       *
       * <pre>
       *广告创意点击后的浏览器打开方式
       * </pre>
       */
      com.google.protobuf.ByteString
          getTargetOfNewWinBytes();

      /**
       * <code>optional .de.cache.TrafficSource trafficSource = 15;</code>
       *
       * <pre>
       *具体维度下的流量来源,不做交集处理,soution上也需要有对应的来源设置项
       * </pre>
       */
      boolean hasTrafficSource();
      /**
       * <code>optional .de.cache.TrafficSource trafficSource = 15;</code>
       *
       * <pre>
       *具体维度下的流量来源,不做交集处理,soution上也需要有对应的来源设置项
       * </pre>
       */
      de.cache.DeliveryMessage.TrafficSource getTrafficSource();

      /**
       * <code>optional string sspCreativeId = 16;</code>
       *
       * <pre>
       *Exchange/SSP 创意ID add by nick 2014-05-30
       * </pre>
       */
      boolean hasSspCreativeId();
      /**
       * <code>optional string sspCreativeId = 16;</code>
       *
       * <pre>
       *Exchange/SSP 创意ID add by nick 2014-05-30
       * </pre>
       */
      java.lang.String getSspCreativeId();
      /**
       * <code>optional string sspCreativeId = 16;</code>
       *
       * <pre>
       *Exchange/SSP 创意ID add by nick 2014-05-30
       * </pre>
       */
      com.google.protobuf.ByteString
          getSspCreativeIdBytes();

      /**
       * <code>optional string sspUrl = 17;</code>
       *
       * <pre>
       *Exchange/SSP素材访问地址 add by nick 2014-05-30
       * </pre>
       */
      boolean hasSspUrl();
      /**
       * <code>optional string sspUrl = 17;</code>
       *
       * <pre>
       *Exchange/SSP素材访问地址 add by nick 2014-05-30
       * </pre>
       */
      java.lang.String getSspUrl();
      /**
       * <code>optional string sspUrl = 17;</code>
       *
       * <pre>
       *Exchange/SSP素材访问地址 add by nick 2014-05-30
       * </pre>
       */
      com.google.protobuf.ByteString
          getSspUrlBytes();

      /**
       * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
       *
       * <pre>
       *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
       * </pre>
       */
      java.util.List<de.cache.DeliveryMessage.KeyValue> 
          getSspPropertyList();
      /**
       * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
       *
       * <pre>
       *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
       * </pre>
       */
      de.cache.DeliveryMessage.KeyValue getSspProperty(int index);
      /**
       * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
       *
       * <pre>
       *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
       * </pre>
       */
      int getSspPropertyCount();
      /**
       * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
       *
       * <pre>
       *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
       * </pre>
       */
      java.util.List<? extends de.cache.DeliveryMessage.KeyValueOrBuilder> 
          getSspPropertyOrBuilderList();
      /**
       * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
       *
       * <pre>
       *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
       * </pre>
       */
      de.cache.DeliveryMessage.KeyValueOrBuilder getSspPropertyOrBuilder(
          int index);

      /**
       * <code>repeated .de.cache.OsType os_type = 19;</code>
       *
       * <pre>
       *os type is type the creative only for some one os
       * </pre>
       */
      java.util.List<de.cache.DeliveryMessage.OsType> getOsTypeList();
      /**
       * <code>repeated .de.cache.OsType os_type = 19;</code>
       *
       * <pre>
       *os type is type the creative only for some one os
       * </pre>
       */
      int getOsTypeCount();
      /**
       * <code>repeated .de.cache.OsType os_type = 19;</code>
       *
       * <pre>
       *os type is type the creative only for some one os
       * </pre>
       */
      de.cache.DeliveryMessage.OsType getOsType(int index);

      /**
       * <code>optional bool isSsl = 20;</code>
       *
       * <pre>
       *is the creative display ssl source
       * </pre>
       */
      boolean hasIsSsl();
      /**
       * <code>optional bool isSsl = 20;</code>
       *
       * <pre>
       *is the creative display ssl source
       * </pre>
       */
      boolean getIsSsl();
    }
    /**
     * Protobuf type {@code de.cache.Banner.DisplayMethods}
     */
    public static final class DisplayMethods extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:de.cache.Banner.DisplayMethods)
        DisplayMethodsOrBuilder {
      // Use DisplayMethods.newBuilder() to construct.
      private DisplayMethods(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private DisplayMethods(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final DisplayMethods defaultInstance;
      public static DisplayMethods getDefaultInstance() {
        return defaultInstance;
      }

      public DisplayMethods getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private DisplayMethods(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                adNetworkId_ = input.readInt32();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                creativeTypeUnsed_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  property_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000004;
                }
                property_.add(bs);
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  category_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000008;
                }
                category_.add(bs);
                break;
              }
              case 40: {
                bitField0_ |= 0x00000004;
                responseId_ = input.readInt64();
                break;
              }
              case 50: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000008;
                charset_ = bs;
                break;
              }
              case 58: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000010;
                adType_ = bs;
                break;
              }
              case 64: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.GlobalSwitch value = de.cache.DeliveryMessage.GlobalSwitch.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(8, rawValue);
                } else {
                  bitField0_ |= 0x00000020;
                  payFlag_ = value;
                }
                break;
              }
              case 74: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000040;
                tplCode_ = bs;
                break;
              }
              case 82: {
                if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                  customInfo_ = new java.util.ArrayList<de.cache.DeliveryMessage.KeyValue>();
                  mutable_bitField0_ |= 0x00000200;
                }
                customInfo_.add(input.readMessage(de.cache.DeliveryMessage.KeyValue.PARSER, extensionRegistry));
                break;
              }
              case 90: {
                if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                  material_ = new java.util.ArrayList<de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo>();
                  mutable_bitField0_ |= 0x00000400;
                }
                material_.add(input.readMessage(de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo.PARSER, extensionRegistry));
                break;
              }
              case 98: {
                if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                  trackPoint_ = new java.util.ArrayList<de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint>();
                  mutable_bitField0_ |= 0x00000800;
                }
                trackPoint_.add(input.readMessage(de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint.PARSER, extensionRegistry));
                break;
              }
              case 106: {
                if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                  thirdUrl_ = new java.util.ArrayList<de.cache.DeliveryMessage.KeyValue>();
                  mutable_bitField0_ |= 0x00001000;
                }
                thirdUrl_.add(input.readMessage(de.cache.DeliveryMessage.KeyValue.PARSER, extensionRegistry));
                break;
              }
              case 114: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000080;
                targetOfNewWin_ = bs;
                break;
              }
              case 120: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.TrafficSource value = de.cache.DeliveryMessage.TrafficSource.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(15, rawValue);
                } else {
                  bitField0_ |= 0x00000100;
                  trafficSource_ = value;
                }
                break;
              }
              case 130: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000200;
                sspCreativeId_ = bs;
                break;
              }
              case 138: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000400;
                sspUrl_ = bs;
                break;
              }
              case 146: {
                if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                  sspProperty_ = new java.util.ArrayList<de.cache.DeliveryMessage.KeyValue>();
                  mutable_bitField0_ |= 0x00020000;
                }
                sspProperty_.add(input.readMessage(de.cache.DeliveryMessage.KeyValue.PARSER, extensionRegistry));
                break;
              }
              case 152: {
                int rawValue = input.readEnum();
                de.cache.DeliveryMessage.OsType value = de.cache.DeliveryMessage.OsType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(19, rawValue);
                  } else {
                  if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                    osType_ = new java.util.ArrayList<de.cache.DeliveryMessage.OsType>();
                    mutable_bitField0_ |= 0x00040000;
                  }
                  osType_.add(value);
                }
                break;
              }
              case 154: {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while(input.getBytesUntilLimit() > 0) {
                  int rawValue = input.readEnum();
                  de.cache.DeliveryMessage.OsType value = de.cache.DeliveryMessage.OsType.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(19, rawValue);
                    } else {
                    if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                      osType_ = new java.util.ArrayList<de.cache.DeliveryMessage.OsType>();
                      mutable_bitField0_ |= 0x00040000;
                    }
                    osType_.add(value);
                  }
                }
                input.popLimit(oldLimit);
                break;
              }
              case 160: {
                bitField0_ |= 0x00000800;
                isSsl_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            property_ = property_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            category_ = category_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
            customInfo_ = java.util.Collections.unmodifiableList(customInfo_);
          }
          if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
            material_ = java.util.Collections.unmodifiableList(material_);
          }
          if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
            trackPoint_ = java.util.Collections.unmodifiableList(trackPoint_);
          }
          if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
            thirdUrl_ = java.util.Collections.unmodifiableList(thirdUrl_);
          }
          if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
            sspProperty_ = java.util.Collections.unmodifiableList(sspProperty_);
          }
          if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
            osType_ = java.util.Collections.unmodifiableList(osType_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Banner_DisplayMethods_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Banner_DisplayMethods_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.Banner.DisplayMethods.class, de.cache.DeliveryMessage.Banner.DisplayMethods.Builder.class);
      }

      public static com.google.protobuf.Parser<DisplayMethods> PARSER =
          new com.google.protobuf.AbstractParser<DisplayMethods>() {
        public DisplayMethods parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DisplayMethods(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<DisplayMethods> getParserForType() {
        return PARSER;
      }

      public interface MaterialInfoOrBuilder extends
          // @@protoc_insertion_point(interface_extends:de.cache.Banner.DisplayMethods.MaterialInfo)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional string format = 1;</code>
         *
         * <pre>
         *素材格式
         * </pre>
         */
        boolean hasFormat();
        /**
         * <code>optional string format = 1;</code>
         *
         * <pre>
         *素材格式
         * </pre>
         */
        java.lang.String getFormat();
        /**
         * <code>optional string format = 1;</code>
         *
         * <pre>
         *素材格式
         * </pre>
         */
        com.google.protobuf.ByteString
            getFormatBytes();

        /**
         * <code>optional string url = 2;</code>
         *
         * <pre>
         *素材地址
         * </pre>
         */
        boolean hasUrl();
        /**
         * <code>optional string url = 2;</code>
         *
         * <pre>
         *素材地址
         * </pre>
         */
        java.lang.String getUrl();
        /**
         * <code>optional string url = 2;</code>
         *
         * <pre>
         *素材地址
         * </pre>
         */
        com.google.protobuf.ByteString
            getUrlBytes();

        /**
         * <code>optional string landingPage = 3;</code>
         *
         * <pre>
         *目标地址
         * </pre>
         */
        boolean hasLandingPage();
        /**
         * <code>optional string landingPage = 3;</code>
         *
         * <pre>
         *目标地址
         * </pre>
         */
        java.lang.String getLandingPage();
        /**
         * <code>optional string landingPage = 3;</code>
         *
         * <pre>
         *目标地址
         * </pre>
         */
        com.google.protobuf.ByteString
            getLandingPageBytes();

        /**
         * <code>optional int32 duration = 4;</code>
         *
         * <pre>
         *视频或动画时长
         * </pre>
         */
        boolean hasDuration();
        /**
         * <code>optional int32 duration = 4;</code>
         *
         * <pre>
         *视频或动画时长
         * </pre>
         */
        int getDuration();

        /**
         * <code>optional string text = 5;</code>
         *
         * <pre>
         *创意文字
         * </pre>
         */
        boolean hasText();
        /**
         * <code>optional string text = 5;</code>
         *
         * <pre>
         *创意文字
         * </pre>
         */
        java.lang.String getText();
        /**
         * <code>optional string text = 5;</code>
         *
         * <pre>
         *创意文字
         * </pre>
         */
        com.google.protobuf.ByteString
            getTextBytes();

        /**
         * <code>optional string custom = 6;</code>
         *
         * <pre>
         *自定义内容（广告展示模板可以根据此自定义内容进行显示控制）
         * </pre>
         */
        boolean hasCustom();
        /**
         * <code>optional string custom = 6;</code>
         *
         * <pre>
         *自定义内容（广告展示模板可以根据此自定义内容进行显示控制）
         * </pre>
         */
        java.lang.String getCustom();
        /**
         * <code>optional string custom = 6;</code>
         *
         * <pre>
         *自定义内容（广告展示模板可以根据此自定义内容进行显示控制）
         * </pre>
         */
        com.google.protobuf.ByteString
            getCustomBytes();
      }
      /**
       * Protobuf type {@code de.cache.Banner.DisplayMethods.MaterialInfo}
       *
       * <pre>
       *创意素材信息
       * </pre>
       */
      public static final class MaterialInfo extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:de.cache.Banner.DisplayMethods.MaterialInfo)
          MaterialInfoOrBuilder {
        // Use MaterialInfo.newBuilder() to construct.
        private MaterialInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private MaterialInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final MaterialInfo defaultInstance;
        public static MaterialInfo getDefaultInstance() {
          return defaultInstance;
        }

        public MaterialInfo getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private MaterialInfo(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000001;
                  format_ = bs;
                  break;
                }
                case 18: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000002;
                  url_ = bs;
                  break;
                }
                case 26: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000004;
                  landingPage_ = bs;
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  duration_ = input.readInt32();
                  break;
                }
                case 42: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000010;
                  text_ = bs;
                  break;
                }
                case 50: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000020;
                  custom_ = bs;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Banner_DisplayMethods_MaterialInfo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Banner_DisplayMethods_MaterialInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo.class, de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo.Builder.class);
        }

        public static com.google.protobuf.Parser<MaterialInfo> PARSER =
            new com.google.protobuf.AbstractParser<MaterialInfo>() {
          public MaterialInfo parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new MaterialInfo(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<MaterialInfo> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int FORMAT_FIELD_NUMBER = 1;
        private java.lang.Object format_;
        /**
         * <code>optional string format = 1;</code>
         *
         * <pre>
         *素材格式
         * </pre>
         */
        public boolean hasFormat() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string format = 1;</code>
         *
         * <pre>
         *素材格式
         * </pre>
         */
        public java.lang.String getFormat() {
          java.lang.Object ref = format_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              format_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string format = 1;</code>
         *
         * <pre>
         *素材格式
         * </pre>
         */
        public com.google.protobuf.ByteString
            getFormatBytes() {
          java.lang.Object ref = format_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            format_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int URL_FIELD_NUMBER = 2;
        private java.lang.Object url_;
        /**
         * <code>optional string url = 2;</code>
         *
         * <pre>
         *素材地址
         * </pre>
         */
        public boolean hasUrl() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string url = 2;</code>
         *
         * <pre>
         *素材地址
         * </pre>
         */
        public java.lang.String getUrl() {
          java.lang.Object ref = url_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              url_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string url = 2;</code>
         *
         * <pre>
         *素材地址
         * </pre>
         */
        public com.google.protobuf.ByteString
            getUrlBytes() {
          java.lang.Object ref = url_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            url_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int LANDINGPAGE_FIELD_NUMBER = 3;
        private java.lang.Object landingPage_;
        /**
         * <code>optional string landingPage = 3;</code>
         *
         * <pre>
         *目标地址
         * </pre>
         */
        public boolean hasLandingPage() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string landingPage = 3;</code>
         *
         * <pre>
         *目标地址
         * </pre>
         */
        public java.lang.String getLandingPage() {
          java.lang.Object ref = landingPage_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              landingPage_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string landingPage = 3;</code>
         *
         * <pre>
         *目标地址
         * </pre>
         */
        public com.google.protobuf.ByteString
            getLandingPageBytes() {
          java.lang.Object ref = landingPage_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            landingPage_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int DURATION_FIELD_NUMBER = 4;
        private int duration_;
        /**
         * <code>optional int32 duration = 4;</code>
         *
         * <pre>
         *视频或动画时长
         * </pre>
         */
        public boolean hasDuration() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 duration = 4;</code>
         *
         * <pre>
         *视频或动画时长
         * </pre>
         */
        public int getDuration() {
          return duration_;
        }

        public static final int TEXT_FIELD_NUMBER = 5;
        private java.lang.Object text_;
        /**
         * <code>optional string text = 5;</code>
         *
         * <pre>
         *创意文字
         * </pre>
         */
        public boolean hasText() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional string text = 5;</code>
         *
         * <pre>
         *创意文字
         * </pre>
         */
        public java.lang.String getText() {
          java.lang.Object ref = text_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              text_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string text = 5;</code>
         *
         * <pre>
         *创意文字
         * </pre>
         */
        public com.google.protobuf.ByteString
            getTextBytes() {
          java.lang.Object ref = text_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            text_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int CUSTOM_FIELD_NUMBER = 6;
        private java.lang.Object custom_;
        /**
         * <code>optional string custom = 6;</code>
         *
         * <pre>
         *自定义内容（广告展示模板可以根据此自定义内容进行显示控制）
         * </pre>
         */
        public boolean hasCustom() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional string custom = 6;</code>
         *
         * <pre>
         *自定义内容（广告展示模板可以根据此自定义内容进行显示控制）
         * </pre>
         */
        public java.lang.String getCustom() {
          java.lang.Object ref = custom_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              custom_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string custom = 6;</code>
         *
         * <pre>
         *自定义内容（广告展示模板可以根据此自定义内容进行显示控制）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getCustomBytes() {
          java.lang.Object ref = custom_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            custom_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private void initFields() {
          format_ = "";
          url_ = "";
          landingPage_ = "";
          duration_ = 0;
          text_ = "";
          custom_ = "";
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeBytes(1, getFormatBytes());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeBytes(2, getUrlBytes());
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeBytes(3, getLandingPageBytes());
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeInt32(4, duration_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            output.writeBytes(5, getTextBytes());
          }
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            output.writeBytes(6, getCustomBytes());
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(1, getFormatBytes());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(2, getUrlBytes());
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(3, getLandingPageBytes());
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(4, duration_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(5, getTextBytes());
          }
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(6, getCustomBytes());
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code de.cache.Banner.DisplayMethods.MaterialInfo}
         *
         * <pre>
         *创意素材信息
         * </pre>
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:de.cache.Banner.DisplayMethods.MaterialInfo)
            de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfoOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return de.cache.DeliveryMessage.internal_static_de_cache_Banner_DisplayMethods_MaterialInfo_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return de.cache.DeliveryMessage.internal_static_de_cache_Banner_DisplayMethods_MaterialInfo_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo.class, de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo.Builder.class);
          }

          // Construct using de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            format_ = "";
            bitField0_ = (bitField0_ & ~0x00000001);
            url_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            landingPage_ = "";
            bitField0_ = (bitField0_ & ~0x00000004);
            duration_ = 0;
            bitField0_ = (bitField0_ & ~0x00000008);
            text_ = "";
            bitField0_ = (bitField0_ & ~0x00000010);
            custom_ = "";
            bitField0_ = (bitField0_ & ~0x00000020);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return de.cache.DeliveryMessage.internal_static_de_cache_Banner_DisplayMethods_MaterialInfo_descriptor;
          }

          public de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo getDefaultInstanceForType() {
            return de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo.getDefaultInstance();
          }

          public de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo build() {
            de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo buildPartial() {
            de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo result = new de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.format_ = format_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.url_ = url_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.landingPage_ = landingPage_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000008;
            }
            result.duration_ = duration_;
            if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
              to_bitField0_ |= 0x00000010;
            }
            result.text_ = text_;
            if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
              to_bitField0_ |= 0x00000020;
            }
            result.custom_ = custom_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo) {
              return mergeFrom((de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo other) {
            if (other == de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo.getDefaultInstance()) return this;
            if (other.hasFormat()) {
              bitField0_ |= 0x00000001;
              format_ = other.format_;
              onChanged();
            }
            if (other.hasUrl()) {
              bitField0_ |= 0x00000002;
              url_ = other.url_;
              onChanged();
            }
            if (other.hasLandingPage()) {
              bitField0_ |= 0x00000004;
              landingPage_ = other.landingPage_;
              onChanged();
            }
            if (other.hasDuration()) {
              setDuration(other.getDuration());
            }
            if (other.hasText()) {
              bitField0_ |= 0x00000010;
              text_ = other.text_;
              onChanged();
            }
            if (other.hasCustom()) {
              bitField0_ |= 0x00000020;
              custom_ = other.custom_;
              onChanged();
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object format_ = "";
          /**
           * <code>optional string format = 1;</code>
           *
           * <pre>
           *素材格式
           * </pre>
           */
          public boolean hasFormat() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional string format = 1;</code>
           *
           * <pre>
           *素材格式
           * </pre>
           */
          public java.lang.String getFormat() {
            java.lang.Object ref = format_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                format_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string format = 1;</code>
           *
           * <pre>
           *素材格式
           * </pre>
           */
          public com.google.protobuf.ByteString
              getFormatBytes() {
            java.lang.Object ref = format_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              format_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string format = 1;</code>
           *
           * <pre>
           *素材格式
           * </pre>
           */
          public Builder setFormat(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            format_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string format = 1;</code>
           *
           * <pre>
           *素材格式
           * </pre>
           */
          public Builder clearFormat() {
            bitField0_ = (bitField0_ & ~0x00000001);
            format_ = getDefaultInstance().getFormat();
            onChanged();
            return this;
          }
          /**
           * <code>optional string format = 1;</code>
           *
           * <pre>
           *素材格式
           * </pre>
           */
          public Builder setFormatBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            format_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object url_ = "";
          /**
           * <code>optional string url = 2;</code>
           *
           * <pre>
           *素材地址
           * </pre>
           */
          public boolean hasUrl() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional string url = 2;</code>
           *
           * <pre>
           *素材地址
           * </pre>
           */
          public java.lang.String getUrl() {
            java.lang.Object ref = url_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                url_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string url = 2;</code>
           *
           * <pre>
           *素材地址
           * </pre>
           */
          public com.google.protobuf.ByteString
              getUrlBytes() {
            java.lang.Object ref = url_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              url_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string url = 2;</code>
           *
           * <pre>
           *素材地址
           * </pre>
           */
          public Builder setUrl(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            url_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string url = 2;</code>
           *
           * <pre>
           *素材地址
           * </pre>
           */
          public Builder clearUrl() {
            bitField0_ = (bitField0_ & ~0x00000002);
            url_ = getDefaultInstance().getUrl();
            onChanged();
            return this;
          }
          /**
           * <code>optional string url = 2;</code>
           *
           * <pre>
           *素材地址
           * </pre>
           */
          public Builder setUrlBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            url_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object landingPage_ = "";
          /**
           * <code>optional string landingPage = 3;</code>
           *
           * <pre>
           *目标地址
           * </pre>
           */
          public boolean hasLandingPage() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional string landingPage = 3;</code>
           *
           * <pre>
           *目标地址
           * </pre>
           */
          public java.lang.String getLandingPage() {
            java.lang.Object ref = landingPage_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                landingPage_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string landingPage = 3;</code>
           *
           * <pre>
           *目标地址
           * </pre>
           */
          public com.google.protobuf.ByteString
              getLandingPageBytes() {
            java.lang.Object ref = landingPage_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              landingPage_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string landingPage = 3;</code>
           *
           * <pre>
           *目标地址
           * </pre>
           */
          public Builder setLandingPage(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
            landingPage_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string landingPage = 3;</code>
           *
           * <pre>
           *目标地址
           * </pre>
           */
          public Builder clearLandingPage() {
            bitField0_ = (bitField0_ & ~0x00000004);
            landingPage_ = getDefaultInstance().getLandingPage();
            onChanged();
            return this;
          }
          /**
           * <code>optional string landingPage = 3;</code>
           *
           * <pre>
           *目标地址
           * </pre>
           */
          public Builder setLandingPageBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
            landingPage_ = value;
            onChanged();
            return this;
          }

          private int duration_ ;
          /**
           * <code>optional int32 duration = 4;</code>
           *
           * <pre>
           *视频或动画时长
           * </pre>
           */
          public boolean hasDuration() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>optional int32 duration = 4;</code>
           *
           * <pre>
           *视频或动画时长
           * </pre>
           */
          public int getDuration() {
            return duration_;
          }
          /**
           * <code>optional int32 duration = 4;</code>
           *
           * <pre>
           *视频或动画时长
           * </pre>
           */
          public Builder setDuration(int value) {
            bitField0_ |= 0x00000008;
            duration_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 duration = 4;</code>
           *
           * <pre>
           *视频或动画时长
           * </pre>
           */
          public Builder clearDuration() {
            bitField0_ = (bitField0_ & ~0x00000008);
            duration_ = 0;
            onChanged();
            return this;
          }

          private java.lang.Object text_ = "";
          /**
           * <code>optional string text = 5;</code>
           *
           * <pre>
           *创意文字
           * </pre>
           */
          public boolean hasText() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
          }
          /**
           * <code>optional string text = 5;</code>
           *
           * <pre>
           *创意文字
           * </pre>
           */
          public java.lang.String getText() {
            java.lang.Object ref = text_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                text_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string text = 5;</code>
           *
           * <pre>
           *创意文字
           * </pre>
           */
          public com.google.protobuf.ByteString
              getTextBytes() {
            java.lang.Object ref = text_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              text_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string text = 5;</code>
           *
           * <pre>
           *创意文字
           * </pre>
           */
          public Builder setText(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
            text_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string text = 5;</code>
           *
           * <pre>
           *创意文字
           * </pre>
           */
          public Builder clearText() {
            bitField0_ = (bitField0_ & ~0x00000010);
            text_ = getDefaultInstance().getText();
            onChanged();
            return this;
          }
          /**
           * <code>optional string text = 5;</code>
           *
           * <pre>
           *创意文字
           * </pre>
           */
          public Builder setTextBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
            text_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object custom_ = "";
          /**
           * <code>optional string custom = 6;</code>
           *
           * <pre>
           *自定义内容（广告展示模板可以根据此自定义内容进行显示控制）
           * </pre>
           */
          public boolean hasCustom() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
          }
          /**
           * <code>optional string custom = 6;</code>
           *
           * <pre>
           *自定义内容（广告展示模板可以根据此自定义内容进行显示控制）
           * </pre>
           */
          public java.lang.String getCustom() {
            java.lang.Object ref = custom_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                custom_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string custom = 6;</code>
           *
           * <pre>
           *自定义内容（广告展示模板可以根据此自定义内容进行显示控制）
           * </pre>
           */
          public com.google.protobuf.ByteString
              getCustomBytes() {
            java.lang.Object ref = custom_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              custom_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string custom = 6;</code>
           *
           * <pre>
           *自定义内容（广告展示模板可以根据此自定义内容进行显示控制）
           * </pre>
           */
          public Builder setCustom(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
            custom_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string custom = 6;</code>
           *
           * <pre>
           *自定义内容（广告展示模板可以根据此自定义内容进行显示控制）
           * </pre>
           */
          public Builder clearCustom() {
            bitField0_ = (bitField0_ & ~0x00000020);
            custom_ = getDefaultInstance().getCustom();
            onChanged();
            return this;
          }
          /**
           * <code>optional string custom = 6;</code>
           *
           * <pre>
           *自定义内容（广告展示模板可以根据此自定义内容进行显示控制）
           * </pre>
           */
          public Builder setCustomBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
            custom_ = value;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:de.cache.Banner.DisplayMethods.MaterialInfo)
        }

        static {
          defaultInstance = new MaterialInfo(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:de.cache.Banner.DisplayMethods.MaterialInfo)
      }

      public interface TrackPointOrBuilder extends
          // @@protoc_insertion_point(interface_extends:de.cache.Banner.DisplayMethods.TrackPoint)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional string type = 1;</code>
         *
         * <pre>
         *类型
         * </pre>
         */
        boolean hasType();
        /**
         * <code>optional string type = 1;</code>
         *
         * <pre>
         *类型
         * </pre>
         */
        java.lang.String getType();
        /**
         * <code>optional string type = 1;</code>
         *
         * <pre>
         *类型
         * </pre>
         */
        com.google.protobuf.ByteString
            getTypeBytes();

        /**
         * <code>optional string uniqueCode = 2;</code>
         *
         * <pre>
         *标识
         * </pre>
         */
        boolean hasUniqueCode();
        /**
         * <code>optional string uniqueCode = 2;</code>
         *
         * <pre>
         *标识
         * </pre>
         */
        java.lang.String getUniqueCode();
        /**
         * <code>optional string uniqueCode = 2;</code>
         *
         * <pre>
         *标识
         * </pre>
         */
        com.google.protobuf.ByteString
            getUniqueCodeBytes();

        /**
         * <code>optional int32 duration = 3;</code>
         *
         * <pre>
         *时长
         * </pre>
         */
        boolean hasDuration();
        /**
         * <code>optional int32 duration = 3;</code>
         *
         * <pre>
         *时长
         * </pre>
         */
        int getDuration();

        /**
         * <code>optional string url = 4;</code>
         *
         * <pre>
         *代码
         * </pre>
         */
        boolean hasUrl();
        /**
         * <code>optional string url = 4;</code>
         *
         * <pre>
         *代码
         * </pre>
         */
        java.lang.String getUrl();
        /**
         * <code>optional string url = 4;</code>
         *
         * <pre>
         *代码
         * </pre>
         */
        com.google.protobuf.ByteString
            getUrlBytes();
      }
      /**
       * Protobuf type {@code de.cache.Banner.DisplayMethods.TrackPoint}
       *
       * <pre>
       *营销点代码
       * </pre>
       */
      public static final class TrackPoint extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:de.cache.Banner.DisplayMethods.TrackPoint)
          TrackPointOrBuilder {
        // Use TrackPoint.newBuilder() to construct.
        private TrackPoint(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private TrackPoint(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final TrackPoint defaultInstance;
        public static TrackPoint getDefaultInstance() {
          return defaultInstance;
        }

        public TrackPoint getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private TrackPoint(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000001;
                  type_ = bs;
                  break;
                }
                case 18: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000002;
                  uniqueCode_ = bs;
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  duration_ = input.readInt32();
                  break;
                }
                case 34: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000008;
                  url_ = bs;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Banner_DisplayMethods_TrackPoint_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Banner_DisplayMethods_TrackPoint_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint.class, de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint.Builder.class);
        }

        public static com.google.protobuf.Parser<TrackPoint> PARSER =
            new com.google.protobuf.AbstractParser<TrackPoint>() {
          public TrackPoint parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new TrackPoint(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<TrackPoint> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int TYPE_FIELD_NUMBER = 1;
        private java.lang.Object type_;
        /**
         * <code>optional string type = 1;</code>
         *
         * <pre>
         *类型
         * </pre>
         */
        public boolean hasType() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string type = 1;</code>
         *
         * <pre>
         *类型
         * </pre>
         */
        public java.lang.String getType() {
          java.lang.Object ref = type_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              type_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string type = 1;</code>
         *
         * <pre>
         *类型
         * </pre>
         */
        public com.google.protobuf.ByteString
            getTypeBytes() {
          java.lang.Object ref = type_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            type_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int UNIQUECODE_FIELD_NUMBER = 2;
        private java.lang.Object uniqueCode_;
        /**
         * <code>optional string uniqueCode = 2;</code>
         *
         * <pre>
         *标识
         * </pre>
         */
        public boolean hasUniqueCode() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string uniqueCode = 2;</code>
         *
         * <pre>
         *标识
         * </pre>
         */
        public java.lang.String getUniqueCode() {
          java.lang.Object ref = uniqueCode_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              uniqueCode_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string uniqueCode = 2;</code>
         *
         * <pre>
         *标识
         * </pre>
         */
        public com.google.protobuf.ByteString
            getUniqueCodeBytes() {
          java.lang.Object ref = uniqueCode_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            uniqueCode_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int DURATION_FIELD_NUMBER = 3;
        private int duration_;
        /**
         * <code>optional int32 duration = 3;</code>
         *
         * <pre>
         *时长
         * </pre>
         */
        public boolean hasDuration() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 duration = 3;</code>
         *
         * <pre>
         *时长
         * </pre>
         */
        public int getDuration() {
          return duration_;
        }

        public static final int URL_FIELD_NUMBER = 4;
        private java.lang.Object url_;
        /**
         * <code>optional string url = 4;</code>
         *
         * <pre>
         *代码
         * </pre>
         */
        public boolean hasUrl() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional string url = 4;</code>
         *
         * <pre>
         *代码
         * </pre>
         */
        public java.lang.String getUrl() {
          java.lang.Object ref = url_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              url_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string url = 4;</code>
         *
         * <pre>
         *代码
         * </pre>
         */
        public com.google.protobuf.ByteString
            getUrlBytes() {
          java.lang.Object ref = url_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            url_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private void initFields() {
          type_ = "";
          uniqueCode_ = "";
          duration_ = 0;
          url_ = "";
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeBytes(1, getTypeBytes());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeBytes(2, getUniqueCodeBytes());
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeInt32(3, duration_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeBytes(4, getUrlBytes());
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(1, getTypeBytes());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(2, getUniqueCodeBytes());
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(3, duration_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(4, getUrlBytes());
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code de.cache.Banner.DisplayMethods.TrackPoint}
         *
         * <pre>
         *营销点代码
         * </pre>
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:de.cache.Banner.DisplayMethods.TrackPoint)
            de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPointOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return de.cache.DeliveryMessage.internal_static_de_cache_Banner_DisplayMethods_TrackPoint_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return de.cache.DeliveryMessage.internal_static_de_cache_Banner_DisplayMethods_TrackPoint_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint.class, de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint.Builder.class);
          }

          // Construct using de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            type_ = "";
            bitField0_ = (bitField0_ & ~0x00000001);
            uniqueCode_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            duration_ = 0;
            bitField0_ = (bitField0_ & ~0x00000004);
            url_ = "";
            bitField0_ = (bitField0_ & ~0x00000008);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return de.cache.DeliveryMessage.internal_static_de_cache_Banner_DisplayMethods_TrackPoint_descriptor;
          }

          public de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint getDefaultInstanceForType() {
            return de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint.getDefaultInstance();
          }

          public de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint build() {
            de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint buildPartial() {
            de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint result = new de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.type_ = type_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.uniqueCode_ = uniqueCode_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.duration_ = duration_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000008;
            }
            result.url_ = url_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint) {
              return mergeFrom((de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint other) {
            if (other == de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint.getDefaultInstance()) return this;
            if (other.hasType()) {
              bitField0_ |= 0x00000001;
              type_ = other.type_;
              onChanged();
            }
            if (other.hasUniqueCode()) {
              bitField0_ |= 0x00000002;
              uniqueCode_ = other.uniqueCode_;
              onChanged();
            }
            if (other.hasDuration()) {
              setDuration(other.getDuration());
            }
            if (other.hasUrl()) {
              bitField0_ |= 0x00000008;
              url_ = other.url_;
              onChanged();
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object type_ = "";
          /**
           * <code>optional string type = 1;</code>
           *
           * <pre>
           *类型
           * </pre>
           */
          public boolean hasType() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional string type = 1;</code>
           *
           * <pre>
           *类型
           * </pre>
           */
          public java.lang.String getType() {
            java.lang.Object ref = type_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                type_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string type = 1;</code>
           *
           * <pre>
           *类型
           * </pre>
           */
          public com.google.protobuf.ByteString
              getTypeBytes() {
            java.lang.Object ref = type_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              type_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string type = 1;</code>
           *
           * <pre>
           *类型
           * </pre>
           */
          public Builder setType(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            type_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string type = 1;</code>
           *
           * <pre>
           *类型
           * </pre>
           */
          public Builder clearType() {
            bitField0_ = (bitField0_ & ~0x00000001);
            type_ = getDefaultInstance().getType();
            onChanged();
            return this;
          }
          /**
           * <code>optional string type = 1;</code>
           *
           * <pre>
           *类型
           * </pre>
           */
          public Builder setTypeBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            type_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object uniqueCode_ = "";
          /**
           * <code>optional string uniqueCode = 2;</code>
           *
           * <pre>
           *标识
           * </pre>
           */
          public boolean hasUniqueCode() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional string uniqueCode = 2;</code>
           *
           * <pre>
           *标识
           * </pre>
           */
          public java.lang.String getUniqueCode() {
            java.lang.Object ref = uniqueCode_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                uniqueCode_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string uniqueCode = 2;</code>
           *
           * <pre>
           *标识
           * </pre>
           */
          public com.google.protobuf.ByteString
              getUniqueCodeBytes() {
            java.lang.Object ref = uniqueCode_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              uniqueCode_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string uniqueCode = 2;</code>
           *
           * <pre>
           *标识
           * </pre>
           */
          public Builder setUniqueCode(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            uniqueCode_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string uniqueCode = 2;</code>
           *
           * <pre>
           *标识
           * </pre>
           */
          public Builder clearUniqueCode() {
            bitField0_ = (bitField0_ & ~0x00000002);
            uniqueCode_ = getDefaultInstance().getUniqueCode();
            onChanged();
            return this;
          }
          /**
           * <code>optional string uniqueCode = 2;</code>
           *
           * <pre>
           *标识
           * </pre>
           */
          public Builder setUniqueCodeBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            uniqueCode_ = value;
            onChanged();
            return this;
          }

          private int duration_ ;
          /**
           * <code>optional int32 duration = 3;</code>
           *
           * <pre>
           *时长
           * </pre>
           */
          public boolean hasDuration() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional int32 duration = 3;</code>
           *
           * <pre>
           *时长
           * </pre>
           */
          public int getDuration() {
            return duration_;
          }
          /**
           * <code>optional int32 duration = 3;</code>
           *
           * <pre>
           *时长
           * </pre>
           */
          public Builder setDuration(int value) {
            bitField0_ |= 0x00000004;
            duration_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 duration = 3;</code>
           *
           * <pre>
           *时长
           * </pre>
           */
          public Builder clearDuration() {
            bitField0_ = (bitField0_ & ~0x00000004);
            duration_ = 0;
            onChanged();
            return this;
          }

          private java.lang.Object url_ = "";
          /**
           * <code>optional string url = 4;</code>
           *
           * <pre>
           *代码
           * </pre>
           */
          public boolean hasUrl() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>optional string url = 4;</code>
           *
           * <pre>
           *代码
           * </pre>
           */
          public java.lang.String getUrl() {
            java.lang.Object ref = url_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                url_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string url = 4;</code>
           *
           * <pre>
           *代码
           * </pre>
           */
          public com.google.protobuf.ByteString
              getUrlBytes() {
            java.lang.Object ref = url_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              url_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string url = 4;</code>
           *
           * <pre>
           *代码
           * </pre>
           */
          public Builder setUrl(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
            url_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string url = 4;</code>
           *
           * <pre>
           *代码
           * </pre>
           */
          public Builder clearUrl() {
            bitField0_ = (bitField0_ & ~0x00000008);
            url_ = getDefaultInstance().getUrl();
            onChanged();
            return this;
          }
          /**
           * <code>optional string url = 4;</code>
           *
           * <pre>
           *代码
           * </pre>
           */
          public Builder setUrlBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
            url_ = value;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:de.cache.Banner.DisplayMethods.TrackPoint)
        }

        static {
          defaultInstance = new TrackPoint(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:de.cache.Banner.DisplayMethods.TrackPoint)
      }

      private int bitField0_;
      public static final int ADNETWORKID_FIELD_NUMBER = 1;
      private int adNetworkId_;
      /**
       * <code>optional int32 adNetworkId = 1;</code>
       */
      public boolean hasAdNetworkId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 adNetworkId = 1;</code>
       */
      public int getAdNetworkId() {
        return adNetworkId_;
      }

      public static final int CREATIVETYPE_UNSED_FIELD_NUMBER = 2;
      private java.lang.Object creativeTypeUnsed_;
      /**
       * <code>optional string creativeType_unsed = 2;</code>
       *
       * <pre>
       *创意类型，模版字符名称，如flv、com //废弃，使用banner.creativeType
       * </pre>
       */
      public boolean hasCreativeTypeUnsed() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string creativeType_unsed = 2;</code>
       *
       * <pre>
       *创意类型，模版字符名称，如flv、com //废弃，使用banner.creativeType
       * </pre>
       */
      public java.lang.String getCreativeTypeUnsed() {
        java.lang.Object ref = creativeTypeUnsed_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            creativeTypeUnsed_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string creativeType_unsed = 2;</code>
       *
       * <pre>
       *创意类型，模版字符名称，如flv、com //废弃，使用banner.creativeType
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCreativeTypeUnsedBytes() {
        java.lang.Object ref = creativeTypeUnsed_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          creativeTypeUnsed_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PROPERTY_FIELD_NUMBER = 3;
      private com.google.protobuf.LazyStringList property_;
      /**
       * <code>repeated string property = 3;</code>
       *
       * <pre>
       *创意的素材格式，如：mediamax 0-jpg，1-gif，2-swf，3-txt
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getPropertyList() {
        return property_;
      }
      /**
       * <code>repeated string property = 3;</code>
       *
       * <pre>
       *创意的素材格式，如：mediamax 0-jpg，1-gif，2-swf，3-txt
       * </pre>
       */
      public int getPropertyCount() {
        return property_.size();
      }
      /**
       * <code>repeated string property = 3;</code>
       *
       * <pre>
       *创意的素材格式，如：mediamax 0-jpg，1-gif，2-swf，3-txt
       * </pre>
       */
      public java.lang.String getProperty(int index) {
        return property_.get(index);
      }
      /**
       * <code>repeated string property = 3;</code>
       *
       * <pre>
       *创意的素材格式，如：mediamax 0-jpg，1-gif，2-swf，3-txt
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPropertyBytes(int index) {
        return property_.getByteString(index);
      }

      public static final int CATEGORY_FIELD_NUMBER = 4;
      private com.google.protobuf.LazyStringList category_;
      /**
       * <code>repeated string category = 4;</code>
       *
       * <pre>
       *创意所属行业，如：mediamax的X12Y01Z00v2012.1，表示网络服务
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getCategoryList() {
        return category_;
      }
      /**
       * <code>repeated string category = 4;</code>
       *
       * <pre>
       *创意所属行业，如：mediamax的X12Y01Z00v2012.1，表示网络服务
       * </pre>
       */
      public int getCategoryCount() {
        return category_.size();
      }
      /**
       * <code>repeated string category = 4;</code>
       *
       * <pre>
       *创意所属行业，如：mediamax的X12Y01Z00v2012.1，表示网络服务
       * </pre>
       */
      public java.lang.String getCategory(int index) {
        return category_.get(index);
      }
      /**
       * <code>repeated string category = 4;</code>
       *
       * <pre>
       *创意所属行业，如：mediamax的X12Y01Z00v2012.1，表示网络服务
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCategoryBytes(int index) {
        return category_.getByteString(index);
      }

      public static final int RESPONSEID_FIELD_NUMBER = 5;
      private long responseId_;
      /**
       * <code>optional int64 responseId = 5;</code>
       *
       * <pre>
       *返回响应的创意id
       * </pre>
       */
      public boolean hasResponseId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 responseId = 5;</code>
       *
       * <pre>
       *返回响应的创意id
       * </pre>
       */
      public long getResponseId() {
        return responseId_;
      }

      public static final int CHARSET_FIELD_NUMBER = 6;
      private java.lang.Object charset_;
      /**
       * <code>optional string charset = 6;</code>
       *
       * <pre>
       *创意展示编码方式（GBK、UTF-8）
       * </pre>
       */
      public boolean hasCharset() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string charset = 6;</code>
       *
       * <pre>
       *创意展示编码方式（GBK、UTF-8）
       * </pre>
       */
      public java.lang.String getCharset() {
        java.lang.Object ref = charset_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            charset_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string charset = 6;</code>
       *
       * <pre>
       *创意展示编码方式（GBK、UTF-8）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCharsetBytes() {
        java.lang.Object ref = charset_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          charset_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ADTYPE_FIELD_NUMBER = 7;
      private java.lang.Object adType_;
      /**
       * <code>optional string adType = 7;</code>
       *
       * <pre>
       *广告类型（smcustom=模板创意、custom=普通创意）
       * </pre>
       */
      public boolean hasAdType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string adType = 7;</code>
       *
       * <pre>
       *广告类型（smcustom=模板创意、custom=普通创意）
       * </pre>
       */
      public java.lang.String getAdType() {
        java.lang.Object ref = adType_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            adType_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string adType = 7;</code>
       *
       * <pre>
       *广告类型（smcustom=模板创意、custom=普通创意）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAdTypeBytes() {
        java.lang.Object ref = adType_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          adType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PAYFLAG_FIELD_NUMBER = 8;
      private de.cache.DeliveryMessage.GlobalSwitch payFlag_;
      /**
       * <code>optional .de.cache.GlobalSwitch payFlag = 8 [default = OFF];</code>
       *
       * <pre>
       *付费标志（1为付费否则为0）
       * </pre>
       */
      public boolean hasPayFlag() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .de.cache.GlobalSwitch payFlag = 8 [default = OFF];</code>
       *
       * <pre>
       *付费标志（1为付费否则为0）
       * </pre>
       */
      public de.cache.DeliveryMessage.GlobalSwitch getPayFlag() {
        return payFlag_;
      }

      public static final int TPLCODE_FIELD_NUMBER = 9;
      private java.lang.Object tplCode_;
      /**
       * <code>optional string tplCode = 9;</code>
       *
       * <pre>
       *创意模板的标识名，调用效果展示js方式使用
       * </pre>
       */
      public boolean hasTplCode() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string tplCode = 9;</code>
       *
       * <pre>
       *创意模板的标识名，调用效果展示js方式使用
       * </pre>
       */
      public java.lang.String getTplCode() {
        java.lang.Object ref = tplCode_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tplCode_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string tplCode = 9;</code>
       *
       * <pre>
       *创意模板的标识名，调用效果展示js方式使用
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTplCodeBytes() {
        java.lang.Object ref = tplCode_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tplCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int CUSTOMINFO_FIELD_NUMBER = 10;
      private java.util.List<de.cache.DeliveryMessage.KeyValue> customInfo_;
      /**
       * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
       *
       * <pre>
       *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.KeyValue> getCustomInfoList() {
        return customInfo_;
      }
      /**
       * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
       *
       * <pre>
       *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.KeyValueOrBuilder> 
          getCustomInfoOrBuilderList() {
        return customInfo_;
      }
      /**
       * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
       *
       * <pre>
       *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
       * </pre>
       */
      public int getCustomInfoCount() {
        return customInfo_.size();
      }
      /**
       * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
       *
       * <pre>
       *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
       * </pre>
       */
      public de.cache.DeliveryMessage.KeyValue getCustomInfo(int index) {
        return customInfo_.get(index);
      }
      /**
       * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
       *
       * <pre>
       *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
       * </pre>
       */
      public de.cache.DeliveryMessage.KeyValueOrBuilder getCustomInfoOrBuilder(
          int index) {
        return customInfo_.get(index);
      }

      public static final int MATERIAL_FIELD_NUMBER = 11;
      private java.util.List<de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo> material_;
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
       *
       * <pre>
       *创意素材
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo> getMaterialList() {
        return material_;
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
       *
       * <pre>
       *创意素材
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfoOrBuilder> 
          getMaterialOrBuilderList() {
        return material_;
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
       *
       * <pre>
       *创意素材
       * </pre>
       */
      public int getMaterialCount() {
        return material_.size();
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
       *
       * <pre>
       *创意素材
       * </pre>
       */
      public de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo getMaterial(int index) {
        return material_.get(index);
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
       *
       * <pre>
       *创意素材
       * </pre>
       */
      public de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfoOrBuilder getMaterialOrBuilder(
          int index) {
        return material_.get(index);
      }

      public static final int TRACKPOINT_FIELD_NUMBER = 12;
      private java.util.List<de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint> trackPoint_;
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
       *
       * <pre>
       *营销点代码
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint> getTrackPointList() {
        return trackPoint_;
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
       *
       * <pre>
       *营销点代码
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPointOrBuilder> 
          getTrackPointOrBuilderList() {
        return trackPoint_;
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
       *
       * <pre>
       *营销点代码
       * </pre>
       */
      public int getTrackPointCount() {
        return trackPoint_.size();
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
       *
       * <pre>
       *营销点代码
       * </pre>
       */
      public de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint getTrackPoint(int index) {
        return trackPoint_.get(index);
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
       *
       * <pre>
       *营销点代码
       * </pre>
       */
      public de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPointOrBuilder getTrackPointOrBuilder(
          int index) {
        return trackPoint_.get(index);
      }

      public static final int THIRDURL_FIELD_NUMBER = 13;
      private java.util.List<de.cache.DeliveryMessage.KeyValue> thirdUrl_;
      /**
       * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
       *
       * <pre>
       *第三方监测代码  还支持 vedio third URL
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.KeyValue> getThirdUrlList() {
        return thirdUrl_;
      }
      /**
       * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
       *
       * <pre>
       *第三方监测代码  还支持 vedio third URL
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.KeyValueOrBuilder> 
          getThirdUrlOrBuilderList() {
        return thirdUrl_;
      }
      /**
       * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
       *
       * <pre>
       *第三方监测代码  还支持 vedio third URL
       * </pre>
       */
      public int getThirdUrlCount() {
        return thirdUrl_.size();
      }
      /**
       * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
       *
       * <pre>
       *第三方监测代码  还支持 vedio third URL
       * </pre>
       */
      public de.cache.DeliveryMessage.KeyValue getThirdUrl(int index) {
        return thirdUrl_.get(index);
      }
      /**
       * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
       *
       * <pre>
       *第三方监测代码  还支持 vedio third URL
       * </pre>
       */
      public de.cache.DeliveryMessage.KeyValueOrBuilder getThirdUrlOrBuilder(
          int index) {
        return thirdUrl_.get(index);
      }

      public static final int TARGETOFNEWWIN_FIELD_NUMBER = 14;
      private java.lang.Object targetOfNewWin_;
      /**
       * <code>optional string targetOfNewWin = 14;</code>
       *
       * <pre>
       *广告创意点击后的浏览器打开方式
       * </pre>
       */
      public boolean hasTargetOfNewWin() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string targetOfNewWin = 14;</code>
       *
       * <pre>
       *广告创意点击后的浏览器打开方式
       * </pre>
       */
      public java.lang.String getTargetOfNewWin() {
        java.lang.Object ref = targetOfNewWin_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            targetOfNewWin_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string targetOfNewWin = 14;</code>
       *
       * <pre>
       *广告创意点击后的浏览器打开方式
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTargetOfNewWinBytes() {
        java.lang.Object ref = targetOfNewWin_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          targetOfNewWin_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TRAFFICSOURCE_FIELD_NUMBER = 15;
      private de.cache.DeliveryMessage.TrafficSource trafficSource_;
      /**
       * <code>optional .de.cache.TrafficSource trafficSource = 15;</code>
       *
       * <pre>
       *具体维度下的流量来源,不做交集处理,soution上也需要有对应的来源设置项
       * </pre>
       */
      public boolean hasTrafficSource() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .de.cache.TrafficSource trafficSource = 15;</code>
       *
       * <pre>
       *具体维度下的流量来源,不做交集处理,soution上也需要有对应的来源设置项
       * </pre>
       */
      public de.cache.DeliveryMessage.TrafficSource getTrafficSource() {
        return trafficSource_;
      }

      public static final int SSPCREATIVEID_FIELD_NUMBER = 16;
      private java.lang.Object sspCreativeId_;
      /**
       * <code>optional string sspCreativeId = 16;</code>
       *
       * <pre>
       *Exchange/SSP 创意ID add by nick 2014-05-30
       * </pre>
       */
      public boolean hasSspCreativeId() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string sspCreativeId = 16;</code>
       *
       * <pre>
       *Exchange/SSP 创意ID add by nick 2014-05-30
       * </pre>
       */
      public java.lang.String getSspCreativeId() {
        java.lang.Object ref = sspCreativeId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sspCreativeId_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string sspCreativeId = 16;</code>
       *
       * <pre>
       *Exchange/SSP 创意ID add by nick 2014-05-30
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSspCreativeIdBytes() {
        java.lang.Object ref = sspCreativeId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sspCreativeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SSPURL_FIELD_NUMBER = 17;
      private java.lang.Object sspUrl_;
      /**
       * <code>optional string sspUrl = 17;</code>
       *
       * <pre>
       *Exchange/SSP素材访问地址 add by nick 2014-05-30
       * </pre>
       */
      public boolean hasSspUrl() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string sspUrl = 17;</code>
       *
       * <pre>
       *Exchange/SSP素材访问地址 add by nick 2014-05-30
       * </pre>
       */
      public java.lang.String getSspUrl() {
        java.lang.Object ref = sspUrl_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sspUrl_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string sspUrl = 17;</code>
       *
       * <pre>
       *Exchange/SSP素材访问地址 add by nick 2014-05-30
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSspUrlBytes() {
        java.lang.Object ref = sspUrl_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sspUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SSPPROPERTY_FIELD_NUMBER = 18;
      private java.util.List<de.cache.DeliveryMessage.KeyValue> sspProperty_;
      /**
       * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
       *
       * <pre>
       *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.KeyValue> getSspPropertyList() {
        return sspProperty_;
      }
      /**
       * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
       *
       * <pre>
       *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.KeyValueOrBuilder> 
          getSspPropertyOrBuilderList() {
        return sspProperty_;
      }
      /**
       * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
       *
       * <pre>
       *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
       * </pre>
       */
      public int getSspPropertyCount() {
        return sspProperty_.size();
      }
      /**
       * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
       *
       * <pre>
       *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
       * </pre>
       */
      public de.cache.DeliveryMessage.KeyValue getSspProperty(int index) {
        return sspProperty_.get(index);
      }
      /**
       * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
       *
       * <pre>
       *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
       * </pre>
       */
      public de.cache.DeliveryMessage.KeyValueOrBuilder getSspPropertyOrBuilder(
          int index) {
        return sspProperty_.get(index);
      }

      public static final int OS_TYPE_FIELD_NUMBER = 19;
      private java.util.List<de.cache.DeliveryMessage.OsType> osType_;
      /**
       * <code>repeated .de.cache.OsType os_type = 19;</code>
       *
       * <pre>
       *os type is type the creative only for some one os
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.OsType> getOsTypeList() {
        return osType_;
      }
      /**
       * <code>repeated .de.cache.OsType os_type = 19;</code>
       *
       * <pre>
       *os type is type the creative only for some one os
       * </pre>
       */
      public int getOsTypeCount() {
        return osType_.size();
      }
      /**
       * <code>repeated .de.cache.OsType os_type = 19;</code>
       *
       * <pre>
       *os type is type the creative only for some one os
       * </pre>
       */
      public de.cache.DeliveryMessage.OsType getOsType(int index) {
        return osType_.get(index);
      }

      public static final int ISSSL_FIELD_NUMBER = 20;
      private boolean isSsl_;
      /**
       * <code>optional bool isSsl = 20;</code>
       *
       * <pre>
       *is the creative display ssl source
       * </pre>
       */
      public boolean hasIsSsl() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool isSsl = 20;</code>
       *
       * <pre>
       *is the creative display ssl source
       * </pre>
       */
      public boolean getIsSsl() {
        return isSsl_;
      }

      private void initFields() {
        adNetworkId_ = 0;
        creativeTypeUnsed_ = "";
        property_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        category_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        responseId_ = 0L;
        charset_ = "";
        adType_ = "";
        payFlag_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        tplCode_ = "";
        customInfo_ = java.util.Collections.emptyList();
        material_ = java.util.Collections.emptyList();
        trackPoint_ = java.util.Collections.emptyList();
        thirdUrl_ = java.util.Collections.emptyList();
        targetOfNewWin_ = "";
        trafficSource_ = de.cache.DeliveryMessage.TrafficSource.WEB;
        sspCreativeId_ = "";
        sspUrl_ = "";
        sspProperty_ = java.util.Collections.emptyList();
        osType_ = java.util.Collections.emptyList();
        isSsl_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, adNetworkId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getCreativeTypeUnsedBytes());
        }
        for (int i = 0; i < property_.size(); i++) {
          output.writeBytes(3, property_.getByteString(i));
        }
        for (int i = 0; i < category_.size(); i++) {
          output.writeBytes(4, category_.getByteString(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt64(5, responseId_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(6, getCharsetBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBytes(7, getAdTypeBytes());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeEnum(8, payFlag_.getNumber());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeBytes(9, getTplCodeBytes());
        }
        for (int i = 0; i < customInfo_.size(); i++) {
          output.writeMessage(10, customInfo_.get(i));
        }
        for (int i = 0; i < material_.size(); i++) {
          output.writeMessage(11, material_.get(i));
        }
        for (int i = 0; i < trackPoint_.size(); i++) {
          output.writeMessage(12, trackPoint_.get(i));
        }
        for (int i = 0; i < thirdUrl_.size(); i++) {
          output.writeMessage(13, thirdUrl_.get(i));
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeBytes(14, getTargetOfNewWinBytes());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeEnum(15, trafficSource_.getNumber());
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeBytes(16, getSspCreativeIdBytes());
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeBytes(17, getSspUrlBytes());
        }
        for (int i = 0; i < sspProperty_.size(); i++) {
          output.writeMessage(18, sspProperty_.get(i));
        }
        for (int i = 0; i < osType_.size(); i++) {
          output.writeEnum(19, osType_.get(i).getNumber());
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeBool(20, isSsl_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, adNetworkId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getCreativeTypeUnsedBytes());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < property_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(property_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getPropertyList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < category_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(category_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getCategoryList().size();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(5, responseId_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(6, getCharsetBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(7, getAdTypeBytes());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(8, payFlag_.getNumber());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(9, getTplCodeBytes());
        }
        for (int i = 0; i < customInfo_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, customInfo_.get(i));
        }
        for (int i = 0; i < material_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, material_.get(i));
        }
        for (int i = 0; i < trackPoint_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(12, trackPoint_.get(i));
        }
        for (int i = 0; i < thirdUrl_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, thirdUrl_.get(i));
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(14, getTargetOfNewWinBytes());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(15, trafficSource_.getNumber());
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(16, getSspCreativeIdBytes());
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(17, getSspUrlBytes());
        }
        for (int i = 0; i < sspProperty_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(18, sspProperty_.get(i));
        }
        {
          int dataSize = 0;
          for (int i = 0; i < osType_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeEnumSizeNoTag(osType_.get(i).getNumber());
          }
          size += dataSize;
          size += 2 * osType_.size();
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(20, isSsl_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static de.cache.DeliveryMessage.Banner.DisplayMethods parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.cache.DeliveryMessage.Banner.DisplayMethods parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Banner.DisplayMethods parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.cache.DeliveryMessage.Banner.DisplayMethods parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Banner.DisplayMethods parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.cache.DeliveryMessage.Banner.DisplayMethods parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Banner.DisplayMethods parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static de.cache.DeliveryMessage.Banner.DisplayMethods parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Banner.DisplayMethods parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.cache.DeliveryMessage.Banner.DisplayMethods parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(de.cache.DeliveryMessage.Banner.DisplayMethods prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code de.cache.Banner.DisplayMethods}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:de.cache.Banner.DisplayMethods)
          de.cache.DeliveryMessage.Banner.DisplayMethodsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Banner_DisplayMethods_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Banner_DisplayMethods_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  de.cache.DeliveryMessage.Banner.DisplayMethods.class, de.cache.DeliveryMessage.Banner.DisplayMethods.Builder.class);
        }

        // Construct using de.cache.DeliveryMessage.Banner.DisplayMethods.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getCustomInfoFieldBuilder();
            getMaterialFieldBuilder();
            getTrackPointFieldBuilder();
            getThirdUrlFieldBuilder();
            getSspPropertyFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          adNetworkId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          creativeTypeUnsed_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          property_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          category_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000008);
          responseId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000010);
          charset_ = "";
          bitField0_ = (bitField0_ & ~0x00000020);
          adType_ = "";
          bitField0_ = (bitField0_ & ~0x00000040);
          payFlag_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
          bitField0_ = (bitField0_ & ~0x00000080);
          tplCode_ = "";
          bitField0_ = (bitField0_ & ~0x00000100);
          if (customInfoBuilder_ == null) {
            customInfo_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            customInfoBuilder_.clear();
          }
          if (materialBuilder_ == null) {
            material_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            materialBuilder_.clear();
          }
          if (trackPointBuilder_ == null) {
            trackPoint_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            trackPointBuilder_.clear();
          }
          if (thirdUrlBuilder_ == null) {
            thirdUrl_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            thirdUrlBuilder_.clear();
          }
          targetOfNewWin_ = "";
          bitField0_ = (bitField0_ & ~0x00002000);
          trafficSource_ = de.cache.DeliveryMessage.TrafficSource.WEB;
          bitField0_ = (bitField0_ & ~0x00004000);
          sspCreativeId_ = "";
          bitField0_ = (bitField0_ & ~0x00008000);
          sspUrl_ = "";
          bitField0_ = (bitField0_ & ~0x00010000);
          if (sspPropertyBuilder_ == null) {
            sspProperty_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            sspPropertyBuilder_.clear();
          }
          osType_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
          isSsl_ = false;
          bitField0_ = (bitField0_ & ~0x00080000);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Banner_DisplayMethods_descriptor;
        }

        public de.cache.DeliveryMessage.Banner.DisplayMethods getDefaultInstanceForType() {
          return de.cache.DeliveryMessage.Banner.DisplayMethods.getDefaultInstance();
        }

        public de.cache.DeliveryMessage.Banner.DisplayMethods build() {
          de.cache.DeliveryMessage.Banner.DisplayMethods result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public de.cache.DeliveryMessage.Banner.DisplayMethods buildPartial() {
          de.cache.DeliveryMessage.Banner.DisplayMethods result = new de.cache.DeliveryMessage.Banner.DisplayMethods(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.adNetworkId_ = adNetworkId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.creativeTypeUnsed_ = creativeTypeUnsed_;
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            property_ = property_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.property_ = property_;
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            category_ = category_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.category_ = category_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000004;
          }
          result.responseId_ = responseId_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000008;
          }
          result.charset_ = charset_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000010;
          }
          result.adType_ = adType_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000020;
          }
          result.payFlag_ = payFlag_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000040;
          }
          result.tplCode_ = tplCode_;
          if (customInfoBuilder_ == null) {
            if (((bitField0_ & 0x00000200) == 0x00000200)) {
              customInfo_ = java.util.Collections.unmodifiableList(customInfo_);
              bitField0_ = (bitField0_ & ~0x00000200);
            }
            result.customInfo_ = customInfo_;
          } else {
            result.customInfo_ = customInfoBuilder_.build();
          }
          if (materialBuilder_ == null) {
            if (((bitField0_ & 0x00000400) == 0x00000400)) {
              material_ = java.util.Collections.unmodifiableList(material_);
              bitField0_ = (bitField0_ & ~0x00000400);
            }
            result.material_ = material_;
          } else {
            result.material_ = materialBuilder_.build();
          }
          if (trackPointBuilder_ == null) {
            if (((bitField0_ & 0x00000800) == 0x00000800)) {
              trackPoint_ = java.util.Collections.unmodifiableList(trackPoint_);
              bitField0_ = (bitField0_ & ~0x00000800);
            }
            result.trackPoint_ = trackPoint_;
          } else {
            result.trackPoint_ = trackPointBuilder_.build();
          }
          if (thirdUrlBuilder_ == null) {
            if (((bitField0_ & 0x00001000) == 0x00001000)) {
              thirdUrl_ = java.util.Collections.unmodifiableList(thirdUrl_);
              bitField0_ = (bitField0_ & ~0x00001000);
            }
            result.thirdUrl_ = thirdUrl_;
          } else {
            result.thirdUrl_ = thirdUrlBuilder_.build();
          }
          if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
            to_bitField0_ |= 0x00000080;
          }
          result.targetOfNewWin_ = targetOfNewWin_;
          if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
            to_bitField0_ |= 0x00000100;
          }
          result.trafficSource_ = trafficSource_;
          if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
            to_bitField0_ |= 0x00000200;
          }
          result.sspCreativeId_ = sspCreativeId_;
          if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
            to_bitField0_ |= 0x00000400;
          }
          result.sspUrl_ = sspUrl_;
          if (sspPropertyBuilder_ == null) {
            if (((bitField0_ & 0x00020000) == 0x00020000)) {
              sspProperty_ = java.util.Collections.unmodifiableList(sspProperty_);
              bitField0_ = (bitField0_ & ~0x00020000);
            }
            result.sspProperty_ = sspProperty_;
          } else {
            result.sspProperty_ = sspPropertyBuilder_.build();
          }
          if (((bitField0_ & 0x00040000) == 0x00040000)) {
            osType_ = java.util.Collections.unmodifiableList(osType_);
            bitField0_ = (bitField0_ & ~0x00040000);
          }
          result.osType_ = osType_;
          if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
            to_bitField0_ |= 0x00000800;
          }
          result.isSsl_ = isSsl_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof de.cache.DeliveryMessage.Banner.DisplayMethods) {
            return mergeFrom((de.cache.DeliveryMessage.Banner.DisplayMethods)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(de.cache.DeliveryMessage.Banner.DisplayMethods other) {
          if (other == de.cache.DeliveryMessage.Banner.DisplayMethods.getDefaultInstance()) return this;
          if (other.hasAdNetworkId()) {
            setAdNetworkId(other.getAdNetworkId());
          }
          if (other.hasCreativeTypeUnsed()) {
            bitField0_ |= 0x00000002;
            creativeTypeUnsed_ = other.creativeTypeUnsed_;
            onChanged();
          }
          if (!other.property_.isEmpty()) {
            if (property_.isEmpty()) {
              property_ = other.property_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePropertyIsMutable();
              property_.addAll(other.property_);
            }
            onChanged();
          }
          if (!other.category_.isEmpty()) {
            if (category_.isEmpty()) {
              category_ = other.category_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCategoryIsMutable();
              category_.addAll(other.category_);
            }
            onChanged();
          }
          if (other.hasResponseId()) {
            setResponseId(other.getResponseId());
          }
          if (other.hasCharset()) {
            bitField0_ |= 0x00000020;
            charset_ = other.charset_;
            onChanged();
          }
          if (other.hasAdType()) {
            bitField0_ |= 0x00000040;
            adType_ = other.adType_;
            onChanged();
          }
          if (other.hasPayFlag()) {
            setPayFlag(other.getPayFlag());
          }
          if (other.hasTplCode()) {
            bitField0_ |= 0x00000100;
            tplCode_ = other.tplCode_;
            onChanged();
          }
          if (customInfoBuilder_ == null) {
            if (!other.customInfo_.isEmpty()) {
              if (customInfo_.isEmpty()) {
                customInfo_ = other.customInfo_;
                bitField0_ = (bitField0_ & ~0x00000200);
              } else {
                ensureCustomInfoIsMutable();
                customInfo_.addAll(other.customInfo_);
              }
              onChanged();
            }
          } else {
            if (!other.customInfo_.isEmpty()) {
              if (customInfoBuilder_.isEmpty()) {
                customInfoBuilder_.dispose();
                customInfoBuilder_ = null;
                customInfo_ = other.customInfo_;
                bitField0_ = (bitField0_ & ~0x00000200);
                customInfoBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getCustomInfoFieldBuilder() : null;
              } else {
                customInfoBuilder_.addAllMessages(other.customInfo_);
              }
            }
          }
          if (materialBuilder_ == null) {
            if (!other.material_.isEmpty()) {
              if (material_.isEmpty()) {
                material_ = other.material_;
                bitField0_ = (bitField0_ & ~0x00000400);
              } else {
                ensureMaterialIsMutable();
                material_.addAll(other.material_);
              }
              onChanged();
            }
          } else {
            if (!other.material_.isEmpty()) {
              if (materialBuilder_.isEmpty()) {
                materialBuilder_.dispose();
                materialBuilder_ = null;
                material_ = other.material_;
                bitField0_ = (bitField0_ & ~0x00000400);
                materialBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getMaterialFieldBuilder() : null;
              } else {
                materialBuilder_.addAllMessages(other.material_);
              }
            }
          }
          if (trackPointBuilder_ == null) {
            if (!other.trackPoint_.isEmpty()) {
              if (trackPoint_.isEmpty()) {
                trackPoint_ = other.trackPoint_;
                bitField0_ = (bitField0_ & ~0x00000800);
              } else {
                ensureTrackPointIsMutable();
                trackPoint_.addAll(other.trackPoint_);
              }
              onChanged();
            }
          } else {
            if (!other.trackPoint_.isEmpty()) {
              if (trackPointBuilder_.isEmpty()) {
                trackPointBuilder_.dispose();
                trackPointBuilder_ = null;
                trackPoint_ = other.trackPoint_;
                bitField0_ = (bitField0_ & ~0x00000800);
                trackPointBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getTrackPointFieldBuilder() : null;
              } else {
                trackPointBuilder_.addAllMessages(other.trackPoint_);
              }
            }
          }
          if (thirdUrlBuilder_ == null) {
            if (!other.thirdUrl_.isEmpty()) {
              if (thirdUrl_.isEmpty()) {
                thirdUrl_ = other.thirdUrl_;
                bitField0_ = (bitField0_ & ~0x00001000);
              } else {
                ensureThirdUrlIsMutable();
                thirdUrl_.addAll(other.thirdUrl_);
              }
              onChanged();
            }
          } else {
            if (!other.thirdUrl_.isEmpty()) {
              if (thirdUrlBuilder_.isEmpty()) {
                thirdUrlBuilder_.dispose();
                thirdUrlBuilder_ = null;
                thirdUrl_ = other.thirdUrl_;
                bitField0_ = (bitField0_ & ~0x00001000);
                thirdUrlBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getThirdUrlFieldBuilder() : null;
              } else {
                thirdUrlBuilder_.addAllMessages(other.thirdUrl_);
              }
            }
          }
          if (other.hasTargetOfNewWin()) {
            bitField0_ |= 0x00002000;
            targetOfNewWin_ = other.targetOfNewWin_;
            onChanged();
          }
          if (other.hasTrafficSource()) {
            setTrafficSource(other.getTrafficSource());
          }
          if (other.hasSspCreativeId()) {
            bitField0_ |= 0x00008000;
            sspCreativeId_ = other.sspCreativeId_;
            onChanged();
          }
          if (other.hasSspUrl()) {
            bitField0_ |= 0x00010000;
            sspUrl_ = other.sspUrl_;
            onChanged();
          }
          if (sspPropertyBuilder_ == null) {
            if (!other.sspProperty_.isEmpty()) {
              if (sspProperty_.isEmpty()) {
                sspProperty_ = other.sspProperty_;
                bitField0_ = (bitField0_ & ~0x00020000);
              } else {
                ensureSspPropertyIsMutable();
                sspProperty_.addAll(other.sspProperty_);
              }
              onChanged();
            }
          } else {
            if (!other.sspProperty_.isEmpty()) {
              if (sspPropertyBuilder_.isEmpty()) {
                sspPropertyBuilder_.dispose();
                sspPropertyBuilder_ = null;
                sspProperty_ = other.sspProperty_;
                bitField0_ = (bitField0_ & ~0x00020000);
                sspPropertyBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getSspPropertyFieldBuilder() : null;
              } else {
                sspPropertyBuilder_.addAllMessages(other.sspProperty_);
              }
            }
          }
          if (!other.osType_.isEmpty()) {
            if (osType_.isEmpty()) {
              osType_ = other.osType_;
              bitField0_ = (bitField0_ & ~0x00040000);
            } else {
              ensureOsTypeIsMutable();
              osType_.addAll(other.osType_);
            }
            onChanged();
          }
          if (other.hasIsSsl()) {
            setIsSsl(other.getIsSsl());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          de.cache.DeliveryMessage.Banner.DisplayMethods parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (de.cache.DeliveryMessage.Banner.DisplayMethods) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int adNetworkId_ ;
        /**
         * <code>optional int32 adNetworkId = 1;</code>
         */
        public boolean hasAdNetworkId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 adNetworkId = 1;</code>
         */
        public int getAdNetworkId() {
          return adNetworkId_;
        }
        /**
         * <code>optional int32 adNetworkId = 1;</code>
         */
        public Builder setAdNetworkId(int value) {
          bitField0_ |= 0x00000001;
          adNetworkId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 adNetworkId = 1;</code>
         */
        public Builder clearAdNetworkId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          adNetworkId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object creativeTypeUnsed_ = "";
        /**
         * <code>optional string creativeType_unsed = 2;</code>
         *
         * <pre>
         *创意类型，模版字符名称，如flv、com //废弃，使用banner.creativeType
         * </pre>
         */
        public boolean hasCreativeTypeUnsed() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string creativeType_unsed = 2;</code>
         *
         * <pre>
         *创意类型，模版字符名称，如flv、com //废弃，使用banner.creativeType
         * </pre>
         */
        public java.lang.String getCreativeTypeUnsed() {
          java.lang.Object ref = creativeTypeUnsed_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              creativeTypeUnsed_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string creativeType_unsed = 2;</code>
         *
         * <pre>
         *创意类型，模版字符名称，如flv、com //废弃，使用banner.creativeType
         * </pre>
         */
        public com.google.protobuf.ByteString
            getCreativeTypeUnsedBytes() {
          java.lang.Object ref = creativeTypeUnsed_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            creativeTypeUnsed_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string creativeType_unsed = 2;</code>
         *
         * <pre>
         *创意类型，模版字符名称，如flv、com //废弃，使用banner.creativeType
         * </pre>
         */
        public Builder setCreativeTypeUnsed(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          creativeTypeUnsed_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string creativeType_unsed = 2;</code>
         *
         * <pre>
         *创意类型，模版字符名称，如flv、com //废弃，使用banner.creativeType
         * </pre>
         */
        public Builder clearCreativeTypeUnsed() {
          bitField0_ = (bitField0_ & ~0x00000002);
          creativeTypeUnsed_ = getDefaultInstance().getCreativeTypeUnsed();
          onChanged();
          return this;
        }
        /**
         * <code>optional string creativeType_unsed = 2;</code>
         *
         * <pre>
         *创意类型，模版字符名称，如flv、com //废弃，使用banner.creativeType
         * </pre>
         */
        public Builder setCreativeTypeUnsedBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          creativeTypeUnsed_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList property_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensurePropertyIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            property_ = new com.google.protobuf.LazyStringArrayList(property_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated string property = 3;</code>
         *
         * <pre>
         *创意的素材格式，如：mediamax 0-jpg，1-gif，2-swf，3-txt
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getPropertyList() {
          return property_.getUnmodifiableView();
        }
        /**
         * <code>repeated string property = 3;</code>
         *
         * <pre>
         *创意的素材格式，如：mediamax 0-jpg，1-gif，2-swf，3-txt
         * </pre>
         */
        public int getPropertyCount() {
          return property_.size();
        }
        /**
         * <code>repeated string property = 3;</code>
         *
         * <pre>
         *创意的素材格式，如：mediamax 0-jpg，1-gif，2-swf，3-txt
         * </pre>
         */
        public java.lang.String getProperty(int index) {
          return property_.get(index);
        }
        /**
         * <code>repeated string property = 3;</code>
         *
         * <pre>
         *创意的素材格式，如：mediamax 0-jpg，1-gif，2-swf，3-txt
         * </pre>
         */
        public com.google.protobuf.ByteString
            getPropertyBytes(int index) {
          return property_.getByteString(index);
        }
        /**
         * <code>repeated string property = 3;</code>
         *
         * <pre>
         *创意的素材格式，如：mediamax 0-jpg，1-gif，2-swf，3-txt
         * </pre>
         */
        public Builder setProperty(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensurePropertyIsMutable();
          property_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string property = 3;</code>
         *
         * <pre>
         *创意的素材格式，如：mediamax 0-jpg，1-gif，2-swf，3-txt
         * </pre>
         */
        public Builder addProperty(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensurePropertyIsMutable();
          property_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string property = 3;</code>
         *
         * <pre>
         *创意的素材格式，如：mediamax 0-jpg，1-gif，2-swf，3-txt
         * </pre>
         */
        public Builder addAllProperty(
            java.lang.Iterable<java.lang.String> values) {
          ensurePropertyIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, property_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string property = 3;</code>
         *
         * <pre>
         *创意的素材格式，如：mediamax 0-jpg，1-gif，2-swf，3-txt
         * </pre>
         */
        public Builder clearProperty() {
          property_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string property = 3;</code>
         *
         * <pre>
         *创意的素材格式，如：mediamax 0-jpg，1-gif，2-swf，3-txt
         * </pre>
         */
        public Builder addPropertyBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensurePropertyIsMutable();
          property_.add(value);
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList category_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureCategoryIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            category_ = new com.google.protobuf.LazyStringArrayList(category_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <code>repeated string category = 4;</code>
         *
         * <pre>
         *创意所属行业，如：mediamax的X12Y01Z00v2012.1，表示网络服务
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getCategoryList() {
          return category_.getUnmodifiableView();
        }
        /**
         * <code>repeated string category = 4;</code>
         *
         * <pre>
         *创意所属行业，如：mediamax的X12Y01Z00v2012.1，表示网络服务
         * </pre>
         */
        public int getCategoryCount() {
          return category_.size();
        }
        /**
         * <code>repeated string category = 4;</code>
         *
         * <pre>
         *创意所属行业，如：mediamax的X12Y01Z00v2012.1，表示网络服务
         * </pre>
         */
        public java.lang.String getCategory(int index) {
          return category_.get(index);
        }
        /**
         * <code>repeated string category = 4;</code>
         *
         * <pre>
         *创意所属行业，如：mediamax的X12Y01Z00v2012.1，表示网络服务
         * </pre>
         */
        public com.google.protobuf.ByteString
            getCategoryBytes(int index) {
          return category_.getByteString(index);
        }
        /**
         * <code>repeated string category = 4;</code>
         *
         * <pre>
         *创意所属行业，如：mediamax的X12Y01Z00v2012.1，表示网络服务
         * </pre>
         */
        public Builder setCategory(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureCategoryIsMutable();
          category_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string category = 4;</code>
         *
         * <pre>
         *创意所属行业，如：mediamax的X12Y01Z00v2012.1，表示网络服务
         * </pre>
         */
        public Builder addCategory(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureCategoryIsMutable();
          category_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string category = 4;</code>
         *
         * <pre>
         *创意所属行业，如：mediamax的X12Y01Z00v2012.1，表示网络服务
         * </pre>
         */
        public Builder addAllCategory(
            java.lang.Iterable<java.lang.String> values) {
          ensureCategoryIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, category_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string category = 4;</code>
         *
         * <pre>
         *创意所属行业，如：mediamax的X12Y01Z00v2012.1，表示网络服务
         * </pre>
         */
        public Builder clearCategory() {
          category_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string category = 4;</code>
         *
         * <pre>
         *创意所属行业，如：mediamax的X12Y01Z00v2012.1，表示网络服务
         * </pre>
         */
        public Builder addCategoryBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureCategoryIsMutable();
          category_.add(value);
          onChanged();
          return this;
        }

        private long responseId_ ;
        /**
         * <code>optional int64 responseId = 5;</code>
         *
         * <pre>
         *返回响应的创意id
         * </pre>
         */
        public boolean hasResponseId() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional int64 responseId = 5;</code>
         *
         * <pre>
         *返回响应的创意id
         * </pre>
         */
        public long getResponseId() {
          return responseId_;
        }
        /**
         * <code>optional int64 responseId = 5;</code>
         *
         * <pre>
         *返回响应的创意id
         * </pre>
         */
        public Builder setResponseId(long value) {
          bitField0_ |= 0x00000010;
          responseId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 responseId = 5;</code>
         *
         * <pre>
         *返回响应的创意id
         * </pre>
         */
        public Builder clearResponseId() {
          bitField0_ = (bitField0_ & ~0x00000010);
          responseId_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object charset_ = "";
        /**
         * <code>optional string charset = 6;</code>
         *
         * <pre>
         *创意展示编码方式（GBK、UTF-8）
         * </pre>
         */
        public boolean hasCharset() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional string charset = 6;</code>
         *
         * <pre>
         *创意展示编码方式（GBK、UTF-8）
         * </pre>
         */
        public java.lang.String getCharset() {
          java.lang.Object ref = charset_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              charset_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string charset = 6;</code>
         *
         * <pre>
         *创意展示编码方式（GBK、UTF-8）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getCharsetBytes() {
          java.lang.Object ref = charset_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            charset_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string charset = 6;</code>
         *
         * <pre>
         *创意展示编码方式（GBK、UTF-8）
         * </pre>
         */
        public Builder setCharset(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          charset_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string charset = 6;</code>
         *
         * <pre>
         *创意展示编码方式（GBK、UTF-8）
         * </pre>
         */
        public Builder clearCharset() {
          bitField0_ = (bitField0_ & ~0x00000020);
          charset_ = getDefaultInstance().getCharset();
          onChanged();
          return this;
        }
        /**
         * <code>optional string charset = 6;</code>
         *
         * <pre>
         *创意展示编码方式（GBK、UTF-8）
         * </pre>
         */
        public Builder setCharsetBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          charset_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object adType_ = "";
        /**
         * <code>optional string adType = 7;</code>
         *
         * <pre>
         *广告类型（smcustom=模板创意、custom=普通创意）
         * </pre>
         */
        public boolean hasAdType() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional string adType = 7;</code>
         *
         * <pre>
         *广告类型（smcustom=模板创意、custom=普通创意）
         * </pre>
         */
        public java.lang.String getAdType() {
          java.lang.Object ref = adType_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              adType_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string adType = 7;</code>
         *
         * <pre>
         *广告类型（smcustom=模板创意、custom=普通创意）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getAdTypeBytes() {
          java.lang.Object ref = adType_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            adType_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string adType = 7;</code>
         *
         * <pre>
         *广告类型（smcustom=模板创意、custom=普通创意）
         * </pre>
         */
        public Builder setAdType(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          adType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string adType = 7;</code>
         *
         * <pre>
         *广告类型（smcustom=模板创意、custom=普通创意）
         * </pre>
         */
        public Builder clearAdType() {
          bitField0_ = (bitField0_ & ~0x00000040);
          adType_ = getDefaultInstance().getAdType();
          onChanged();
          return this;
        }
        /**
         * <code>optional string adType = 7;</code>
         *
         * <pre>
         *广告类型（smcustom=模板创意、custom=普通创意）
         * </pre>
         */
        public Builder setAdTypeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          adType_ = value;
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.GlobalSwitch payFlag_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        /**
         * <code>optional .de.cache.GlobalSwitch payFlag = 8 [default = OFF];</code>
         *
         * <pre>
         *付费标志（1为付费否则为0）
         * </pre>
         */
        public boolean hasPayFlag() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional .de.cache.GlobalSwitch payFlag = 8 [default = OFF];</code>
         *
         * <pre>
         *付费标志（1为付费否则为0）
         * </pre>
         */
        public de.cache.DeliveryMessage.GlobalSwitch getPayFlag() {
          return payFlag_;
        }
        /**
         * <code>optional .de.cache.GlobalSwitch payFlag = 8 [default = OFF];</code>
         *
         * <pre>
         *付费标志（1为付费否则为0）
         * </pre>
         */
        public Builder setPayFlag(de.cache.DeliveryMessage.GlobalSwitch value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000080;
          payFlag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.GlobalSwitch payFlag = 8 [default = OFF];</code>
         *
         * <pre>
         *付费标志（1为付费否则为0）
         * </pre>
         */
        public Builder clearPayFlag() {
          bitField0_ = (bitField0_ & ~0x00000080);
          payFlag_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
          onChanged();
          return this;
        }

        private java.lang.Object tplCode_ = "";
        /**
         * <code>optional string tplCode = 9;</code>
         *
         * <pre>
         *创意模板的标识名，调用效果展示js方式使用
         * </pre>
         */
        public boolean hasTplCode() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional string tplCode = 9;</code>
         *
         * <pre>
         *创意模板的标识名，调用效果展示js方式使用
         * </pre>
         */
        public java.lang.String getTplCode() {
          java.lang.Object ref = tplCode_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              tplCode_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string tplCode = 9;</code>
         *
         * <pre>
         *创意模板的标识名，调用效果展示js方式使用
         * </pre>
         */
        public com.google.protobuf.ByteString
            getTplCodeBytes() {
          java.lang.Object ref = tplCode_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            tplCode_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string tplCode = 9;</code>
         *
         * <pre>
         *创意模板的标识名，调用效果展示js方式使用
         * </pre>
         */
        public Builder setTplCode(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          tplCode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string tplCode = 9;</code>
         *
         * <pre>
         *创意模板的标识名，调用效果展示js方式使用
         * </pre>
         */
        public Builder clearTplCode() {
          bitField0_ = (bitField0_ & ~0x00000100);
          tplCode_ = getDefaultInstance().getTplCode();
          onChanged();
          return this;
        }
        /**
         * <code>optional string tplCode = 9;</code>
         *
         * <pre>
         *创意模板的标识名，调用效果展示js方式使用
         * </pre>
         */
        public Builder setTplCodeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          tplCode_ = value;
          onChanged();
          return this;
        }

        private java.util.List<de.cache.DeliveryMessage.KeyValue> customInfo_ =
          java.util.Collections.emptyList();
        private void ensureCustomInfoIsMutable() {
          if (!((bitField0_ & 0x00000200) == 0x00000200)) {
            customInfo_ = new java.util.ArrayList<de.cache.DeliveryMessage.KeyValue>(customInfo_);
            bitField0_ |= 0x00000200;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            de.cache.DeliveryMessage.KeyValue, de.cache.DeliveryMessage.KeyValue.Builder, de.cache.DeliveryMessage.KeyValueOrBuilder> customInfoBuilder_;

        /**
         * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
         *
         * <pre>
         *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
         * </pre>
         */
        public java.util.List<de.cache.DeliveryMessage.KeyValue> getCustomInfoList() {
          if (customInfoBuilder_ == null) {
            return java.util.Collections.unmodifiableList(customInfo_);
          } else {
            return customInfoBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
         *
         * <pre>
         *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
         * </pre>
         */
        public int getCustomInfoCount() {
          if (customInfoBuilder_ == null) {
            return customInfo_.size();
          } else {
            return customInfoBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
         *
         * <pre>
         *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
         * </pre>
         */
        public de.cache.DeliveryMessage.KeyValue getCustomInfo(int index) {
          if (customInfoBuilder_ == null) {
            return customInfo_.get(index);
          } else {
            return customInfoBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
         *
         * <pre>
         *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
         * </pre>
         */
        public Builder setCustomInfo(
            int index, de.cache.DeliveryMessage.KeyValue value) {
          if (customInfoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureCustomInfoIsMutable();
            customInfo_.set(index, value);
            onChanged();
          } else {
            customInfoBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
         *
         * <pre>
         *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
         * </pre>
         */
        public Builder setCustomInfo(
            int index, de.cache.DeliveryMessage.KeyValue.Builder builderForValue) {
          if (customInfoBuilder_ == null) {
            ensureCustomInfoIsMutable();
            customInfo_.set(index, builderForValue.build());
            onChanged();
          } else {
            customInfoBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
         *
         * <pre>
         *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
         * </pre>
         */
        public Builder addCustomInfo(de.cache.DeliveryMessage.KeyValue value) {
          if (customInfoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureCustomInfoIsMutable();
            customInfo_.add(value);
            onChanged();
          } else {
            customInfoBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
         *
         * <pre>
         *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
         * </pre>
         */
        public Builder addCustomInfo(
            int index, de.cache.DeliveryMessage.KeyValue value) {
          if (customInfoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureCustomInfoIsMutable();
            customInfo_.add(index, value);
            onChanged();
          } else {
            customInfoBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
         *
         * <pre>
         *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
         * </pre>
         */
        public Builder addCustomInfo(
            de.cache.DeliveryMessage.KeyValue.Builder builderForValue) {
          if (customInfoBuilder_ == null) {
            ensureCustomInfoIsMutable();
            customInfo_.add(builderForValue.build());
            onChanged();
          } else {
            customInfoBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
         *
         * <pre>
         *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
         * </pre>
         */
        public Builder addCustomInfo(
            int index, de.cache.DeliveryMessage.KeyValue.Builder builderForValue) {
          if (customInfoBuilder_ == null) {
            ensureCustomInfoIsMutable();
            customInfo_.add(index, builderForValue.build());
            onChanged();
          } else {
            customInfoBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
         *
         * <pre>
         *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
         * </pre>
         */
        public Builder addAllCustomInfo(
            java.lang.Iterable<? extends de.cache.DeliveryMessage.KeyValue> values) {
          if (customInfoBuilder_ == null) {
            ensureCustomInfoIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, customInfo_);
            onChanged();
          } else {
            customInfoBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
         *
         * <pre>
         *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
         * </pre>
         */
        public Builder clearCustomInfo() {
          if (customInfoBuilder_ == null) {
            customInfo_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000200);
            onChanged();
          } else {
            customInfoBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
         *
         * <pre>
         *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
         * </pre>
         */
        public Builder removeCustomInfo(int index) {
          if (customInfoBuilder_ == null) {
            ensureCustomInfoIsMutable();
            customInfo_.remove(index);
            onChanged();
          } else {
            customInfoBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
         *
         * <pre>
         *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
         * </pre>
         */
        public de.cache.DeliveryMessage.KeyValue.Builder getCustomInfoBuilder(
            int index) {
          return getCustomInfoFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
         *
         * <pre>
         *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
         * </pre>
         */
        public de.cache.DeliveryMessage.KeyValueOrBuilder getCustomInfoOrBuilder(
            int index) {
          if (customInfoBuilder_ == null) {
            return customInfo_.get(index);  } else {
            return customInfoBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
         *
         * <pre>
         *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
         * </pre>
         */
        public java.util.List<? extends de.cache.DeliveryMessage.KeyValueOrBuilder> 
             getCustomInfoOrBuilderList() {
          if (customInfoBuilder_ != null) {
            return customInfoBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(customInfo_);
          }
        }
        /**
         * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
         *
         * <pre>
         *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
         * </pre>
         */
        public de.cache.DeliveryMessage.KeyValue.Builder addCustomInfoBuilder() {
          return getCustomInfoFieldBuilder().addBuilder(
              de.cache.DeliveryMessage.KeyValue.getDefaultInstance());
        }
        /**
         * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
         *
         * <pre>
         *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
         * </pre>
         */
        public de.cache.DeliveryMessage.KeyValue.Builder addCustomInfoBuilder(
            int index) {
          return getCustomInfoFieldBuilder().addBuilder(
              index, de.cache.DeliveryMessage.KeyValue.getDefaultInstance());
        }
        /**
         * <code>repeated .de.cache.KeyValue customInfo = 10;</code>
         *
         * <pre>
         *自定义内容，如已定义的结构中不满足，可以在此增加字段属性生成到yaml内以供使用
         * </pre>
         */
        public java.util.List<de.cache.DeliveryMessage.KeyValue.Builder> 
             getCustomInfoBuilderList() {
          return getCustomInfoFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            de.cache.DeliveryMessage.KeyValue, de.cache.DeliveryMessage.KeyValue.Builder, de.cache.DeliveryMessage.KeyValueOrBuilder> 
            getCustomInfoFieldBuilder() {
          if (customInfoBuilder_ == null) {
            customInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                de.cache.DeliveryMessage.KeyValue, de.cache.DeliveryMessage.KeyValue.Builder, de.cache.DeliveryMessage.KeyValueOrBuilder>(
                    customInfo_,
                    ((bitField0_ & 0x00000200) == 0x00000200),
                    getParentForChildren(),
                    isClean());
            customInfo_ = null;
          }
          return customInfoBuilder_;
        }

        private java.util.List<de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo> material_ =
          java.util.Collections.emptyList();
        private void ensureMaterialIsMutable() {
          if (!((bitField0_ & 0x00000400) == 0x00000400)) {
            material_ = new java.util.ArrayList<de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo>(material_);
            bitField0_ |= 0x00000400;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo, de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo.Builder, de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfoOrBuilder> materialBuilder_;

        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
         *
         * <pre>
         *创意素材
         * </pre>
         */
        public java.util.List<de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo> getMaterialList() {
          if (materialBuilder_ == null) {
            return java.util.Collections.unmodifiableList(material_);
          } else {
            return materialBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
         *
         * <pre>
         *创意素材
         * </pre>
         */
        public int getMaterialCount() {
          if (materialBuilder_ == null) {
            return material_.size();
          } else {
            return materialBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
         *
         * <pre>
         *创意素材
         * </pre>
         */
        public de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo getMaterial(int index) {
          if (materialBuilder_ == null) {
            return material_.get(index);
          } else {
            return materialBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
         *
         * <pre>
         *创意素材
         * </pre>
         */
        public Builder setMaterial(
            int index, de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo value) {
          if (materialBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMaterialIsMutable();
            material_.set(index, value);
            onChanged();
          } else {
            materialBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
         *
         * <pre>
         *创意素材
         * </pre>
         */
        public Builder setMaterial(
            int index, de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo.Builder builderForValue) {
          if (materialBuilder_ == null) {
            ensureMaterialIsMutable();
            material_.set(index, builderForValue.build());
            onChanged();
          } else {
            materialBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
         *
         * <pre>
         *创意素材
         * </pre>
         */
        public Builder addMaterial(de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo value) {
          if (materialBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMaterialIsMutable();
            material_.add(value);
            onChanged();
          } else {
            materialBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
         *
         * <pre>
         *创意素材
         * </pre>
         */
        public Builder addMaterial(
            int index, de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo value) {
          if (materialBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMaterialIsMutable();
            material_.add(index, value);
            onChanged();
          } else {
            materialBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
         *
         * <pre>
         *创意素材
         * </pre>
         */
        public Builder addMaterial(
            de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo.Builder builderForValue) {
          if (materialBuilder_ == null) {
            ensureMaterialIsMutable();
            material_.add(builderForValue.build());
            onChanged();
          } else {
            materialBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
         *
         * <pre>
         *创意素材
         * </pre>
         */
        public Builder addMaterial(
            int index, de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo.Builder builderForValue) {
          if (materialBuilder_ == null) {
            ensureMaterialIsMutable();
            material_.add(index, builderForValue.build());
            onChanged();
          } else {
            materialBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
         *
         * <pre>
         *创意素材
         * </pre>
         */
        public Builder addAllMaterial(
            java.lang.Iterable<? extends de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo> values) {
          if (materialBuilder_ == null) {
            ensureMaterialIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, material_);
            onChanged();
          } else {
            materialBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
         *
         * <pre>
         *创意素材
         * </pre>
         */
        public Builder clearMaterial() {
          if (materialBuilder_ == null) {
            material_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000400);
            onChanged();
          } else {
            materialBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
         *
         * <pre>
         *创意素材
         * </pre>
         */
        public Builder removeMaterial(int index) {
          if (materialBuilder_ == null) {
            ensureMaterialIsMutable();
            material_.remove(index);
            onChanged();
          } else {
            materialBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
         *
         * <pre>
         *创意素材
         * </pre>
         */
        public de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo.Builder getMaterialBuilder(
            int index) {
          return getMaterialFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
         *
         * <pre>
         *创意素材
         * </pre>
         */
        public de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfoOrBuilder getMaterialOrBuilder(
            int index) {
          if (materialBuilder_ == null) {
            return material_.get(index);  } else {
            return materialBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
         *
         * <pre>
         *创意素材
         * </pre>
         */
        public java.util.List<? extends de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfoOrBuilder> 
             getMaterialOrBuilderList() {
          if (materialBuilder_ != null) {
            return materialBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(material_);
          }
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
         *
         * <pre>
         *创意素材
         * </pre>
         */
        public de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo.Builder addMaterialBuilder() {
          return getMaterialFieldBuilder().addBuilder(
              de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo.getDefaultInstance());
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
         *
         * <pre>
         *创意素材
         * </pre>
         */
        public de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo.Builder addMaterialBuilder(
            int index) {
          return getMaterialFieldBuilder().addBuilder(
              index, de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo.getDefaultInstance());
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.MaterialInfo material = 11;</code>
         *
         * <pre>
         *创意素材
         * </pre>
         */
        public java.util.List<de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo.Builder> 
             getMaterialBuilderList() {
          return getMaterialFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo, de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo.Builder, de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfoOrBuilder> 
            getMaterialFieldBuilder() {
          if (materialBuilder_ == null) {
            materialBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo, de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfo.Builder, de.cache.DeliveryMessage.Banner.DisplayMethods.MaterialInfoOrBuilder>(
                    material_,
                    ((bitField0_ & 0x00000400) == 0x00000400),
                    getParentForChildren(),
                    isClean());
            material_ = null;
          }
          return materialBuilder_;
        }

        private java.util.List<de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint> trackPoint_ =
          java.util.Collections.emptyList();
        private void ensureTrackPointIsMutable() {
          if (!((bitField0_ & 0x00000800) == 0x00000800)) {
            trackPoint_ = new java.util.ArrayList<de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint>(trackPoint_);
            bitField0_ |= 0x00000800;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint, de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint.Builder, de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPointOrBuilder> trackPointBuilder_;

        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
         *
         * <pre>
         *营销点代码
         * </pre>
         */
        public java.util.List<de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint> getTrackPointList() {
          if (trackPointBuilder_ == null) {
            return java.util.Collections.unmodifiableList(trackPoint_);
          } else {
            return trackPointBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
         *
         * <pre>
         *营销点代码
         * </pre>
         */
        public int getTrackPointCount() {
          if (trackPointBuilder_ == null) {
            return trackPoint_.size();
          } else {
            return trackPointBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
         *
         * <pre>
         *营销点代码
         * </pre>
         */
        public de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint getTrackPoint(int index) {
          if (trackPointBuilder_ == null) {
            return trackPoint_.get(index);
          } else {
            return trackPointBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
         *
         * <pre>
         *营销点代码
         * </pre>
         */
        public Builder setTrackPoint(
            int index, de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint value) {
          if (trackPointBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTrackPointIsMutable();
            trackPoint_.set(index, value);
            onChanged();
          } else {
            trackPointBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
         *
         * <pre>
         *营销点代码
         * </pre>
         */
        public Builder setTrackPoint(
            int index, de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint.Builder builderForValue) {
          if (trackPointBuilder_ == null) {
            ensureTrackPointIsMutable();
            trackPoint_.set(index, builderForValue.build());
            onChanged();
          } else {
            trackPointBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
         *
         * <pre>
         *营销点代码
         * </pre>
         */
        public Builder addTrackPoint(de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint value) {
          if (trackPointBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTrackPointIsMutable();
            trackPoint_.add(value);
            onChanged();
          } else {
            trackPointBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
         *
         * <pre>
         *营销点代码
         * </pre>
         */
        public Builder addTrackPoint(
            int index, de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint value) {
          if (trackPointBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTrackPointIsMutable();
            trackPoint_.add(index, value);
            onChanged();
          } else {
            trackPointBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
         *
         * <pre>
         *营销点代码
         * </pre>
         */
        public Builder addTrackPoint(
            de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint.Builder builderForValue) {
          if (trackPointBuilder_ == null) {
            ensureTrackPointIsMutable();
            trackPoint_.add(builderForValue.build());
            onChanged();
          } else {
            trackPointBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
         *
         * <pre>
         *营销点代码
         * </pre>
         */
        public Builder addTrackPoint(
            int index, de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint.Builder builderForValue) {
          if (trackPointBuilder_ == null) {
            ensureTrackPointIsMutable();
            trackPoint_.add(index, builderForValue.build());
            onChanged();
          } else {
            trackPointBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
         *
         * <pre>
         *营销点代码
         * </pre>
         */
        public Builder addAllTrackPoint(
            java.lang.Iterable<? extends de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint> values) {
          if (trackPointBuilder_ == null) {
            ensureTrackPointIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, trackPoint_);
            onChanged();
          } else {
            trackPointBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
         *
         * <pre>
         *营销点代码
         * </pre>
         */
        public Builder clearTrackPoint() {
          if (trackPointBuilder_ == null) {
            trackPoint_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000800);
            onChanged();
          } else {
            trackPointBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
         *
         * <pre>
         *营销点代码
         * </pre>
         */
        public Builder removeTrackPoint(int index) {
          if (trackPointBuilder_ == null) {
            ensureTrackPointIsMutable();
            trackPoint_.remove(index);
            onChanged();
          } else {
            trackPointBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
         *
         * <pre>
         *营销点代码
         * </pre>
         */
        public de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint.Builder getTrackPointBuilder(
            int index) {
          return getTrackPointFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
         *
         * <pre>
         *营销点代码
         * </pre>
         */
        public de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPointOrBuilder getTrackPointOrBuilder(
            int index) {
          if (trackPointBuilder_ == null) {
            return trackPoint_.get(index);  } else {
            return trackPointBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
         *
         * <pre>
         *营销点代码
         * </pre>
         */
        public java.util.List<? extends de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPointOrBuilder> 
             getTrackPointOrBuilderList() {
          if (trackPointBuilder_ != null) {
            return trackPointBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(trackPoint_);
          }
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
         *
         * <pre>
         *营销点代码
         * </pre>
         */
        public de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint.Builder addTrackPointBuilder() {
          return getTrackPointFieldBuilder().addBuilder(
              de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint.getDefaultInstance());
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
         *
         * <pre>
         *营销点代码
         * </pre>
         */
        public de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint.Builder addTrackPointBuilder(
            int index) {
          return getTrackPointFieldBuilder().addBuilder(
              index, de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint.getDefaultInstance());
        }
        /**
         * <code>repeated .de.cache.Banner.DisplayMethods.TrackPoint trackPoint = 12;</code>
         *
         * <pre>
         *营销点代码
         * </pre>
         */
        public java.util.List<de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint.Builder> 
             getTrackPointBuilderList() {
          return getTrackPointFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint, de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint.Builder, de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPointOrBuilder> 
            getTrackPointFieldBuilder() {
          if (trackPointBuilder_ == null) {
            trackPointBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint, de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPoint.Builder, de.cache.DeliveryMessage.Banner.DisplayMethods.TrackPointOrBuilder>(
                    trackPoint_,
                    ((bitField0_ & 0x00000800) == 0x00000800),
                    getParentForChildren(),
                    isClean());
            trackPoint_ = null;
          }
          return trackPointBuilder_;
        }

        private java.util.List<de.cache.DeliveryMessage.KeyValue> thirdUrl_ =
          java.util.Collections.emptyList();
        private void ensureThirdUrlIsMutable() {
          if (!((bitField0_ & 0x00001000) == 0x00001000)) {
            thirdUrl_ = new java.util.ArrayList<de.cache.DeliveryMessage.KeyValue>(thirdUrl_);
            bitField0_ |= 0x00001000;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            de.cache.DeliveryMessage.KeyValue, de.cache.DeliveryMessage.KeyValue.Builder, de.cache.DeliveryMessage.KeyValueOrBuilder> thirdUrlBuilder_;

        /**
         * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
         *
         * <pre>
         *第三方监测代码  还支持 vedio third URL
         * </pre>
         */
        public java.util.List<de.cache.DeliveryMessage.KeyValue> getThirdUrlList() {
          if (thirdUrlBuilder_ == null) {
            return java.util.Collections.unmodifiableList(thirdUrl_);
          } else {
            return thirdUrlBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
         *
         * <pre>
         *第三方监测代码  还支持 vedio third URL
         * </pre>
         */
        public int getThirdUrlCount() {
          if (thirdUrlBuilder_ == null) {
            return thirdUrl_.size();
          } else {
            return thirdUrlBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
         *
         * <pre>
         *第三方监测代码  还支持 vedio third URL
         * </pre>
         */
        public de.cache.DeliveryMessage.KeyValue getThirdUrl(int index) {
          if (thirdUrlBuilder_ == null) {
            return thirdUrl_.get(index);
          } else {
            return thirdUrlBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
         *
         * <pre>
         *第三方监测代码  还支持 vedio third URL
         * </pre>
         */
        public Builder setThirdUrl(
            int index, de.cache.DeliveryMessage.KeyValue value) {
          if (thirdUrlBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureThirdUrlIsMutable();
            thirdUrl_.set(index, value);
            onChanged();
          } else {
            thirdUrlBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
         *
         * <pre>
         *第三方监测代码  还支持 vedio third URL
         * </pre>
         */
        public Builder setThirdUrl(
            int index, de.cache.DeliveryMessage.KeyValue.Builder builderForValue) {
          if (thirdUrlBuilder_ == null) {
            ensureThirdUrlIsMutable();
            thirdUrl_.set(index, builderForValue.build());
            onChanged();
          } else {
            thirdUrlBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
         *
         * <pre>
         *第三方监测代码  还支持 vedio third URL
         * </pre>
         */
        public Builder addThirdUrl(de.cache.DeliveryMessage.KeyValue value) {
          if (thirdUrlBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureThirdUrlIsMutable();
            thirdUrl_.add(value);
            onChanged();
          } else {
            thirdUrlBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
         *
         * <pre>
         *第三方监测代码  还支持 vedio third URL
         * </pre>
         */
        public Builder addThirdUrl(
            int index, de.cache.DeliveryMessage.KeyValue value) {
          if (thirdUrlBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureThirdUrlIsMutable();
            thirdUrl_.add(index, value);
            onChanged();
          } else {
            thirdUrlBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
         *
         * <pre>
         *第三方监测代码  还支持 vedio third URL
         * </pre>
         */
        public Builder addThirdUrl(
            de.cache.DeliveryMessage.KeyValue.Builder builderForValue) {
          if (thirdUrlBuilder_ == null) {
            ensureThirdUrlIsMutable();
            thirdUrl_.add(builderForValue.build());
            onChanged();
          } else {
            thirdUrlBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
         *
         * <pre>
         *第三方监测代码  还支持 vedio third URL
         * </pre>
         */
        public Builder addThirdUrl(
            int index, de.cache.DeliveryMessage.KeyValue.Builder builderForValue) {
          if (thirdUrlBuilder_ == null) {
            ensureThirdUrlIsMutable();
            thirdUrl_.add(index, builderForValue.build());
            onChanged();
          } else {
            thirdUrlBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
         *
         * <pre>
         *第三方监测代码  还支持 vedio third URL
         * </pre>
         */
        public Builder addAllThirdUrl(
            java.lang.Iterable<? extends de.cache.DeliveryMessage.KeyValue> values) {
          if (thirdUrlBuilder_ == null) {
            ensureThirdUrlIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, thirdUrl_);
            onChanged();
          } else {
            thirdUrlBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
         *
         * <pre>
         *第三方监测代码  还支持 vedio third URL
         * </pre>
         */
        public Builder clearThirdUrl() {
          if (thirdUrlBuilder_ == null) {
            thirdUrl_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00001000);
            onChanged();
          } else {
            thirdUrlBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
         *
         * <pre>
         *第三方监测代码  还支持 vedio third URL
         * </pre>
         */
        public Builder removeThirdUrl(int index) {
          if (thirdUrlBuilder_ == null) {
            ensureThirdUrlIsMutable();
            thirdUrl_.remove(index);
            onChanged();
          } else {
            thirdUrlBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
         *
         * <pre>
         *第三方监测代码  还支持 vedio third URL
         * </pre>
         */
        public de.cache.DeliveryMessage.KeyValue.Builder getThirdUrlBuilder(
            int index) {
          return getThirdUrlFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
         *
         * <pre>
         *第三方监测代码  还支持 vedio third URL
         * </pre>
         */
        public de.cache.DeliveryMessage.KeyValueOrBuilder getThirdUrlOrBuilder(
            int index) {
          if (thirdUrlBuilder_ == null) {
            return thirdUrl_.get(index);  } else {
            return thirdUrlBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
         *
         * <pre>
         *第三方监测代码  还支持 vedio third URL
         * </pre>
         */
        public java.util.List<? extends de.cache.DeliveryMessage.KeyValueOrBuilder> 
             getThirdUrlOrBuilderList() {
          if (thirdUrlBuilder_ != null) {
            return thirdUrlBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(thirdUrl_);
          }
        }
        /**
         * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
         *
         * <pre>
         *第三方监测代码  还支持 vedio third URL
         * </pre>
         */
        public de.cache.DeliveryMessage.KeyValue.Builder addThirdUrlBuilder() {
          return getThirdUrlFieldBuilder().addBuilder(
              de.cache.DeliveryMessage.KeyValue.getDefaultInstance());
        }
        /**
         * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
         *
         * <pre>
         *第三方监测代码  还支持 vedio third URL
         * </pre>
         */
        public de.cache.DeliveryMessage.KeyValue.Builder addThirdUrlBuilder(
            int index) {
          return getThirdUrlFieldBuilder().addBuilder(
              index, de.cache.DeliveryMessage.KeyValue.getDefaultInstance());
        }
        /**
         * <code>repeated .de.cache.KeyValue thirdUrl = 13;</code>
         *
         * <pre>
         *第三方监测代码  还支持 vedio third URL
         * </pre>
         */
        public java.util.List<de.cache.DeliveryMessage.KeyValue.Builder> 
             getThirdUrlBuilderList() {
          return getThirdUrlFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            de.cache.DeliveryMessage.KeyValue, de.cache.DeliveryMessage.KeyValue.Builder, de.cache.DeliveryMessage.KeyValueOrBuilder> 
            getThirdUrlFieldBuilder() {
          if (thirdUrlBuilder_ == null) {
            thirdUrlBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                de.cache.DeliveryMessage.KeyValue, de.cache.DeliveryMessage.KeyValue.Builder, de.cache.DeliveryMessage.KeyValueOrBuilder>(
                    thirdUrl_,
                    ((bitField0_ & 0x00001000) == 0x00001000),
                    getParentForChildren(),
                    isClean());
            thirdUrl_ = null;
          }
          return thirdUrlBuilder_;
        }

        private java.lang.Object targetOfNewWin_ = "";
        /**
         * <code>optional string targetOfNewWin = 14;</code>
         *
         * <pre>
         *广告创意点击后的浏览器打开方式
         * </pre>
         */
        public boolean hasTargetOfNewWin() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>optional string targetOfNewWin = 14;</code>
         *
         * <pre>
         *广告创意点击后的浏览器打开方式
         * </pre>
         */
        public java.lang.String getTargetOfNewWin() {
          java.lang.Object ref = targetOfNewWin_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              targetOfNewWin_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string targetOfNewWin = 14;</code>
         *
         * <pre>
         *广告创意点击后的浏览器打开方式
         * </pre>
         */
        public com.google.protobuf.ByteString
            getTargetOfNewWinBytes() {
          java.lang.Object ref = targetOfNewWin_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            targetOfNewWin_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string targetOfNewWin = 14;</code>
         *
         * <pre>
         *广告创意点击后的浏览器打开方式
         * </pre>
         */
        public Builder setTargetOfNewWin(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
          targetOfNewWin_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string targetOfNewWin = 14;</code>
         *
         * <pre>
         *广告创意点击后的浏览器打开方式
         * </pre>
         */
        public Builder clearTargetOfNewWin() {
          bitField0_ = (bitField0_ & ~0x00002000);
          targetOfNewWin_ = getDefaultInstance().getTargetOfNewWin();
          onChanged();
          return this;
        }
        /**
         * <code>optional string targetOfNewWin = 14;</code>
         *
         * <pre>
         *广告创意点击后的浏览器打开方式
         * </pre>
         */
        public Builder setTargetOfNewWinBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
          targetOfNewWin_ = value;
          onChanged();
          return this;
        }

        private de.cache.DeliveryMessage.TrafficSource trafficSource_ = de.cache.DeliveryMessage.TrafficSource.WEB;
        /**
         * <code>optional .de.cache.TrafficSource trafficSource = 15;</code>
         *
         * <pre>
         *具体维度下的流量来源,不做交集处理,soution上也需要有对应的来源设置项
         * </pre>
         */
        public boolean hasTrafficSource() {
          return ((bitField0_ & 0x00004000) == 0x00004000);
        }
        /**
         * <code>optional .de.cache.TrafficSource trafficSource = 15;</code>
         *
         * <pre>
         *具体维度下的流量来源,不做交集处理,soution上也需要有对应的来源设置项
         * </pre>
         */
        public de.cache.DeliveryMessage.TrafficSource getTrafficSource() {
          return trafficSource_;
        }
        /**
         * <code>optional .de.cache.TrafficSource trafficSource = 15;</code>
         *
         * <pre>
         *具体维度下的流量来源,不做交集处理,soution上也需要有对应的来源设置项
         * </pre>
         */
        public Builder setTrafficSource(de.cache.DeliveryMessage.TrafficSource value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00004000;
          trafficSource_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .de.cache.TrafficSource trafficSource = 15;</code>
         *
         * <pre>
         *具体维度下的流量来源,不做交集处理,soution上也需要有对应的来源设置项
         * </pre>
         */
        public Builder clearTrafficSource() {
          bitField0_ = (bitField0_ & ~0x00004000);
          trafficSource_ = de.cache.DeliveryMessage.TrafficSource.WEB;
          onChanged();
          return this;
        }

        private java.lang.Object sspCreativeId_ = "";
        /**
         * <code>optional string sspCreativeId = 16;</code>
         *
         * <pre>
         *Exchange/SSP 创意ID add by nick 2014-05-30
         * </pre>
         */
        public boolean hasSspCreativeId() {
          return ((bitField0_ & 0x00008000) == 0x00008000);
        }
        /**
         * <code>optional string sspCreativeId = 16;</code>
         *
         * <pre>
         *Exchange/SSP 创意ID add by nick 2014-05-30
         * </pre>
         */
        public java.lang.String getSspCreativeId() {
          java.lang.Object ref = sspCreativeId_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              sspCreativeId_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string sspCreativeId = 16;</code>
         *
         * <pre>
         *Exchange/SSP 创意ID add by nick 2014-05-30
         * </pre>
         */
        public com.google.protobuf.ByteString
            getSspCreativeIdBytes() {
          java.lang.Object ref = sspCreativeId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sspCreativeId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string sspCreativeId = 16;</code>
         *
         * <pre>
         *Exchange/SSP 创意ID add by nick 2014-05-30
         * </pre>
         */
        public Builder setSspCreativeId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
          sspCreativeId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string sspCreativeId = 16;</code>
         *
         * <pre>
         *Exchange/SSP 创意ID add by nick 2014-05-30
         * </pre>
         */
        public Builder clearSspCreativeId() {
          bitField0_ = (bitField0_ & ~0x00008000);
          sspCreativeId_ = getDefaultInstance().getSspCreativeId();
          onChanged();
          return this;
        }
        /**
         * <code>optional string sspCreativeId = 16;</code>
         *
         * <pre>
         *Exchange/SSP 创意ID add by nick 2014-05-30
         * </pre>
         */
        public Builder setSspCreativeIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
          sspCreativeId_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object sspUrl_ = "";
        /**
         * <code>optional string sspUrl = 17;</code>
         *
         * <pre>
         *Exchange/SSP素材访问地址 add by nick 2014-05-30
         * </pre>
         */
        public boolean hasSspUrl() {
          return ((bitField0_ & 0x00010000) == 0x00010000);
        }
        /**
         * <code>optional string sspUrl = 17;</code>
         *
         * <pre>
         *Exchange/SSP素材访问地址 add by nick 2014-05-30
         * </pre>
         */
        public java.lang.String getSspUrl() {
          java.lang.Object ref = sspUrl_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              sspUrl_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string sspUrl = 17;</code>
         *
         * <pre>
         *Exchange/SSP素材访问地址 add by nick 2014-05-30
         * </pre>
         */
        public com.google.protobuf.ByteString
            getSspUrlBytes() {
          java.lang.Object ref = sspUrl_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sspUrl_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string sspUrl = 17;</code>
         *
         * <pre>
         *Exchange/SSP素材访问地址 add by nick 2014-05-30
         * </pre>
         */
        public Builder setSspUrl(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
          sspUrl_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string sspUrl = 17;</code>
         *
         * <pre>
         *Exchange/SSP素材访问地址 add by nick 2014-05-30
         * </pre>
         */
        public Builder clearSspUrl() {
          bitField0_ = (bitField0_ & ~0x00010000);
          sspUrl_ = getDefaultInstance().getSspUrl();
          onChanged();
          return this;
        }
        /**
         * <code>optional string sspUrl = 17;</code>
         *
         * <pre>
         *Exchange/SSP素材访问地址 add by nick 2014-05-30
         * </pre>
         */
        public Builder setSspUrlBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
          sspUrl_ = value;
          onChanged();
          return this;
        }

        private java.util.List<de.cache.DeliveryMessage.KeyValue> sspProperty_ =
          java.util.Collections.emptyList();
        private void ensureSspPropertyIsMutable() {
          if (!((bitField0_ & 0x00020000) == 0x00020000)) {
            sspProperty_ = new java.util.ArrayList<de.cache.DeliveryMessage.KeyValue>(sspProperty_);
            bitField0_ |= 0x00020000;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            de.cache.DeliveryMessage.KeyValue, de.cache.DeliveryMessage.KeyValue.Builder, de.cache.DeliveryMessage.KeyValueOrBuilder> sspPropertyBuilder_;

        /**
         * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
         *
         * <pre>
         *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
         * </pre>
         */
        public java.util.List<de.cache.DeliveryMessage.KeyValue> getSspPropertyList() {
          if (sspPropertyBuilder_ == null) {
            return java.util.Collections.unmodifiableList(sspProperty_);
          } else {
            return sspPropertyBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
         *
         * <pre>
         *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
         * </pre>
         */
        public int getSspPropertyCount() {
          if (sspPropertyBuilder_ == null) {
            return sspProperty_.size();
          } else {
            return sspPropertyBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
         *
         * <pre>
         *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
         * </pre>
         */
        public de.cache.DeliveryMessage.KeyValue getSspProperty(int index) {
          if (sspPropertyBuilder_ == null) {
            return sspProperty_.get(index);
          } else {
            return sspPropertyBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
         *
         * <pre>
         *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
         * </pre>
         */
        public Builder setSspProperty(
            int index, de.cache.DeliveryMessage.KeyValue value) {
          if (sspPropertyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSspPropertyIsMutable();
            sspProperty_.set(index, value);
            onChanged();
          } else {
            sspPropertyBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
         *
         * <pre>
         *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
         * </pre>
         */
        public Builder setSspProperty(
            int index, de.cache.DeliveryMessage.KeyValue.Builder builderForValue) {
          if (sspPropertyBuilder_ == null) {
            ensureSspPropertyIsMutable();
            sspProperty_.set(index, builderForValue.build());
            onChanged();
          } else {
            sspPropertyBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
         *
         * <pre>
         *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
         * </pre>
         */
        public Builder addSspProperty(de.cache.DeliveryMessage.KeyValue value) {
          if (sspPropertyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSspPropertyIsMutable();
            sspProperty_.add(value);
            onChanged();
          } else {
            sspPropertyBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
         *
         * <pre>
         *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
         * </pre>
         */
        public Builder addSspProperty(
            int index, de.cache.DeliveryMessage.KeyValue value) {
          if (sspPropertyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSspPropertyIsMutable();
            sspProperty_.add(index, value);
            onChanged();
          } else {
            sspPropertyBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
         *
         * <pre>
         *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
         * </pre>
         */
        public Builder addSspProperty(
            de.cache.DeliveryMessage.KeyValue.Builder builderForValue) {
          if (sspPropertyBuilder_ == null) {
            ensureSspPropertyIsMutable();
            sspProperty_.add(builderForValue.build());
            onChanged();
          } else {
            sspPropertyBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
         *
         * <pre>
         *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
         * </pre>
         */
        public Builder addSspProperty(
            int index, de.cache.DeliveryMessage.KeyValue.Builder builderForValue) {
          if (sspPropertyBuilder_ == null) {
            ensureSspPropertyIsMutable();
            sspProperty_.add(index, builderForValue.build());
            onChanged();
          } else {
            sspPropertyBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
         *
         * <pre>
         *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
         * </pre>
         */
        public Builder addAllSspProperty(
            java.lang.Iterable<? extends de.cache.DeliveryMessage.KeyValue> values) {
          if (sspPropertyBuilder_ == null) {
            ensureSspPropertyIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, sspProperty_);
            onChanged();
          } else {
            sspPropertyBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
         *
         * <pre>
         *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
         * </pre>
         */
        public Builder clearSspProperty() {
          if (sspPropertyBuilder_ == null) {
            sspProperty_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00020000);
            onChanged();
          } else {
            sspPropertyBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
         *
         * <pre>
         *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
         * </pre>
         */
        public Builder removeSspProperty(int index) {
          if (sspPropertyBuilder_ == null) {
            ensureSspPropertyIsMutable();
            sspProperty_.remove(index);
            onChanged();
          } else {
            sspPropertyBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
         *
         * <pre>
         *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
         * </pre>
         */
        public de.cache.DeliveryMessage.KeyValue.Builder getSspPropertyBuilder(
            int index) {
          return getSspPropertyFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
         *
         * <pre>
         *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
         * </pre>
         */
        public de.cache.DeliveryMessage.KeyValueOrBuilder getSspPropertyOrBuilder(
            int index) {
          if (sspPropertyBuilder_ == null) {
            return sspProperty_.get(index);  } else {
            return sspPropertyBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
         *
         * <pre>
         *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
         * </pre>
         */
        public java.util.List<? extends de.cache.DeliveryMessage.KeyValueOrBuilder> 
             getSspPropertyOrBuilderList() {
          if (sspPropertyBuilder_ != null) {
            return sspPropertyBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(sspProperty_);
          }
        }
        /**
         * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
         *
         * <pre>
         *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
         * </pre>
         */
        public de.cache.DeliveryMessage.KeyValue.Builder addSspPropertyBuilder() {
          return getSspPropertyFieldBuilder().addBuilder(
              de.cache.DeliveryMessage.KeyValue.getDefaultInstance());
        }
        /**
         * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
         *
         * <pre>
         *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
         * </pre>
         */
        public de.cache.DeliveryMessage.KeyValue.Builder addSspPropertyBuilder(
            int index) {
          return getSspPropertyFieldBuilder().addBuilder(
              index, de.cache.DeliveryMessage.KeyValue.getDefaultInstance());
        }
        /**
         * <code>repeated .de.cache.KeyValue sspProperty = 18;</code>
         *
         * <pre>
         *Exchange/SSP 扩展属性字段 add by nick 2014-05-30
         * </pre>
         */
        public java.util.List<de.cache.DeliveryMessage.KeyValue.Builder> 
             getSspPropertyBuilderList() {
          return getSspPropertyFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            de.cache.DeliveryMessage.KeyValue, de.cache.DeliveryMessage.KeyValue.Builder, de.cache.DeliveryMessage.KeyValueOrBuilder> 
            getSspPropertyFieldBuilder() {
          if (sspPropertyBuilder_ == null) {
            sspPropertyBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                de.cache.DeliveryMessage.KeyValue, de.cache.DeliveryMessage.KeyValue.Builder, de.cache.DeliveryMessage.KeyValueOrBuilder>(
                    sspProperty_,
                    ((bitField0_ & 0x00020000) == 0x00020000),
                    getParentForChildren(),
                    isClean());
            sspProperty_ = null;
          }
          return sspPropertyBuilder_;
        }

        private java.util.List<de.cache.DeliveryMessage.OsType> osType_ =
          java.util.Collections.emptyList();
        private void ensureOsTypeIsMutable() {
          if (!((bitField0_ & 0x00040000) == 0x00040000)) {
            osType_ = new java.util.ArrayList<de.cache.DeliveryMessage.OsType>(osType_);
            bitField0_ |= 0x00040000;
          }
        }
        /**
         * <code>repeated .de.cache.OsType os_type = 19;</code>
         *
         * <pre>
         *os type is type the creative only for some one os
         * </pre>
         */
        public java.util.List<de.cache.DeliveryMessage.OsType> getOsTypeList() {
          return java.util.Collections.unmodifiableList(osType_);
        }
        /**
         * <code>repeated .de.cache.OsType os_type = 19;</code>
         *
         * <pre>
         *os type is type the creative only for some one os
         * </pre>
         */
        public int getOsTypeCount() {
          return osType_.size();
        }
        /**
         * <code>repeated .de.cache.OsType os_type = 19;</code>
         *
         * <pre>
         *os type is type the creative only for some one os
         * </pre>
         */
        public de.cache.DeliveryMessage.OsType getOsType(int index) {
          return osType_.get(index);
        }
        /**
         * <code>repeated .de.cache.OsType os_type = 19;</code>
         *
         * <pre>
         *os type is type the creative only for some one os
         * </pre>
         */
        public Builder setOsType(
            int index, de.cache.DeliveryMessage.OsType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOsTypeIsMutable();
          osType_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated .de.cache.OsType os_type = 19;</code>
         *
         * <pre>
         *os type is type the creative only for some one os
         * </pre>
         */
        public Builder addOsType(de.cache.DeliveryMessage.OsType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOsTypeIsMutable();
          osType_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated .de.cache.OsType os_type = 19;</code>
         *
         * <pre>
         *os type is type the creative only for some one os
         * </pre>
         */
        public Builder addAllOsType(
            java.lang.Iterable<? extends de.cache.DeliveryMessage.OsType> values) {
          ensureOsTypeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, osType_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated .de.cache.OsType os_type = 19;</code>
         *
         * <pre>
         *os type is type the creative only for some one os
         * </pre>
         */
        public Builder clearOsType() {
          osType_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
          onChanged();
          return this;
        }

        private boolean isSsl_ ;
        /**
         * <code>optional bool isSsl = 20;</code>
         *
         * <pre>
         *is the creative display ssl source
         * </pre>
         */
        public boolean hasIsSsl() {
          return ((bitField0_ & 0x00080000) == 0x00080000);
        }
        /**
         * <code>optional bool isSsl = 20;</code>
         *
         * <pre>
         *is the creative display ssl source
         * </pre>
         */
        public boolean getIsSsl() {
          return isSsl_;
        }
        /**
         * <code>optional bool isSsl = 20;</code>
         *
         * <pre>
         *is the creative display ssl source
         * </pre>
         */
        public Builder setIsSsl(boolean value) {
          bitField0_ |= 0x00080000;
          isSsl_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool isSsl = 20;</code>
         *
         * <pre>
         *is the creative display ssl source
         * </pre>
         */
        public Builder clearIsSsl() {
          bitField0_ = (bitField0_ & ~0x00080000);
          isSsl_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:de.cache.Banner.DisplayMethods)
      }

      static {
        defaultInstance = new DisplayMethods(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:de.cache.Banner.DisplayMethods)
    }

    public interface DynCreativeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:de.cache.Banner.DynCreative)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string tplid = 1;</code>
       */
      boolean hasTplid();
      /**
       * <code>optional string tplid = 1;</code>
       */
      java.lang.String getTplid();
      /**
       * <code>optional string tplid = 1;</code>
       */
      com.google.protobuf.ByteString
          getTplidBytes();

      /**
       * <code>optional string mgid = 2;</code>
       */
      boolean hasMgid();
      /**
       * <code>optional string mgid = 2;</code>
       */
      java.lang.String getMgid();
      /**
       * <code>optional string mgid = 2;</code>
       */
      com.google.protobuf.ByteString
          getMgidBytes();

      /**
       * <code>optional string defcat = 3;</code>
       */
      boolean hasDefcat();
      /**
       * <code>optional string defcat = 3;</code>
       */
      java.lang.String getDefcat();
      /**
       * <code>optional string defcat = 3;</code>
       */
      com.google.protobuf.ByteString
          getDefcatBytes();

      /**
       * <code>optional string tagcode = 4;</code>
       */
      boolean hasTagcode();
      /**
       * <code>optional string tagcode = 4;</code>
       */
      java.lang.String getTagcode();
      /**
       * <code>optional string tagcode = 4;</code>
       */
      com.google.protobuf.ByteString
          getTagcodeBytes();

      /**
       * <code>optional int32 recSkuLen = 5;</code>
       */
      boolean hasRecSkuLen();
      /**
       * <code>optional int32 recSkuLen = 5;</code>
       */
      int getRecSkuLen();
    }
    /**
     * Protobuf type {@code de.cache.Banner.DynCreative}
     */
    public static final class DynCreative extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:de.cache.Banner.DynCreative)
        DynCreativeOrBuilder {
      // Use DynCreative.newBuilder() to construct.
      private DynCreative(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private DynCreative(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final DynCreative defaultInstance;
      public static DynCreative getDefaultInstance() {
        return defaultInstance;
      }

      public DynCreative getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private DynCreative(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                tplid_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                mgid_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                defcat_ = bs;
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000008;
                tagcode_ = bs;
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                recSkuLen_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Banner_DynCreative_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Banner_DynCreative_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.Banner.DynCreative.class, de.cache.DeliveryMessage.Banner.DynCreative.Builder.class);
      }

      public static com.google.protobuf.Parser<DynCreative> PARSER =
          new com.google.protobuf.AbstractParser<DynCreative>() {
        public DynCreative parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DynCreative(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<DynCreative> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int TPLID_FIELD_NUMBER = 1;
      private java.lang.Object tplid_;
      /**
       * <code>optional string tplid = 1;</code>
       */
      public boolean hasTplid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string tplid = 1;</code>
       */
      public java.lang.String getTplid() {
        java.lang.Object ref = tplid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tplid_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string tplid = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTplidBytes() {
        java.lang.Object ref = tplid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tplid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int MGID_FIELD_NUMBER = 2;
      private java.lang.Object mgid_;
      /**
       * <code>optional string mgid = 2;</code>
       */
      public boolean hasMgid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string mgid = 2;</code>
       */
      public java.lang.String getMgid() {
        java.lang.Object ref = mgid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mgid_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string mgid = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMgidBytes() {
        java.lang.Object ref = mgid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mgid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DEFCAT_FIELD_NUMBER = 3;
      private java.lang.Object defcat_;
      /**
       * <code>optional string defcat = 3;</code>
       */
      public boolean hasDefcat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string defcat = 3;</code>
       */
      public java.lang.String getDefcat() {
        java.lang.Object ref = defcat_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            defcat_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string defcat = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDefcatBytes() {
        java.lang.Object ref = defcat_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          defcat_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TAGCODE_FIELD_NUMBER = 4;
      private java.lang.Object tagcode_;
      /**
       * <code>optional string tagcode = 4;</code>
       */
      public boolean hasTagcode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string tagcode = 4;</code>
       */
      public java.lang.String getTagcode() {
        java.lang.Object ref = tagcode_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tagcode_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string tagcode = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTagcodeBytes() {
        java.lang.Object ref = tagcode_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tagcode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int RECSKULEN_FIELD_NUMBER = 5;
      private int recSkuLen_;
      /**
       * <code>optional int32 recSkuLen = 5;</code>
       */
      public boolean hasRecSkuLen() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 recSkuLen = 5;</code>
       */
      public int getRecSkuLen() {
        return recSkuLen_;
      }

      private void initFields() {
        tplid_ = "";
        mgid_ = "";
        defcat_ = "";
        tagcode_ = "";
        recSkuLen_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getTplidBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getMgidBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getDefcatBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(4, getTagcodeBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(5, recSkuLen_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getTplidBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getMgidBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getDefcatBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getTagcodeBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, recSkuLen_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static de.cache.DeliveryMessage.Banner.DynCreative parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.cache.DeliveryMessage.Banner.DynCreative parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Banner.DynCreative parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.cache.DeliveryMessage.Banner.DynCreative parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Banner.DynCreative parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.cache.DeliveryMessage.Banner.DynCreative parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Banner.DynCreative parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static de.cache.DeliveryMessage.Banner.DynCreative parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.Banner.DynCreative parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.cache.DeliveryMessage.Banner.DynCreative parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(de.cache.DeliveryMessage.Banner.DynCreative prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code de.cache.Banner.DynCreative}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:de.cache.Banner.DynCreative)
          de.cache.DeliveryMessage.Banner.DynCreativeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Banner_DynCreative_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Banner_DynCreative_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  de.cache.DeliveryMessage.Banner.DynCreative.class, de.cache.DeliveryMessage.Banner.DynCreative.Builder.class);
        }

        // Construct using de.cache.DeliveryMessage.Banner.DynCreative.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          tplid_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          mgid_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          defcat_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          tagcode_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          recSkuLen_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return de.cache.DeliveryMessage.internal_static_de_cache_Banner_DynCreative_descriptor;
        }

        public de.cache.DeliveryMessage.Banner.DynCreative getDefaultInstanceForType() {
          return de.cache.DeliveryMessage.Banner.DynCreative.getDefaultInstance();
        }

        public de.cache.DeliveryMessage.Banner.DynCreative build() {
          de.cache.DeliveryMessage.Banner.DynCreative result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public de.cache.DeliveryMessage.Banner.DynCreative buildPartial() {
          de.cache.DeliveryMessage.Banner.DynCreative result = new de.cache.DeliveryMessage.Banner.DynCreative(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.tplid_ = tplid_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.mgid_ = mgid_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.defcat_ = defcat_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.tagcode_ = tagcode_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.recSkuLen_ = recSkuLen_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof de.cache.DeliveryMessage.Banner.DynCreative) {
            return mergeFrom((de.cache.DeliveryMessage.Banner.DynCreative)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(de.cache.DeliveryMessage.Banner.DynCreative other) {
          if (other == de.cache.DeliveryMessage.Banner.DynCreative.getDefaultInstance()) return this;
          if (other.hasTplid()) {
            bitField0_ |= 0x00000001;
            tplid_ = other.tplid_;
            onChanged();
          }
          if (other.hasMgid()) {
            bitField0_ |= 0x00000002;
            mgid_ = other.mgid_;
            onChanged();
          }
          if (other.hasDefcat()) {
            bitField0_ |= 0x00000004;
            defcat_ = other.defcat_;
            onChanged();
          }
          if (other.hasTagcode()) {
            bitField0_ |= 0x00000008;
            tagcode_ = other.tagcode_;
            onChanged();
          }
          if (other.hasRecSkuLen()) {
            setRecSkuLen(other.getRecSkuLen());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          de.cache.DeliveryMessage.Banner.DynCreative parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (de.cache.DeliveryMessage.Banner.DynCreative) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object tplid_ = "";
        /**
         * <code>optional string tplid = 1;</code>
         */
        public boolean hasTplid() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string tplid = 1;</code>
         */
        public java.lang.String getTplid() {
          java.lang.Object ref = tplid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              tplid_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string tplid = 1;</code>
         */
        public com.google.protobuf.ByteString
            getTplidBytes() {
          java.lang.Object ref = tplid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            tplid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string tplid = 1;</code>
         */
        public Builder setTplid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          tplid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string tplid = 1;</code>
         */
        public Builder clearTplid() {
          bitField0_ = (bitField0_ & ~0x00000001);
          tplid_ = getDefaultInstance().getTplid();
          onChanged();
          return this;
        }
        /**
         * <code>optional string tplid = 1;</code>
         */
        public Builder setTplidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          tplid_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object mgid_ = "";
        /**
         * <code>optional string mgid = 2;</code>
         */
        public boolean hasMgid() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string mgid = 2;</code>
         */
        public java.lang.String getMgid() {
          java.lang.Object ref = mgid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              mgid_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string mgid = 2;</code>
         */
        public com.google.protobuf.ByteString
            getMgidBytes() {
          java.lang.Object ref = mgid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            mgid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string mgid = 2;</code>
         */
        public Builder setMgid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          mgid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string mgid = 2;</code>
         */
        public Builder clearMgid() {
          bitField0_ = (bitField0_ & ~0x00000002);
          mgid_ = getDefaultInstance().getMgid();
          onChanged();
          return this;
        }
        /**
         * <code>optional string mgid = 2;</code>
         */
        public Builder setMgidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          mgid_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object defcat_ = "";
        /**
         * <code>optional string defcat = 3;</code>
         */
        public boolean hasDefcat() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string defcat = 3;</code>
         */
        public java.lang.String getDefcat() {
          java.lang.Object ref = defcat_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              defcat_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string defcat = 3;</code>
         */
        public com.google.protobuf.ByteString
            getDefcatBytes() {
          java.lang.Object ref = defcat_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            defcat_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string defcat = 3;</code>
         */
        public Builder setDefcat(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          defcat_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string defcat = 3;</code>
         */
        public Builder clearDefcat() {
          bitField0_ = (bitField0_ & ~0x00000004);
          defcat_ = getDefaultInstance().getDefcat();
          onChanged();
          return this;
        }
        /**
         * <code>optional string defcat = 3;</code>
         */
        public Builder setDefcatBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          defcat_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object tagcode_ = "";
        /**
         * <code>optional string tagcode = 4;</code>
         */
        public boolean hasTagcode() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional string tagcode = 4;</code>
         */
        public java.lang.String getTagcode() {
          java.lang.Object ref = tagcode_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              tagcode_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string tagcode = 4;</code>
         */
        public com.google.protobuf.ByteString
            getTagcodeBytes() {
          java.lang.Object ref = tagcode_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            tagcode_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string tagcode = 4;</code>
         */
        public Builder setTagcode(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          tagcode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string tagcode = 4;</code>
         */
        public Builder clearTagcode() {
          bitField0_ = (bitField0_ & ~0x00000008);
          tagcode_ = getDefaultInstance().getTagcode();
          onChanged();
          return this;
        }
        /**
         * <code>optional string tagcode = 4;</code>
         */
        public Builder setTagcodeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          tagcode_ = value;
          onChanged();
          return this;
        }

        private int recSkuLen_ ;
        /**
         * <code>optional int32 recSkuLen = 5;</code>
         */
        public boolean hasRecSkuLen() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional int32 recSkuLen = 5;</code>
         */
        public int getRecSkuLen() {
          return recSkuLen_;
        }
        /**
         * <code>optional int32 recSkuLen = 5;</code>
         */
        public Builder setRecSkuLen(int value) {
          bitField0_ |= 0x00000010;
          recSkuLen_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 recSkuLen = 5;</code>
         */
        public Builder clearRecSkuLen() {
          bitField0_ = (bitField0_ & ~0x00000010);
          recSkuLen_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:de.cache.Banner.DynCreative)
      }

      static {
        defaultInstance = new DynCreative(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:de.cache.Banner.DynCreative)
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *创意id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *创意id
     * </pre>
     */
    public long getId() {
      return id_;
    }

    public static final int CMD_FIELD_NUMBER = 2;
    private de.cache.DeliveryMessage.Command cmd_;
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加/修改、删除）
     * </pre>
     */
    public boolean hasCmd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .de.cache.Command cmd = 2;</code>
     *
     * <pre>
     *数据操作类型（如增加/修改、删除）
     * </pre>
     */
    public de.cache.DeliveryMessage.Command getCmd() {
      return cmd_;
    }

    public static final int WEIGHT_FIELD_NUMBER = 3;
    private int weight_;
    /**
     * <code>optional int32 weight = 3;</code>
     *
     * <pre>
     *权重
     * </pre>
     */
    public boolean hasWeight() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 weight = 3;</code>
     *
     * <pre>
     *权重
     * </pre>
     */
    public int getWeight() {
      return weight_;
    }

    public static final int STARTTIMESTAMP_FIELD_NUMBER = 4;
    private long startTimestamp_;
    /**
     * <code>optional int64 startTimestamp = 4;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    public boolean hasStartTimestamp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 startTimestamp = 4;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    public long getStartTimestamp() {
      return startTimestamp_;
    }

    public static final int ENDTIMESTAMP_FIELD_NUMBER = 5;
    private long endTimestamp_;
    /**
     * <code>optional int64 endTimestamp = 5;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    public boolean hasEndTimestamp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 endTimestamp = 5;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    public long getEndTimestamp() {
      return endTimestamp_;
    }

    public static final int SIZE_FIELD_NUMBER = 6;
    private long size_;
    /**
     * <code>optional uint64 size = 6;</code>
     *
     * <pre>
     *素材大小(Byte)
     * </pre>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 size = 6;</code>
     *
     * <pre>
     *素材大小(Byte)
     * </pre>
     */
    public long getSize() {
      return size_;
    }

    public static final int TRACKURL_FIELD_NUMBER = 7;
    private java.lang.Object trackUrl_;
    /**
     * <code>optional string trackUrl = 7;</code>
     *
     * <pre>
     *显示监测地址
     * </pre>
     */
    public boolean hasTrackUrl() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string trackUrl = 7;</code>
     *
     * <pre>
     *显示监测地址
     * </pre>
     */
    public java.lang.String getTrackUrl() {
      java.lang.Object ref = trackUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          trackUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string trackUrl = 7;</code>
     *
     * <pre>
     *显示监测地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTrackUrlBytes() {
      java.lang.Object ref = trackUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        trackUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TPLNAME_FIELD_NUMBER = 8;
    private java.lang.Object tplName_;
    /**
     * <code>optional string tplName = 8;</code>
     *
     * <pre>
     *模板策略文件名(相对b目录) : 获取动态创意参数, otherFeatures.fileName=="b/p.${bannerid}.${dynamicTplId}"
     * </pre>
     */
    public boolean hasTplName() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string tplName = 8;</code>
     *
     * <pre>
     *模板策略文件名(相对b目录) : 获取动态创意参数, otherFeatures.fileName=="b/p.${bannerid}.${dynamicTplId}"
     * </pre>
     */
    public java.lang.String getTplName() {
      java.lang.Object ref = tplName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tplName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string tplName = 8;</code>
     *
     * <pre>
     *模板策略文件名(相对b目录) : 获取动态创意参数, otherFeatures.fileName=="b/p.${bannerid}.${dynamicTplId}"
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTplNameBytes() {
      java.lang.Object ref = tplName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tplName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WIDTH_FIELD_NUMBER = 9;
    private int width_;
    /**
     * <code>optional int32 width = 9;</code>
     *
     * <pre>
     *素材宽度
     * </pre>
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 width = 9;</code>
     *
     * <pre>
     *素材宽度
     * </pre>
     */
    public int getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 10;
    private int height_;
    /**
     * <code>optional int32 height = 10;</code>
     *
     * <pre>
     *素材高度
     * </pre>
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 height = 10;</code>
     *
     * <pre>
     *素材高度
     * </pre>
     */
    public int getHeight() {
      return height_;
    }

    public static final int TRAFFICSOURCE_FIELD_NUMBER = 11;
    private java.util.List<de.cache.DeliveryMessage.TrafficSource> trafficSource_;
    /**
     * <code>repeated .de.cache.TrafficSource trafficSource = 11;</code>
     *
     * <pre>
     *创意支持的流量来源
     * </pre>
     */
    public java.util.List<de.cache.DeliveryMessage.TrafficSource> getTrafficSourceList() {
      return trafficSource_;
    }
    /**
     * <code>repeated .de.cache.TrafficSource trafficSource = 11;</code>
     *
     * <pre>
     *创意支持的流量来源
     * </pre>
     */
    public int getTrafficSourceCount() {
      return trafficSource_.size();
    }
    /**
     * <code>repeated .de.cache.TrafficSource trafficSource = 11;</code>
     *
     * <pre>
     *创意支持的流量来源
     * </pre>
     */
    public de.cache.DeliveryMessage.TrafficSource getTrafficSource(int index) {
      return trafficSource_.get(index);
    }

    public static final int DISPLAYMETHOD_FIELD_NUMBER = 12;
    private java.util.List<de.cache.DeliveryMessage.Banner.DisplayMethods> displayMethod_;
    /**
     * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
     */
    public java.util.List<de.cache.DeliveryMessage.Banner.DisplayMethods> getDisplayMethodList() {
      return displayMethod_;
    }
    /**
     * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.Banner.DisplayMethodsOrBuilder> 
        getDisplayMethodOrBuilderList() {
      return displayMethod_;
    }
    /**
     * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
     */
    public int getDisplayMethodCount() {
      return displayMethod_.size();
    }
    /**
     * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
     */
    public de.cache.DeliveryMessage.Banner.DisplayMethods getDisplayMethod(int index) {
      return displayMethod_.get(index);
    }
    /**
     * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
     */
    public de.cache.DeliveryMessage.Banner.DisplayMethodsOrBuilder getDisplayMethodOrBuilder(
        int index) {
      return displayMethod_.get(index);
    }

    public static final int INTERSTITIAL_FIELD_NUMBER = 13;
    private de.cache.DeliveryMessage.GlobalSwitch interstitial_;
    /**
     * <code>optional .de.cache.GlobalSwitch Interstitial = 13 [default = OFF];</code>
     *
     * <pre>
     * </pre>
     */
    public boolean hasInterstitial() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .de.cache.GlobalSwitch Interstitial = 13 [default = OFF];</code>
     *
     * <pre>
     * </pre>
     */
    public de.cache.DeliveryMessage.GlobalSwitch getInterstitial() {
      return interstitial_;
    }

    public static final int MOBILEOPTIMIZED_FIELD_NUMBER = 14;
    private de.cache.DeliveryMessage.GlobalSwitch mobileOptimized_;
    /**
     * <code>optional .de.cache.GlobalSwitch mobileOptimized = 14 [default = OFF];</code>
     *
     * <pre>
     *移动优化
     * </pre>
     */
    public boolean hasMobileOptimized() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .de.cache.GlobalSwitch mobileOptimized = 14 [default = OFF];</code>
     *
     * <pre>
     *移动优化
     * </pre>
     */
    public de.cache.DeliveryMessage.GlobalSwitch getMobileOptimized() {
      return mobileOptimized_;
    }

    public static final int STATUS_FIELD_NUMBER = 15;
    private de.cache.DeliveryMessage.GlobalSwitch status_;
    /**
     * <code>optional .de.cache.GlobalSwitch status = 15 [default = ON];</code>
     *
     * <pre>
     *数据状态（1=有效、0=无效）
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .de.cache.GlobalSwitch status = 15 [default = ON];</code>
     *
     * <pre>
     *数据状态（1=有效、0=无效）
     * </pre>
     */
    public de.cache.DeliveryMessage.GlobalSwitch getStatus() {
      return status_;
    }

    public static final int TEMPLATEID_FIELD_NUMBER = 16;
    private java.lang.Object templateId_;
    /**
     * <code>optional string templateId = 16;</code>
     *
     * <pre>
     *创意类型, 对应g文件第9位
     * </pre>
     */
    public boolean hasTemplateId() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional string templateId = 16;</code>
     *
     * <pre>
     *创意类型, 对应g文件第9位
     * </pre>
     */
    public java.lang.String getTemplateId() {
      java.lang.Object ref = templateId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          templateId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string templateId = 16;</code>
     *
     * <pre>
     *创意类型, 对应g文件第9位
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTemplateIdBytes() {
      java.lang.Object ref = templateId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        templateId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MATERIALID_FIELD_NUMBER = 17;
    private long materialId_;
    /**
     * <code>optional int64 materialId = 17;</code>
     *
     * <pre>
     *素材ID,yaml文件使用
     * </pre>
     */
    public boolean hasMaterialId() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 materialId = 17;</code>
     *
     * <pre>
     *素材ID,yaml文件使用
     * </pre>
     */
    public long getMaterialId() {
      return materialId_;
    }

    public static final int CREATIVETYPE_FIELD_NUMBER = 18;
    private java.util.List<java.lang.Long> creativeType_;
    /**
     * <code>repeated int64 creativeType = 18;</code>
     *
     * <pre>
     *创意格式类型, g文件:第25位使用, 1:图文，2：视频，3：移动富媒体，4：富媒体, 6 : 移动创意类型
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getCreativeTypeList() {
      return creativeType_;
    }
    /**
     * <code>repeated int64 creativeType = 18;</code>
     *
     * <pre>
     *创意格式类型, g文件:第25位使用, 1:图文，2：视频，3：移动富媒体，4：富媒体, 6 : 移动创意类型
     * </pre>
     */
    public int getCreativeTypeCount() {
      return creativeType_.size();
    }
    /**
     * <code>repeated int64 creativeType = 18;</code>
     *
     * <pre>
     *创意格式类型, g文件:第25位使用, 1:图文，2：视频，3：移动富媒体，4：富媒体, 6 : 移动创意类型
     * </pre>
     */
    public long getCreativeType(int index) {
      return creativeType_.get(index);
    }

    public static final int DYNCREATIVE_FIELD_NUMBER = 19;
    private de.cache.DeliveryMessage.Banner.DynCreative dynCreative_;
    /**
     * <code>optional .de.cache.Banner.DynCreative dynCreative = 19;</code>
     *
     * <pre>
     *动态创意内容
     * </pre>
     */
    public boolean hasDynCreative() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .de.cache.Banner.DynCreative dynCreative = 19;</code>
     *
     * <pre>
     *动态创意内容
     * </pre>
     */
    public de.cache.DeliveryMessage.Banner.DynCreative getDynCreative() {
      return dynCreative_;
    }
    /**
     * <code>optional .de.cache.Banner.DynCreative dynCreative = 19;</code>
     *
     * <pre>
     *动态创意内容
     * </pre>
     */
    public de.cache.DeliveryMessage.Banner.DynCreativeOrBuilder getDynCreativeOrBuilder() {
      return dynCreative_;
    }

    public static final int CLICKMONURL_FIELD_NUMBER = 20;
    private com.google.protobuf.LazyStringList clickMonUrl_;
    /**
     * <code>repeated string clickMonUrl = 20;</code>
     *
     * <pre>
     *第三方点击监测地址
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getClickMonUrlList() {
      return clickMonUrl_;
    }
    /**
     * <code>repeated string clickMonUrl = 20;</code>
     *
     * <pre>
     *第三方点击监测地址
     * </pre>
     */
    public int getClickMonUrlCount() {
      return clickMonUrl_.size();
    }
    /**
     * <code>repeated string clickMonUrl = 20;</code>
     *
     * <pre>
     *第三方点击监测地址
     * </pre>
     */
    public java.lang.String getClickMonUrl(int index) {
      return clickMonUrl_.get(index);
    }
    /**
     * <code>repeated string clickMonUrl = 20;</code>
     *
     * <pre>
     *第三方点击监测地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getClickMonUrlBytes(int index) {
      return clickMonUrl_.getByteString(index);
    }

    public static final int INTERACTION_TYPE_FIELD_NUMBER = 21;
    private de.cache.DeliveryMessage.Banner.InteractionType interactionType_;
    /**
     * <code>optional .de.cache.Banner.InteractionType interaction_type = 21;</code>
     *
     * <pre>
     * baidu: [App 允许的交互类型];
     * </pre>
     */
    public boolean hasInteractionType() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .de.cache.Banner.InteractionType interaction_type = 21;</code>
     *
     * <pre>
     * baidu: [App 允许的交互类型];
     * </pre>
     */
    public de.cache.DeliveryMessage.Banner.InteractionType getInteractionType() {
      return interactionType_;
    }

    public static final int MAX_LEVEL_FIELD_NUMBER = 22;
    private int maxLevel_;
    /**
     * <code>optional int32 max_level = 22;</code>
     *
     * <pre>
     *max creative level
     * </pre>
     */
    public boolean hasMaxLevel() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 max_level = 22;</code>
     *
     * <pre>
     *max creative level
     * </pre>
     */
    public int getMaxLevel() {
      return maxLevel_;
    }

    private void initFields() {
      id_ = 0L;
      cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      weight_ = 0;
      startTimestamp_ = 0L;
      endTimestamp_ = 0L;
      size_ = 0L;
      trackUrl_ = "";
      tplName_ = "";
      width_ = 0;
      height_ = 0;
      trafficSource_ = java.util.Collections.emptyList();
      displayMethod_ = java.util.Collections.emptyList();
      interstitial_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
      mobileOptimized_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
      status_ = de.cache.DeliveryMessage.GlobalSwitch.ON;
      templateId_ = "";
      materialId_ = 0L;
      creativeType_ = java.util.Collections.emptyList();
      dynCreative_ = de.cache.DeliveryMessage.Banner.DynCreative.getDefaultInstance();
      clickMonUrl_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      interactionType_ = de.cache.DeliveryMessage.Banner.InteractionType.TELEPHONE;
      maxLevel_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, weight_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, startTimestamp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, endTimestamp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, size_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getTrackUrlBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getTplNameBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, width_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, height_);
      }
      for (int i = 0; i < trafficSource_.size(); i++) {
        output.writeEnum(11, trafficSource_.get(i).getNumber());
      }
      for (int i = 0; i < displayMethod_.size(); i++) {
        output.writeMessage(12, displayMethod_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeEnum(13, interstitial_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeEnum(14, mobileOptimized_.getNumber());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeEnum(15, status_.getNumber());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(16, getTemplateIdBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(17, materialId_);
      }
      for (int i = 0; i < creativeType_.size(); i++) {
        output.writeInt64(18, creativeType_.get(i));
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(19, dynCreative_);
      }
      for (int i = 0; i < clickMonUrl_.size(); i++) {
        output.writeBytes(20, clickMonUrl_.getByteString(i));
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeEnum(21, interactionType_.getNumber());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(22, maxLevel_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, weight_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, startTimestamp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, endTimestamp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, size_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getTrackUrlBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getTplNameBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, width_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, height_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < trafficSource_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(trafficSource_.get(i).getNumber());
        }
        size += dataSize;
        size += 1 * trafficSource_.size();
      }
      for (int i = 0; i < displayMethod_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, displayMethod_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(13, interstitial_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(14, mobileOptimized_.getNumber());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(15, status_.getNumber());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, getTemplateIdBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(17, materialId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < creativeType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(creativeType_.get(i));
        }
        size += dataSize;
        size += 2 * getCreativeTypeList().size();
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, dynCreative_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < clickMonUrl_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(clickMonUrl_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getClickMonUrlList().size();
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(21, interactionType_.getNumber());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, maxLevel_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.cache.DeliveryMessage.Banner parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.Banner parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Banner parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.Banner parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Banner parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.Banner parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Banner parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.cache.DeliveryMessage.Banner parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.Banner parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.Banner parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.cache.DeliveryMessage.Banner prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code de.cache.Banner}
     *
     * <pre>
     *创意数据
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:de.cache.Banner)
        de.cache.DeliveryMessage.BannerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Banner_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Banner_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.Banner.class, de.cache.DeliveryMessage.Banner.Builder.class);
      }

      // Construct using de.cache.DeliveryMessage.Banner.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDisplayMethodFieldBuilder();
          getDynCreativeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        bitField0_ = (bitField0_ & ~0x00000002);
        weight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        startTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        endTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        size_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        trackUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        tplName_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        width_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        trafficSource_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        if (displayMethodBuilder_ == null) {
          displayMethod_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          displayMethodBuilder_.clear();
        }
        interstitial_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        bitField0_ = (bitField0_ & ~0x00001000);
        mobileOptimized_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        bitField0_ = (bitField0_ & ~0x00002000);
        status_ = de.cache.DeliveryMessage.GlobalSwitch.ON;
        bitField0_ = (bitField0_ & ~0x00004000);
        templateId_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        materialId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00010000);
        creativeType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        if (dynCreativeBuilder_ == null) {
          dynCreative_ = de.cache.DeliveryMessage.Banner.DynCreative.getDefaultInstance();
        } else {
          dynCreativeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        clickMonUrl_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00080000);
        interactionType_ = de.cache.DeliveryMessage.Banner.InteractionType.TELEPHONE;
        bitField0_ = (bitField0_ & ~0x00100000);
        maxLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.cache.DeliveryMessage.internal_static_de_cache_Banner_descriptor;
      }

      public de.cache.DeliveryMessage.Banner getDefaultInstanceForType() {
        return de.cache.DeliveryMessage.Banner.getDefaultInstance();
      }

      public de.cache.DeliveryMessage.Banner build() {
        de.cache.DeliveryMessage.Banner result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.cache.DeliveryMessage.Banner buildPartial() {
        de.cache.DeliveryMessage.Banner result = new de.cache.DeliveryMessage.Banner(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cmd_ = cmd_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.weight_ = weight_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.startTimestamp_ = startTimestamp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.endTimestamp_ = endTimestamp_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.trackUrl_ = trackUrl_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.tplName_ = tplName_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.width_ = width_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.height_ = height_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          trafficSource_ = java.util.Collections.unmodifiableList(trafficSource_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.trafficSource_ = trafficSource_;
        if (displayMethodBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            displayMethod_ = java.util.Collections.unmodifiableList(displayMethod_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.displayMethod_ = displayMethod_;
        } else {
          result.displayMethod_ = displayMethodBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.interstitial_ = interstitial_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.mobileOptimized_ = mobileOptimized_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.templateId_ = templateId_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.materialId_ = materialId_;
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          creativeType_ = java.util.Collections.unmodifiableList(creativeType_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.creativeType_ = creativeType_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00008000;
        }
        if (dynCreativeBuilder_ == null) {
          result.dynCreative_ = dynCreative_;
        } else {
          result.dynCreative_ = dynCreativeBuilder_.build();
        }
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          clickMonUrl_ = clickMonUrl_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00080000);
        }
        result.clickMonUrl_ = clickMonUrl_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.interactionType_ = interactionType_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.maxLevel_ = maxLevel_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.cache.DeliveryMessage.Banner) {
          return mergeFrom((de.cache.DeliveryMessage.Banner)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.cache.DeliveryMessage.Banner other) {
        if (other == de.cache.DeliveryMessage.Banner.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCmd()) {
          setCmd(other.getCmd());
        }
        if (other.hasWeight()) {
          setWeight(other.getWeight());
        }
        if (other.hasStartTimestamp()) {
          setStartTimestamp(other.getStartTimestamp());
        }
        if (other.hasEndTimestamp()) {
          setEndTimestamp(other.getEndTimestamp());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasTrackUrl()) {
          bitField0_ |= 0x00000040;
          trackUrl_ = other.trackUrl_;
          onChanged();
        }
        if (other.hasTplName()) {
          bitField0_ |= 0x00000080;
          tplName_ = other.tplName_;
          onChanged();
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (!other.trafficSource_.isEmpty()) {
          if (trafficSource_.isEmpty()) {
            trafficSource_ = other.trafficSource_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureTrafficSourceIsMutable();
            trafficSource_.addAll(other.trafficSource_);
          }
          onChanged();
        }
        if (displayMethodBuilder_ == null) {
          if (!other.displayMethod_.isEmpty()) {
            if (displayMethod_.isEmpty()) {
              displayMethod_ = other.displayMethod_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureDisplayMethodIsMutable();
              displayMethod_.addAll(other.displayMethod_);
            }
            onChanged();
          }
        } else {
          if (!other.displayMethod_.isEmpty()) {
            if (displayMethodBuilder_.isEmpty()) {
              displayMethodBuilder_.dispose();
              displayMethodBuilder_ = null;
              displayMethod_ = other.displayMethod_;
              bitField0_ = (bitField0_ & ~0x00000800);
              displayMethodBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDisplayMethodFieldBuilder() : null;
            } else {
              displayMethodBuilder_.addAllMessages(other.displayMethod_);
            }
          }
        }
        if (other.hasInterstitial()) {
          setInterstitial(other.getInterstitial());
        }
        if (other.hasMobileOptimized()) {
          setMobileOptimized(other.getMobileOptimized());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasTemplateId()) {
          bitField0_ |= 0x00008000;
          templateId_ = other.templateId_;
          onChanged();
        }
        if (other.hasMaterialId()) {
          setMaterialId(other.getMaterialId());
        }
        if (!other.creativeType_.isEmpty()) {
          if (creativeType_.isEmpty()) {
            creativeType_ = other.creativeType_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureCreativeTypeIsMutable();
            creativeType_.addAll(other.creativeType_);
          }
          onChanged();
        }
        if (other.hasDynCreative()) {
          mergeDynCreative(other.getDynCreative());
        }
        if (!other.clickMonUrl_.isEmpty()) {
          if (clickMonUrl_.isEmpty()) {
            clickMonUrl_ = other.clickMonUrl_;
            bitField0_ = (bitField0_ & ~0x00080000);
          } else {
            ensureClickMonUrlIsMutable();
            clickMonUrl_.addAll(other.clickMonUrl_);
          }
          onChanged();
        }
        if (other.hasInteractionType()) {
          setInteractionType(other.getInteractionType());
        }
        if (other.hasMaxLevel()) {
          setMaxLevel(other.getMaxLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.cache.DeliveryMessage.Banner parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.cache.DeliveryMessage.Banner) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *创意id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *创意id
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *创意id
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *创意id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.Command cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加/修改、删除）
       * </pre>
       */
      public boolean hasCmd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加/修改、删除）
       * </pre>
       */
      public de.cache.DeliveryMessage.Command getCmd() {
        return cmd_;
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加/修改、删除）
       * </pre>
       */
      public Builder setCmd(de.cache.DeliveryMessage.Command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        cmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.Command cmd = 2;</code>
       *
       * <pre>
       *数据操作类型（如增加/修改、删除）
       * </pre>
       */
      public Builder clearCmd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        onChanged();
        return this;
      }

      private int weight_ ;
      /**
       * <code>optional int32 weight = 3;</code>
       *
       * <pre>
       *权重
       * </pre>
       */
      public boolean hasWeight() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 weight = 3;</code>
       *
       * <pre>
       *权重
       * </pre>
       */
      public int getWeight() {
        return weight_;
      }
      /**
       * <code>optional int32 weight = 3;</code>
       *
       * <pre>
       *权重
       * </pre>
       */
      public Builder setWeight(int value) {
        bitField0_ |= 0x00000004;
        weight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 weight = 3;</code>
       *
       * <pre>
       *权重
       * </pre>
       */
      public Builder clearWeight() {
        bitField0_ = (bitField0_ & ~0x00000004);
        weight_ = 0;
        onChanged();
        return this;
      }

      private long startTimestamp_ ;
      /**
       * <code>optional int64 startTimestamp = 4;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public boolean hasStartTimestamp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 startTimestamp = 4;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public long getStartTimestamp() {
        return startTimestamp_;
      }
      /**
       * <code>optional int64 startTimestamp = 4;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public Builder setStartTimestamp(long value) {
        bitField0_ |= 0x00000008;
        startTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 startTimestamp = 4;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public Builder clearStartTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        startTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private long endTimestamp_ ;
      /**
       * <code>optional int64 endTimestamp = 5;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public boolean hasEndTimestamp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 endTimestamp = 5;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public long getEndTimestamp() {
        return endTimestamp_;
      }
      /**
       * <code>optional int64 endTimestamp = 5;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public Builder setEndTimestamp(long value) {
        bitField0_ |= 0x00000010;
        endTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 endTimestamp = 5;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public Builder clearEndTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        endTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private long size_ ;
      /**
       * <code>optional uint64 size = 6;</code>
       *
       * <pre>
       *素材大小(Byte)
       * </pre>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 size = 6;</code>
       *
       * <pre>
       *素材大小(Byte)
       * </pre>
       */
      public long getSize() {
        return size_;
      }
      /**
       * <code>optional uint64 size = 6;</code>
       *
       * <pre>
       *素材大小(Byte)
       * </pre>
       */
      public Builder setSize(long value) {
        bitField0_ |= 0x00000020;
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 size = 6;</code>
       *
       * <pre>
       *素材大小(Byte)
       * </pre>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000020);
        size_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object trackUrl_ = "";
      /**
       * <code>optional string trackUrl = 7;</code>
       *
       * <pre>
       *显示监测地址
       * </pre>
       */
      public boolean hasTrackUrl() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string trackUrl = 7;</code>
       *
       * <pre>
       *显示监测地址
       * </pre>
       */
      public java.lang.String getTrackUrl() {
        java.lang.Object ref = trackUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            trackUrl_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string trackUrl = 7;</code>
       *
       * <pre>
       *显示监测地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTrackUrlBytes() {
        java.lang.Object ref = trackUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          trackUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string trackUrl = 7;</code>
       *
       * <pre>
       *显示监测地址
       * </pre>
       */
      public Builder setTrackUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        trackUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string trackUrl = 7;</code>
       *
       * <pre>
       *显示监测地址
       * </pre>
       */
      public Builder clearTrackUrl() {
        bitField0_ = (bitField0_ & ~0x00000040);
        trackUrl_ = getDefaultInstance().getTrackUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string trackUrl = 7;</code>
       *
       * <pre>
       *显示监测地址
       * </pre>
       */
      public Builder setTrackUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        trackUrl_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object tplName_ = "";
      /**
       * <code>optional string tplName = 8;</code>
       *
       * <pre>
       *模板策略文件名(相对b目录) : 获取动态创意参数, otherFeatures.fileName=="b/p.${bannerid}.${dynamicTplId}"
       * </pre>
       */
      public boolean hasTplName() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string tplName = 8;</code>
       *
       * <pre>
       *模板策略文件名(相对b目录) : 获取动态创意参数, otherFeatures.fileName=="b/p.${bannerid}.${dynamicTplId}"
       * </pre>
       */
      public java.lang.String getTplName() {
        java.lang.Object ref = tplName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tplName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tplName = 8;</code>
       *
       * <pre>
       *模板策略文件名(相对b目录) : 获取动态创意参数, otherFeatures.fileName=="b/p.${bannerid}.${dynamicTplId}"
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTplNameBytes() {
        java.lang.Object ref = tplName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tplName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tplName = 8;</code>
       *
       * <pre>
       *模板策略文件名(相对b目录) : 获取动态创意参数, otherFeatures.fileName=="b/p.${bannerid}.${dynamicTplId}"
       * </pre>
       */
      public Builder setTplName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        tplName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tplName = 8;</code>
       *
       * <pre>
       *模板策略文件名(相对b目录) : 获取动态创意参数, otherFeatures.fileName=="b/p.${bannerid}.${dynamicTplId}"
       * </pre>
       */
      public Builder clearTplName() {
        bitField0_ = (bitField0_ & ~0x00000080);
        tplName_ = getDefaultInstance().getTplName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tplName = 8;</code>
       *
       * <pre>
       *模板策略文件名(相对b目录) : 获取动态创意参数, otherFeatures.fileName=="b/p.${bannerid}.${dynamicTplId}"
       * </pre>
       */
      public Builder setTplNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        tplName_ = value;
        onChanged();
        return this;
      }

      private int width_ ;
      /**
       * <code>optional int32 width = 9;</code>
       *
       * <pre>
       *素材宽度
       * </pre>
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 width = 9;</code>
       *
       * <pre>
       *素材宽度
       * </pre>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <code>optional int32 width = 9;</code>
       *
       * <pre>
       *素材宽度
       * </pre>
       */
      public Builder setWidth(int value) {
        bitField0_ |= 0x00000100;
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 width = 9;</code>
       *
       * <pre>
       *素材宽度
       * </pre>
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000100);
        width_ = 0;
        onChanged();
        return this;
      }

      private int height_ ;
      /**
       * <code>optional int32 height = 10;</code>
       *
       * <pre>
       *素材高度
       * </pre>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 height = 10;</code>
       *
       * <pre>
       *素材高度
       * </pre>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <code>optional int32 height = 10;</code>
       *
       * <pre>
       *素材高度
       * </pre>
       */
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000200;
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 height = 10;</code>
       *
       * <pre>
       *素材高度
       * </pre>
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000200);
        height_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<de.cache.DeliveryMessage.TrafficSource> trafficSource_ =
        java.util.Collections.emptyList();
      private void ensureTrafficSourceIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          trafficSource_ = new java.util.ArrayList<de.cache.DeliveryMessage.TrafficSource>(trafficSource_);
          bitField0_ |= 0x00000400;
        }
      }
      /**
       * <code>repeated .de.cache.TrafficSource trafficSource = 11;</code>
       *
       * <pre>
       *创意支持的流量来源
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.TrafficSource> getTrafficSourceList() {
        return java.util.Collections.unmodifiableList(trafficSource_);
      }
      /**
       * <code>repeated .de.cache.TrafficSource trafficSource = 11;</code>
       *
       * <pre>
       *创意支持的流量来源
       * </pre>
       */
      public int getTrafficSourceCount() {
        return trafficSource_.size();
      }
      /**
       * <code>repeated .de.cache.TrafficSource trafficSource = 11;</code>
       *
       * <pre>
       *创意支持的流量来源
       * </pre>
       */
      public de.cache.DeliveryMessage.TrafficSource getTrafficSource(int index) {
        return trafficSource_.get(index);
      }
      /**
       * <code>repeated .de.cache.TrafficSource trafficSource = 11;</code>
       *
       * <pre>
       *创意支持的流量来源
       * </pre>
       */
      public Builder setTrafficSource(
          int index, de.cache.DeliveryMessage.TrafficSource value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTrafficSourceIsMutable();
        trafficSource_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .de.cache.TrafficSource trafficSource = 11;</code>
       *
       * <pre>
       *创意支持的流量来源
       * </pre>
       */
      public Builder addTrafficSource(de.cache.DeliveryMessage.TrafficSource value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTrafficSourceIsMutable();
        trafficSource_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .de.cache.TrafficSource trafficSource = 11;</code>
       *
       * <pre>
       *创意支持的流量来源
       * </pre>
       */
      public Builder addAllTrafficSource(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.TrafficSource> values) {
        ensureTrafficSourceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, trafficSource_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .de.cache.TrafficSource trafficSource = 11;</code>
       *
       * <pre>
       *创意支持的流量来源
       * </pre>
       */
      public Builder clearTrafficSource() {
        trafficSource_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      private java.util.List<de.cache.DeliveryMessage.Banner.DisplayMethods> displayMethod_ =
        java.util.Collections.emptyList();
      private void ensureDisplayMethodIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          displayMethod_ = new java.util.ArrayList<de.cache.DeliveryMessage.Banner.DisplayMethods>(displayMethod_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.Banner.DisplayMethods, de.cache.DeliveryMessage.Banner.DisplayMethods.Builder, de.cache.DeliveryMessage.Banner.DisplayMethodsOrBuilder> displayMethodBuilder_;

      /**
       * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
       */
      public java.util.List<de.cache.DeliveryMessage.Banner.DisplayMethods> getDisplayMethodList() {
        if (displayMethodBuilder_ == null) {
          return java.util.Collections.unmodifiableList(displayMethod_);
        } else {
          return displayMethodBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
       */
      public int getDisplayMethodCount() {
        if (displayMethodBuilder_ == null) {
          return displayMethod_.size();
        } else {
          return displayMethodBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
       */
      public de.cache.DeliveryMessage.Banner.DisplayMethods getDisplayMethod(int index) {
        if (displayMethodBuilder_ == null) {
          return displayMethod_.get(index);
        } else {
          return displayMethodBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
       */
      public Builder setDisplayMethod(
          int index, de.cache.DeliveryMessage.Banner.DisplayMethods value) {
        if (displayMethodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDisplayMethodIsMutable();
          displayMethod_.set(index, value);
          onChanged();
        } else {
          displayMethodBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
       */
      public Builder setDisplayMethod(
          int index, de.cache.DeliveryMessage.Banner.DisplayMethods.Builder builderForValue) {
        if (displayMethodBuilder_ == null) {
          ensureDisplayMethodIsMutable();
          displayMethod_.set(index, builderForValue.build());
          onChanged();
        } else {
          displayMethodBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
       */
      public Builder addDisplayMethod(de.cache.DeliveryMessage.Banner.DisplayMethods value) {
        if (displayMethodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDisplayMethodIsMutable();
          displayMethod_.add(value);
          onChanged();
        } else {
          displayMethodBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
       */
      public Builder addDisplayMethod(
          int index, de.cache.DeliveryMessage.Banner.DisplayMethods value) {
        if (displayMethodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDisplayMethodIsMutable();
          displayMethod_.add(index, value);
          onChanged();
        } else {
          displayMethodBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
       */
      public Builder addDisplayMethod(
          de.cache.DeliveryMessage.Banner.DisplayMethods.Builder builderForValue) {
        if (displayMethodBuilder_ == null) {
          ensureDisplayMethodIsMutable();
          displayMethod_.add(builderForValue.build());
          onChanged();
        } else {
          displayMethodBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
       */
      public Builder addDisplayMethod(
          int index, de.cache.DeliveryMessage.Banner.DisplayMethods.Builder builderForValue) {
        if (displayMethodBuilder_ == null) {
          ensureDisplayMethodIsMutable();
          displayMethod_.add(index, builderForValue.build());
          onChanged();
        } else {
          displayMethodBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
       */
      public Builder addAllDisplayMethod(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.Banner.DisplayMethods> values) {
        if (displayMethodBuilder_ == null) {
          ensureDisplayMethodIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, displayMethod_);
          onChanged();
        } else {
          displayMethodBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
       */
      public Builder clearDisplayMethod() {
        if (displayMethodBuilder_ == null) {
          displayMethod_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          displayMethodBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
       */
      public Builder removeDisplayMethod(int index) {
        if (displayMethodBuilder_ == null) {
          ensureDisplayMethodIsMutable();
          displayMethod_.remove(index);
          onChanged();
        } else {
          displayMethodBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
       */
      public de.cache.DeliveryMessage.Banner.DisplayMethods.Builder getDisplayMethodBuilder(
          int index) {
        return getDisplayMethodFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
       */
      public de.cache.DeliveryMessage.Banner.DisplayMethodsOrBuilder getDisplayMethodOrBuilder(
          int index) {
        if (displayMethodBuilder_ == null) {
          return displayMethod_.get(index);  } else {
          return displayMethodBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.Banner.DisplayMethodsOrBuilder> 
           getDisplayMethodOrBuilderList() {
        if (displayMethodBuilder_ != null) {
          return displayMethodBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(displayMethod_);
        }
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
       */
      public de.cache.DeliveryMessage.Banner.DisplayMethods.Builder addDisplayMethodBuilder() {
        return getDisplayMethodFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.Banner.DisplayMethods.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
       */
      public de.cache.DeliveryMessage.Banner.DisplayMethods.Builder addDisplayMethodBuilder(
          int index) {
        return getDisplayMethodFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.Banner.DisplayMethods.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.Banner.DisplayMethods displayMethod = 12;</code>
       */
      public java.util.List<de.cache.DeliveryMessage.Banner.DisplayMethods.Builder> 
           getDisplayMethodBuilderList() {
        return getDisplayMethodFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.Banner.DisplayMethods, de.cache.DeliveryMessage.Banner.DisplayMethods.Builder, de.cache.DeliveryMessage.Banner.DisplayMethodsOrBuilder> 
          getDisplayMethodFieldBuilder() {
        if (displayMethodBuilder_ == null) {
          displayMethodBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.Banner.DisplayMethods, de.cache.DeliveryMessage.Banner.DisplayMethods.Builder, de.cache.DeliveryMessage.Banner.DisplayMethodsOrBuilder>(
                  displayMethod_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          displayMethod_ = null;
        }
        return displayMethodBuilder_;
      }

      private de.cache.DeliveryMessage.GlobalSwitch interstitial_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
      /**
       * <code>optional .de.cache.GlobalSwitch Interstitial = 13 [default = OFF];</code>
       *
       * <pre>
       * </pre>
       */
      public boolean hasInterstitial() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .de.cache.GlobalSwitch Interstitial = 13 [default = OFF];</code>
       *
       * <pre>
       * </pre>
       */
      public de.cache.DeliveryMessage.GlobalSwitch getInterstitial() {
        return interstitial_;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch Interstitial = 13 [default = OFF];</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setInterstitial(de.cache.DeliveryMessage.GlobalSwitch value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00001000;
        interstitial_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch Interstitial = 13 [default = OFF];</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearInterstitial() {
        bitField0_ = (bitField0_ & ~0x00001000);
        interstitial_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.GlobalSwitch mobileOptimized_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
      /**
       * <code>optional .de.cache.GlobalSwitch mobileOptimized = 14 [default = OFF];</code>
       *
       * <pre>
       *移动优化
       * </pre>
       */
      public boolean hasMobileOptimized() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .de.cache.GlobalSwitch mobileOptimized = 14 [default = OFF];</code>
       *
       * <pre>
       *移动优化
       * </pre>
       */
      public de.cache.DeliveryMessage.GlobalSwitch getMobileOptimized() {
        return mobileOptimized_;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch mobileOptimized = 14 [default = OFF];</code>
       *
       * <pre>
       *移动优化
       * </pre>
       */
      public Builder setMobileOptimized(de.cache.DeliveryMessage.GlobalSwitch value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00002000;
        mobileOptimized_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch mobileOptimized = 14 [default = OFF];</code>
       *
       * <pre>
       *移动优化
       * </pre>
       */
      public Builder clearMobileOptimized() {
        bitField0_ = (bitField0_ & ~0x00002000);
        mobileOptimized_ = de.cache.DeliveryMessage.GlobalSwitch.OFF;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.GlobalSwitch status_ = de.cache.DeliveryMessage.GlobalSwitch.ON;
      /**
       * <code>optional .de.cache.GlobalSwitch status = 15 [default = ON];</code>
       *
       * <pre>
       *数据状态（1=有效、0=无效）
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .de.cache.GlobalSwitch status = 15 [default = ON];</code>
       *
       * <pre>
       *数据状态（1=有效、0=无效）
       * </pre>
       */
      public de.cache.DeliveryMessage.GlobalSwitch getStatus() {
        return status_;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch status = 15 [default = ON];</code>
       *
       * <pre>
       *数据状态（1=有效、0=无效）
       * </pre>
       */
      public Builder setStatus(de.cache.DeliveryMessage.GlobalSwitch value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00004000;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.GlobalSwitch status = 15 [default = ON];</code>
       *
       * <pre>
       *数据状态（1=有效、0=无效）
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00004000);
        status_ = de.cache.DeliveryMessage.GlobalSwitch.ON;
        onChanged();
        return this;
      }

      private java.lang.Object templateId_ = "";
      /**
       * <code>optional string templateId = 16;</code>
       *
       * <pre>
       *创意类型, 对应g文件第9位
       * </pre>
       */
      public boolean hasTemplateId() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional string templateId = 16;</code>
       *
       * <pre>
       *创意类型, 对应g文件第9位
       * </pre>
       */
      public java.lang.String getTemplateId() {
        java.lang.Object ref = templateId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            templateId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string templateId = 16;</code>
       *
       * <pre>
       *创意类型, 对应g文件第9位
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTemplateIdBytes() {
        java.lang.Object ref = templateId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          templateId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string templateId = 16;</code>
       *
       * <pre>
       *创意类型, 对应g文件第9位
       * </pre>
       */
      public Builder setTemplateId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        templateId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string templateId = 16;</code>
       *
       * <pre>
       *创意类型, 对应g文件第9位
       * </pre>
       */
      public Builder clearTemplateId() {
        bitField0_ = (bitField0_ & ~0x00008000);
        templateId_ = getDefaultInstance().getTemplateId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string templateId = 16;</code>
       *
       * <pre>
       *创意类型, 对应g文件第9位
       * </pre>
       */
      public Builder setTemplateIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        templateId_ = value;
        onChanged();
        return this;
      }

      private long materialId_ ;
      /**
       * <code>optional int64 materialId = 17;</code>
       *
       * <pre>
       *素材ID,yaml文件使用
       * </pre>
       */
      public boolean hasMaterialId() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int64 materialId = 17;</code>
       *
       * <pre>
       *素材ID,yaml文件使用
       * </pre>
       */
      public long getMaterialId() {
        return materialId_;
      }
      /**
       * <code>optional int64 materialId = 17;</code>
       *
       * <pre>
       *素材ID,yaml文件使用
       * </pre>
       */
      public Builder setMaterialId(long value) {
        bitField0_ |= 0x00010000;
        materialId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 materialId = 17;</code>
       *
       * <pre>
       *素材ID,yaml文件使用
       * </pre>
       */
      public Builder clearMaterialId() {
        bitField0_ = (bitField0_ & ~0x00010000);
        materialId_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> creativeType_ = java.util.Collections.emptyList();
      private void ensureCreativeTypeIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          creativeType_ = new java.util.ArrayList<java.lang.Long>(creativeType_);
          bitField0_ |= 0x00020000;
         }
      }
      /**
       * <code>repeated int64 creativeType = 18;</code>
       *
       * <pre>
       *创意格式类型, g文件:第25位使用, 1:图文，2：视频，3：移动富媒体，4：富媒体, 6 : 移动创意类型
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getCreativeTypeList() {
        return java.util.Collections.unmodifiableList(creativeType_);
      }
      /**
       * <code>repeated int64 creativeType = 18;</code>
       *
       * <pre>
       *创意格式类型, g文件:第25位使用, 1:图文，2：视频，3：移动富媒体，4：富媒体, 6 : 移动创意类型
       * </pre>
       */
      public int getCreativeTypeCount() {
        return creativeType_.size();
      }
      /**
       * <code>repeated int64 creativeType = 18;</code>
       *
       * <pre>
       *创意格式类型, g文件:第25位使用, 1:图文，2：视频，3：移动富媒体，4：富媒体, 6 : 移动创意类型
       * </pre>
       */
      public long getCreativeType(int index) {
        return creativeType_.get(index);
      }
      /**
       * <code>repeated int64 creativeType = 18;</code>
       *
       * <pre>
       *创意格式类型, g文件:第25位使用, 1:图文，2：视频，3：移动富媒体，4：富媒体, 6 : 移动创意类型
       * </pre>
       */
      public Builder setCreativeType(
          int index, long value) {
        ensureCreativeTypeIsMutable();
        creativeType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 creativeType = 18;</code>
       *
       * <pre>
       *创意格式类型, g文件:第25位使用, 1:图文，2：视频，3：移动富媒体，4：富媒体, 6 : 移动创意类型
       * </pre>
       */
      public Builder addCreativeType(long value) {
        ensureCreativeTypeIsMutable();
        creativeType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 creativeType = 18;</code>
       *
       * <pre>
       *创意格式类型, g文件:第25位使用, 1:图文，2：视频，3：移动富媒体，4：富媒体, 6 : 移动创意类型
       * </pre>
       */
      public Builder addAllCreativeType(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureCreativeTypeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, creativeType_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 creativeType = 18;</code>
       *
       * <pre>
       *创意格式类型, g文件:第25位使用, 1:图文，2：视频，3：移动富媒体，4：富媒体, 6 : 移动创意类型
       * </pre>
       */
      public Builder clearCreativeType() {
        creativeType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.Banner.DynCreative dynCreative_ = de.cache.DeliveryMessage.Banner.DynCreative.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.Banner.DynCreative, de.cache.DeliveryMessage.Banner.DynCreative.Builder, de.cache.DeliveryMessage.Banner.DynCreativeOrBuilder> dynCreativeBuilder_;
      /**
       * <code>optional .de.cache.Banner.DynCreative dynCreative = 19;</code>
       *
       * <pre>
       *动态创意内容
       * </pre>
       */
      public boolean hasDynCreative() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .de.cache.Banner.DynCreative dynCreative = 19;</code>
       *
       * <pre>
       *动态创意内容
       * </pre>
       */
      public de.cache.DeliveryMessage.Banner.DynCreative getDynCreative() {
        if (dynCreativeBuilder_ == null) {
          return dynCreative_;
        } else {
          return dynCreativeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .de.cache.Banner.DynCreative dynCreative = 19;</code>
       *
       * <pre>
       *动态创意内容
       * </pre>
       */
      public Builder setDynCreative(de.cache.DeliveryMessage.Banner.DynCreative value) {
        if (dynCreativeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dynCreative_ = value;
          onChanged();
        } else {
          dynCreativeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .de.cache.Banner.DynCreative dynCreative = 19;</code>
       *
       * <pre>
       *动态创意内容
       * </pre>
       */
      public Builder setDynCreative(
          de.cache.DeliveryMessage.Banner.DynCreative.Builder builderForValue) {
        if (dynCreativeBuilder_ == null) {
          dynCreative_ = builderForValue.build();
          onChanged();
        } else {
          dynCreativeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .de.cache.Banner.DynCreative dynCreative = 19;</code>
       *
       * <pre>
       *动态创意内容
       * </pre>
       */
      public Builder mergeDynCreative(de.cache.DeliveryMessage.Banner.DynCreative value) {
        if (dynCreativeBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000) &&
              dynCreative_ != de.cache.DeliveryMessage.Banner.DynCreative.getDefaultInstance()) {
            dynCreative_ =
              de.cache.DeliveryMessage.Banner.DynCreative.newBuilder(dynCreative_).mergeFrom(value).buildPartial();
          } else {
            dynCreative_ = value;
          }
          onChanged();
        } else {
          dynCreativeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .de.cache.Banner.DynCreative dynCreative = 19;</code>
       *
       * <pre>
       *动态创意内容
       * </pre>
       */
      public Builder clearDynCreative() {
        if (dynCreativeBuilder_ == null) {
          dynCreative_ = de.cache.DeliveryMessage.Banner.DynCreative.getDefaultInstance();
          onChanged();
        } else {
          dynCreativeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .de.cache.Banner.DynCreative dynCreative = 19;</code>
       *
       * <pre>
       *动态创意内容
       * </pre>
       */
      public de.cache.DeliveryMessage.Banner.DynCreative.Builder getDynCreativeBuilder() {
        bitField0_ |= 0x00040000;
        onChanged();
        return getDynCreativeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .de.cache.Banner.DynCreative dynCreative = 19;</code>
       *
       * <pre>
       *动态创意内容
       * </pre>
       */
      public de.cache.DeliveryMessage.Banner.DynCreativeOrBuilder getDynCreativeOrBuilder() {
        if (dynCreativeBuilder_ != null) {
          return dynCreativeBuilder_.getMessageOrBuilder();
        } else {
          return dynCreative_;
        }
      }
      /**
       * <code>optional .de.cache.Banner.DynCreative dynCreative = 19;</code>
       *
       * <pre>
       *动态创意内容
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.Banner.DynCreative, de.cache.DeliveryMessage.Banner.DynCreative.Builder, de.cache.DeliveryMessage.Banner.DynCreativeOrBuilder> 
          getDynCreativeFieldBuilder() {
        if (dynCreativeBuilder_ == null) {
          dynCreativeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.cache.DeliveryMessage.Banner.DynCreative, de.cache.DeliveryMessage.Banner.DynCreative.Builder, de.cache.DeliveryMessage.Banner.DynCreativeOrBuilder>(
                  getDynCreative(),
                  getParentForChildren(),
                  isClean());
          dynCreative_ = null;
        }
        return dynCreativeBuilder_;
      }

      private com.google.protobuf.LazyStringList clickMonUrl_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureClickMonUrlIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          clickMonUrl_ = new com.google.protobuf.LazyStringArrayList(clickMonUrl_);
          bitField0_ |= 0x00080000;
         }
      }
      /**
       * <code>repeated string clickMonUrl = 20;</code>
       *
       * <pre>
       *第三方点击监测地址
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getClickMonUrlList() {
        return clickMonUrl_.getUnmodifiableView();
      }
      /**
       * <code>repeated string clickMonUrl = 20;</code>
       *
       * <pre>
       *第三方点击监测地址
       * </pre>
       */
      public int getClickMonUrlCount() {
        return clickMonUrl_.size();
      }
      /**
       * <code>repeated string clickMonUrl = 20;</code>
       *
       * <pre>
       *第三方点击监测地址
       * </pre>
       */
      public java.lang.String getClickMonUrl(int index) {
        return clickMonUrl_.get(index);
      }
      /**
       * <code>repeated string clickMonUrl = 20;</code>
       *
       * <pre>
       *第三方点击监测地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClickMonUrlBytes(int index) {
        return clickMonUrl_.getByteString(index);
      }
      /**
       * <code>repeated string clickMonUrl = 20;</code>
       *
       * <pre>
       *第三方点击监测地址
       * </pre>
       */
      public Builder setClickMonUrl(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureClickMonUrlIsMutable();
        clickMonUrl_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string clickMonUrl = 20;</code>
       *
       * <pre>
       *第三方点击监测地址
       * </pre>
       */
      public Builder addClickMonUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureClickMonUrlIsMutable();
        clickMonUrl_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string clickMonUrl = 20;</code>
       *
       * <pre>
       *第三方点击监测地址
       * </pre>
       */
      public Builder addAllClickMonUrl(
          java.lang.Iterable<java.lang.String> values) {
        ensureClickMonUrlIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, clickMonUrl_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string clickMonUrl = 20;</code>
       *
       * <pre>
       *第三方点击监测地址
       * </pre>
       */
      public Builder clearClickMonUrl() {
        clickMonUrl_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00080000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string clickMonUrl = 20;</code>
       *
       * <pre>
       *第三方点击监测地址
       * </pre>
       */
      public Builder addClickMonUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureClickMonUrlIsMutable();
        clickMonUrl_.add(value);
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.Banner.InteractionType interactionType_ = de.cache.DeliveryMessage.Banner.InteractionType.TELEPHONE;
      /**
       * <code>optional .de.cache.Banner.InteractionType interaction_type = 21;</code>
       *
       * <pre>
       * baidu: [App 允许的交互类型];
       * </pre>
       */
      public boolean hasInteractionType() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .de.cache.Banner.InteractionType interaction_type = 21;</code>
       *
       * <pre>
       * baidu: [App 允许的交互类型];
       * </pre>
       */
      public de.cache.DeliveryMessage.Banner.InteractionType getInteractionType() {
        return interactionType_;
      }
      /**
       * <code>optional .de.cache.Banner.InteractionType interaction_type = 21;</code>
       *
       * <pre>
       * baidu: [App 允许的交互类型];
       * </pre>
       */
      public Builder setInteractionType(de.cache.DeliveryMessage.Banner.InteractionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00100000;
        interactionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.Banner.InteractionType interaction_type = 21;</code>
       *
       * <pre>
       * baidu: [App 允许的交互类型];
       * </pre>
       */
      public Builder clearInteractionType() {
        bitField0_ = (bitField0_ & ~0x00100000);
        interactionType_ = de.cache.DeliveryMessage.Banner.InteractionType.TELEPHONE;
        onChanged();
        return this;
      }

      private int maxLevel_ ;
      /**
       * <code>optional int32 max_level = 22;</code>
       *
       * <pre>
       *max creative level
       * </pre>
       */
      public boolean hasMaxLevel() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 max_level = 22;</code>
       *
       * <pre>
       *max creative level
       * </pre>
       */
      public int getMaxLevel() {
        return maxLevel_;
      }
      /**
       * <code>optional int32 max_level = 22;</code>
       *
       * <pre>
       *max creative level
       * </pre>
       */
      public Builder setMaxLevel(int value) {
        bitField0_ |= 0x00200000;
        maxLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_level = 22;</code>
       *
       * <pre>
       *max creative level
       * </pre>
       */
      public Builder clearMaxLevel() {
        bitField0_ = (bitField0_ & ~0x00200000);
        maxLevel_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:de.cache.Banner)
    }

    static {
      defaultInstance = new Banner(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:de.cache.Banner)
  }

  public interface DbConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.cache.DbConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .de.cache.Command cmd = 1;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    boolean hasCmd();
    /**
     * <code>optional .de.cache.Command cmd = 1;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    de.cache.DeliveryMessage.Command getCmd();

    /**
     * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 2;</code>
     *
     * <pre>
     *DB级别referrer黑白名单
     * </pre>
     */
    boolean hasReferrerTargeting();
    /**
     * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 2;</code>
     *
     * <pre>
     *DB级别referrer黑白名单
     * </pre>
     */
    de.cache.DeliveryMessage.BlackAndWhiteList getReferrerTargeting();
    /**
     * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 2;</code>
     *
     * <pre>
     *DB级别referrer黑白名单
     * </pre>
     */
    de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder getReferrerTargetingOrBuilder();

    /**
     * <code>optional .de.cache.BlackAndWhiteList clickUrlTargeting = 3;</code>
     *
     * <pre>
     *点击目标地址黑白名单
     * </pre>
     */
    boolean hasClickUrlTargeting();
    /**
     * <code>optional .de.cache.BlackAndWhiteList clickUrlTargeting = 3;</code>
     *
     * <pre>
     *点击目标地址黑白名单
     * </pre>
     */
    de.cache.DeliveryMessage.BlackAndWhiteList getClickUrlTargeting();
    /**
     * <code>optional .de.cache.BlackAndWhiteList clickUrlTargeting = 3;</code>
     *
     * <pre>
     *点击目标地址黑白名单
     * </pre>
     */
    de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder getClickUrlTargetingOrBuilder();

    /**
     * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
     *
     * <pre>
     *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
     *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
     *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
     *2. IP黑名单的开始值
     *3. IP黑名单的结束值
     *如果只有一个ip，起始ip设置为相同
     * </pre>
     */
    java.util.List<de.cache.DeliveryMessage.IPSection> 
        getIpWhitelistList();
    /**
     * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
     *
     * <pre>
     *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
     *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
     *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
     *2. IP黑名单的开始值
     *3. IP黑名单的结束值
     *如果只有一个ip，起始ip设置为相同
     * </pre>
     */
    de.cache.DeliveryMessage.IPSection getIpWhitelist(int index);
    /**
     * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
     *
     * <pre>
     *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
     *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
     *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
     *2. IP黑名单的开始值
     *3. IP黑名单的结束值
     *如果只有一个ip，起始ip设置为相同
     * </pre>
     */
    int getIpWhitelistCount();
    /**
     * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
     *
     * <pre>
     *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
     *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
     *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
     *2. IP黑名单的开始值
     *3. IP黑名单的结束值
     *如果只有一个ip，起始ip设置为相同
     * </pre>
     */
    java.util.List<? extends de.cache.DeliveryMessage.IPSectionOrBuilder> 
        getIpWhitelistOrBuilderList();
    /**
     * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
     *
     * <pre>
     *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
     *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
     *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
     *2. IP黑名单的开始值
     *3. IP黑名单的结束值
     *如果只有一个ip，起始ip设置为相同
     * </pre>
     */
    de.cache.DeliveryMessage.IPSectionOrBuilder getIpWhitelistOrBuilder(
        int index);

    /**
     * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
     *
     * <pre>
     *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
     * </pre>
     */
    java.util.List<de.cache.DeliveryMessage.IPSection> 
        getIpBlacklistList();
    /**
     * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
     *
     * <pre>
     *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
     * </pre>
     */
    de.cache.DeliveryMessage.IPSection getIpBlacklist(int index);
    /**
     * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
     *
     * <pre>
     *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
     * </pre>
     */
    int getIpBlacklistCount();
    /**
     * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
     *
     * <pre>
     *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
     * </pre>
     */
    java.util.List<? extends de.cache.DeliveryMessage.IPSectionOrBuilder> 
        getIpBlacklistOrBuilderList();
    /**
     * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
     *
     * <pre>
     *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
     * </pre>
     */
    de.cache.DeliveryMessage.IPSectionOrBuilder getIpBlacklistOrBuilder(
        int index);

    /**
     * <code>optional string previewUrl = 6;</code>
     *
     * <pre>
     *实效预览地址，如果为空的话则不进行实效预览
     * </pre>
     */
    boolean hasPreviewUrl();
    /**
     * <code>optional string previewUrl = 6;</code>
     *
     * <pre>
     *实效预览地址，如果为空的话则不进行实效预览
     * </pre>
     */
    java.lang.String getPreviewUrl();
    /**
     * <code>optional string previewUrl = 6;</code>
     *
     * <pre>
     *实效预览地址，如果为空的话则不进行实效预览
     * </pre>
     */
    com.google.protobuf.ByteString
        getPreviewUrlBytes();

    /**
     * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
     *
     * <pre>
     *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
     * </pre>
     */
    java.util.List<de.cache.DeliveryMessage.DbConfig.IPTargetingInfo> 
        getVipIpsList();
    /**
     * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
     *
     * <pre>
     *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
     * </pre>
     */
    de.cache.DeliveryMessage.DbConfig.IPTargetingInfo getVipIps(int index);
    /**
     * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
     *
     * <pre>
     *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
     * </pre>
     */
    int getVipIpsCount();
    /**
     * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
     *
     * <pre>
     *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
     * </pre>
     */
    java.util.List<? extends de.cache.DeliveryMessage.DbConfig.IPTargetingInfoOrBuilder> 
        getVipIpsOrBuilderList();
    /**
     * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
     *
     * <pre>
     *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
     * </pre>
     */
    de.cache.DeliveryMessage.DbConfig.IPTargetingInfoOrBuilder getVipIpsOrBuilder(
        int index);

    /**
     * <code>optional int32 linkageTimeout = 8;</code>
     *
     * <pre>
     *联动广告超时时间，表示联动广告的过期时间。默认是120秒。范围是【30，86400】
     * </pre>
     */
    boolean hasLinkageTimeout();
    /**
     * <code>optional int32 linkageTimeout = 8;</code>
     *
     * <pre>
     *联动广告超时时间，表示联动广告的过期时间。默认是120秒。范围是【30，86400】
     * </pre>
     */
    int getLinkageTimeout();

    /**
     * <code>repeated string logCookieName = 9;</code>
     *
     * <pre>
     *需要记录进日志的Cookie名称，日志第七个字段记录第三方用户唯一标示，此处为需要记录的cookie的key值
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getLogCookieNameList();
    /**
     * <code>repeated string logCookieName = 9;</code>
     *
     * <pre>
     *需要记录进日志的Cookie名称，日志第七个字段记录第三方用户唯一标示，此处为需要记录的cookie的key值
     * </pre>
     */
    int getLogCookieNameCount();
    /**
     * <code>repeated string logCookieName = 9;</code>
     *
     * <pre>
     *需要记录进日志的Cookie名称，日志第七个字段记录第三方用户唯一标示，此处为需要记录的cookie的key值
     * </pre>
     */
    java.lang.String getLogCookieName(int index);
    /**
     * <code>repeated string logCookieName = 9;</code>
     *
     * <pre>
     *需要记录进日志的Cookie名称，日志第七个字段记录第三方用户唯一标示，此处为需要记录的cookie的key值
     * </pre>
     */
    com.google.protobuf.ByteString
        getLogCookieNameBytes(int index);

    /**
     * <code>optional int32 cpcSpeedupHours = 10;</code>
     *
     * <pre>
     *设置CPC的补投时间，&lt;0:不补投，没有均匀投放控制，=0:按照默认时间补投(2小时)，&gt;0:按照指定的值(小时)补投
     * </pre>
     */
    boolean hasCpcSpeedupHours();
    /**
     * <code>optional int32 cpcSpeedupHours = 10;</code>
     *
     * <pre>
     *设置CPC的补投时间，&lt;0:不补投，没有均匀投放控制，=0:按照默认时间补投(2小时)，&gt;0:按照指定的值(小时)补投
     * </pre>
     */
    int getCpcSpeedupHours();
  }
  /**
   * Protobuf type {@code de.cache.DbConfig}
   *
   * <pre>
   *系统配置相关实体 DbConfig/FeaturedFile
   * </pre>
   */
  public static final class DbConfig extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:de.cache.DbConfig)
      DbConfigOrBuilder {
    // Use DbConfig.newBuilder() to construct.
    private DbConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DbConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DbConfig defaultInstance;
    public static DbConfig getDefaultInstance() {
      return defaultInstance;
    }

    public DbConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DbConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              de.cache.DeliveryMessage.Command value = de.cache.DeliveryMessage.Command.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                cmd_ = value;
              }
              break;
            }
            case 18: {
              de.cache.DeliveryMessage.BlackAndWhiteList.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = referrerTargeting_.toBuilder();
              }
              referrerTargeting_ = input.readMessage(de.cache.DeliveryMessage.BlackAndWhiteList.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(referrerTargeting_);
                referrerTargeting_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              de.cache.DeliveryMessage.BlackAndWhiteList.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = clickUrlTargeting_.toBuilder();
              }
              clickUrlTargeting_ = input.readMessage(de.cache.DeliveryMessage.BlackAndWhiteList.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clickUrlTargeting_);
                clickUrlTargeting_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                ipWhitelist_ = new java.util.ArrayList<de.cache.DeliveryMessage.IPSection>();
                mutable_bitField0_ |= 0x00000008;
              }
              ipWhitelist_.add(input.readMessage(de.cache.DeliveryMessage.IPSection.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                ipBlacklist_ = new java.util.ArrayList<de.cache.DeliveryMessage.IPSection>();
                mutable_bitField0_ |= 0x00000010;
              }
              ipBlacklist_.add(input.readMessage(de.cache.DeliveryMessage.IPSection.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              previewUrl_ = bs;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                vipIps_ = new java.util.ArrayList<de.cache.DeliveryMessage.DbConfig.IPTargetingInfo>();
                mutable_bitField0_ |= 0x00000040;
              }
              vipIps_.add(input.readMessage(de.cache.DeliveryMessage.DbConfig.IPTargetingInfo.PARSER, extensionRegistry));
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              linkageTimeout_ = input.readInt32();
              break;
            }
            case 74: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                logCookieName_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000100;
              }
              logCookieName_.add(bs);
              break;
            }
            case 80: {
              bitField0_ |= 0x00000020;
              cpcSpeedupHours_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          ipWhitelist_ = java.util.Collections.unmodifiableList(ipWhitelist_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          ipBlacklist_ = java.util.Collections.unmodifiableList(ipBlacklist_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          vipIps_ = java.util.Collections.unmodifiableList(vipIps_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          logCookieName_ = logCookieName_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.internal_static_de_cache_DbConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.cache.DeliveryMessage.internal_static_de_cache_DbConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.cache.DeliveryMessage.DbConfig.class, de.cache.DeliveryMessage.DbConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<DbConfig> PARSER =
        new com.google.protobuf.AbstractParser<DbConfig>() {
      public DbConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DbConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DbConfig> getParserForType() {
      return PARSER;
    }

    public interface IPTargetingInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:de.cache.DbConfig.IPTargetingInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required .de.cache.IPSection ipSection = 1;</code>
       *
       * <pre>
       *IP起始地址
       * </pre>
       */
      boolean hasIpSection();
      /**
       * <code>required .de.cache.IPSection ipSection = 1;</code>
       *
       * <pre>
       *IP起始地址
       * </pre>
       */
      de.cache.DeliveryMessage.IPSection getIpSection();
      /**
       * <code>required .de.cache.IPSection ipSection = 1;</code>
       *
       * <pre>
       *IP起始地址
       * </pre>
       */
      de.cache.DeliveryMessage.IPSectionOrBuilder getIpSectionOrBuilder();

      /**
       * <code>required int64 channelId = 2;</code>
       *
       * <pre>
       *需要制定投放的广告位,
       * </pre>
       */
      boolean hasChannelId();
      /**
       * <code>required int64 channelId = 2;</code>
       *
       * <pre>
       *需要制定投放的广告位,
       * </pre>
       */
      long getChannelId();

      /**
       * <code>repeated int64 solutionId = 3;</code>
       *
       * <pre>
       *绑定到指定广告位的多个投放
       * </pre>
       */
      java.util.List<java.lang.Long> getSolutionIdList();
      /**
       * <code>repeated int64 solutionId = 3;</code>
       *
       * <pre>
       *绑定到指定广告位的多个投放
       * </pre>
       */
      int getSolutionIdCount();
      /**
       * <code>repeated int64 solutionId = 3;</code>
       *
       * <pre>
       *绑定到指定广告位的多个投放
       * </pre>
       */
      long getSolutionId(int index);
    }
    /**
     * Protobuf type {@code de.cache.DbConfig.IPTargetingInfo}
     */
    public static final class IPTargetingInfo extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:de.cache.DbConfig.IPTargetingInfo)
        IPTargetingInfoOrBuilder {
      // Use IPTargetingInfo.newBuilder() to construct.
      private IPTargetingInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private IPTargetingInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final IPTargetingInfo defaultInstance;
      public static IPTargetingInfo getDefaultInstance() {
        return defaultInstance;
      }

      public IPTargetingInfo getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private IPTargetingInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                de.cache.DeliveryMessage.IPSection.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = ipSection_.toBuilder();
                }
                ipSection_ = input.readMessage(de.cache.DeliveryMessage.IPSection.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(ipSection_);
                  ipSection_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                channelId_ = input.readInt64();
                break;
              }
              case 24: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  solutionId_ = new java.util.ArrayList<java.lang.Long>();
                  mutable_bitField0_ |= 0x00000004;
                }
                solutionId_.add(input.readInt64());
                break;
              }
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                  solutionId_ = new java.util.ArrayList<java.lang.Long>();
                  mutable_bitField0_ |= 0x00000004;
                }
                while (input.getBytesUntilLimit() > 0) {
                  solutionId_.add(input.readInt64());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            solutionId_ = java.util.Collections.unmodifiableList(solutionId_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_DbConfig_IPTargetingInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_DbConfig_IPTargetingInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.DbConfig.IPTargetingInfo.class, de.cache.DeliveryMessage.DbConfig.IPTargetingInfo.Builder.class);
      }

      public static com.google.protobuf.Parser<IPTargetingInfo> PARSER =
          new com.google.protobuf.AbstractParser<IPTargetingInfo>() {
        public IPTargetingInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new IPTargetingInfo(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<IPTargetingInfo> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int IPSECTION_FIELD_NUMBER = 1;
      private de.cache.DeliveryMessage.IPSection ipSection_;
      /**
       * <code>required .de.cache.IPSection ipSection = 1;</code>
       *
       * <pre>
       *IP起始地址
       * </pre>
       */
      public boolean hasIpSection() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .de.cache.IPSection ipSection = 1;</code>
       *
       * <pre>
       *IP起始地址
       * </pre>
       */
      public de.cache.DeliveryMessage.IPSection getIpSection() {
        return ipSection_;
      }
      /**
       * <code>required .de.cache.IPSection ipSection = 1;</code>
       *
       * <pre>
       *IP起始地址
       * </pre>
       */
      public de.cache.DeliveryMessage.IPSectionOrBuilder getIpSectionOrBuilder() {
        return ipSection_;
      }

      public static final int CHANNELID_FIELD_NUMBER = 2;
      private long channelId_;
      /**
       * <code>required int64 channelId = 2;</code>
       *
       * <pre>
       *需要制定投放的广告位,
       * </pre>
       */
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 channelId = 2;</code>
       *
       * <pre>
       *需要制定投放的广告位,
       * </pre>
       */
      public long getChannelId() {
        return channelId_;
      }

      public static final int SOLUTIONID_FIELD_NUMBER = 3;
      private java.util.List<java.lang.Long> solutionId_;
      /**
       * <code>repeated int64 solutionId = 3;</code>
       *
       * <pre>
       *绑定到指定广告位的多个投放
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getSolutionIdList() {
        return solutionId_;
      }
      /**
       * <code>repeated int64 solutionId = 3;</code>
       *
       * <pre>
       *绑定到指定广告位的多个投放
       * </pre>
       */
      public int getSolutionIdCount() {
        return solutionId_.size();
      }
      /**
       * <code>repeated int64 solutionId = 3;</code>
       *
       * <pre>
       *绑定到指定广告位的多个投放
       * </pre>
       */
      public long getSolutionId(int index) {
        return solutionId_.get(index);
      }

      private void initFields() {
        ipSection_ = de.cache.DeliveryMessage.IPSection.getDefaultInstance();
        channelId_ = 0L;
        solutionId_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasIpSection()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasChannelId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getIpSection().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, ipSection_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt64(2, channelId_);
        }
        for (int i = 0; i < solutionId_.size(); i++) {
          output.writeInt64(3, solutionId_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, ipSection_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, channelId_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < solutionId_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt64SizeNoTag(solutionId_.get(i));
          }
          size += dataSize;
          size += 1 * getSolutionIdList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static de.cache.DeliveryMessage.DbConfig.IPTargetingInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.cache.DeliveryMessage.DbConfig.IPTargetingInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.DbConfig.IPTargetingInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.cache.DeliveryMessage.DbConfig.IPTargetingInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.DbConfig.IPTargetingInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.cache.DeliveryMessage.DbConfig.IPTargetingInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.DbConfig.IPTargetingInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static de.cache.DeliveryMessage.DbConfig.IPTargetingInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.DbConfig.IPTargetingInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.cache.DeliveryMessage.DbConfig.IPTargetingInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(de.cache.DeliveryMessage.DbConfig.IPTargetingInfo prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code de.cache.DbConfig.IPTargetingInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:de.cache.DbConfig.IPTargetingInfo)
          de.cache.DeliveryMessage.DbConfig.IPTargetingInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return de.cache.DeliveryMessage.internal_static_de_cache_DbConfig_IPTargetingInfo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return de.cache.DeliveryMessage.internal_static_de_cache_DbConfig_IPTargetingInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  de.cache.DeliveryMessage.DbConfig.IPTargetingInfo.class, de.cache.DeliveryMessage.DbConfig.IPTargetingInfo.Builder.class);
        }

        // Construct using de.cache.DeliveryMessage.DbConfig.IPTargetingInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getIpSectionFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (ipSectionBuilder_ == null) {
            ipSection_ = de.cache.DeliveryMessage.IPSection.getDefaultInstance();
          } else {
            ipSectionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          channelId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          solutionId_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return de.cache.DeliveryMessage.internal_static_de_cache_DbConfig_IPTargetingInfo_descriptor;
        }

        public de.cache.DeliveryMessage.DbConfig.IPTargetingInfo getDefaultInstanceForType() {
          return de.cache.DeliveryMessage.DbConfig.IPTargetingInfo.getDefaultInstance();
        }

        public de.cache.DeliveryMessage.DbConfig.IPTargetingInfo build() {
          de.cache.DeliveryMessage.DbConfig.IPTargetingInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public de.cache.DeliveryMessage.DbConfig.IPTargetingInfo buildPartial() {
          de.cache.DeliveryMessage.DbConfig.IPTargetingInfo result = new de.cache.DeliveryMessage.DbConfig.IPTargetingInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (ipSectionBuilder_ == null) {
            result.ipSection_ = ipSection_;
          } else {
            result.ipSection_ = ipSectionBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.channelId_ = channelId_;
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            solutionId_ = java.util.Collections.unmodifiableList(solutionId_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.solutionId_ = solutionId_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof de.cache.DeliveryMessage.DbConfig.IPTargetingInfo) {
            return mergeFrom((de.cache.DeliveryMessage.DbConfig.IPTargetingInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(de.cache.DeliveryMessage.DbConfig.IPTargetingInfo other) {
          if (other == de.cache.DeliveryMessage.DbConfig.IPTargetingInfo.getDefaultInstance()) return this;
          if (other.hasIpSection()) {
            mergeIpSection(other.getIpSection());
          }
          if (other.hasChannelId()) {
            setChannelId(other.getChannelId());
          }
          if (!other.solutionId_.isEmpty()) {
            if (solutionId_.isEmpty()) {
              solutionId_ = other.solutionId_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSolutionIdIsMutable();
              solutionId_.addAll(other.solutionId_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasIpSection()) {
            
            return false;
          }
          if (!hasChannelId()) {
            
            return false;
          }
          if (!getIpSection().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          de.cache.DeliveryMessage.DbConfig.IPTargetingInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (de.cache.DeliveryMessage.DbConfig.IPTargetingInfo) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private de.cache.DeliveryMessage.IPSection ipSection_ = de.cache.DeliveryMessage.IPSection.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            de.cache.DeliveryMessage.IPSection, de.cache.DeliveryMessage.IPSection.Builder, de.cache.DeliveryMessage.IPSectionOrBuilder> ipSectionBuilder_;
        /**
         * <code>required .de.cache.IPSection ipSection = 1;</code>
         *
         * <pre>
         *IP起始地址
         * </pre>
         */
        public boolean hasIpSection() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .de.cache.IPSection ipSection = 1;</code>
         *
         * <pre>
         *IP起始地址
         * </pre>
         */
        public de.cache.DeliveryMessage.IPSection getIpSection() {
          if (ipSectionBuilder_ == null) {
            return ipSection_;
          } else {
            return ipSectionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .de.cache.IPSection ipSection = 1;</code>
         *
         * <pre>
         *IP起始地址
         * </pre>
         */
        public Builder setIpSection(de.cache.DeliveryMessage.IPSection value) {
          if (ipSectionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ipSection_ = value;
            onChanged();
          } else {
            ipSectionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>required .de.cache.IPSection ipSection = 1;</code>
         *
         * <pre>
         *IP起始地址
         * </pre>
         */
        public Builder setIpSection(
            de.cache.DeliveryMessage.IPSection.Builder builderForValue) {
          if (ipSectionBuilder_ == null) {
            ipSection_ = builderForValue.build();
            onChanged();
          } else {
            ipSectionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>required .de.cache.IPSection ipSection = 1;</code>
         *
         * <pre>
         *IP起始地址
         * </pre>
         */
        public Builder mergeIpSection(de.cache.DeliveryMessage.IPSection value) {
          if (ipSectionBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                ipSection_ != de.cache.DeliveryMessage.IPSection.getDefaultInstance()) {
              ipSection_ =
                de.cache.DeliveryMessage.IPSection.newBuilder(ipSection_).mergeFrom(value).buildPartial();
            } else {
              ipSection_ = value;
            }
            onChanged();
          } else {
            ipSectionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>required .de.cache.IPSection ipSection = 1;</code>
         *
         * <pre>
         *IP起始地址
         * </pre>
         */
        public Builder clearIpSection() {
          if (ipSectionBuilder_ == null) {
            ipSection_ = de.cache.DeliveryMessage.IPSection.getDefaultInstance();
            onChanged();
          } else {
            ipSectionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <code>required .de.cache.IPSection ipSection = 1;</code>
         *
         * <pre>
         *IP起始地址
         * </pre>
         */
        public de.cache.DeliveryMessage.IPSection.Builder getIpSectionBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getIpSectionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .de.cache.IPSection ipSection = 1;</code>
         *
         * <pre>
         *IP起始地址
         * </pre>
         */
        public de.cache.DeliveryMessage.IPSectionOrBuilder getIpSectionOrBuilder() {
          if (ipSectionBuilder_ != null) {
            return ipSectionBuilder_.getMessageOrBuilder();
          } else {
            return ipSection_;
          }
        }
        /**
         * <code>required .de.cache.IPSection ipSection = 1;</code>
         *
         * <pre>
         *IP起始地址
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            de.cache.DeliveryMessage.IPSection, de.cache.DeliveryMessage.IPSection.Builder, de.cache.DeliveryMessage.IPSectionOrBuilder> 
            getIpSectionFieldBuilder() {
          if (ipSectionBuilder_ == null) {
            ipSectionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                de.cache.DeliveryMessage.IPSection, de.cache.DeliveryMessage.IPSection.Builder, de.cache.DeliveryMessage.IPSectionOrBuilder>(
                    getIpSection(),
                    getParentForChildren(),
                    isClean());
            ipSection_ = null;
          }
          return ipSectionBuilder_;
        }

        private long channelId_ ;
        /**
         * <code>required int64 channelId = 2;</code>
         *
         * <pre>
         *需要制定投放的广告位,
         * </pre>
         */
        public boolean hasChannelId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required int64 channelId = 2;</code>
         *
         * <pre>
         *需要制定投放的广告位,
         * </pre>
         */
        public long getChannelId() {
          return channelId_;
        }
        /**
         * <code>required int64 channelId = 2;</code>
         *
         * <pre>
         *需要制定投放的广告位,
         * </pre>
         */
        public Builder setChannelId(long value) {
          bitField0_ |= 0x00000002;
          channelId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int64 channelId = 2;</code>
         *
         * <pre>
         *需要制定投放的广告位,
         * </pre>
         */
        public Builder clearChannelId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          channelId_ = 0L;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Long> solutionId_ = java.util.Collections.emptyList();
        private void ensureSolutionIdIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            solutionId_ = new java.util.ArrayList<java.lang.Long>(solutionId_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated int64 solutionId = 3;</code>
         *
         * <pre>
         *绑定到指定广告位的多个投放
         * </pre>
         */
        public java.util.List<java.lang.Long>
            getSolutionIdList() {
          return java.util.Collections.unmodifiableList(solutionId_);
        }
        /**
         * <code>repeated int64 solutionId = 3;</code>
         *
         * <pre>
         *绑定到指定广告位的多个投放
         * </pre>
         */
        public int getSolutionIdCount() {
          return solutionId_.size();
        }
        /**
         * <code>repeated int64 solutionId = 3;</code>
         *
         * <pre>
         *绑定到指定广告位的多个投放
         * </pre>
         */
        public long getSolutionId(int index) {
          return solutionId_.get(index);
        }
        /**
         * <code>repeated int64 solutionId = 3;</code>
         *
         * <pre>
         *绑定到指定广告位的多个投放
         * </pre>
         */
        public Builder setSolutionId(
            int index, long value) {
          ensureSolutionIdIsMutable();
          solutionId_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int64 solutionId = 3;</code>
         *
         * <pre>
         *绑定到指定广告位的多个投放
         * </pre>
         */
        public Builder addSolutionId(long value) {
          ensureSolutionIdIsMutable();
          solutionId_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int64 solutionId = 3;</code>
         *
         * <pre>
         *绑定到指定广告位的多个投放
         * </pre>
         */
        public Builder addAllSolutionId(
            java.lang.Iterable<? extends java.lang.Long> values) {
          ensureSolutionIdIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, solutionId_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int64 solutionId = 3;</code>
         *
         * <pre>
         *绑定到指定广告位的多个投放
         * </pre>
         */
        public Builder clearSolutionId() {
          solutionId_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:de.cache.DbConfig.IPTargetingInfo)
      }

      static {
        defaultInstance = new IPTargetingInfo(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:de.cache.DbConfig.IPTargetingInfo)
    }

    private int bitField0_;
    public static final int CMD_FIELD_NUMBER = 1;
    private de.cache.DeliveryMessage.Command cmd_;
    /**
     * <code>optional .de.cache.Command cmd = 1;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    public boolean hasCmd() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .de.cache.Command cmd = 1;</code>
     *
     * <pre>
     *数据操作类型（如增加修改或删除）
     * </pre>
     */
    public de.cache.DeliveryMessage.Command getCmd() {
      return cmd_;
    }

    public static final int REFERRERTARGETING_FIELD_NUMBER = 2;
    private de.cache.DeliveryMessage.BlackAndWhiteList referrerTargeting_;
    /**
     * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 2;</code>
     *
     * <pre>
     *DB级别referrer黑白名单
     * </pre>
     */
    public boolean hasReferrerTargeting() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 2;</code>
     *
     * <pre>
     *DB级别referrer黑白名单
     * </pre>
     */
    public de.cache.DeliveryMessage.BlackAndWhiteList getReferrerTargeting() {
      return referrerTargeting_;
    }
    /**
     * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 2;</code>
     *
     * <pre>
     *DB级别referrer黑白名单
     * </pre>
     */
    public de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder getReferrerTargetingOrBuilder() {
      return referrerTargeting_;
    }

    public static final int CLICKURLTARGETING_FIELD_NUMBER = 3;
    private de.cache.DeliveryMessage.BlackAndWhiteList clickUrlTargeting_;
    /**
     * <code>optional .de.cache.BlackAndWhiteList clickUrlTargeting = 3;</code>
     *
     * <pre>
     *点击目标地址黑白名单
     * </pre>
     */
    public boolean hasClickUrlTargeting() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .de.cache.BlackAndWhiteList clickUrlTargeting = 3;</code>
     *
     * <pre>
     *点击目标地址黑白名单
     * </pre>
     */
    public de.cache.DeliveryMessage.BlackAndWhiteList getClickUrlTargeting() {
      return clickUrlTargeting_;
    }
    /**
     * <code>optional .de.cache.BlackAndWhiteList clickUrlTargeting = 3;</code>
     *
     * <pre>
     *点击目标地址黑白名单
     * </pre>
     */
    public de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder getClickUrlTargetingOrBuilder() {
      return clickUrlTargeting_;
    }

    public static final int IPWHITELIST_FIELD_NUMBER = 4;
    private java.util.List<de.cache.DeliveryMessage.IPSection> ipWhitelist_;
    /**
     * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
     *
     * <pre>
     *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
     *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
     *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
     *2. IP黑名单的开始值
     *3. IP黑名单的结束值
     *如果只有一个ip，起始ip设置为相同
     * </pre>
     */
    public java.util.List<de.cache.DeliveryMessage.IPSection> getIpWhitelistList() {
      return ipWhitelist_;
    }
    /**
     * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
     *
     * <pre>
     *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
     *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
     *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
     *2. IP黑名单的开始值
     *3. IP黑名单的结束值
     *如果只有一个ip，起始ip设置为相同
     * </pre>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.IPSectionOrBuilder> 
        getIpWhitelistOrBuilderList() {
      return ipWhitelist_;
    }
    /**
     * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
     *
     * <pre>
     *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
     *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
     *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
     *2. IP黑名单的开始值
     *3. IP黑名单的结束值
     *如果只有一个ip，起始ip设置为相同
     * </pre>
     */
    public int getIpWhitelistCount() {
      return ipWhitelist_.size();
    }
    /**
     * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
     *
     * <pre>
     *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
     *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
     *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
     *2. IP黑名单的开始值
     *3. IP黑名单的结束值
     *如果只有一个ip，起始ip设置为相同
     * </pre>
     */
    public de.cache.DeliveryMessage.IPSection getIpWhitelist(int index) {
      return ipWhitelist_.get(index);
    }
    /**
     * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
     *
     * <pre>
     *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
     *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
     *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
     *2. IP黑名单的开始值
     *3. IP黑名单的结束值
     *如果只有一个ip，起始ip设置为相同
     * </pre>
     */
    public de.cache.DeliveryMessage.IPSectionOrBuilder getIpWhitelistOrBuilder(
        int index) {
      return ipWhitelist_.get(index);
    }

    public static final int IPBLACKLIST_FIELD_NUMBER = 5;
    private java.util.List<de.cache.DeliveryMessage.IPSection> ipBlacklist_;
    /**
     * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
     *
     * <pre>
     *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
     * </pre>
     */
    public java.util.List<de.cache.DeliveryMessage.IPSection> getIpBlacklistList() {
      return ipBlacklist_;
    }
    /**
     * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
     *
     * <pre>
     *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
     * </pre>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.IPSectionOrBuilder> 
        getIpBlacklistOrBuilderList() {
      return ipBlacklist_;
    }
    /**
     * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
     *
     * <pre>
     *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
     * </pre>
     */
    public int getIpBlacklistCount() {
      return ipBlacklist_.size();
    }
    /**
     * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
     *
     * <pre>
     *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
     * </pre>
     */
    public de.cache.DeliveryMessage.IPSection getIpBlacklist(int index) {
      return ipBlacklist_.get(index);
    }
    /**
     * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
     *
     * <pre>
     *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
     * </pre>
     */
    public de.cache.DeliveryMessage.IPSectionOrBuilder getIpBlacklistOrBuilder(
        int index) {
      return ipBlacklist_.get(index);
    }

    public static final int PREVIEWURL_FIELD_NUMBER = 6;
    private java.lang.Object previewUrl_;
    /**
     * <code>optional string previewUrl = 6;</code>
     *
     * <pre>
     *实效预览地址，如果为空的话则不进行实效预览
     * </pre>
     */
    public boolean hasPreviewUrl() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string previewUrl = 6;</code>
     *
     * <pre>
     *实效预览地址，如果为空的话则不进行实效预览
     * </pre>
     */
    public java.lang.String getPreviewUrl() {
      java.lang.Object ref = previewUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          previewUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string previewUrl = 6;</code>
     *
     * <pre>
     *实效预览地址，如果为空的话则不进行实效预览
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPreviewUrlBytes() {
      java.lang.Object ref = previewUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        previewUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VIPIPS_FIELD_NUMBER = 7;
    private java.util.List<de.cache.DeliveryMessage.DbConfig.IPTargetingInfo> vipIps_;
    /**
     * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
     *
     * <pre>
     *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
     * </pre>
     */
    public java.util.List<de.cache.DeliveryMessage.DbConfig.IPTargetingInfo> getVipIpsList() {
      return vipIps_;
    }
    /**
     * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
     *
     * <pre>
     *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
     * </pre>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.DbConfig.IPTargetingInfoOrBuilder> 
        getVipIpsOrBuilderList() {
      return vipIps_;
    }
    /**
     * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
     *
     * <pre>
     *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
     * </pre>
     */
    public int getVipIpsCount() {
      return vipIps_.size();
    }
    /**
     * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
     *
     * <pre>
     *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
     * </pre>
     */
    public de.cache.DeliveryMessage.DbConfig.IPTargetingInfo getVipIps(int index) {
      return vipIps_.get(index);
    }
    /**
     * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
     *
     * <pre>
     *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
     * </pre>
     */
    public de.cache.DeliveryMessage.DbConfig.IPTargetingInfoOrBuilder getVipIpsOrBuilder(
        int index) {
      return vipIps_.get(index);
    }

    public static final int LINKAGETIMEOUT_FIELD_NUMBER = 8;
    private int linkageTimeout_;
    /**
     * <code>optional int32 linkageTimeout = 8;</code>
     *
     * <pre>
     *联动广告超时时间，表示联动广告的过期时间。默认是120秒。范围是【30，86400】
     * </pre>
     */
    public boolean hasLinkageTimeout() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 linkageTimeout = 8;</code>
     *
     * <pre>
     *联动广告超时时间，表示联动广告的过期时间。默认是120秒。范围是【30，86400】
     * </pre>
     */
    public int getLinkageTimeout() {
      return linkageTimeout_;
    }

    public static final int LOGCOOKIENAME_FIELD_NUMBER = 9;
    private com.google.protobuf.LazyStringList logCookieName_;
    /**
     * <code>repeated string logCookieName = 9;</code>
     *
     * <pre>
     *需要记录进日志的Cookie名称，日志第七个字段记录第三方用户唯一标示，此处为需要记录的cookie的key值
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getLogCookieNameList() {
      return logCookieName_;
    }
    /**
     * <code>repeated string logCookieName = 9;</code>
     *
     * <pre>
     *需要记录进日志的Cookie名称，日志第七个字段记录第三方用户唯一标示，此处为需要记录的cookie的key值
     * </pre>
     */
    public int getLogCookieNameCount() {
      return logCookieName_.size();
    }
    /**
     * <code>repeated string logCookieName = 9;</code>
     *
     * <pre>
     *需要记录进日志的Cookie名称，日志第七个字段记录第三方用户唯一标示，此处为需要记录的cookie的key值
     * </pre>
     */
    public java.lang.String getLogCookieName(int index) {
      return logCookieName_.get(index);
    }
    /**
     * <code>repeated string logCookieName = 9;</code>
     *
     * <pre>
     *需要记录进日志的Cookie名称，日志第七个字段记录第三方用户唯一标示，此处为需要记录的cookie的key值
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLogCookieNameBytes(int index) {
      return logCookieName_.getByteString(index);
    }

    public static final int CPCSPEEDUPHOURS_FIELD_NUMBER = 10;
    private int cpcSpeedupHours_;
    /**
     * <code>optional int32 cpcSpeedupHours = 10;</code>
     *
     * <pre>
     *设置CPC的补投时间，&lt;0:不补投，没有均匀投放控制，=0:按照默认时间补投(2小时)，&gt;0:按照指定的值(小时)补投
     * </pre>
     */
    public boolean hasCpcSpeedupHours() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 cpcSpeedupHours = 10;</code>
     *
     * <pre>
     *设置CPC的补投时间，&lt;0:不补投，没有均匀投放控制，=0:按照默认时间补投(2小时)，&gt;0:按照指定的值(小时)补投
     * </pre>
     */
    public int getCpcSpeedupHours() {
      return cpcSpeedupHours_;
    }

    private void initFields() {
      cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      referrerTargeting_ = de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance();
      clickUrlTargeting_ = de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance();
      ipWhitelist_ = java.util.Collections.emptyList();
      ipBlacklist_ = java.util.Collections.emptyList();
      previewUrl_ = "";
      vipIps_ = java.util.Collections.emptyList();
      linkageTimeout_ = 0;
      logCookieName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      cpcSpeedupHours_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getIpWhitelistCount(); i++) {
        if (!getIpWhitelist(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getIpBlacklistCount(); i++) {
        if (!getIpBlacklist(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getVipIpsCount(); i++) {
        if (!getVipIps(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, referrerTargeting_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, clickUrlTargeting_);
      }
      for (int i = 0; i < ipWhitelist_.size(); i++) {
        output.writeMessage(4, ipWhitelist_.get(i));
      }
      for (int i = 0; i < ipBlacklist_.size(); i++) {
        output.writeMessage(5, ipBlacklist_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(6, getPreviewUrlBytes());
      }
      for (int i = 0; i < vipIps_.size(); i++) {
        output.writeMessage(7, vipIps_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(8, linkageTimeout_);
      }
      for (int i = 0; i < logCookieName_.size(); i++) {
        output.writeBytes(9, logCookieName_.getByteString(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(10, cpcSpeedupHours_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, referrerTargeting_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, clickUrlTargeting_);
      }
      for (int i = 0; i < ipWhitelist_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, ipWhitelist_.get(i));
      }
      for (int i = 0; i < ipBlacklist_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, ipBlacklist_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getPreviewUrlBytes());
      }
      for (int i = 0; i < vipIps_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, vipIps_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, linkageTimeout_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < logCookieName_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(logCookieName_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getLogCookieNameList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, cpcSpeedupHours_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.cache.DeliveryMessage.DbConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.DbConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.DbConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.DbConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.DbConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.DbConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.DbConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.cache.DeliveryMessage.DbConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.DbConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.DbConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.cache.DeliveryMessage.DbConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code de.cache.DbConfig}
     *
     * <pre>
     *系统配置相关实体 DbConfig/FeaturedFile
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:de.cache.DbConfig)
        de.cache.DeliveryMessage.DbConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_DbConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_DbConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.DbConfig.class, de.cache.DeliveryMessage.DbConfig.Builder.class);
      }

      // Construct using de.cache.DeliveryMessage.DbConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getReferrerTargetingFieldBuilder();
          getClickUrlTargetingFieldBuilder();
          getIpWhitelistFieldBuilder();
          getIpBlacklistFieldBuilder();
          getVipIpsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (referrerTargetingBuilder_ == null) {
          referrerTargeting_ = de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance();
        } else {
          referrerTargetingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (clickUrlTargetingBuilder_ == null) {
          clickUrlTargeting_ = de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance();
        } else {
          clickUrlTargetingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (ipWhitelistBuilder_ == null) {
          ipWhitelist_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ipWhitelistBuilder_.clear();
        }
        if (ipBlacklistBuilder_ == null) {
          ipBlacklist_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ipBlacklistBuilder_.clear();
        }
        previewUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        if (vipIpsBuilder_ == null) {
          vipIps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          vipIpsBuilder_.clear();
        }
        linkageTimeout_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        logCookieName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000100);
        cpcSpeedupHours_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.cache.DeliveryMessage.internal_static_de_cache_DbConfig_descriptor;
      }

      public de.cache.DeliveryMessage.DbConfig getDefaultInstanceForType() {
        return de.cache.DeliveryMessage.DbConfig.getDefaultInstance();
      }

      public de.cache.DeliveryMessage.DbConfig build() {
        de.cache.DeliveryMessage.DbConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.cache.DeliveryMessage.DbConfig buildPartial() {
        de.cache.DeliveryMessage.DbConfig result = new de.cache.DeliveryMessage.DbConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cmd_ = cmd_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (referrerTargetingBuilder_ == null) {
          result.referrerTargeting_ = referrerTargeting_;
        } else {
          result.referrerTargeting_ = referrerTargetingBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (clickUrlTargetingBuilder_ == null) {
          result.clickUrlTargeting_ = clickUrlTargeting_;
        } else {
          result.clickUrlTargeting_ = clickUrlTargetingBuilder_.build();
        }
        if (ipWhitelistBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            ipWhitelist_ = java.util.Collections.unmodifiableList(ipWhitelist_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.ipWhitelist_ = ipWhitelist_;
        } else {
          result.ipWhitelist_ = ipWhitelistBuilder_.build();
        }
        if (ipBlacklistBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            ipBlacklist_ = java.util.Collections.unmodifiableList(ipBlacklist_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.ipBlacklist_ = ipBlacklist_;
        } else {
          result.ipBlacklist_ = ipBlacklistBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.previewUrl_ = previewUrl_;
        if (vipIpsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            vipIps_ = java.util.Collections.unmodifiableList(vipIps_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.vipIps_ = vipIps_;
        } else {
          result.vipIps_ = vipIpsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.linkageTimeout_ = linkageTimeout_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          logCookieName_ = logCookieName_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.logCookieName_ = logCookieName_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000020;
        }
        result.cpcSpeedupHours_ = cpcSpeedupHours_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.cache.DeliveryMessage.DbConfig) {
          return mergeFrom((de.cache.DeliveryMessage.DbConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.cache.DeliveryMessage.DbConfig other) {
        if (other == de.cache.DeliveryMessage.DbConfig.getDefaultInstance()) return this;
        if (other.hasCmd()) {
          setCmd(other.getCmd());
        }
        if (other.hasReferrerTargeting()) {
          mergeReferrerTargeting(other.getReferrerTargeting());
        }
        if (other.hasClickUrlTargeting()) {
          mergeClickUrlTargeting(other.getClickUrlTargeting());
        }
        if (ipWhitelistBuilder_ == null) {
          if (!other.ipWhitelist_.isEmpty()) {
            if (ipWhitelist_.isEmpty()) {
              ipWhitelist_ = other.ipWhitelist_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureIpWhitelistIsMutable();
              ipWhitelist_.addAll(other.ipWhitelist_);
            }
            onChanged();
          }
        } else {
          if (!other.ipWhitelist_.isEmpty()) {
            if (ipWhitelistBuilder_.isEmpty()) {
              ipWhitelistBuilder_.dispose();
              ipWhitelistBuilder_ = null;
              ipWhitelist_ = other.ipWhitelist_;
              bitField0_ = (bitField0_ & ~0x00000008);
              ipWhitelistBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getIpWhitelistFieldBuilder() : null;
            } else {
              ipWhitelistBuilder_.addAllMessages(other.ipWhitelist_);
            }
          }
        }
        if (ipBlacklistBuilder_ == null) {
          if (!other.ipBlacklist_.isEmpty()) {
            if (ipBlacklist_.isEmpty()) {
              ipBlacklist_ = other.ipBlacklist_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureIpBlacklistIsMutable();
              ipBlacklist_.addAll(other.ipBlacklist_);
            }
            onChanged();
          }
        } else {
          if (!other.ipBlacklist_.isEmpty()) {
            if (ipBlacklistBuilder_.isEmpty()) {
              ipBlacklistBuilder_.dispose();
              ipBlacklistBuilder_ = null;
              ipBlacklist_ = other.ipBlacklist_;
              bitField0_ = (bitField0_ & ~0x00000010);
              ipBlacklistBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getIpBlacklistFieldBuilder() : null;
            } else {
              ipBlacklistBuilder_.addAllMessages(other.ipBlacklist_);
            }
          }
        }
        if (other.hasPreviewUrl()) {
          bitField0_ |= 0x00000020;
          previewUrl_ = other.previewUrl_;
          onChanged();
        }
        if (vipIpsBuilder_ == null) {
          if (!other.vipIps_.isEmpty()) {
            if (vipIps_.isEmpty()) {
              vipIps_ = other.vipIps_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureVipIpsIsMutable();
              vipIps_.addAll(other.vipIps_);
            }
            onChanged();
          }
        } else {
          if (!other.vipIps_.isEmpty()) {
            if (vipIpsBuilder_.isEmpty()) {
              vipIpsBuilder_.dispose();
              vipIpsBuilder_ = null;
              vipIps_ = other.vipIps_;
              bitField0_ = (bitField0_ & ~0x00000040);
              vipIpsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVipIpsFieldBuilder() : null;
            } else {
              vipIpsBuilder_.addAllMessages(other.vipIps_);
            }
          }
        }
        if (other.hasLinkageTimeout()) {
          setLinkageTimeout(other.getLinkageTimeout());
        }
        if (!other.logCookieName_.isEmpty()) {
          if (logCookieName_.isEmpty()) {
            logCookieName_ = other.logCookieName_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureLogCookieNameIsMutable();
            logCookieName_.addAll(other.logCookieName_);
          }
          onChanged();
        }
        if (other.hasCpcSpeedupHours()) {
          setCpcSpeedupHours(other.getCpcSpeedupHours());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getIpWhitelistCount(); i++) {
          if (!getIpWhitelist(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getIpBlacklistCount(); i++) {
          if (!getIpBlacklist(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getVipIpsCount(); i++) {
          if (!getVipIps(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.cache.DeliveryMessage.DbConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.cache.DeliveryMessage.DbConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private de.cache.DeliveryMessage.Command cmd_ = de.cache.DeliveryMessage.Command.ALTER;
      /**
       * <code>optional .de.cache.Command cmd = 1;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public boolean hasCmd() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .de.cache.Command cmd = 1;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public de.cache.DeliveryMessage.Command getCmd() {
        return cmd_;
      }
      /**
       * <code>optional .de.cache.Command cmd = 1;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public Builder setCmd(de.cache.DeliveryMessage.Command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        cmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .de.cache.Command cmd = 1;</code>
       *
       * <pre>
       *数据操作类型（如增加修改或删除）
       * </pre>
       */
      public Builder clearCmd() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cmd_ = de.cache.DeliveryMessage.Command.ALTER;
        onChanged();
        return this;
      }

      private de.cache.DeliveryMessage.BlackAndWhiteList referrerTargeting_ = de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.BlackAndWhiteList, de.cache.DeliveryMessage.BlackAndWhiteList.Builder, de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder> referrerTargetingBuilder_;
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 2;</code>
       *
       * <pre>
       *DB级别referrer黑白名单
       * </pre>
       */
      public boolean hasReferrerTargeting() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 2;</code>
       *
       * <pre>
       *DB级别referrer黑白名单
       * </pre>
       */
      public de.cache.DeliveryMessage.BlackAndWhiteList getReferrerTargeting() {
        if (referrerTargetingBuilder_ == null) {
          return referrerTargeting_;
        } else {
          return referrerTargetingBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 2;</code>
       *
       * <pre>
       *DB级别referrer黑白名单
       * </pre>
       */
      public Builder setReferrerTargeting(de.cache.DeliveryMessage.BlackAndWhiteList value) {
        if (referrerTargetingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          referrerTargeting_ = value;
          onChanged();
        } else {
          referrerTargetingBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 2;</code>
       *
       * <pre>
       *DB级别referrer黑白名单
       * </pre>
       */
      public Builder setReferrerTargeting(
          de.cache.DeliveryMessage.BlackAndWhiteList.Builder builderForValue) {
        if (referrerTargetingBuilder_ == null) {
          referrerTargeting_ = builderForValue.build();
          onChanged();
        } else {
          referrerTargetingBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 2;</code>
       *
       * <pre>
       *DB级别referrer黑白名单
       * </pre>
       */
      public Builder mergeReferrerTargeting(de.cache.DeliveryMessage.BlackAndWhiteList value) {
        if (referrerTargetingBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              referrerTargeting_ != de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance()) {
            referrerTargeting_ =
              de.cache.DeliveryMessage.BlackAndWhiteList.newBuilder(referrerTargeting_).mergeFrom(value).buildPartial();
          } else {
            referrerTargeting_ = value;
          }
          onChanged();
        } else {
          referrerTargetingBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 2;</code>
       *
       * <pre>
       *DB级别referrer黑白名单
       * </pre>
       */
      public Builder clearReferrerTargeting() {
        if (referrerTargetingBuilder_ == null) {
          referrerTargeting_ = de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance();
          onChanged();
        } else {
          referrerTargetingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 2;</code>
       *
       * <pre>
       *DB级别referrer黑白名单
       * </pre>
       */
      public de.cache.DeliveryMessage.BlackAndWhiteList.Builder getReferrerTargetingBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getReferrerTargetingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 2;</code>
       *
       * <pre>
       *DB级别referrer黑白名单
       * </pre>
       */
      public de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder getReferrerTargetingOrBuilder() {
        if (referrerTargetingBuilder_ != null) {
          return referrerTargetingBuilder_.getMessageOrBuilder();
        } else {
          return referrerTargeting_;
        }
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList referrerTargeting = 2;</code>
       *
       * <pre>
       *DB级别referrer黑白名单
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.BlackAndWhiteList, de.cache.DeliveryMessage.BlackAndWhiteList.Builder, de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder> 
          getReferrerTargetingFieldBuilder() {
        if (referrerTargetingBuilder_ == null) {
          referrerTargetingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.cache.DeliveryMessage.BlackAndWhiteList, de.cache.DeliveryMessage.BlackAndWhiteList.Builder, de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder>(
                  getReferrerTargeting(),
                  getParentForChildren(),
                  isClean());
          referrerTargeting_ = null;
        }
        return referrerTargetingBuilder_;
      }

      private de.cache.DeliveryMessage.BlackAndWhiteList clickUrlTargeting_ = de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.BlackAndWhiteList, de.cache.DeliveryMessage.BlackAndWhiteList.Builder, de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder> clickUrlTargetingBuilder_;
      /**
       * <code>optional .de.cache.BlackAndWhiteList clickUrlTargeting = 3;</code>
       *
       * <pre>
       *点击目标地址黑白名单
       * </pre>
       */
      public boolean hasClickUrlTargeting() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList clickUrlTargeting = 3;</code>
       *
       * <pre>
       *点击目标地址黑白名单
       * </pre>
       */
      public de.cache.DeliveryMessage.BlackAndWhiteList getClickUrlTargeting() {
        if (clickUrlTargetingBuilder_ == null) {
          return clickUrlTargeting_;
        } else {
          return clickUrlTargetingBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList clickUrlTargeting = 3;</code>
       *
       * <pre>
       *点击目标地址黑白名单
       * </pre>
       */
      public Builder setClickUrlTargeting(de.cache.DeliveryMessage.BlackAndWhiteList value) {
        if (clickUrlTargetingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clickUrlTargeting_ = value;
          onChanged();
        } else {
          clickUrlTargetingBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList clickUrlTargeting = 3;</code>
       *
       * <pre>
       *点击目标地址黑白名单
       * </pre>
       */
      public Builder setClickUrlTargeting(
          de.cache.DeliveryMessage.BlackAndWhiteList.Builder builderForValue) {
        if (clickUrlTargetingBuilder_ == null) {
          clickUrlTargeting_ = builderForValue.build();
          onChanged();
        } else {
          clickUrlTargetingBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList clickUrlTargeting = 3;</code>
       *
       * <pre>
       *点击目标地址黑白名单
       * </pre>
       */
      public Builder mergeClickUrlTargeting(de.cache.DeliveryMessage.BlackAndWhiteList value) {
        if (clickUrlTargetingBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              clickUrlTargeting_ != de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance()) {
            clickUrlTargeting_ =
              de.cache.DeliveryMessage.BlackAndWhiteList.newBuilder(clickUrlTargeting_).mergeFrom(value).buildPartial();
          } else {
            clickUrlTargeting_ = value;
          }
          onChanged();
        } else {
          clickUrlTargetingBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList clickUrlTargeting = 3;</code>
       *
       * <pre>
       *点击目标地址黑白名单
       * </pre>
       */
      public Builder clearClickUrlTargeting() {
        if (clickUrlTargetingBuilder_ == null) {
          clickUrlTargeting_ = de.cache.DeliveryMessage.BlackAndWhiteList.getDefaultInstance();
          onChanged();
        } else {
          clickUrlTargetingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList clickUrlTargeting = 3;</code>
       *
       * <pre>
       *点击目标地址黑白名单
       * </pre>
       */
      public de.cache.DeliveryMessage.BlackAndWhiteList.Builder getClickUrlTargetingBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getClickUrlTargetingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList clickUrlTargeting = 3;</code>
       *
       * <pre>
       *点击目标地址黑白名单
       * </pre>
       */
      public de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder getClickUrlTargetingOrBuilder() {
        if (clickUrlTargetingBuilder_ != null) {
          return clickUrlTargetingBuilder_.getMessageOrBuilder();
        } else {
          return clickUrlTargeting_;
        }
      }
      /**
       * <code>optional .de.cache.BlackAndWhiteList clickUrlTargeting = 3;</code>
       *
       * <pre>
       *点击目标地址黑白名单
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.BlackAndWhiteList, de.cache.DeliveryMessage.BlackAndWhiteList.Builder, de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder> 
          getClickUrlTargetingFieldBuilder() {
        if (clickUrlTargetingBuilder_ == null) {
          clickUrlTargetingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.cache.DeliveryMessage.BlackAndWhiteList, de.cache.DeliveryMessage.BlackAndWhiteList.Builder, de.cache.DeliveryMessage.BlackAndWhiteListOrBuilder>(
                  getClickUrlTargeting(),
                  getParentForChildren(),
                  isClean());
          clickUrlTargeting_ = null;
        }
        return clickUrlTargetingBuilder_;
      }

      private java.util.List<de.cache.DeliveryMessage.IPSection> ipWhitelist_ =
        java.util.Collections.emptyList();
      private void ensureIpWhitelistIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          ipWhitelist_ = new java.util.ArrayList<de.cache.DeliveryMessage.IPSection>(ipWhitelist_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.IPSection, de.cache.DeliveryMessage.IPSection.Builder, de.cache.DeliveryMessage.IPSectionOrBuilder> ipWhitelistBuilder_;

      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
       *
       * <pre>
       *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
       *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
       *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
       *2. IP黑名单的开始值
       *3. IP黑名单的结束值
       *如果只有一个ip，起始ip设置为相同
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.IPSection> getIpWhitelistList() {
        if (ipWhitelistBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ipWhitelist_);
        } else {
          return ipWhitelistBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
       *
       * <pre>
       *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
       *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
       *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
       *2. IP黑名单的开始值
       *3. IP黑名单的结束值
       *如果只有一个ip，起始ip设置为相同
       * </pre>
       */
      public int getIpWhitelistCount() {
        if (ipWhitelistBuilder_ == null) {
          return ipWhitelist_.size();
        } else {
          return ipWhitelistBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
       *
       * <pre>
       *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
       *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
       *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
       *2. IP黑名单的开始值
       *3. IP黑名单的结束值
       *如果只有一个ip，起始ip设置为相同
       * </pre>
       */
      public de.cache.DeliveryMessage.IPSection getIpWhitelist(int index) {
        if (ipWhitelistBuilder_ == null) {
          return ipWhitelist_.get(index);
        } else {
          return ipWhitelistBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
       *
       * <pre>
       *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
       *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
       *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
       *2. IP黑名单的开始值
       *3. IP黑名单的结束值
       *如果只有一个ip，起始ip设置为相同
       * </pre>
       */
      public Builder setIpWhitelist(
          int index, de.cache.DeliveryMessage.IPSection value) {
        if (ipWhitelistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIpWhitelistIsMutable();
          ipWhitelist_.set(index, value);
          onChanged();
        } else {
          ipWhitelistBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
       *
       * <pre>
       *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
       *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
       *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
       *2. IP黑名单的开始值
       *3. IP黑名单的结束值
       *如果只有一个ip，起始ip设置为相同
       * </pre>
       */
      public Builder setIpWhitelist(
          int index, de.cache.DeliveryMessage.IPSection.Builder builderForValue) {
        if (ipWhitelistBuilder_ == null) {
          ensureIpWhitelistIsMutable();
          ipWhitelist_.set(index, builderForValue.build());
          onChanged();
        } else {
          ipWhitelistBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
       *
       * <pre>
       *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
       *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
       *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
       *2. IP黑名单的开始值
       *3. IP黑名单的结束值
       *如果只有一个ip，起始ip设置为相同
       * </pre>
       */
      public Builder addIpWhitelist(de.cache.DeliveryMessage.IPSection value) {
        if (ipWhitelistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIpWhitelistIsMutable();
          ipWhitelist_.add(value);
          onChanged();
        } else {
          ipWhitelistBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
       *
       * <pre>
       *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
       *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
       *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
       *2. IP黑名单的开始值
       *3. IP黑名单的结束值
       *如果只有一个ip，起始ip设置为相同
       * </pre>
       */
      public Builder addIpWhitelist(
          int index, de.cache.DeliveryMessage.IPSection value) {
        if (ipWhitelistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIpWhitelistIsMutable();
          ipWhitelist_.add(index, value);
          onChanged();
        } else {
          ipWhitelistBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
       *
       * <pre>
       *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
       *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
       *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
       *2. IP黑名单的开始值
       *3. IP黑名单的结束值
       *如果只有一个ip，起始ip设置为相同
       * </pre>
       */
      public Builder addIpWhitelist(
          de.cache.DeliveryMessage.IPSection.Builder builderForValue) {
        if (ipWhitelistBuilder_ == null) {
          ensureIpWhitelistIsMutable();
          ipWhitelist_.add(builderForValue.build());
          onChanged();
        } else {
          ipWhitelistBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
       *
       * <pre>
       *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
       *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
       *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
       *2. IP黑名单的开始值
       *3. IP黑名单的结束值
       *如果只有一个ip，起始ip设置为相同
       * </pre>
       */
      public Builder addIpWhitelist(
          int index, de.cache.DeliveryMessage.IPSection.Builder builderForValue) {
        if (ipWhitelistBuilder_ == null) {
          ensureIpWhitelistIsMutable();
          ipWhitelist_.add(index, builderForValue.build());
          onChanged();
        } else {
          ipWhitelistBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
       *
       * <pre>
       *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
       *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
       *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
       *2. IP黑名单的开始值
       *3. IP黑名单的结束值
       *如果只有一个ip，起始ip设置为相同
       * </pre>
       */
      public Builder addAllIpWhitelist(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.IPSection> values) {
        if (ipWhitelistBuilder_ == null) {
          ensureIpWhitelistIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ipWhitelist_);
          onChanged();
        } else {
          ipWhitelistBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
       *
       * <pre>
       *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
       *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
       *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
       *2. IP黑名单的开始值
       *3. IP黑名单的结束值
       *如果只有一个ip，起始ip设置为相同
       * </pre>
       */
      public Builder clearIpWhitelist() {
        if (ipWhitelistBuilder_ == null) {
          ipWhitelist_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          ipWhitelistBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
       *
       * <pre>
       *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
       *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
       *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
       *2. IP黑名单的开始值
       *3. IP黑名单的结束值
       *如果只有一个ip，起始ip设置为相同
       * </pre>
       */
      public Builder removeIpWhitelist(int index) {
        if (ipWhitelistBuilder_ == null) {
          ensureIpWhitelistIsMutable();
          ipWhitelist_.remove(index);
          onChanged();
        } else {
          ipWhitelistBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
       *
       * <pre>
       *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
       *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
       *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
       *2. IP黑名单的开始值
       *3. IP黑名单的结束值
       *如果只有一个ip，起始ip设置为相同
       * </pre>
       */
      public de.cache.DeliveryMessage.IPSection.Builder getIpWhitelistBuilder(
          int index) {
        return getIpWhitelistFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
       *
       * <pre>
       *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
       *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
       *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
       *2. IP黑名单的开始值
       *3. IP黑名单的结束值
       *如果只有一个ip，起始ip设置为相同
       * </pre>
       */
      public de.cache.DeliveryMessage.IPSectionOrBuilder getIpWhitelistOrBuilder(
          int index) {
        if (ipWhitelistBuilder_ == null) {
          return ipWhitelist_.get(index);  } else {
          return ipWhitelistBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
       *
       * <pre>
       *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
       *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
       *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
       *2. IP黑名单的开始值
       *3. IP黑名单的结束值
       *如果只有一个ip，起始ip设置为相同
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.IPSectionOrBuilder> 
           getIpWhitelistOrBuilderList() {
        if (ipWhitelistBuilder_ != null) {
          return ipWhitelistBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ipWhitelist_);
        }
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
       *
       * <pre>
       *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
       *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
       *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
       *2. IP黑名单的开始值
       *3. IP黑名单的结束值
       *如果只有一个ip，起始ip设置为相同
       * </pre>
       */
      public de.cache.DeliveryMessage.IPSection.Builder addIpWhitelistBuilder() {
        return getIpWhitelistFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.IPSection.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
       *
       * <pre>
       *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
       *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
       *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
       *2. IP黑名单的开始值
       *3. IP黑名单的结束值
       *如果只有一个ip，起始ip设置为相同
       * </pre>
       */
      public de.cache.DeliveryMessage.IPSection.Builder addIpWhitelistBuilder(
          int index) {
        return getIpWhitelistFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.IPSection.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.IPSection ipWhitelist = 4;</code>
       *
       * <pre>
       *表示ip黑名单路径，多个文件以逗号分隔。如果没有ip定向，该字段位空。
       *Ip黑名单文件目录存在$db/ip目录下，每行一条记录，目前只有三个字段（和ip定向字段保持一致），以tab制表符(&#92;t)分隔，文件格式如下：
       *1. ip黑白名单标识，=0时是白名单，=1时是黑名（当位ip黑名单定向时，这里都为1）
       *2. IP黑名单的开始值
       *3. IP黑名单的结束值
       *如果只有一个ip，起始ip设置为相同
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.IPSection.Builder> 
           getIpWhitelistBuilderList() {
        return getIpWhitelistFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.IPSection, de.cache.DeliveryMessage.IPSection.Builder, de.cache.DeliveryMessage.IPSectionOrBuilder> 
          getIpWhitelistFieldBuilder() {
        if (ipWhitelistBuilder_ == null) {
          ipWhitelistBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.IPSection, de.cache.DeliveryMessage.IPSection.Builder, de.cache.DeliveryMessage.IPSectionOrBuilder>(
                  ipWhitelist_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          ipWhitelist_ = null;
        }
        return ipWhitelistBuilder_;
      }

      private java.util.List<de.cache.DeliveryMessage.IPSection> ipBlacklist_ =
        java.util.Collections.emptyList();
      private void ensureIpBlacklistIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          ipBlacklist_ = new java.util.ArrayList<de.cache.DeliveryMessage.IPSection>(ipBlacklist_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.IPSection, de.cache.DeliveryMessage.IPSection.Builder, de.cache.DeliveryMessage.IPSectionOrBuilder> ipBlacklistBuilder_;

      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
       *
       * <pre>
       *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.IPSection> getIpBlacklistList() {
        if (ipBlacklistBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ipBlacklist_);
        } else {
          return ipBlacklistBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
       *
       * <pre>
       *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
       * </pre>
       */
      public int getIpBlacklistCount() {
        if (ipBlacklistBuilder_ == null) {
          return ipBlacklist_.size();
        } else {
          return ipBlacklistBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
       *
       * <pre>
       *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
       * </pre>
       */
      public de.cache.DeliveryMessage.IPSection getIpBlacklist(int index) {
        if (ipBlacklistBuilder_ == null) {
          return ipBlacklist_.get(index);
        } else {
          return ipBlacklistBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
       *
       * <pre>
       *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
       * </pre>
       */
      public Builder setIpBlacklist(
          int index, de.cache.DeliveryMessage.IPSection value) {
        if (ipBlacklistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIpBlacklistIsMutable();
          ipBlacklist_.set(index, value);
          onChanged();
        } else {
          ipBlacklistBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
       *
       * <pre>
       *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
       * </pre>
       */
      public Builder setIpBlacklist(
          int index, de.cache.DeliveryMessage.IPSection.Builder builderForValue) {
        if (ipBlacklistBuilder_ == null) {
          ensureIpBlacklistIsMutable();
          ipBlacklist_.set(index, builderForValue.build());
          onChanged();
        } else {
          ipBlacklistBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
       *
       * <pre>
       *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
       * </pre>
       */
      public Builder addIpBlacklist(de.cache.DeliveryMessage.IPSection value) {
        if (ipBlacklistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIpBlacklistIsMutable();
          ipBlacklist_.add(value);
          onChanged();
        } else {
          ipBlacklistBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
       *
       * <pre>
       *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
       * </pre>
       */
      public Builder addIpBlacklist(
          int index, de.cache.DeliveryMessage.IPSection value) {
        if (ipBlacklistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIpBlacklistIsMutable();
          ipBlacklist_.add(index, value);
          onChanged();
        } else {
          ipBlacklistBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
       *
       * <pre>
       *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
       * </pre>
       */
      public Builder addIpBlacklist(
          de.cache.DeliveryMessage.IPSection.Builder builderForValue) {
        if (ipBlacklistBuilder_ == null) {
          ensureIpBlacklistIsMutable();
          ipBlacklist_.add(builderForValue.build());
          onChanged();
        } else {
          ipBlacklistBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
       *
       * <pre>
       *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
       * </pre>
       */
      public Builder addIpBlacklist(
          int index, de.cache.DeliveryMessage.IPSection.Builder builderForValue) {
        if (ipBlacklistBuilder_ == null) {
          ensureIpBlacklistIsMutable();
          ipBlacklist_.add(index, builderForValue.build());
          onChanged();
        } else {
          ipBlacklistBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
       *
       * <pre>
       *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
       * </pre>
       */
      public Builder addAllIpBlacklist(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.IPSection> values) {
        if (ipBlacklistBuilder_ == null) {
          ensureIpBlacklistIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ipBlacklist_);
          onChanged();
        } else {
          ipBlacklistBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
       *
       * <pre>
       *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
       * </pre>
       */
      public Builder clearIpBlacklist() {
        if (ipBlacklistBuilder_ == null) {
          ipBlacklist_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          ipBlacklistBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
       *
       * <pre>
       *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
       * </pre>
       */
      public Builder removeIpBlacklist(int index) {
        if (ipBlacklistBuilder_ == null) {
          ensureIpBlacklistIsMutable();
          ipBlacklist_.remove(index);
          onChanged();
        } else {
          ipBlacklistBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
       *
       * <pre>
       *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
       * </pre>
       */
      public de.cache.DeliveryMessage.IPSection.Builder getIpBlacklistBuilder(
          int index) {
        return getIpBlacklistFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
       *
       * <pre>
       *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
       * </pre>
       */
      public de.cache.DeliveryMessage.IPSectionOrBuilder getIpBlacklistOrBuilder(
          int index) {
        if (ipBlacklistBuilder_ == null) {
          return ipBlacklist_.get(index);  } else {
          return ipBlacklistBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
       *
       * <pre>
       *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.IPSectionOrBuilder> 
           getIpBlacklistOrBuilderList() {
        if (ipBlacklistBuilder_ != null) {
          return ipBlacklistBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ipBlacklist_);
        }
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
       *
       * <pre>
       *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
       * </pre>
       */
      public de.cache.DeliveryMessage.IPSection.Builder addIpBlacklistBuilder() {
        return getIpBlacklistFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.IPSection.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
       *
       * <pre>
       *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
       * </pre>
       */
      public de.cache.DeliveryMessage.IPSection.Builder addIpBlacklistBuilder(
          int index) {
        return getIpBlacklistFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.IPSection.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.IPSection ipBlacklist = 5;</code>
       *
       * <pre>
       *一个广告位和一个ip区间段组合一条记录,一个广告位多个ip段多条记录,多个广告位一个ip段多条记录 edit by nick 2014-05-30(名字错误修改)
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.IPSection.Builder> 
           getIpBlacklistBuilderList() {
        return getIpBlacklistFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.IPSection, de.cache.DeliveryMessage.IPSection.Builder, de.cache.DeliveryMessage.IPSectionOrBuilder> 
          getIpBlacklistFieldBuilder() {
        if (ipBlacklistBuilder_ == null) {
          ipBlacklistBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.IPSection, de.cache.DeliveryMessage.IPSection.Builder, de.cache.DeliveryMessage.IPSectionOrBuilder>(
                  ipBlacklist_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          ipBlacklist_ = null;
        }
        return ipBlacklistBuilder_;
      }

      private java.lang.Object previewUrl_ = "";
      /**
       * <code>optional string previewUrl = 6;</code>
       *
       * <pre>
       *实效预览地址，如果为空的话则不进行实效预览
       * </pre>
       */
      public boolean hasPreviewUrl() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string previewUrl = 6;</code>
       *
       * <pre>
       *实效预览地址，如果为空的话则不进行实效预览
       * </pre>
       */
      public java.lang.String getPreviewUrl() {
        java.lang.Object ref = previewUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            previewUrl_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string previewUrl = 6;</code>
       *
       * <pre>
       *实效预览地址，如果为空的话则不进行实效预览
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPreviewUrlBytes() {
        java.lang.Object ref = previewUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          previewUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string previewUrl = 6;</code>
       *
       * <pre>
       *实效预览地址，如果为空的话则不进行实效预览
       * </pre>
       */
      public Builder setPreviewUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        previewUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string previewUrl = 6;</code>
       *
       * <pre>
       *实效预览地址，如果为空的话则不进行实效预览
       * </pre>
       */
      public Builder clearPreviewUrl() {
        bitField0_ = (bitField0_ & ~0x00000020);
        previewUrl_ = getDefaultInstance().getPreviewUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string previewUrl = 6;</code>
       *
       * <pre>
       *实效预览地址，如果为空的话则不进行实效预览
       * </pre>
       */
      public Builder setPreviewUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        previewUrl_ = value;
        onChanged();
        return this;
      }

      private java.util.List<de.cache.DeliveryMessage.DbConfig.IPTargetingInfo> vipIps_ =
        java.util.Collections.emptyList();
      private void ensureVipIpsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          vipIps_ = new java.util.ArrayList<de.cache.DeliveryMessage.DbConfig.IPTargetingInfo>(vipIps_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.DbConfig.IPTargetingInfo, de.cache.DeliveryMessage.DbConfig.IPTargetingInfo.Builder, de.cache.DeliveryMessage.DbConfig.IPTargetingInfoOrBuilder> vipIpsBuilder_;

      /**
       * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
       *
       * <pre>
       *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.DbConfig.IPTargetingInfo> getVipIpsList() {
        if (vipIpsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vipIps_);
        } else {
          return vipIpsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
       *
       * <pre>
       *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
       * </pre>
       */
      public int getVipIpsCount() {
        if (vipIpsBuilder_ == null) {
          return vipIps_.size();
        } else {
          return vipIpsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
       *
       * <pre>
       *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
       * </pre>
       */
      public de.cache.DeliveryMessage.DbConfig.IPTargetingInfo getVipIps(int index) {
        if (vipIpsBuilder_ == null) {
          return vipIps_.get(index);
        } else {
          return vipIpsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
       *
       * <pre>
       *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
       * </pre>
       */
      public Builder setVipIps(
          int index, de.cache.DeliveryMessage.DbConfig.IPTargetingInfo value) {
        if (vipIpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVipIpsIsMutable();
          vipIps_.set(index, value);
          onChanged();
        } else {
          vipIpsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
       *
       * <pre>
       *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
       * </pre>
       */
      public Builder setVipIps(
          int index, de.cache.DeliveryMessage.DbConfig.IPTargetingInfo.Builder builderForValue) {
        if (vipIpsBuilder_ == null) {
          ensureVipIpsIsMutable();
          vipIps_.set(index, builderForValue.build());
          onChanged();
        } else {
          vipIpsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
       *
       * <pre>
       *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
       * </pre>
       */
      public Builder addVipIps(de.cache.DeliveryMessage.DbConfig.IPTargetingInfo value) {
        if (vipIpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVipIpsIsMutable();
          vipIps_.add(value);
          onChanged();
        } else {
          vipIpsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
       *
       * <pre>
       *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
       * </pre>
       */
      public Builder addVipIps(
          int index, de.cache.DeliveryMessage.DbConfig.IPTargetingInfo value) {
        if (vipIpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVipIpsIsMutable();
          vipIps_.add(index, value);
          onChanged();
        } else {
          vipIpsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
       *
       * <pre>
       *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
       * </pre>
       */
      public Builder addVipIps(
          de.cache.DeliveryMessage.DbConfig.IPTargetingInfo.Builder builderForValue) {
        if (vipIpsBuilder_ == null) {
          ensureVipIpsIsMutable();
          vipIps_.add(builderForValue.build());
          onChanged();
        } else {
          vipIpsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
       *
       * <pre>
       *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
       * </pre>
       */
      public Builder addVipIps(
          int index, de.cache.DeliveryMessage.DbConfig.IPTargetingInfo.Builder builderForValue) {
        if (vipIpsBuilder_ == null) {
          ensureVipIpsIsMutable();
          vipIps_.add(index, builderForValue.build());
          onChanged();
        } else {
          vipIpsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
       *
       * <pre>
       *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
       * </pre>
       */
      public Builder addAllVipIps(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.DbConfig.IPTargetingInfo> values) {
        if (vipIpsBuilder_ == null) {
          ensureVipIpsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, vipIps_);
          onChanged();
        } else {
          vipIpsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
       *
       * <pre>
       *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
       * </pre>
       */
      public Builder clearVipIps() {
        if (vipIpsBuilder_ == null) {
          vipIps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          vipIpsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
       *
       * <pre>
       *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
       * </pre>
       */
      public Builder removeVipIps(int index) {
        if (vipIpsBuilder_ == null) {
          ensureVipIpsIsMutable();
          vipIps_.remove(index);
          onChanged();
        } else {
          vipIpsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
       *
       * <pre>
       *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
       * </pre>
       */
      public de.cache.DeliveryMessage.DbConfig.IPTargetingInfo.Builder getVipIpsBuilder(
          int index) {
        return getVipIpsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
       *
       * <pre>
       *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
       * </pre>
       */
      public de.cache.DeliveryMessage.DbConfig.IPTargetingInfoOrBuilder getVipIpsOrBuilder(
          int index) {
        if (vipIpsBuilder_ == null) {
          return vipIps_.get(index);  } else {
          return vipIpsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
       *
       * <pre>
       *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.DbConfig.IPTargetingInfoOrBuilder> 
           getVipIpsOrBuilderList() {
        if (vipIpsBuilder_ != null) {
          return vipIpsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vipIps_);
        }
      }
      /**
       * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
       *
       * <pre>
       *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
       * </pre>
       */
      public de.cache.DeliveryMessage.DbConfig.IPTargetingInfo.Builder addVipIpsBuilder() {
        return getVipIpsFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.DbConfig.IPTargetingInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
       *
       * <pre>
       *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
       * </pre>
       */
      public de.cache.DeliveryMessage.DbConfig.IPTargetingInfo.Builder addVipIpsBuilder(
          int index) {
        return getVipIpsFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.DbConfig.IPTargetingInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.DbConfig.IPTargetingInfo vipIps = 7;</code>
       *
       * <pre>
       *VIP指定投放广告,该IP只能看到指定广告，(除时间定向外)所有定向条件自动满足
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.DbConfig.IPTargetingInfo.Builder> 
           getVipIpsBuilderList() {
        return getVipIpsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.DbConfig.IPTargetingInfo, de.cache.DeliveryMessage.DbConfig.IPTargetingInfo.Builder, de.cache.DeliveryMessage.DbConfig.IPTargetingInfoOrBuilder> 
          getVipIpsFieldBuilder() {
        if (vipIpsBuilder_ == null) {
          vipIpsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.DbConfig.IPTargetingInfo, de.cache.DeliveryMessage.DbConfig.IPTargetingInfo.Builder, de.cache.DeliveryMessage.DbConfig.IPTargetingInfoOrBuilder>(
                  vipIps_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          vipIps_ = null;
        }
        return vipIpsBuilder_;
      }

      private int linkageTimeout_ ;
      /**
       * <code>optional int32 linkageTimeout = 8;</code>
       *
       * <pre>
       *联动广告超时时间，表示联动广告的过期时间。默认是120秒。范围是【30，86400】
       * </pre>
       */
      public boolean hasLinkageTimeout() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 linkageTimeout = 8;</code>
       *
       * <pre>
       *联动广告超时时间，表示联动广告的过期时间。默认是120秒。范围是【30，86400】
       * </pre>
       */
      public int getLinkageTimeout() {
        return linkageTimeout_;
      }
      /**
       * <code>optional int32 linkageTimeout = 8;</code>
       *
       * <pre>
       *联动广告超时时间，表示联动广告的过期时间。默认是120秒。范围是【30，86400】
       * </pre>
       */
      public Builder setLinkageTimeout(int value) {
        bitField0_ |= 0x00000080;
        linkageTimeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 linkageTimeout = 8;</code>
       *
       * <pre>
       *联动广告超时时间，表示联动广告的过期时间。默认是120秒。范围是【30，86400】
       * </pre>
       */
      public Builder clearLinkageTimeout() {
        bitField0_ = (bitField0_ & ~0x00000080);
        linkageTimeout_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList logCookieName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureLogCookieNameIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          logCookieName_ = new com.google.protobuf.LazyStringArrayList(logCookieName_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated string logCookieName = 9;</code>
       *
       * <pre>
       *需要记录进日志的Cookie名称，日志第七个字段记录第三方用户唯一标示，此处为需要记录的cookie的key值
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getLogCookieNameList() {
        return logCookieName_.getUnmodifiableView();
      }
      /**
       * <code>repeated string logCookieName = 9;</code>
       *
       * <pre>
       *需要记录进日志的Cookie名称，日志第七个字段记录第三方用户唯一标示，此处为需要记录的cookie的key值
       * </pre>
       */
      public int getLogCookieNameCount() {
        return logCookieName_.size();
      }
      /**
       * <code>repeated string logCookieName = 9;</code>
       *
       * <pre>
       *需要记录进日志的Cookie名称，日志第七个字段记录第三方用户唯一标示，此处为需要记录的cookie的key值
       * </pre>
       */
      public java.lang.String getLogCookieName(int index) {
        return logCookieName_.get(index);
      }
      /**
       * <code>repeated string logCookieName = 9;</code>
       *
       * <pre>
       *需要记录进日志的Cookie名称，日志第七个字段记录第三方用户唯一标示，此处为需要记录的cookie的key值
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLogCookieNameBytes(int index) {
        return logCookieName_.getByteString(index);
      }
      /**
       * <code>repeated string logCookieName = 9;</code>
       *
       * <pre>
       *需要记录进日志的Cookie名称，日志第七个字段记录第三方用户唯一标示，此处为需要记录的cookie的key值
       * </pre>
       */
      public Builder setLogCookieName(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureLogCookieNameIsMutable();
        logCookieName_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string logCookieName = 9;</code>
       *
       * <pre>
       *需要记录进日志的Cookie名称，日志第七个字段记录第三方用户唯一标示，此处为需要记录的cookie的key值
       * </pre>
       */
      public Builder addLogCookieName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureLogCookieNameIsMutable();
        logCookieName_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string logCookieName = 9;</code>
       *
       * <pre>
       *需要记录进日志的Cookie名称，日志第七个字段记录第三方用户唯一标示，此处为需要记录的cookie的key值
       * </pre>
       */
      public Builder addAllLogCookieName(
          java.lang.Iterable<java.lang.String> values) {
        ensureLogCookieNameIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, logCookieName_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string logCookieName = 9;</code>
       *
       * <pre>
       *需要记录进日志的Cookie名称，日志第七个字段记录第三方用户唯一标示，此处为需要记录的cookie的key值
       * </pre>
       */
      public Builder clearLogCookieName() {
        logCookieName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string logCookieName = 9;</code>
       *
       * <pre>
       *需要记录进日志的Cookie名称，日志第七个字段记录第三方用户唯一标示，此处为需要记录的cookie的key值
       * </pre>
       */
      public Builder addLogCookieNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureLogCookieNameIsMutable();
        logCookieName_.add(value);
        onChanged();
        return this;
      }

      private int cpcSpeedupHours_ ;
      /**
       * <code>optional int32 cpcSpeedupHours = 10;</code>
       *
       * <pre>
       *设置CPC的补投时间，&lt;0:不补投，没有均匀投放控制，=0:按照默认时间补投(2小时)，&gt;0:按照指定的值(小时)补投
       * </pre>
       */
      public boolean hasCpcSpeedupHours() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 cpcSpeedupHours = 10;</code>
       *
       * <pre>
       *设置CPC的补投时间，&lt;0:不补投，没有均匀投放控制，=0:按照默认时间补投(2小时)，&gt;0:按照指定的值(小时)补投
       * </pre>
       */
      public int getCpcSpeedupHours() {
        return cpcSpeedupHours_;
      }
      /**
       * <code>optional int32 cpcSpeedupHours = 10;</code>
       *
       * <pre>
       *设置CPC的补投时间，&lt;0:不补投，没有均匀投放控制，=0:按照默认时间补投(2小时)，&gt;0:按照指定的值(小时)补投
       * </pre>
       */
      public Builder setCpcSpeedupHours(int value) {
        bitField0_ |= 0x00000200;
        cpcSpeedupHours_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cpcSpeedupHours = 10;</code>
       *
       * <pre>
       *设置CPC的补投时间，&lt;0:不补投，没有均匀投放控制，=0:按照默认时间补投(2小时)，&gt;0:按照指定的值(小时)补投
       * </pre>
       */
      public Builder clearCpcSpeedupHours() {
        bitField0_ = (bitField0_ & ~0x00000200);
        cpcSpeedupHours_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:de.cache.DbConfig)
    }

    static {
      defaultInstance = new DbConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:de.cache.DbConfig)
  }

  public interface BesPublisherSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.cache.BesPublisherSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required fixed64 setting_id = 1;</code>
     */
    boolean hasSettingId();
    /**
     * <code>required fixed64 setting_id = 1;</code>
     */
    long getSettingId();

    /**
     * <code>repeated string excludedAdvertiserWebsiteUrl = 2;</code>
     */
    com.google.protobuf.ProtocolStringList
        getExcludedAdvertiserWebsiteUrlList();
    /**
     * <code>repeated string excludedAdvertiserWebsiteUrl = 2;</code>
     */
    int getExcludedAdvertiserWebsiteUrlCount();
    /**
     * <code>repeated string excludedAdvertiserWebsiteUrl = 2;</code>
     */
    java.lang.String getExcludedAdvertiserWebsiteUrl(int index);
    /**
     * <code>repeated string excludedAdvertiserWebsiteUrl = 2;</code>
     */
    com.google.protobuf.ByteString
        getExcludedAdvertiserWebsiteUrlBytes(int index);

    /**
     * <code>repeated string excludedProductCategoryId = 3;</code>
     */
    com.google.protobuf.ProtocolStringList
        getExcludedProductCategoryIdList();
    /**
     * <code>repeated string excludedProductCategoryId = 3;</code>
     */
    int getExcludedProductCategoryIdCount();
    /**
     * <code>repeated string excludedProductCategoryId = 3;</code>
     */
    java.lang.String getExcludedProductCategoryId(int index);
    /**
     * <code>repeated string excludedProductCategoryId = 3;</code>
     */
    com.google.protobuf.ByteString
        getExcludedProductCategoryIdBytes(int index);

    /**
     * <code>optional bool isExcludedVulgar = 4;</code>
     */
    boolean hasIsExcludedVulgar();
    /**
     * <code>optional bool isExcludedVulgar = 4;</code>
     */
    boolean getIsExcludedVulgar();

    /**
     * <code>repeated int32 excludedCreativeType = 5;</code>
     */
    java.util.List<java.lang.Integer> getExcludedCreativeTypeList();
    /**
     * <code>repeated int32 excludedCreativeType = 5;</code>
     */
    int getExcludedCreativeTypeCount();
    /**
     * <code>repeated int32 excludedCreativeType = 5;</code>
     */
    int getExcludedCreativeType(int index);
  }
  /**
   * Protobuf type {@code de.cache.BesPublisherSettings}
   */
  public static final class BesPublisherSettings extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:de.cache.BesPublisherSettings)
      BesPublisherSettingsOrBuilder {
    // Use BesPublisherSettings.newBuilder() to construct.
    private BesPublisherSettings(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BesPublisherSettings(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BesPublisherSettings defaultInstance;
    public static BesPublisherSettings getDefaultInstance() {
      return defaultInstance;
    }

    public BesPublisherSettings getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BesPublisherSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              settingId_ = input.readFixed64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                excludedAdvertiserWebsiteUrl_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              excludedAdvertiserWebsiteUrl_.add(bs);
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                excludedProductCategoryId_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              excludedProductCategoryId_.add(bs);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              isExcludedVulgar_ = input.readBool();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                excludedCreativeType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              excludedCreativeType_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                excludedCreativeType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                excludedCreativeType_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          excludedAdvertiserWebsiteUrl_ = excludedAdvertiserWebsiteUrl_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          excludedProductCategoryId_ = excludedProductCategoryId_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          excludedCreativeType_ = java.util.Collections.unmodifiableList(excludedCreativeType_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.internal_static_de_cache_BesPublisherSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.cache.DeliveryMessage.internal_static_de_cache_BesPublisherSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.cache.DeliveryMessage.BesPublisherSettings.class, de.cache.DeliveryMessage.BesPublisherSettings.Builder.class);
    }

    public static com.google.protobuf.Parser<BesPublisherSettings> PARSER =
        new com.google.protobuf.AbstractParser<BesPublisherSettings>() {
      public BesPublisherSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BesPublisherSettings(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BesPublisherSettings> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SETTING_ID_FIELD_NUMBER = 1;
    private long settingId_;
    /**
     * <code>required fixed64 setting_id = 1;</code>
     */
    public boolean hasSettingId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required fixed64 setting_id = 1;</code>
     */
    public long getSettingId() {
      return settingId_;
    }

    public static final int EXCLUDEDADVERTISERWEBSITEURL_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList excludedAdvertiserWebsiteUrl_;
    /**
     * <code>repeated string excludedAdvertiserWebsiteUrl = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getExcludedAdvertiserWebsiteUrlList() {
      return excludedAdvertiserWebsiteUrl_;
    }
    /**
     * <code>repeated string excludedAdvertiserWebsiteUrl = 2;</code>
     */
    public int getExcludedAdvertiserWebsiteUrlCount() {
      return excludedAdvertiserWebsiteUrl_.size();
    }
    /**
     * <code>repeated string excludedAdvertiserWebsiteUrl = 2;</code>
     */
    public java.lang.String getExcludedAdvertiserWebsiteUrl(int index) {
      return excludedAdvertiserWebsiteUrl_.get(index);
    }
    /**
     * <code>repeated string excludedAdvertiserWebsiteUrl = 2;</code>
     */
    public com.google.protobuf.ByteString
        getExcludedAdvertiserWebsiteUrlBytes(int index) {
      return excludedAdvertiserWebsiteUrl_.getByteString(index);
    }

    public static final int EXCLUDEDPRODUCTCATEGORYID_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList excludedProductCategoryId_;
    /**
     * <code>repeated string excludedProductCategoryId = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getExcludedProductCategoryIdList() {
      return excludedProductCategoryId_;
    }
    /**
     * <code>repeated string excludedProductCategoryId = 3;</code>
     */
    public int getExcludedProductCategoryIdCount() {
      return excludedProductCategoryId_.size();
    }
    /**
     * <code>repeated string excludedProductCategoryId = 3;</code>
     */
    public java.lang.String getExcludedProductCategoryId(int index) {
      return excludedProductCategoryId_.get(index);
    }
    /**
     * <code>repeated string excludedProductCategoryId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getExcludedProductCategoryIdBytes(int index) {
      return excludedProductCategoryId_.getByteString(index);
    }

    public static final int ISEXCLUDEDVULGAR_FIELD_NUMBER = 4;
    private boolean isExcludedVulgar_;
    /**
     * <code>optional bool isExcludedVulgar = 4;</code>
     */
    public boolean hasIsExcludedVulgar() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool isExcludedVulgar = 4;</code>
     */
    public boolean getIsExcludedVulgar() {
      return isExcludedVulgar_;
    }

    public static final int EXCLUDEDCREATIVETYPE_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> excludedCreativeType_;
    /**
     * <code>repeated int32 excludedCreativeType = 5;</code>
     */
    public java.util.List<java.lang.Integer>
        getExcludedCreativeTypeList() {
      return excludedCreativeType_;
    }
    /**
     * <code>repeated int32 excludedCreativeType = 5;</code>
     */
    public int getExcludedCreativeTypeCount() {
      return excludedCreativeType_.size();
    }
    /**
     * <code>repeated int32 excludedCreativeType = 5;</code>
     */
    public int getExcludedCreativeType(int index) {
      return excludedCreativeType_.get(index);
    }

    private void initFields() {
      settingId_ = 0L;
      excludedAdvertiserWebsiteUrl_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      excludedProductCategoryId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      isExcludedVulgar_ = false;
      excludedCreativeType_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSettingId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(1, settingId_);
      }
      for (int i = 0; i < excludedAdvertiserWebsiteUrl_.size(); i++) {
        output.writeBytes(2, excludedAdvertiserWebsiteUrl_.getByteString(i));
      }
      for (int i = 0; i < excludedProductCategoryId_.size(); i++) {
        output.writeBytes(3, excludedProductCategoryId_.getByteString(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(4, isExcludedVulgar_);
      }
      for (int i = 0; i < excludedCreativeType_.size(); i++) {
        output.writeInt32(5, excludedCreativeType_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, settingId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < excludedAdvertiserWebsiteUrl_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(excludedAdvertiserWebsiteUrl_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getExcludedAdvertiserWebsiteUrlList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < excludedProductCategoryId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(excludedProductCategoryId_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getExcludedProductCategoryIdList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isExcludedVulgar_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < excludedCreativeType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(excludedCreativeType_.get(i));
        }
        size += dataSize;
        size += 1 * getExcludedCreativeTypeList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.cache.DeliveryMessage.BesPublisherSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.BesPublisherSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.BesPublisherSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.BesPublisherSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.BesPublisherSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.BesPublisherSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.BesPublisherSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.cache.DeliveryMessage.BesPublisherSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.BesPublisherSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.BesPublisherSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.cache.DeliveryMessage.BesPublisherSettings prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code de.cache.BesPublisherSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:de.cache.BesPublisherSettings)
        de.cache.DeliveryMessage.BesPublisherSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_BesPublisherSettings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_BesPublisherSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.BesPublisherSettings.class, de.cache.DeliveryMessage.BesPublisherSettings.Builder.class);
      }

      // Construct using de.cache.DeliveryMessage.BesPublisherSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        settingId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        excludedAdvertiserWebsiteUrl_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        excludedProductCategoryId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        isExcludedVulgar_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        excludedCreativeType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.cache.DeliveryMessage.internal_static_de_cache_BesPublisherSettings_descriptor;
      }

      public de.cache.DeliveryMessage.BesPublisherSettings getDefaultInstanceForType() {
        return de.cache.DeliveryMessage.BesPublisherSettings.getDefaultInstance();
      }

      public de.cache.DeliveryMessage.BesPublisherSettings build() {
        de.cache.DeliveryMessage.BesPublisherSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.cache.DeliveryMessage.BesPublisherSettings buildPartial() {
        de.cache.DeliveryMessage.BesPublisherSettings result = new de.cache.DeliveryMessage.BesPublisherSettings(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.settingId_ = settingId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          excludedAdvertiserWebsiteUrl_ = excludedAdvertiserWebsiteUrl_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.excludedAdvertiserWebsiteUrl_ = excludedAdvertiserWebsiteUrl_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          excludedProductCategoryId_ = excludedProductCategoryId_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.excludedProductCategoryId_ = excludedProductCategoryId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isExcludedVulgar_ = isExcludedVulgar_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          excludedCreativeType_ = java.util.Collections.unmodifiableList(excludedCreativeType_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.excludedCreativeType_ = excludedCreativeType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.cache.DeliveryMessage.BesPublisherSettings) {
          return mergeFrom((de.cache.DeliveryMessage.BesPublisherSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.cache.DeliveryMessage.BesPublisherSettings other) {
        if (other == de.cache.DeliveryMessage.BesPublisherSettings.getDefaultInstance()) return this;
        if (other.hasSettingId()) {
          setSettingId(other.getSettingId());
        }
        if (!other.excludedAdvertiserWebsiteUrl_.isEmpty()) {
          if (excludedAdvertiserWebsiteUrl_.isEmpty()) {
            excludedAdvertiserWebsiteUrl_ = other.excludedAdvertiserWebsiteUrl_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureExcludedAdvertiserWebsiteUrlIsMutable();
            excludedAdvertiserWebsiteUrl_.addAll(other.excludedAdvertiserWebsiteUrl_);
          }
          onChanged();
        }
        if (!other.excludedProductCategoryId_.isEmpty()) {
          if (excludedProductCategoryId_.isEmpty()) {
            excludedProductCategoryId_ = other.excludedProductCategoryId_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureExcludedProductCategoryIdIsMutable();
            excludedProductCategoryId_.addAll(other.excludedProductCategoryId_);
          }
          onChanged();
        }
        if (other.hasIsExcludedVulgar()) {
          setIsExcludedVulgar(other.getIsExcludedVulgar());
        }
        if (!other.excludedCreativeType_.isEmpty()) {
          if (excludedCreativeType_.isEmpty()) {
            excludedCreativeType_ = other.excludedCreativeType_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureExcludedCreativeTypeIsMutable();
            excludedCreativeType_.addAll(other.excludedCreativeType_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSettingId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.cache.DeliveryMessage.BesPublisherSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.cache.DeliveryMessage.BesPublisherSettings) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long settingId_ ;
      /**
       * <code>required fixed64 setting_id = 1;</code>
       */
      public boolean hasSettingId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required fixed64 setting_id = 1;</code>
       */
      public long getSettingId() {
        return settingId_;
      }
      /**
       * <code>required fixed64 setting_id = 1;</code>
       */
      public Builder setSettingId(long value) {
        bitField0_ |= 0x00000001;
        settingId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed64 setting_id = 1;</code>
       */
      public Builder clearSettingId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        settingId_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList excludedAdvertiserWebsiteUrl_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureExcludedAdvertiserWebsiteUrlIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          excludedAdvertiserWebsiteUrl_ = new com.google.protobuf.LazyStringArrayList(excludedAdvertiserWebsiteUrl_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string excludedAdvertiserWebsiteUrl = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getExcludedAdvertiserWebsiteUrlList() {
        return excludedAdvertiserWebsiteUrl_.getUnmodifiableView();
      }
      /**
       * <code>repeated string excludedAdvertiserWebsiteUrl = 2;</code>
       */
      public int getExcludedAdvertiserWebsiteUrlCount() {
        return excludedAdvertiserWebsiteUrl_.size();
      }
      /**
       * <code>repeated string excludedAdvertiserWebsiteUrl = 2;</code>
       */
      public java.lang.String getExcludedAdvertiserWebsiteUrl(int index) {
        return excludedAdvertiserWebsiteUrl_.get(index);
      }
      /**
       * <code>repeated string excludedAdvertiserWebsiteUrl = 2;</code>
       */
      public com.google.protobuf.ByteString
          getExcludedAdvertiserWebsiteUrlBytes(int index) {
        return excludedAdvertiserWebsiteUrl_.getByteString(index);
      }
      /**
       * <code>repeated string excludedAdvertiserWebsiteUrl = 2;</code>
       */
      public Builder setExcludedAdvertiserWebsiteUrl(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExcludedAdvertiserWebsiteUrlIsMutable();
        excludedAdvertiserWebsiteUrl_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string excludedAdvertiserWebsiteUrl = 2;</code>
       */
      public Builder addExcludedAdvertiserWebsiteUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExcludedAdvertiserWebsiteUrlIsMutable();
        excludedAdvertiserWebsiteUrl_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string excludedAdvertiserWebsiteUrl = 2;</code>
       */
      public Builder addAllExcludedAdvertiserWebsiteUrl(
          java.lang.Iterable<java.lang.String> values) {
        ensureExcludedAdvertiserWebsiteUrlIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, excludedAdvertiserWebsiteUrl_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string excludedAdvertiserWebsiteUrl = 2;</code>
       */
      public Builder clearExcludedAdvertiserWebsiteUrl() {
        excludedAdvertiserWebsiteUrl_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string excludedAdvertiserWebsiteUrl = 2;</code>
       */
      public Builder addExcludedAdvertiserWebsiteUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExcludedAdvertiserWebsiteUrlIsMutable();
        excludedAdvertiserWebsiteUrl_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList excludedProductCategoryId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureExcludedProductCategoryIdIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          excludedProductCategoryId_ = new com.google.protobuf.LazyStringArrayList(excludedProductCategoryId_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string excludedProductCategoryId = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getExcludedProductCategoryIdList() {
        return excludedProductCategoryId_.getUnmodifiableView();
      }
      /**
       * <code>repeated string excludedProductCategoryId = 3;</code>
       */
      public int getExcludedProductCategoryIdCount() {
        return excludedProductCategoryId_.size();
      }
      /**
       * <code>repeated string excludedProductCategoryId = 3;</code>
       */
      public java.lang.String getExcludedProductCategoryId(int index) {
        return excludedProductCategoryId_.get(index);
      }
      /**
       * <code>repeated string excludedProductCategoryId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getExcludedProductCategoryIdBytes(int index) {
        return excludedProductCategoryId_.getByteString(index);
      }
      /**
       * <code>repeated string excludedProductCategoryId = 3;</code>
       */
      public Builder setExcludedProductCategoryId(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExcludedProductCategoryIdIsMutable();
        excludedProductCategoryId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string excludedProductCategoryId = 3;</code>
       */
      public Builder addExcludedProductCategoryId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExcludedProductCategoryIdIsMutable();
        excludedProductCategoryId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string excludedProductCategoryId = 3;</code>
       */
      public Builder addAllExcludedProductCategoryId(
          java.lang.Iterable<java.lang.String> values) {
        ensureExcludedProductCategoryIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, excludedProductCategoryId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string excludedProductCategoryId = 3;</code>
       */
      public Builder clearExcludedProductCategoryId() {
        excludedProductCategoryId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string excludedProductCategoryId = 3;</code>
       */
      public Builder addExcludedProductCategoryIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExcludedProductCategoryIdIsMutable();
        excludedProductCategoryId_.add(value);
        onChanged();
        return this;
      }

      private boolean isExcludedVulgar_ ;
      /**
       * <code>optional bool isExcludedVulgar = 4;</code>
       */
      public boolean hasIsExcludedVulgar() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool isExcludedVulgar = 4;</code>
       */
      public boolean getIsExcludedVulgar() {
        return isExcludedVulgar_;
      }
      /**
       * <code>optional bool isExcludedVulgar = 4;</code>
       */
      public Builder setIsExcludedVulgar(boolean value) {
        bitField0_ |= 0x00000008;
        isExcludedVulgar_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isExcludedVulgar = 4;</code>
       */
      public Builder clearIsExcludedVulgar() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isExcludedVulgar_ = false;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> excludedCreativeType_ = java.util.Collections.emptyList();
      private void ensureExcludedCreativeTypeIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          excludedCreativeType_ = new java.util.ArrayList<java.lang.Integer>(excludedCreativeType_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 excludedCreativeType = 5;</code>
       */
      public java.util.List<java.lang.Integer>
          getExcludedCreativeTypeList() {
        return java.util.Collections.unmodifiableList(excludedCreativeType_);
      }
      /**
       * <code>repeated int32 excludedCreativeType = 5;</code>
       */
      public int getExcludedCreativeTypeCount() {
        return excludedCreativeType_.size();
      }
      /**
       * <code>repeated int32 excludedCreativeType = 5;</code>
       */
      public int getExcludedCreativeType(int index) {
        return excludedCreativeType_.get(index);
      }
      /**
       * <code>repeated int32 excludedCreativeType = 5;</code>
       */
      public Builder setExcludedCreativeType(
          int index, int value) {
        ensureExcludedCreativeTypeIsMutable();
        excludedCreativeType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 excludedCreativeType = 5;</code>
       */
      public Builder addExcludedCreativeType(int value) {
        ensureExcludedCreativeTypeIsMutable();
        excludedCreativeType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 excludedCreativeType = 5;</code>
       */
      public Builder addAllExcludedCreativeType(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureExcludedCreativeTypeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, excludedCreativeType_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 excludedCreativeType = 5;</code>
       */
      public Builder clearExcludedCreativeType() {
        excludedCreativeType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:de.cache.BesPublisherSettings)
    }

    static {
      defaultInstance = new BesPublisherSettings(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:de.cache.BesPublisherSettings)
  }

  public interface MaxAdsoltLevelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.cache.MaxAdsoltLevel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 pid = 1;</code>
     *
     * <pre>
     *adsolt id
     * </pre>
     */
    boolean hasPid();
    /**
     * <code>required int64 pid = 1;</code>
     *
     * <pre>
     *adsolt id
     * </pre>
     */
    long getPid();

    /**
     * <code>optional int32 max_level = 2;</code>
     *
     * <pre>
     *max level
     * </pre>
     */
    boolean hasMaxLevel();
    /**
     * <code>optional int32 max_level = 2;</code>
     *
     * <pre>
     *max level
     * </pre>
     */
    int getMaxLevel();
  }
  /**
   * Protobuf type {@code de.cache.MaxAdsoltLevel}
   */
  public static final class MaxAdsoltLevel extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:de.cache.MaxAdsoltLevel)
      MaxAdsoltLevelOrBuilder {
    // Use MaxAdsoltLevel.newBuilder() to construct.
    private MaxAdsoltLevel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MaxAdsoltLevel(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MaxAdsoltLevel defaultInstance;
    public static MaxAdsoltLevel getDefaultInstance() {
      return defaultInstance;
    }

    public MaxAdsoltLevel getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MaxAdsoltLevel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              pid_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              maxLevel_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.internal_static_de_cache_MaxAdsoltLevel_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.cache.DeliveryMessage.internal_static_de_cache_MaxAdsoltLevel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.cache.DeliveryMessage.MaxAdsoltLevel.class, de.cache.DeliveryMessage.MaxAdsoltLevel.Builder.class);
    }

    public static com.google.protobuf.Parser<MaxAdsoltLevel> PARSER =
        new com.google.protobuf.AbstractParser<MaxAdsoltLevel>() {
      public MaxAdsoltLevel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MaxAdsoltLevel(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MaxAdsoltLevel> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PID_FIELD_NUMBER = 1;
    private long pid_;
    /**
     * <code>required int64 pid = 1;</code>
     *
     * <pre>
     *adsolt id
     * </pre>
     */
    public boolean hasPid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 pid = 1;</code>
     *
     * <pre>
     *adsolt id
     * </pre>
     */
    public long getPid() {
      return pid_;
    }

    public static final int MAX_LEVEL_FIELD_NUMBER = 2;
    private int maxLevel_;
    /**
     * <code>optional int32 max_level = 2;</code>
     *
     * <pre>
     *max level
     * </pre>
     */
    public boolean hasMaxLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 max_level = 2;</code>
     *
     * <pre>
     *max level
     * </pre>
     */
    public int getMaxLevel() {
      return maxLevel_;
    }

    private void initFields() {
      pid_ = 0L;
      maxLevel_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, pid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, maxLevel_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, pid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, maxLevel_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.cache.DeliveryMessage.MaxAdsoltLevel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.MaxAdsoltLevel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.MaxAdsoltLevel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.MaxAdsoltLevel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.MaxAdsoltLevel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.MaxAdsoltLevel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.MaxAdsoltLevel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.cache.DeliveryMessage.MaxAdsoltLevel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.MaxAdsoltLevel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.MaxAdsoltLevel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.cache.DeliveryMessage.MaxAdsoltLevel prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code de.cache.MaxAdsoltLevel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:de.cache.MaxAdsoltLevel)
        de.cache.DeliveryMessage.MaxAdsoltLevelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_MaxAdsoltLevel_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_MaxAdsoltLevel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.MaxAdsoltLevel.class, de.cache.DeliveryMessage.MaxAdsoltLevel.Builder.class);
      }

      // Construct using de.cache.DeliveryMessage.MaxAdsoltLevel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        pid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.cache.DeliveryMessage.internal_static_de_cache_MaxAdsoltLevel_descriptor;
      }

      public de.cache.DeliveryMessage.MaxAdsoltLevel getDefaultInstanceForType() {
        return de.cache.DeliveryMessage.MaxAdsoltLevel.getDefaultInstance();
      }

      public de.cache.DeliveryMessage.MaxAdsoltLevel build() {
        de.cache.DeliveryMessage.MaxAdsoltLevel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.cache.DeliveryMessage.MaxAdsoltLevel buildPartial() {
        de.cache.DeliveryMessage.MaxAdsoltLevel result = new de.cache.DeliveryMessage.MaxAdsoltLevel(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pid_ = pid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxLevel_ = maxLevel_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.cache.DeliveryMessage.MaxAdsoltLevel) {
          return mergeFrom((de.cache.DeliveryMessage.MaxAdsoltLevel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.cache.DeliveryMessage.MaxAdsoltLevel other) {
        if (other == de.cache.DeliveryMessage.MaxAdsoltLevel.getDefaultInstance()) return this;
        if (other.hasPid()) {
          setPid(other.getPid());
        }
        if (other.hasMaxLevel()) {
          setMaxLevel(other.getMaxLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPid()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.cache.DeliveryMessage.MaxAdsoltLevel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.cache.DeliveryMessage.MaxAdsoltLevel) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long pid_ ;
      /**
       * <code>required int64 pid = 1;</code>
       *
       * <pre>
       *adsolt id
       * </pre>
       */
      public boolean hasPid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 pid = 1;</code>
       *
       * <pre>
       *adsolt id
       * </pre>
       */
      public long getPid() {
        return pid_;
      }
      /**
       * <code>required int64 pid = 1;</code>
       *
       * <pre>
       *adsolt id
       * </pre>
       */
      public Builder setPid(long value) {
        bitField0_ |= 0x00000001;
        pid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 pid = 1;</code>
       *
       * <pre>
       *adsolt id
       * </pre>
       */
      public Builder clearPid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pid_ = 0L;
        onChanged();
        return this;
      }

      private int maxLevel_ ;
      /**
       * <code>optional int32 max_level = 2;</code>
       *
       * <pre>
       *max level
       * </pre>
       */
      public boolean hasMaxLevel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 max_level = 2;</code>
       *
       * <pre>
       *max level
       * </pre>
       */
      public int getMaxLevel() {
        return maxLevel_;
      }
      /**
       * <code>optional int32 max_level = 2;</code>
       *
       * <pre>
       *max level
       * </pre>
       */
      public Builder setMaxLevel(int value) {
        bitField0_ |= 0x00000002;
        maxLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_level = 2;</code>
       *
       * <pre>
       *max level
       * </pre>
       */
      public Builder clearMaxLevel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxLevel_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:de.cache.MaxAdsoltLevel)
    }

    static {
      defaultInstance = new MaxAdsoltLevel(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:de.cache.MaxAdsoltLevel)
  }

  public interface AllyesAdsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.cache.AllyesAds)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string dbName = 1;</code>
     *
     * <pre>
     *数据库名
     * </pre>
     */
    boolean hasDbName();
    /**
     * <code>optional string dbName = 1;</code>
     *
     * <pre>
     *数据库名
     * </pre>
     */
    java.lang.String getDbName();
    /**
     * <code>optional string dbName = 1;</code>
     *
     * <pre>
     *数据库名
     * </pre>
     */
    com.google.protobuf.ByteString
        getDbNameBytes();

    /**
     * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
     *
     * <pre>
     *媒体信息(一级媒体圈)
     * </pre>
     */
    java.util.List<de.cache.DeliveryMessage.ChannelFamily> 
        getChannelFamilyList();
    /**
     * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
     *
     * <pre>
     *媒体信息(一级媒体圈)
     * </pre>
     */
    de.cache.DeliveryMessage.ChannelFamily getChannelFamily(int index);
    /**
     * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
     *
     * <pre>
     *媒体信息(一级媒体圈)
     * </pre>
     */
    int getChannelFamilyCount();
    /**
     * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
     *
     * <pre>
     *媒体信息(一级媒体圈)
     * </pre>
     */
    java.util.List<? extends de.cache.DeliveryMessage.ChannelFamilyOrBuilder> 
        getChannelFamilyOrBuilderList();
    /**
     * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
     *
     * <pre>
     *媒体信息(一级媒体圈)
     * </pre>
     */
    de.cache.DeliveryMessage.ChannelFamilyOrBuilder getChannelFamilyOrBuilder(
        int index);

    /**
     * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
     *
     * <pre>
     *网站信息(二级媒体圈)
     * </pre>
     */
    java.util.List<de.cache.DeliveryMessage.ChannelPool> 
        getChannelPoolList();
    /**
     * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
     *
     * <pre>
     *网站信息(二级媒体圈)
     * </pre>
     */
    de.cache.DeliveryMessage.ChannelPool getChannelPool(int index);
    /**
     * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
     *
     * <pre>
     *网站信息(二级媒体圈)
     * </pre>
     */
    int getChannelPoolCount();
    /**
     * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
     *
     * <pre>
     *网站信息(二级媒体圈)
     * </pre>
     */
    java.util.List<? extends de.cache.DeliveryMessage.ChannelPoolOrBuilder> 
        getChannelPoolOrBuilderList();
    /**
     * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
     *
     * <pre>
     *网站信息(二级媒体圈)
     * </pre>
     */
    de.cache.DeliveryMessage.ChannelPoolOrBuilder getChannelPoolOrBuilder(
        int index);

    /**
     * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
     *
     * <pre>
     *频道信息(三级媒体圈)
     * </pre>
     */
    java.util.List<de.cache.DeliveryMessage.ChannelGroup> 
        getChannelGroupList();
    /**
     * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
     *
     * <pre>
     *频道信息(三级媒体圈)
     * </pre>
     */
    de.cache.DeliveryMessage.ChannelGroup getChannelGroup(int index);
    /**
     * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
     *
     * <pre>
     *频道信息(三级媒体圈)
     * </pre>
     */
    int getChannelGroupCount();
    /**
     * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
     *
     * <pre>
     *频道信息(三级媒体圈)
     * </pre>
     */
    java.util.List<? extends de.cache.DeliveryMessage.ChannelGroupOrBuilder> 
        getChannelGroupOrBuilderList();
    /**
     * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
     *
     * <pre>
     *频道信息(三级媒体圈)
     * </pre>
     */
    de.cache.DeliveryMessage.ChannelGroupOrBuilder getChannelGroupOrBuilder(
        int index);

    /**
     * <code>repeated .de.cache.Channel channel = 5;</code>
     *
     * <pre>
     *广告位信息
     * </pre>
     */
    java.util.List<de.cache.DeliveryMessage.Channel> 
        getChannelList();
    /**
     * <code>repeated .de.cache.Channel channel = 5;</code>
     *
     * <pre>
     *广告位信息
     * </pre>
     */
    de.cache.DeliveryMessage.Channel getChannel(int index);
    /**
     * <code>repeated .de.cache.Channel channel = 5;</code>
     *
     * <pre>
     *广告位信息
     * </pre>
     */
    int getChannelCount();
    /**
     * <code>repeated .de.cache.Channel channel = 5;</code>
     *
     * <pre>
     *广告位信息
     * </pre>
     */
    java.util.List<? extends de.cache.DeliveryMessage.ChannelOrBuilder> 
        getChannelOrBuilderList();
    /**
     * <code>repeated .de.cache.Channel channel = 5;</code>
     *
     * <pre>
     *广告位信息
     * </pre>
     */
    de.cache.DeliveryMessage.ChannelOrBuilder getChannelOrBuilder(
        int index);

    /**
     * <code>repeated .de.cache.Agency agency = 6;</code>
     *
     * <pre>
     *代理商信息
     * </pre>
     */
    java.util.List<de.cache.DeliveryMessage.Agency> 
        getAgencyList();
    /**
     * <code>repeated .de.cache.Agency agency = 6;</code>
     *
     * <pre>
     *代理商信息
     * </pre>
     */
    de.cache.DeliveryMessage.Agency getAgency(int index);
    /**
     * <code>repeated .de.cache.Agency agency = 6;</code>
     *
     * <pre>
     *代理商信息
     * </pre>
     */
    int getAgencyCount();
    /**
     * <code>repeated .de.cache.Agency agency = 6;</code>
     *
     * <pre>
     *代理商信息
     * </pre>
     */
    java.util.List<? extends de.cache.DeliveryMessage.AgencyOrBuilder> 
        getAgencyOrBuilderList();
    /**
     * <code>repeated .de.cache.Agency agency = 6;</code>
     *
     * <pre>
     *代理商信息
     * </pre>
     */
    de.cache.DeliveryMessage.AgencyOrBuilder getAgencyOrBuilder(
        int index);

    /**
     * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
     *
     * <pre>
     *广告主信息
     * </pre>
     */
    java.util.List<de.cache.DeliveryMessage.Advertiser> 
        getAdvertiserList();
    /**
     * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
     *
     * <pre>
     *广告主信息
     * </pre>
     */
    de.cache.DeliveryMessage.Advertiser getAdvertiser(int index);
    /**
     * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
     *
     * <pre>
     *广告主信息
     * </pre>
     */
    int getAdvertiserCount();
    /**
     * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
     *
     * <pre>
     *广告主信息
     * </pre>
     */
    java.util.List<? extends de.cache.DeliveryMessage.AdvertiserOrBuilder> 
        getAdvertiserOrBuilderList();
    /**
     * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
     *
     * <pre>
     *广告主信息
     * </pre>
     */
    de.cache.DeliveryMessage.AdvertiserOrBuilder getAdvertiserOrBuilder(
        int index);

    /**
     * <code>repeated .de.cache.Order order = 8;</code>
     *
     * <pre>
     *订单信息
     * </pre>
     */
    java.util.List<de.cache.DeliveryMessage.Order> 
        getOrderList();
    /**
     * <code>repeated .de.cache.Order order = 8;</code>
     *
     * <pre>
     *订单信息
     * </pre>
     */
    de.cache.DeliveryMessage.Order getOrder(int index);
    /**
     * <code>repeated .de.cache.Order order = 8;</code>
     *
     * <pre>
     *订单信息
     * </pre>
     */
    int getOrderCount();
    /**
     * <code>repeated .de.cache.Order order = 8;</code>
     *
     * <pre>
     *订单信息
     * </pre>
     */
    java.util.List<? extends de.cache.DeliveryMessage.OrderOrBuilder> 
        getOrderOrBuilderList();
    /**
     * <code>repeated .de.cache.Order order = 8;</code>
     *
     * <pre>
     *订单信息
     * </pre>
     */
    de.cache.DeliveryMessage.OrderOrBuilder getOrderOrBuilder(
        int index);

    /**
     * <code>repeated .de.cache.Solution solution = 9;</code>
     *
     * <pre>
     *投放信息
     * </pre>
     */
    java.util.List<de.cache.DeliveryMessage.Solution> 
        getSolutionList();
    /**
     * <code>repeated .de.cache.Solution solution = 9;</code>
     *
     * <pre>
     *投放信息
     * </pre>
     */
    de.cache.DeliveryMessage.Solution getSolution(int index);
    /**
     * <code>repeated .de.cache.Solution solution = 9;</code>
     *
     * <pre>
     *投放信息
     * </pre>
     */
    int getSolutionCount();
    /**
     * <code>repeated .de.cache.Solution solution = 9;</code>
     *
     * <pre>
     *投放信息
     * </pre>
     */
    java.util.List<? extends de.cache.DeliveryMessage.SolutionOrBuilder> 
        getSolutionOrBuilderList();
    /**
     * <code>repeated .de.cache.Solution solution = 9;</code>
     *
     * <pre>
     *投放信息
     * </pre>
     */
    de.cache.DeliveryMessage.SolutionOrBuilder getSolutionOrBuilder(
        int index);

    /**
     * <code>repeated .de.cache.Banner banner = 10;</code>
     *
     * <pre>
     *创意信息
     * </pre>
     */
    java.util.List<de.cache.DeliveryMessage.Banner> 
        getBannerList();
    /**
     * <code>repeated .de.cache.Banner banner = 10;</code>
     *
     * <pre>
     *创意信息
     * </pre>
     */
    de.cache.DeliveryMessage.Banner getBanner(int index);
    /**
     * <code>repeated .de.cache.Banner banner = 10;</code>
     *
     * <pre>
     *创意信息
     * </pre>
     */
    int getBannerCount();
    /**
     * <code>repeated .de.cache.Banner banner = 10;</code>
     *
     * <pre>
     *创意信息
     * </pre>
     */
    java.util.List<? extends de.cache.DeliveryMessage.BannerOrBuilder> 
        getBannerOrBuilderList();
    /**
     * <code>repeated .de.cache.Banner banner = 10;</code>
     *
     * <pre>
     *创意信息
     * </pre>
     */
    de.cache.DeliveryMessage.BannerOrBuilder getBannerOrBuilder(
        int index);

    /**
     * <code>optional .de.cache.DbConfig dbConfig = 11;</code>
     *
     * <pre>
     *全局配置信息
     * </pre>
     */
    boolean hasDbConfig();
    /**
     * <code>optional .de.cache.DbConfig dbConfig = 11;</code>
     *
     * <pre>
     *全局配置信息
     * </pre>
     */
    de.cache.DeliveryMessage.DbConfig getDbConfig();
    /**
     * <code>optional .de.cache.DbConfig dbConfig = 11;</code>
     *
     * <pre>
     *全局配置信息
     * </pre>
     */
    de.cache.DeliveryMessage.DbConfigOrBuilder getDbConfigOrBuilder();

    /**
     * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
     */
    java.util.List<de.cache.DeliveryMessage.AllyesAds.LinkageChannel> 
        getLinkageChannelList();
    /**
     * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
     */
    de.cache.DeliveryMessage.AllyesAds.LinkageChannel getLinkageChannel(int index);
    /**
     * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
     */
    int getLinkageChannelCount();
    /**
     * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
     */
    java.util.List<? extends de.cache.DeliveryMessage.AllyesAds.LinkageChannelOrBuilder> 
        getLinkageChannelOrBuilderList();
    /**
     * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
     */
    de.cache.DeliveryMessage.AllyesAds.LinkageChannelOrBuilder getLinkageChannelOrBuilder(
        int index);

    /**
     * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
     */
    java.util.List<de.cache.DeliveryMessage.AllyesAds.LinkageSolution> 
        getLinkageSolutionList();
    /**
     * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
     */
    de.cache.DeliveryMessage.AllyesAds.LinkageSolution getLinkageSolution(int index);
    /**
     * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
     */
    int getLinkageSolutionCount();
    /**
     * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
     */
    java.util.List<? extends de.cache.DeliveryMessage.AllyesAds.LinkageSolutionOrBuilder> 
        getLinkageSolutionOrBuilderList();
    /**
     * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
     */
    de.cache.DeliveryMessage.AllyesAds.LinkageSolutionOrBuilder getLinkageSolutionOrBuilder(
        int index);

    /**
     * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
     *
     * <pre>
     *模板文件
     * </pre>
     */
    java.util.List<de.cache.DeliveryMessage.CacheFile> 
        getTplFileList();
    /**
     * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
     *
     * <pre>
     *模板文件
     * </pre>
     */
    de.cache.DeliveryMessage.CacheFile getTplFile(int index);
    /**
     * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
     *
     * <pre>
     *模板文件
     * </pre>
     */
    int getTplFileCount();
    /**
     * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
     *
     * <pre>
     *模板文件
     * </pre>
     */
    java.util.List<? extends de.cache.DeliveryMessage.CacheFileOrBuilder> 
        getTplFileOrBuilderList();
    /**
     * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
     *
     * <pre>
     *模板文件
     * </pre>
     */
    de.cache.DeliveryMessage.CacheFileOrBuilder getTplFileOrBuilder(
        int index);

    /**
     * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
     *
     * <pre>
     *其他功能文件
     * </pre>
     */
    java.util.List<de.cache.DeliveryMessage.CacheFile> 
        getOtherFeaturesList();
    /**
     * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
     *
     * <pre>
     *其他功能文件
     * </pre>
     */
    de.cache.DeliveryMessage.CacheFile getOtherFeatures(int index);
    /**
     * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
     *
     * <pre>
     *其他功能文件
     * </pre>
     */
    int getOtherFeaturesCount();
    /**
     * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
     *
     * <pre>
     *其他功能文件
     * </pre>
     */
    java.util.List<? extends de.cache.DeliveryMessage.CacheFileOrBuilder> 
        getOtherFeaturesOrBuilderList();
    /**
     * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
     *
     * <pre>
     *其他功能文件
     * </pre>
     */
    de.cache.DeliveryMessage.CacheFileOrBuilder getOtherFeaturesOrBuilder(
        int index);

    /**
     * <code>optional .de.cache.CacheFile IPlib = 16;</code>
     *
     * <pre>
     *IP库文件，与DB伴随，不同DB可以设置不一样IP库
     * </pre>
     */
    boolean hasIPlib();
    /**
     * <code>optional .de.cache.CacheFile IPlib = 16;</code>
     *
     * <pre>
     *IP库文件，与DB伴随，不同DB可以设置不一样IP库
     * </pre>
     */
    de.cache.DeliveryMessage.CacheFile getIPlib();
    /**
     * <code>optional .de.cache.CacheFile IPlib = 16;</code>
     *
     * <pre>
     *IP库文件，与DB伴随，不同DB可以设置不一样IP库
     * </pre>
     */
    de.cache.DeliveryMessage.CacheFileOrBuilder getIPlibOrBuilder();

    /**
     * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
     *
     * <pre>
     *bes publisher setting list
     * </pre>
     */
    java.util.List<de.cache.DeliveryMessage.BesPublisherSettings> 
        getBesSetingList();
    /**
     * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
     *
     * <pre>
     *bes publisher setting list
     * </pre>
     */
    de.cache.DeliveryMessage.BesPublisherSettings getBesSeting(int index);
    /**
     * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
     *
     * <pre>
     *bes publisher setting list
     * </pre>
     */
    int getBesSetingCount();
    /**
     * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
     *
     * <pre>
     *bes publisher setting list
     * </pre>
     */
    java.util.List<? extends de.cache.DeliveryMessage.BesPublisherSettingsOrBuilder> 
        getBesSetingOrBuilderList();
    /**
     * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
     *
     * <pre>
     *bes publisher setting list
     * </pre>
     */
    de.cache.DeliveryMessage.BesPublisherSettingsOrBuilder getBesSetingOrBuilder(
        int index);

    /**
     * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
     *
     * <pre>
     *max adsolt level list
     * </pre>
     */
    java.util.List<de.cache.DeliveryMessage.MaxAdsoltLevel> 
        getMaxAdsoltLevelList();
    /**
     * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
     *
     * <pre>
     *max adsolt level list
     * </pre>
     */
    de.cache.DeliveryMessage.MaxAdsoltLevel getMaxAdsoltLevel(int index);
    /**
     * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
     *
     * <pre>
     *max adsolt level list
     * </pre>
     */
    int getMaxAdsoltLevelCount();
    /**
     * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
     *
     * <pre>
     *max adsolt level list
     * </pre>
     */
    java.util.List<? extends de.cache.DeliveryMessage.MaxAdsoltLevelOrBuilder> 
        getMaxAdsoltLevelOrBuilderList();
    /**
     * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
     *
     * <pre>
     *max adsolt level list
     * </pre>
     */
    de.cache.DeliveryMessage.MaxAdsoltLevelOrBuilder getMaxAdsoltLevelOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code de.cache.AllyesAds}
   *
   * <pre>
   *消息主体
   * </pre>
   */
  public static final class AllyesAds extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:de.cache.AllyesAds)
      AllyesAdsOrBuilder {
    // Use AllyesAds.newBuilder() to construct.
    private AllyesAds(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AllyesAds(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AllyesAds defaultInstance;
    public static AllyesAds getDefaultInstance() {
      return defaultInstance;
    }

    public AllyesAds getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AllyesAds(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              dbName_ = bs;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                channelFamily_ = new java.util.ArrayList<de.cache.DeliveryMessage.ChannelFamily>();
                mutable_bitField0_ |= 0x00000002;
              }
              channelFamily_.add(input.readMessage(de.cache.DeliveryMessage.ChannelFamily.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                channelPool_ = new java.util.ArrayList<de.cache.DeliveryMessage.ChannelPool>();
                mutable_bitField0_ |= 0x00000004;
              }
              channelPool_.add(input.readMessage(de.cache.DeliveryMessage.ChannelPool.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                channelGroup_ = new java.util.ArrayList<de.cache.DeliveryMessage.ChannelGroup>();
                mutable_bitField0_ |= 0x00000008;
              }
              channelGroup_.add(input.readMessage(de.cache.DeliveryMessage.ChannelGroup.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                channel_ = new java.util.ArrayList<de.cache.DeliveryMessage.Channel>();
                mutable_bitField0_ |= 0x00000010;
              }
              channel_.add(input.readMessage(de.cache.DeliveryMessage.Channel.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                agency_ = new java.util.ArrayList<de.cache.DeliveryMessage.Agency>();
                mutable_bitField0_ |= 0x00000020;
              }
              agency_.add(input.readMessage(de.cache.DeliveryMessage.Agency.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                advertiser_ = new java.util.ArrayList<de.cache.DeliveryMessage.Advertiser>();
                mutable_bitField0_ |= 0x00000040;
              }
              advertiser_.add(input.readMessage(de.cache.DeliveryMessage.Advertiser.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                order_ = new java.util.ArrayList<de.cache.DeliveryMessage.Order>();
                mutable_bitField0_ |= 0x00000080;
              }
              order_.add(input.readMessage(de.cache.DeliveryMessage.Order.PARSER, extensionRegistry));
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                solution_ = new java.util.ArrayList<de.cache.DeliveryMessage.Solution>();
                mutable_bitField0_ |= 0x00000100;
              }
              solution_.add(input.readMessage(de.cache.DeliveryMessage.Solution.PARSER, extensionRegistry));
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                banner_ = new java.util.ArrayList<de.cache.DeliveryMessage.Banner>();
                mutable_bitField0_ |= 0x00000200;
              }
              banner_.add(input.readMessage(de.cache.DeliveryMessage.Banner.PARSER, extensionRegistry));
              break;
            }
            case 90: {
              de.cache.DeliveryMessage.DbConfig.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = dbConfig_.toBuilder();
              }
              dbConfig_ = input.readMessage(de.cache.DeliveryMessage.DbConfig.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dbConfig_);
                dbConfig_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                linkageChannel_ = new java.util.ArrayList<de.cache.DeliveryMessage.AllyesAds.LinkageChannel>();
                mutable_bitField0_ |= 0x00000800;
              }
              linkageChannel_.add(input.readMessage(de.cache.DeliveryMessage.AllyesAds.LinkageChannel.PARSER, extensionRegistry));
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                linkageSolution_ = new java.util.ArrayList<de.cache.DeliveryMessage.AllyesAds.LinkageSolution>();
                mutable_bitField0_ |= 0x00001000;
              }
              linkageSolution_.add(input.readMessage(de.cache.DeliveryMessage.AllyesAds.LinkageSolution.PARSER, extensionRegistry));
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                tplFile_ = new java.util.ArrayList<de.cache.DeliveryMessage.CacheFile>();
                mutable_bitField0_ |= 0x00002000;
              }
              tplFile_.add(input.readMessage(de.cache.DeliveryMessage.CacheFile.PARSER, extensionRegistry));
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                otherFeatures_ = new java.util.ArrayList<de.cache.DeliveryMessage.CacheFile>();
                mutable_bitField0_ |= 0x00004000;
              }
              otherFeatures_.add(input.readMessage(de.cache.DeliveryMessage.CacheFile.PARSER, extensionRegistry));
              break;
            }
            case 130: {
              de.cache.DeliveryMessage.CacheFile.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = iPlib_.toBuilder();
              }
              iPlib_ = input.readMessage(de.cache.DeliveryMessage.CacheFile.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(iPlib_);
                iPlib_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                besSeting_ = new java.util.ArrayList<de.cache.DeliveryMessage.BesPublisherSettings>();
                mutable_bitField0_ |= 0x00010000;
              }
              besSeting_.add(input.readMessage(de.cache.DeliveryMessage.BesPublisherSettings.PARSER, extensionRegistry));
              break;
            }
            case 146: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                maxAdsoltLevel_ = new java.util.ArrayList<de.cache.DeliveryMessage.MaxAdsoltLevel>();
                mutable_bitField0_ |= 0x00020000;
              }
              maxAdsoltLevel_.add(input.readMessage(de.cache.DeliveryMessage.MaxAdsoltLevel.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          channelFamily_ = java.util.Collections.unmodifiableList(channelFamily_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          channelPool_ = java.util.Collections.unmodifiableList(channelPool_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          channelGroup_ = java.util.Collections.unmodifiableList(channelGroup_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          channel_ = java.util.Collections.unmodifiableList(channel_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          agency_ = java.util.Collections.unmodifiableList(agency_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          advertiser_ = java.util.Collections.unmodifiableList(advertiser_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          order_ = java.util.Collections.unmodifiableList(order_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          solution_ = java.util.Collections.unmodifiableList(solution_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          banner_ = java.util.Collections.unmodifiableList(banner_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          linkageChannel_ = java.util.Collections.unmodifiableList(linkageChannel_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          linkageSolution_ = java.util.Collections.unmodifiableList(linkageSolution_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          tplFile_ = java.util.Collections.unmodifiableList(tplFile_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          otherFeatures_ = java.util.Collections.unmodifiableList(otherFeatures_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          besSeting_ = java.util.Collections.unmodifiableList(besSeting_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          maxAdsoltLevel_ = java.util.Collections.unmodifiableList(maxAdsoltLevel_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.cache.DeliveryMessage.internal_static_de_cache_AllyesAds_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.cache.DeliveryMessage.internal_static_de_cache_AllyesAds_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.cache.DeliveryMessage.AllyesAds.class, de.cache.DeliveryMessage.AllyesAds.Builder.class);
    }

    public static com.google.protobuf.Parser<AllyesAds> PARSER =
        new com.google.protobuf.AbstractParser<AllyesAds>() {
      public AllyesAds parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AllyesAds(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AllyesAds> getParserForType() {
      return PARSER;
    }

    public interface LinkageChannelOrBuilder extends
        // @@protoc_insertion_point(interface_extends:de.cache.AllyesAds.LinkageChannel)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int64 linkageGroupId = 1;</code>
       *
       * <pre>
       *联动广告位组id
       * </pre>
       */
      boolean hasLinkageGroupId();
      /**
       * <code>optional int64 linkageGroupId = 1;</code>
       *
       * <pre>
       *联动广告位组id
       * </pre>
       */
      long getLinkageGroupId();

      /**
       * <code>repeated int64 channelId = 2;</code>
       *
       * <pre>
       *至少2个不同的广告位id
       * </pre>
       */
      java.util.List<java.lang.Long> getChannelIdList();
      /**
       * <code>repeated int64 channelId = 2;</code>
       *
       * <pre>
       *至少2个不同的广告位id
       * </pre>
       */
      int getChannelIdCount();
      /**
       * <code>repeated int64 channelId = 2;</code>
       *
       * <pre>
       *至少2个不同的广告位id
       * </pre>
       */
      long getChannelId(int index);
    }
    /**
     * Protobuf type {@code de.cache.AllyesAds.LinkageChannel}
     */
    public static final class LinkageChannel extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:de.cache.AllyesAds.LinkageChannel)
        LinkageChannelOrBuilder {
      // Use LinkageChannel.newBuilder() to construct.
      private LinkageChannel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private LinkageChannel(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final LinkageChannel defaultInstance;
      public static LinkageChannel getDefaultInstance() {
        return defaultInstance;
      }

      public LinkageChannel getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private LinkageChannel(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                linkageGroupId_ = input.readInt64();
                break;
              }
              case 16: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  channelId_ = new java.util.ArrayList<java.lang.Long>();
                  mutable_bitField0_ |= 0x00000002;
                }
                channelId_.add(input.readInt64());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  channelId_ = new java.util.ArrayList<java.lang.Long>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  channelId_.add(input.readInt64());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            channelId_ = java.util.Collections.unmodifiableList(channelId_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_AllyesAds_LinkageChannel_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_AllyesAds_LinkageChannel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.AllyesAds.LinkageChannel.class, de.cache.DeliveryMessage.AllyesAds.LinkageChannel.Builder.class);
      }

      public static com.google.protobuf.Parser<LinkageChannel> PARSER =
          new com.google.protobuf.AbstractParser<LinkageChannel>() {
        public LinkageChannel parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new LinkageChannel(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<LinkageChannel> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int LINKAGEGROUPID_FIELD_NUMBER = 1;
      private long linkageGroupId_;
      /**
       * <code>optional int64 linkageGroupId = 1;</code>
       *
       * <pre>
       *联动广告位组id
       * </pre>
       */
      public boolean hasLinkageGroupId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 linkageGroupId = 1;</code>
       *
       * <pre>
       *联动广告位组id
       * </pre>
       */
      public long getLinkageGroupId() {
        return linkageGroupId_;
      }

      public static final int CHANNELID_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Long> channelId_;
      /**
       * <code>repeated int64 channelId = 2;</code>
       *
       * <pre>
       *至少2个不同的广告位id
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getChannelIdList() {
        return channelId_;
      }
      /**
       * <code>repeated int64 channelId = 2;</code>
       *
       * <pre>
       *至少2个不同的广告位id
       * </pre>
       */
      public int getChannelIdCount() {
        return channelId_.size();
      }
      /**
       * <code>repeated int64 channelId = 2;</code>
       *
       * <pre>
       *至少2个不同的广告位id
       * </pre>
       */
      public long getChannelId(int index) {
        return channelId_.get(index);
      }

      private void initFields() {
        linkageGroupId_ = 0L;
        channelId_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt64(1, linkageGroupId_);
        }
        for (int i = 0; i < channelId_.size(); i++) {
          output.writeInt64(2, channelId_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, linkageGroupId_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < channelId_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt64SizeNoTag(channelId_.get(i));
          }
          size += dataSize;
          size += 1 * getChannelIdList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static de.cache.DeliveryMessage.AllyesAds.LinkageChannel parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.cache.DeliveryMessage.AllyesAds.LinkageChannel parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.AllyesAds.LinkageChannel parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.cache.DeliveryMessage.AllyesAds.LinkageChannel parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.AllyesAds.LinkageChannel parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.cache.DeliveryMessage.AllyesAds.LinkageChannel parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.AllyesAds.LinkageChannel parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static de.cache.DeliveryMessage.AllyesAds.LinkageChannel parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.AllyesAds.LinkageChannel parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.cache.DeliveryMessage.AllyesAds.LinkageChannel parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(de.cache.DeliveryMessage.AllyesAds.LinkageChannel prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code de.cache.AllyesAds.LinkageChannel}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:de.cache.AllyesAds.LinkageChannel)
          de.cache.DeliveryMessage.AllyesAds.LinkageChannelOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return de.cache.DeliveryMessage.internal_static_de_cache_AllyesAds_LinkageChannel_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return de.cache.DeliveryMessage.internal_static_de_cache_AllyesAds_LinkageChannel_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  de.cache.DeliveryMessage.AllyesAds.LinkageChannel.class, de.cache.DeliveryMessage.AllyesAds.LinkageChannel.Builder.class);
        }

        // Construct using de.cache.DeliveryMessage.AllyesAds.LinkageChannel.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          linkageGroupId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          channelId_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return de.cache.DeliveryMessage.internal_static_de_cache_AllyesAds_LinkageChannel_descriptor;
        }

        public de.cache.DeliveryMessage.AllyesAds.LinkageChannel getDefaultInstanceForType() {
          return de.cache.DeliveryMessage.AllyesAds.LinkageChannel.getDefaultInstance();
        }

        public de.cache.DeliveryMessage.AllyesAds.LinkageChannel build() {
          de.cache.DeliveryMessage.AllyesAds.LinkageChannel result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public de.cache.DeliveryMessage.AllyesAds.LinkageChannel buildPartial() {
          de.cache.DeliveryMessage.AllyesAds.LinkageChannel result = new de.cache.DeliveryMessage.AllyesAds.LinkageChannel(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.linkageGroupId_ = linkageGroupId_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            channelId_ = java.util.Collections.unmodifiableList(channelId_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.channelId_ = channelId_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof de.cache.DeliveryMessage.AllyesAds.LinkageChannel) {
            return mergeFrom((de.cache.DeliveryMessage.AllyesAds.LinkageChannel)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(de.cache.DeliveryMessage.AllyesAds.LinkageChannel other) {
          if (other == de.cache.DeliveryMessage.AllyesAds.LinkageChannel.getDefaultInstance()) return this;
          if (other.hasLinkageGroupId()) {
            setLinkageGroupId(other.getLinkageGroupId());
          }
          if (!other.channelId_.isEmpty()) {
            if (channelId_.isEmpty()) {
              channelId_ = other.channelId_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureChannelIdIsMutable();
              channelId_.addAll(other.channelId_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          de.cache.DeliveryMessage.AllyesAds.LinkageChannel parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (de.cache.DeliveryMessage.AllyesAds.LinkageChannel) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long linkageGroupId_ ;
        /**
         * <code>optional int64 linkageGroupId = 1;</code>
         *
         * <pre>
         *联动广告位组id
         * </pre>
         */
        public boolean hasLinkageGroupId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int64 linkageGroupId = 1;</code>
         *
         * <pre>
         *联动广告位组id
         * </pre>
         */
        public long getLinkageGroupId() {
          return linkageGroupId_;
        }
        /**
         * <code>optional int64 linkageGroupId = 1;</code>
         *
         * <pre>
         *联动广告位组id
         * </pre>
         */
        public Builder setLinkageGroupId(long value) {
          bitField0_ |= 0x00000001;
          linkageGroupId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 linkageGroupId = 1;</code>
         *
         * <pre>
         *联动广告位组id
         * </pre>
         */
        public Builder clearLinkageGroupId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          linkageGroupId_ = 0L;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Long> channelId_ = java.util.Collections.emptyList();
        private void ensureChannelIdIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            channelId_ = new java.util.ArrayList<java.lang.Long>(channelId_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated int64 channelId = 2;</code>
         *
         * <pre>
         *至少2个不同的广告位id
         * </pre>
         */
        public java.util.List<java.lang.Long>
            getChannelIdList() {
          return java.util.Collections.unmodifiableList(channelId_);
        }
        /**
         * <code>repeated int64 channelId = 2;</code>
         *
         * <pre>
         *至少2个不同的广告位id
         * </pre>
         */
        public int getChannelIdCount() {
          return channelId_.size();
        }
        /**
         * <code>repeated int64 channelId = 2;</code>
         *
         * <pre>
         *至少2个不同的广告位id
         * </pre>
         */
        public long getChannelId(int index) {
          return channelId_.get(index);
        }
        /**
         * <code>repeated int64 channelId = 2;</code>
         *
         * <pre>
         *至少2个不同的广告位id
         * </pre>
         */
        public Builder setChannelId(
            int index, long value) {
          ensureChannelIdIsMutable();
          channelId_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int64 channelId = 2;</code>
         *
         * <pre>
         *至少2个不同的广告位id
         * </pre>
         */
        public Builder addChannelId(long value) {
          ensureChannelIdIsMutable();
          channelId_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int64 channelId = 2;</code>
         *
         * <pre>
         *至少2个不同的广告位id
         * </pre>
         */
        public Builder addAllChannelId(
            java.lang.Iterable<? extends java.lang.Long> values) {
          ensureChannelIdIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, channelId_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int64 channelId = 2;</code>
         *
         * <pre>
         *至少2个不同的广告位id
         * </pre>
         */
        public Builder clearChannelId() {
          channelId_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:de.cache.AllyesAds.LinkageChannel)
      }

      static {
        defaultInstance = new LinkageChannel(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:de.cache.AllyesAds.LinkageChannel)
    }

    public interface LinkageSolutionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:de.cache.AllyesAds.LinkageSolution)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int64 linkageGroupId = 1;</code>
       *
       * <pre>
       *联动投放组id
       * </pre>
       */
      boolean hasLinkageGroupId();
      /**
       * <code>optional int64 linkageGroupId = 1;</code>
       *
       * <pre>
       *联动投放组id
       * </pre>
       */
      long getLinkageGroupId();

      /**
       * <code>optional int64 linkageChlGroupId = 2;</code>
       *
       * <pre>
       *联动广告位组id
       * </pre>
       */
      boolean hasLinkageChlGroupId();
      /**
       * <code>optional int64 linkageChlGroupId = 2;</code>
       *
       * <pre>
       *联动广告位组id
       * </pre>
       */
      long getLinkageChlGroupId();

      /**
       * <code>repeated int64 solutionId = 3;</code>
       *
       * <pre>
       *投放id
       * </pre>
       */
      java.util.List<java.lang.Long> getSolutionIdList();
      /**
       * <code>repeated int64 solutionId = 3;</code>
       *
       * <pre>
       *投放id
       * </pre>
       */
      int getSolutionIdCount();
      /**
       * <code>repeated int64 solutionId = 3;</code>
       *
       * <pre>
       *投放id
       * </pre>
       */
      long getSolutionId(int index);
    }
    /**
     * Protobuf type {@code de.cache.AllyesAds.LinkageSolution}
     */
    public static final class LinkageSolution extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:de.cache.AllyesAds.LinkageSolution)
        LinkageSolutionOrBuilder {
      // Use LinkageSolution.newBuilder() to construct.
      private LinkageSolution(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private LinkageSolution(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final LinkageSolution defaultInstance;
      public static LinkageSolution getDefaultInstance() {
        return defaultInstance;
      }

      public LinkageSolution getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private LinkageSolution(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                linkageGroupId_ = input.readInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                linkageChlGroupId_ = input.readInt64();
                break;
              }
              case 24: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  solutionId_ = new java.util.ArrayList<java.lang.Long>();
                  mutable_bitField0_ |= 0x00000004;
                }
                solutionId_.add(input.readInt64());
                break;
              }
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                  solutionId_ = new java.util.ArrayList<java.lang.Long>();
                  mutable_bitField0_ |= 0x00000004;
                }
                while (input.getBytesUntilLimit() > 0) {
                  solutionId_.add(input.readInt64());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            solutionId_ = java.util.Collections.unmodifiableList(solutionId_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_AllyesAds_LinkageSolution_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_AllyesAds_LinkageSolution_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.AllyesAds.LinkageSolution.class, de.cache.DeliveryMessage.AllyesAds.LinkageSolution.Builder.class);
      }

      public static com.google.protobuf.Parser<LinkageSolution> PARSER =
          new com.google.protobuf.AbstractParser<LinkageSolution>() {
        public LinkageSolution parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new LinkageSolution(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<LinkageSolution> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int LINKAGEGROUPID_FIELD_NUMBER = 1;
      private long linkageGroupId_;
      /**
       * <code>optional int64 linkageGroupId = 1;</code>
       *
       * <pre>
       *联动投放组id
       * </pre>
       */
      public boolean hasLinkageGroupId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 linkageGroupId = 1;</code>
       *
       * <pre>
       *联动投放组id
       * </pre>
       */
      public long getLinkageGroupId() {
        return linkageGroupId_;
      }

      public static final int LINKAGECHLGROUPID_FIELD_NUMBER = 2;
      private long linkageChlGroupId_;
      /**
       * <code>optional int64 linkageChlGroupId = 2;</code>
       *
       * <pre>
       *联动广告位组id
       * </pre>
       */
      public boolean hasLinkageChlGroupId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 linkageChlGroupId = 2;</code>
       *
       * <pre>
       *联动广告位组id
       * </pre>
       */
      public long getLinkageChlGroupId() {
        return linkageChlGroupId_;
      }

      public static final int SOLUTIONID_FIELD_NUMBER = 3;
      private java.util.List<java.lang.Long> solutionId_;
      /**
       * <code>repeated int64 solutionId = 3;</code>
       *
       * <pre>
       *投放id
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getSolutionIdList() {
        return solutionId_;
      }
      /**
       * <code>repeated int64 solutionId = 3;</code>
       *
       * <pre>
       *投放id
       * </pre>
       */
      public int getSolutionIdCount() {
        return solutionId_.size();
      }
      /**
       * <code>repeated int64 solutionId = 3;</code>
       *
       * <pre>
       *投放id
       * </pre>
       */
      public long getSolutionId(int index) {
        return solutionId_.get(index);
      }

      private void initFields() {
        linkageGroupId_ = 0L;
        linkageChlGroupId_ = 0L;
        solutionId_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt64(1, linkageGroupId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt64(2, linkageChlGroupId_);
        }
        for (int i = 0; i < solutionId_.size(); i++) {
          output.writeInt64(3, solutionId_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, linkageGroupId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, linkageChlGroupId_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < solutionId_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt64SizeNoTag(solutionId_.get(i));
          }
          size += dataSize;
          size += 1 * getSolutionIdList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static de.cache.DeliveryMessage.AllyesAds.LinkageSolution parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.cache.DeliveryMessage.AllyesAds.LinkageSolution parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.AllyesAds.LinkageSolution parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.cache.DeliveryMessage.AllyesAds.LinkageSolution parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.AllyesAds.LinkageSolution parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.cache.DeliveryMessage.AllyesAds.LinkageSolution parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.AllyesAds.LinkageSolution parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static de.cache.DeliveryMessage.AllyesAds.LinkageSolution parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static de.cache.DeliveryMessage.AllyesAds.LinkageSolution parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.cache.DeliveryMessage.AllyesAds.LinkageSolution parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(de.cache.DeliveryMessage.AllyesAds.LinkageSolution prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code de.cache.AllyesAds.LinkageSolution}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:de.cache.AllyesAds.LinkageSolution)
          de.cache.DeliveryMessage.AllyesAds.LinkageSolutionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return de.cache.DeliveryMessage.internal_static_de_cache_AllyesAds_LinkageSolution_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return de.cache.DeliveryMessage.internal_static_de_cache_AllyesAds_LinkageSolution_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  de.cache.DeliveryMessage.AllyesAds.LinkageSolution.class, de.cache.DeliveryMessage.AllyesAds.LinkageSolution.Builder.class);
        }

        // Construct using de.cache.DeliveryMessage.AllyesAds.LinkageSolution.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          linkageGroupId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          linkageChlGroupId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          solutionId_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return de.cache.DeliveryMessage.internal_static_de_cache_AllyesAds_LinkageSolution_descriptor;
        }

        public de.cache.DeliveryMessage.AllyesAds.LinkageSolution getDefaultInstanceForType() {
          return de.cache.DeliveryMessage.AllyesAds.LinkageSolution.getDefaultInstance();
        }

        public de.cache.DeliveryMessage.AllyesAds.LinkageSolution build() {
          de.cache.DeliveryMessage.AllyesAds.LinkageSolution result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public de.cache.DeliveryMessage.AllyesAds.LinkageSolution buildPartial() {
          de.cache.DeliveryMessage.AllyesAds.LinkageSolution result = new de.cache.DeliveryMessage.AllyesAds.LinkageSolution(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.linkageGroupId_ = linkageGroupId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.linkageChlGroupId_ = linkageChlGroupId_;
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            solutionId_ = java.util.Collections.unmodifiableList(solutionId_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.solutionId_ = solutionId_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof de.cache.DeliveryMessage.AllyesAds.LinkageSolution) {
            return mergeFrom((de.cache.DeliveryMessage.AllyesAds.LinkageSolution)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(de.cache.DeliveryMessage.AllyesAds.LinkageSolution other) {
          if (other == de.cache.DeliveryMessage.AllyesAds.LinkageSolution.getDefaultInstance()) return this;
          if (other.hasLinkageGroupId()) {
            setLinkageGroupId(other.getLinkageGroupId());
          }
          if (other.hasLinkageChlGroupId()) {
            setLinkageChlGroupId(other.getLinkageChlGroupId());
          }
          if (!other.solutionId_.isEmpty()) {
            if (solutionId_.isEmpty()) {
              solutionId_ = other.solutionId_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSolutionIdIsMutable();
              solutionId_.addAll(other.solutionId_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          de.cache.DeliveryMessage.AllyesAds.LinkageSolution parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (de.cache.DeliveryMessage.AllyesAds.LinkageSolution) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long linkageGroupId_ ;
        /**
         * <code>optional int64 linkageGroupId = 1;</code>
         *
         * <pre>
         *联动投放组id
         * </pre>
         */
        public boolean hasLinkageGroupId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int64 linkageGroupId = 1;</code>
         *
         * <pre>
         *联动投放组id
         * </pre>
         */
        public long getLinkageGroupId() {
          return linkageGroupId_;
        }
        /**
         * <code>optional int64 linkageGroupId = 1;</code>
         *
         * <pre>
         *联动投放组id
         * </pre>
         */
        public Builder setLinkageGroupId(long value) {
          bitField0_ |= 0x00000001;
          linkageGroupId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 linkageGroupId = 1;</code>
         *
         * <pre>
         *联动投放组id
         * </pre>
         */
        public Builder clearLinkageGroupId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          linkageGroupId_ = 0L;
          onChanged();
          return this;
        }

        private long linkageChlGroupId_ ;
        /**
         * <code>optional int64 linkageChlGroupId = 2;</code>
         *
         * <pre>
         *联动广告位组id
         * </pre>
         */
        public boolean hasLinkageChlGroupId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int64 linkageChlGroupId = 2;</code>
         *
         * <pre>
         *联动广告位组id
         * </pre>
         */
        public long getLinkageChlGroupId() {
          return linkageChlGroupId_;
        }
        /**
         * <code>optional int64 linkageChlGroupId = 2;</code>
         *
         * <pre>
         *联动广告位组id
         * </pre>
         */
        public Builder setLinkageChlGroupId(long value) {
          bitField0_ |= 0x00000002;
          linkageChlGroupId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 linkageChlGroupId = 2;</code>
         *
         * <pre>
         *联动广告位组id
         * </pre>
         */
        public Builder clearLinkageChlGroupId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          linkageChlGroupId_ = 0L;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Long> solutionId_ = java.util.Collections.emptyList();
        private void ensureSolutionIdIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            solutionId_ = new java.util.ArrayList<java.lang.Long>(solutionId_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated int64 solutionId = 3;</code>
         *
         * <pre>
         *投放id
         * </pre>
         */
        public java.util.List<java.lang.Long>
            getSolutionIdList() {
          return java.util.Collections.unmodifiableList(solutionId_);
        }
        /**
         * <code>repeated int64 solutionId = 3;</code>
         *
         * <pre>
         *投放id
         * </pre>
         */
        public int getSolutionIdCount() {
          return solutionId_.size();
        }
        /**
         * <code>repeated int64 solutionId = 3;</code>
         *
         * <pre>
         *投放id
         * </pre>
         */
        public long getSolutionId(int index) {
          return solutionId_.get(index);
        }
        /**
         * <code>repeated int64 solutionId = 3;</code>
         *
         * <pre>
         *投放id
         * </pre>
         */
        public Builder setSolutionId(
            int index, long value) {
          ensureSolutionIdIsMutable();
          solutionId_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int64 solutionId = 3;</code>
         *
         * <pre>
         *投放id
         * </pre>
         */
        public Builder addSolutionId(long value) {
          ensureSolutionIdIsMutable();
          solutionId_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int64 solutionId = 3;</code>
         *
         * <pre>
         *投放id
         * </pre>
         */
        public Builder addAllSolutionId(
            java.lang.Iterable<? extends java.lang.Long> values) {
          ensureSolutionIdIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, solutionId_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int64 solutionId = 3;</code>
         *
         * <pre>
         *投放id
         * </pre>
         */
        public Builder clearSolutionId() {
          solutionId_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:de.cache.AllyesAds.LinkageSolution)
      }

      static {
        defaultInstance = new LinkageSolution(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:de.cache.AllyesAds.LinkageSolution)
    }

    private int bitField0_;
    public static final int DBNAME_FIELD_NUMBER = 1;
    private java.lang.Object dbName_;
    /**
     * <code>optional string dbName = 1;</code>
     *
     * <pre>
     *数据库名
     * </pre>
     */
    public boolean hasDbName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string dbName = 1;</code>
     *
     * <pre>
     *数据库名
     * </pre>
     */
    public java.lang.String getDbName() {
      java.lang.Object ref = dbName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dbName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string dbName = 1;</code>
     *
     * <pre>
     *数据库名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDbNameBytes() {
      java.lang.Object ref = dbName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dbName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNELFAMILY_FIELD_NUMBER = 2;
    private java.util.List<de.cache.DeliveryMessage.ChannelFamily> channelFamily_;
    /**
     * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
     *
     * <pre>
     *媒体信息(一级媒体圈)
     * </pre>
     */
    public java.util.List<de.cache.DeliveryMessage.ChannelFamily> getChannelFamilyList() {
      return channelFamily_;
    }
    /**
     * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
     *
     * <pre>
     *媒体信息(一级媒体圈)
     * </pre>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.ChannelFamilyOrBuilder> 
        getChannelFamilyOrBuilderList() {
      return channelFamily_;
    }
    /**
     * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
     *
     * <pre>
     *媒体信息(一级媒体圈)
     * </pre>
     */
    public int getChannelFamilyCount() {
      return channelFamily_.size();
    }
    /**
     * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
     *
     * <pre>
     *媒体信息(一级媒体圈)
     * </pre>
     */
    public de.cache.DeliveryMessage.ChannelFamily getChannelFamily(int index) {
      return channelFamily_.get(index);
    }
    /**
     * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
     *
     * <pre>
     *媒体信息(一级媒体圈)
     * </pre>
     */
    public de.cache.DeliveryMessage.ChannelFamilyOrBuilder getChannelFamilyOrBuilder(
        int index) {
      return channelFamily_.get(index);
    }

    public static final int CHANNELPOOL_FIELD_NUMBER = 3;
    private java.util.List<de.cache.DeliveryMessage.ChannelPool> channelPool_;
    /**
     * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
     *
     * <pre>
     *网站信息(二级媒体圈)
     * </pre>
     */
    public java.util.List<de.cache.DeliveryMessage.ChannelPool> getChannelPoolList() {
      return channelPool_;
    }
    /**
     * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
     *
     * <pre>
     *网站信息(二级媒体圈)
     * </pre>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.ChannelPoolOrBuilder> 
        getChannelPoolOrBuilderList() {
      return channelPool_;
    }
    /**
     * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
     *
     * <pre>
     *网站信息(二级媒体圈)
     * </pre>
     */
    public int getChannelPoolCount() {
      return channelPool_.size();
    }
    /**
     * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
     *
     * <pre>
     *网站信息(二级媒体圈)
     * </pre>
     */
    public de.cache.DeliveryMessage.ChannelPool getChannelPool(int index) {
      return channelPool_.get(index);
    }
    /**
     * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
     *
     * <pre>
     *网站信息(二级媒体圈)
     * </pre>
     */
    public de.cache.DeliveryMessage.ChannelPoolOrBuilder getChannelPoolOrBuilder(
        int index) {
      return channelPool_.get(index);
    }

    public static final int CHANNELGROUP_FIELD_NUMBER = 4;
    private java.util.List<de.cache.DeliveryMessage.ChannelGroup> channelGroup_;
    /**
     * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
     *
     * <pre>
     *频道信息(三级媒体圈)
     * </pre>
     */
    public java.util.List<de.cache.DeliveryMessage.ChannelGroup> getChannelGroupList() {
      return channelGroup_;
    }
    /**
     * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
     *
     * <pre>
     *频道信息(三级媒体圈)
     * </pre>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.ChannelGroupOrBuilder> 
        getChannelGroupOrBuilderList() {
      return channelGroup_;
    }
    /**
     * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
     *
     * <pre>
     *频道信息(三级媒体圈)
     * </pre>
     */
    public int getChannelGroupCount() {
      return channelGroup_.size();
    }
    /**
     * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
     *
     * <pre>
     *频道信息(三级媒体圈)
     * </pre>
     */
    public de.cache.DeliveryMessage.ChannelGroup getChannelGroup(int index) {
      return channelGroup_.get(index);
    }
    /**
     * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
     *
     * <pre>
     *频道信息(三级媒体圈)
     * </pre>
     */
    public de.cache.DeliveryMessage.ChannelGroupOrBuilder getChannelGroupOrBuilder(
        int index) {
      return channelGroup_.get(index);
    }

    public static final int CHANNEL_FIELD_NUMBER = 5;
    private java.util.List<de.cache.DeliveryMessage.Channel> channel_;
    /**
     * <code>repeated .de.cache.Channel channel = 5;</code>
     *
     * <pre>
     *广告位信息
     * </pre>
     */
    public java.util.List<de.cache.DeliveryMessage.Channel> getChannelList() {
      return channel_;
    }
    /**
     * <code>repeated .de.cache.Channel channel = 5;</code>
     *
     * <pre>
     *广告位信息
     * </pre>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.ChannelOrBuilder> 
        getChannelOrBuilderList() {
      return channel_;
    }
    /**
     * <code>repeated .de.cache.Channel channel = 5;</code>
     *
     * <pre>
     *广告位信息
     * </pre>
     */
    public int getChannelCount() {
      return channel_.size();
    }
    /**
     * <code>repeated .de.cache.Channel channel = 5;</code>
     *
     * <pre>
     *广告位信息
     * </pre>
     */
    public de.cache.DeliveryMessage.Channel getChannel(int index) {
      return channel_.get(index);
    }
    /**
     * <code>repeated .de.cache.Channel channel = 5;</code>
     *
     * <pre>
     *广告位信息
     * </pre>
     */
    public de.cache.DeliveryMessage.ChannelOrBuilder getChannelOrBuilder(
        int index) {
      return channel_.get(index);
    }

    public static final int AGENCY_FIELD_NUMBER = 6;
    private java.util.List<de.cache.DeliveryMessage.Agency> agency_;
    /**
     * <code>repeated .de.cache.Agency agency = 6;</code>
     *
     * <pre>
     *代理商信息
     * </pre>
     */
    public java.util.List<de.cache.DeliveryMessage.Agency> getAgencyList() {
      return agency_;
    }
    /**
     * <code>repeated .de.cache.Agency agency = 6;</code>
     *
     * <pre>
     *代理商信息
     * </pre>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.AgencyOrBuilder> 
        getAgencyOrBuilderList() {
      return agency_;
    }
    /**
     * <code>repeated .de.cache.Agency agency = 6;</code>
     *
     * <pre>
     *代理商信息
     * </pre>
     */
    public int getAgencyCount() {
      return agency_.size();
    }
    /**
     * <code>repeated .de.cache.Agency agency = 6;</code>
     *
     * <pre>
     *代理商信息
     * </pre>
     */
    public de.cache.DeliveryMessage.Agency getAgency(int index) {
      return agency_.get(index);
    }
    /**
     * <code>repeated .de.cache.Agency agency = 6;</code>
     *
     * <pre>
     *代理商信息
     * </pre>
     */
    public de.cache.DeliveryMessage.AgencyOrBuilder getAgencyOrBuilder(
        int index) {
      return agency_.get(index);
    }

    public static final int ADVERTISER_FIELD_NUMBER = 7;
    private java.util.List<de.cache.DeliveryMessage.Advertiser> advertiser_;
    /**
     * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
     *
     * <pre>
     *广告主信息
     * </pre>
     */
    public java.util.List<de.cache.DeliveryMessage.Advertiser> getAdvertiserList() {
      return advertiser_;
    }
    /**
     * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
     *
     * <pre>
     *广告主信息
     * </pre>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.AdvertiserOrBuilder> 
        getAdvertiserOrBuilderList() {
      return advertiser_;
    }
    /**
     * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
     *
     * <pre>
     *广告主信息
     * </pre>
     */
    public int getAdvertiserCount() {
      return advertiser_.size();
    }
    /**
     * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
     *
     * <pre>
     *广告主信息
     * </pre>
     */
    public de.cache.DeliveryMessage.Advertiser getAdvertiser(int index) {
      return advertiser_.get(index);
    }
    /**
     * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
     *
     * <pre>
     *广告主信息
     * </pre>
     */
    public de.cache.DeliveryMessage.AdvertiserOrBuilder getAdvertiserOrBuilder(
        int index) {
      return advertiser_.get(index);
    }

    public static final int ORDER_FIELD_NUMBER = 8;
    private java.util.List<de.cache.DeliveryMessage.Order> order_;
    /**
     * <code>repeated .de.cache.Order order = 8;</code>
     *
     * <pre>
     *订单信息
     * </pre>
     */
    public java.util.List<de.cache.DeliveryMessage.Order> getOrderList() {
      return order_;
    }
    /**
     * <code>repeated .de.cache.Order order = 8;</code>
     *
     * <pre>
     *订单信息
     * </pre>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.OrderOrBuilder> 
        getOrderOrBuilderList() {
      return order_;
    }
    /**
     * <code>repeated .de.cache.Order order = 8;</code>
     *
     * <pre>
     *订单信息
     * </pre>
     */
    public int getOrderCount() {
      return order_.size();
    }
    /**
     * <code>repeated .de.cache.Order order = 8;</code>
     *
     * <pre>
     *订单信息
     * </pre>
     */
    public de.cache.DeliveryMessage.Order getOrder(int index) {
      return order_.get(index);
    }
    /**
     * <code>repeated .de.cache.Order order = 8;</code>
     *
     * <pre>
     *订单信息
     * </pre>
     */
    public de.cache.DeliveryMessage.OrderOrBuilder getOrderOrBuilder(
        int index) {
      return order_.get(index);
    }

    public static final int SOLUTION_FIELD_NUMBER = 9;
    private java.util.List<de.cache.DeliveryMessage.Solution> solution_;
    /**
     * <code>repeated .de.cache.Solution solution = 9;</code>
     *
     * <pre>
     *投放信息
     * </pre>
     */
    public java.util.List<de.cache.DeliveryMessage.Solution> getSolutionList() {
      return solution_;
    }
    /**
     * <code>repeated .de.cache.Solution solution = 9;</code>
     *
     * <pre>
     *投放信息
     * </pre>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.SolutionOrBuilder> 
        getSolutionOrBuilderList() {
      return solution_;
    }
    /**
     * <code>repeated .de.cache.Solution solution = 9;</code>
     *
     * <pre>
     *投放信息
     * </pre>
     */
    public int getSolutionCount() {
      return solution_.size();
    }
    /**
     * <code>repeated .de.cache.Solution solution = 9;</code>
     *
     * <pre>
     *投放信息
     * </pre>
     */
    public de.cache.DeliveryMessage.Solution getSolution(int index) {
      return solution_.get(index);
    }
    /**
     * <code>repeated .de.cache.Solution solution = 9;</code>
     *
     * <pre>
     *投放信息
     * </pre>
     */
    public de.cache.DeliveryMessage.SolutionOrBuilder getSolutionOrBuilder(
        int index) {
      return solution_.get(index);
    }

    public static final int BANNER_FIELD_NUMBER = 10;
    private java.util.List<de.cache.DeliveryMessage.Banner> banner_;
    /**
     * <code>repeated .de.cache.Banner banner = 10;</code>
     *
     * <pre>
     *创意信息
     * </pre>
     */
    public java.util.List<de.cache.DeliveryMessage.Banner> getBannerList() {
      return banner_;
    }
    /**
     * <code>repeated .de.cache.Banner banner = 10;</code>
     *
     * <pre>
     *创意信息
     * </pre>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.BannerOrBuilder> 
        getBannerOrBuilderList() {
      return banner_;
    }
    /**
     * <code>repeated .de.cache.Banner banner = 10;</code>
     *
     * <pre>
     *创意信息
     * </pre>
     */
    public int getBannerCount() {
      return banner_.size();
    }
    /**
     * <code>repeated .de.cache.Banner banner = 10;</code>
     *
     * <pre>
     *创意信息
     * </pre>
     */
    public de.cache.DeliveryMessage.Banner getBanner(int index) {
      return banner_.get(index);
    }
    /**
     * <code>repeated .de.cache.Banner banner = 10;</code>
     *
     * <pre>
     *创意信息
     * </pre>
     */
    public de.cache.DeliveryMessage.BannerOrBuilder getBannerOrBuilder(
        int index) {
      return banner_.get(index);
    }

    public static final int DBCONFIG_FIELD_NUMBER = 11;
    private de.cache.DeliveryMessage.DbConfig dbConfig_;
    /**
     * <code>optional .de.cache.DbConfig dbConfig = 11;</code>
     *
     * <pre>
     *全局配置信息
     * </pre>
     */
    public boolean hasDbConfig() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .de.cache.DbConfig dbConfig = 11;</code>
     *
     * <pre>
     *全局配置信息
     * </pre>
     */
    public de.cache.DeliveryMessage.DbConfig getDbConfig() {
      return dbConfig_;
    }
    /**
     * <code>optional .de.cache.DbConfig dbConfig = 11;</code>
     *
     * <pre>
     *全局配置信息
     * </pre>
     */
    public de.cache.DeliveryMessage.DbConfigOrBuilder getDbConfigOrBuilder() {
      return dbConfig_;
    }

    public static final int LINKAGECHANNEL_FIELD_NUMBER = 12;
    private java.util.List<de.cache.DeliveryMessage.AllyesAds.LinkageChannel> linkageChannel_;
    /**
     * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
     */
    public java.util.List<de.cache.DeliveryMessage.AllyesAds.LinkageChannel> getLinkageChannelList() {
      return linkageChannel_;
    }
    /**
     * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.AllyesAds.LinkageChannelOrBuilder> 
        getLinkageChannelOrBuilderList() {
      return linkageChannel_;
    }
    /**
     * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
     */
    public int getLinkageChannelCount() {
      return linkageChannel_.size();
    }
    /**
     * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
     */
    public de.cache.DeliveryMessage.AllyesAds.LinkageChannel getLinkageChannel(int index) {
      return linkageChannel_.get(index);
    }
    /**
     * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
     */
    public de.cache.DeliveryMessage.AllyesAds.LinkageChannelOrBuilder getLinkageChannelOrBuilder(
        int index) {
      return linkageChannel_.get(index);
    }

    public static final int LINKAGESOLUTION_FIELD_NUMBER = 13;
    private java.util.List<de.cache.DeliveryMessage.AllyesAds.LinkageSolution> linkageSolution_;
    /**
     * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
     */
    public java.util.List<de.cache.DeliveryMessage.AllyesAds.LinkageSolution> getLinkageSolutionList() {
      return linkageSolution_;
    }
    /**
     * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.AllyesAds.LinkageSolutionOrBuilder> 
        getLinkageSolutionOrBuilderList() {
      return linkageSolution_;
    }
    /**
     * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
     */
    public int getLinkageSolutionCount() {
      return linkageSolution_.size();
    }
    /**
     * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
     */
    public de.cache.DeliveryMessage.AllyesAds.LinkageSolution getLinkageSolution(int index) {
      return linkageSolution_.get(index);
    }
    /**
     * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
     */
    public de.cache.DeliveryMessage.AllyesAds.LinkageSolutionOrBuilder getLinkageSolutionOrBuilder(
        int index) {
      return linkageSolution_.get(index);
    }

    public static final int TPLFILE_FIELD_NUMBER = 14;
    private java.util.List<de.cache.DeliveryMessage.CacheFile> tplFile_;
    /**
     * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
     *
     * <pre>
     *模板文件
     * </pre>
     */
    public java.util.List<de.cache.DeliveryMessage.CacheFile> getTplFileList() {
      return tplFile_;
    }
    /**
     * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
     *
     * <pre>
     *模板文件
     * </pre>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.CacheFileOrBuilder> 
        getTplFileOrBuilderList() {
      return tplFile_;
    }
    /**
     * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
     *
     * <pre>
     *模板文件
     * </pre>
     */
    public int getTplFileCount() {
      return tplFile_.size();
    }
    /**
     * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
     *
     * <pre>
     *模板文件
     * </pre>
     */
    public de.cache.DeliveryMessage.CacheFile getTplFile(int index) {
      return tplFile_.get(index);
    }
    /**
     * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
     *
     * <pre>
     *模板文件
     * </pre>
     */
    public de.cache.DeliveryMessage.CacheFileOrBuilder getTplFileOrBuilder(
        int index) {
      return tplFile_.get(index);
    }

    public static final int OTHERFEATURES_FIELD_NUMBER = 15;
    private java.util.List<de.cache.DeliveryMessage.CacheFile> otherFeatures_;
    /**
     * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
     *
     * <pre>
     *其他功能文件
     * </pre>
     */
    public java.util.List<de.cache.DeliveryMessage.CacheFile> getOtherFeaturesList() {
      return otherFeatures_;
    }
    /**
     * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
     *
     * <pre>
     *其他功能文件
     * </pre>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.CacheFileOrBuilder> 
        getOtherFeaturesOrBuilderList() {
      return otherFeatures_;
    }
    /**
     * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
     *
     * <pre>
     *其他功能文件
     * </pre>
     */
    public int getOtherFeaturesCount() {
      return otherFeatures_.size();
    }
    /**
     * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
     *
     * <pre>
     *其他功能文件
     * </pre>
     */
    public de.cache.DeliveryMessage.CacheFile getOtherFeatures(int index) {
      return otherFeatures_.get(index);
    }
    /**
     * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
     *
     * <pre>
     *其他功能文件
     * </pre>
     */
    public de.cache.DeliveryMessage.CacheFileOrBuilder getOtherFeaturesOrBuilder(
        int index) {
      return otherFeatures_.get(index);
    }

    public static final int IPLIB_FIELD_NUMBER = 16;
    private de.cache.DeliveryMessage.CacheFile iPlib_;
    /**
     * <code>optional .de.cache.CacheFile IPlib = 16;</code>
     *
     * <pre>
     *IP库文件，与DB伴随，不同DB可以设置不一样IP库
     * </pre>
     */
    public boolean hasIPlib() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .de.cache.CacheFile IPlib = 16;</code>
     *
     * <pre>
     *IP库文件，与DB伴随，不同DB可以设置不一样IP库
     * </pre>
     */
    public de.cache.DeliveryMessage.CacheFile getIPlib() {
      return iPlib_;
    }
    /**
     * <code>optional .de.cache.CacheFile IPlib = 16;</code>
     *
     * <pre>
     *IP库文件，与DB伴随，不同DB可以设置不一样IP库
     * </pre>
     */
    public de.cache.DeliveryMessage.CacheFileOrBuilder getIPlibOrBuilder() {
      return iPlib_;
    }

    public static final int BESSETING_FIELD_NUMBER = 17;
    private java.util.List<de.cache.DeliveryMessage.BesPublisherSettings> besSeting_;
    /**
     * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
     *
     * <pre>
     *bes publisher setting list
     * </pre>
     */
    public java.util.List<de.cache.DeliveryMessage.BesPublisherSettings> getBesSetingList() {
      return besSeting_;
    }
    /**
     * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
     *
     * <pre>
     *bes publisher setting list
     * </pre>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.BesPublisherSettingsOrBuilder> 
        getBesSetingOrBuilderList() {
      return besSeting_;
    }
    /**
     * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
     *
     * <pre>
     *bes publisher setting list
     * </pre>
     */
    public int getBesSetingCount() {
      return besSeting_.size();
    }
    /**
     * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
     *
     * <pre>
     *bes publisher setting list
     * </pre>
     */
    public de.cache.DeliveryMessage.BesPublisherSettings getBesSeting(int index) {
      return besSeting_.get(index);
    }
    /**
     * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
     *
     * <pre>
     *bes publisher setting list
     * </pre>
     */
    public de.cache.DeliveryMessage.BesPublisherSettingsOrBuilder getBesSetingOrBuilder(
        int index) {
      return besSeting_.get(index);
    }

    public static final int MAX_ADSOLT_LEVEL_FIELD_NUMBER = 18;
    private java.util.List<de.cache.DeliveryMessage.MaxAdsoltLevel> maxAdsoltLevel_;
    /**
     * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
     *
     * <pre>
     *max adsolt level list
     * </pre>
     */
    public java.util.List<de.cache.DeliveryMessage.MaxAdsoltLevel> getMaxAdsoltLevelList() {
      return maxAdsoltLevel_;
    }
    /**
     * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
     *
     * <pre>
     *max adsolt level list
     * </pre>
     */
    public java.util.List<? extends de.cache.DeliveryMessage.MaxAdsoltLevelOrBuilder> 
        getMaxAdsoltLevelOrBuilderList() {
      return maxAdsoltLevel_;
    }
    /**
     * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
     *
     * <pre>
     *max adsolt level list
     * </pre>
     */
    public int getMaxAdsoltLevelCount() {
      return maxAdsoltLevel_.size();
    }
    /**
     * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
     *
     * <pre>
     *max adsolt level list
     * </pre>
     */
    public de.cache.DeliveryMessage.MaxAdsoltLevel getMaxAdsoltLevel(int index) {
      return maxAdsoltLevel_.get(index);
    }
    /**
     * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
     *
     * <pre>
     *max adsolt level list
     * </pre>
     */
    public de.cache.DeliveryMessage.MaxAdsoltLevelOrBuilder getMaxAdsoltLevelOrBuilder(
        int index) {
      return maxAdsoltLevel_.get(index);
    }

    private void initFields() {
      dbName_ = "";
      channelFamily_ = java.util.Collections.emptyList();
      channelPool_ = java.util.Collections.emptyList();
      channelGroup_ = java.util.Collections.emptyList();
      channel_ = java.util.Collections.emptyList();
      agency_ = java.util.Collections.emptyList();
      advertiser_ = java.util.Collections.emptyList();
      order_ = java.util.Collections.emptyList();
      solution_ = java.util.Collections.emptyList();
      banner_ = java.util.Collections.emptyList();
      dbConfig_ = de.cache.DeliveryMessage.DbConfig.getDefaultInstance();
      linkageChannel_ = java.util.Collections.emptyList();
      linkageSolution_ = java.util.Collections.emptyList();
      tplFile_ = java.util.Collections.emptyList();
      otherFeatures_ = java.util.Collections.emptyList();
      iPlib_ = de.cache.DeliveryMessage.CacheFile.getDefaultInstance();
      besSeting_ = java.util.Collections.emptyList();
      maxAdsoltLevel_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getAdvertiserCount(); i++) {
        if (!getAdvertiser(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getSolutionCount(); i++) {
        if (!getSolution(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasDbConfig()) {
        if (!getDbConfig().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getBesSetingCount(); i++) {
        if (!getBesSeting(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getMaxAdsoltLevelCount(); i++) {
        if (!getMaxAdsoltLevel(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDbNameBytes());
      }
      for (int i = 0; i < channelFamily_.size(); i++) {
        output.writeMessage(2, channelFamily_.get(i));
      }
      for (int i = 0; i < channelPool_.size(); i++) {
        output.writeMessage(3, channelPool_.get(i));
      }
      for (int i = 0; i < channelGroup_.size(); i++) {
        output.writeMessage(4, channelGroup_.get(i));
      }
      for (int i = 0; i < channel_.size(); i++) {
        output.writeMessage(5, channel_.get(i));
      }
      for (int i = 0; i < agency_.size(); i++) {
        output.writeMessage(6, agency_.get(i));
      }
      for (int i = 0; i < advertiser_.size(); i++) {
        output.writeMessage(7, advertiser_.get(i));
      }
      for (int i = 0; i < order_.size(); i++) {
        output.writeMessage(8, order_.get(i));
      }
      for (int i = 0; i < solution_.size(); i++) {
        output.writeMessage(9, solution_.get(i));
      }
      for (int i = 0; i < banner_.size(); i++) {
        output.writeMessage(10, banner_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(11, dbConfig_);
      }
      for (int i = 0; i < linkageChannel_.size(); i++) {
        output.writeMessage(12, linkageChannel_.get(i));
      }
      for (int i = 0; i < linkageSolution_.size(); i++) {
        output.writeMessage(13, linkageSolution_.get(i));
      }
      for (int i = 0; i < tplFile_.size(); i++) {
        output.writeMessage(14, tplFile_.get(i));
      }
      for (int i = 0; i < otherFeatures_.size(); i++) {
        output.writeMessage(15, otherFeatures_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(16, iPlib_);
      }
      for (int i = 0; i < besSeting_.size(); i++) {
        output.writeMessage(17, besSeting_.get(i));
      }
      for (int i = 0; i < maxAdsoltLevel_.size(); i++) {
        output.writeMessage(18, maxAdsoltLevel_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDbNameBytes());
      }
      for (int i = 0; i < channelFamily_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, channelFamily_.get(i));
      }
      for (int i = 0; i < channelPool_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, channelPool_.get(i));
      }
      for (int i = 0; i < channelGroup_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, channelGroup_.get(i));
      }
      for (int i = 0; i < channel_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, channel_.get(i));
      }
      for (int i = 0; i < agency_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, agency_.get(i));
      }
      for (int i = 0; i < advertiser_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, advertiser_.get(i));
      }
      for (int i = 0; i < order_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, order_.get(i));
      }
      for (int i = 0; i < solution_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, solution_.get(i));
      }
      for (int i = 0; i < banner_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, banner_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, dbConfig_);
      }
      for (int i = 0; i < linkageChannel_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, linkageChannel_.get(i));
      }
      for (int i = 0; i < linkageSolution_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, linkageSolution_.get(i));
      }
      for (int i = 0; i < tplFile_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, tplFile_.get(i));
      }
      for (int i = 0; i < otherFeatures_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, otherFeatures_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, iPlib_);
      }
      for (int i = 0; i < besSeting_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, besSeting_.get(i));
      }
      for (int i = 0; i < maxAdsoltLevel_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, maxAdsoltLevel_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.cache.DeliveryMessage.AllyesAds parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.AllyesAds parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.AllyesAds parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.cache.DeliveryMessage.AllyesAds parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.AllyesAds parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.AllyesAds parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.AllyesAds parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.cache.DeliveryMessage.AllyesAds parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.cache.DeliveryMessage.AllyesAds parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.cache.DeliveryMessage.AllyesAds parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.cache.DeliveryMessage.AllyesAds prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code de.cache.AllyesAds}
     *
     * <pre>
     *消息主体
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:de.cache.AllyesAds)
        de.cache.DeliveryMessage.AllyesAdsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.cache.DeliveryMessage.internal_static_de_cache_AllyesAds_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.cache.DeliveryMessage.internal_static_de_cache_AllyesAds_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.cache.DeliveryMessage.AllyesAds.class, de.cache.DeliveryMessage.AllyesAds.Builder.class);
      }

      // Construct using de.cache.DeliveryMessage.AllyesAds.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getChannelFamilyFieldBuilder();
          getChannelPoolFieldBuilder();
          getChannelGroupFieldBuilder();
          getChannelFieldBuilder();
          getAgencyFieldBuilder();
          getAdvertiserFieldBuilder();
          getOrderFieldBuilder();
          getSolutionFieldBuilder();
          getBannerFieldBuilder();
          getDbConfigFieldBuilder();
          getLinkageChannelFieldBuilder();
          getLinkageSolutionFieldBuilder();
          getTplFileFieldBuilder();
          getOtherFeaturesFieldBuilder();
          getIPlibFieldBuilder();
          getBesSetingFieldBuilder();
          getMaxAdsoltLevelFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        dbName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (channelFamilyBuilder_ == null) {
          channelFamily_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          channelFamilyBuilder_.clear();
        }
        if (channelPoolBuilder_ == null) {
          channelPool_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          channelPoolBuilder_.clear();
        }
        if (channelGroupBuilder_ == null) {
          channelGroup_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          channelGroupBuilder_.clear();
        }
        if (channelBuilder_ == null) {
          channel_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          channelBuilder_.clear();
        }
        if (agencyBuilder_ == null) {
          agency_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          agencyBuilder_.clear();
        }
        if (advertiserBuilder_ == null) {
          advertiser_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          advertiserBuilder_.clear();
        }
        if (orderBuilder_ == null) {
          order_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          orderBuilder_.clear();
        }
        if (solutionBuilder_ == null) {
          solution_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          solutionBuilder_.clear();
        }
        if (bannerBuilder_ == null) {
          banner_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          bannerBuilder_.clear();
        }
        if (dbConfigBuilder_ == null) {
          dbConfig_ = de.cache.DeliveryMessage.DbConfig.getDefaultInstance();
        } else {
          dbConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (linkageChannelBuilder_ == null) {
          linkageChannel_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          linkageChannelBuilder_.clear();
        }
        if (linkageSolutionBuilder_ == null) {
          linkageSolution_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          linkageSolutionBuilder_.clear();
        }
        if (tplFileBuilder_ == null) {
          tplFile_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          tplFileBuilder_.clear();
        }
        if (otherFeaturesBuilder_ == null) {
          otherFeatures_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          otherFeaturesBuilder_.clear();
        }
        if (iPlibBuilder_ == null) {
          iPlib_ = de.cache.DeliveryMessage.CacheFile.getDefaultInstance();
        } else {
          iPlibBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        if (besSetingBuilder_ == null) {
          besSeting_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
        } else {
          besSetingBuilder_.clear();
        }
        if (maxAdsoltLevelBuilder_ == null) {
          maxAdsoltLevel_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
        } else {
          maxAdsoltLevelBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.cache.DeliveryMessage.internal_static_de_cache_AllyesAds_descriptor;
      }

      public de.cache.DeliveryMessage.AllyesAds getDefaultInstanceForType() {
        return de.cache.DeliveryMessage.AllyesAds.getDefaultInstance();
      }

      public de.cache.DeliveryMessage.AllyesAds build() {
        de.cache.DeliveryMessage.AllyesAds result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.cache.DeliveryMessage.AllyesAds buildPartial() {
        de.cache.DeliveryMessage.AllyesAds result = new de.cache.DeliveryMessage.AllyesAds(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dbName_ = dbName_;
        if (channelFamilyBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            channelFamily_ = java.util.Collections.unmodifiableList(channelFamily_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.channelFamily_ = channelFamily_;
        } else {
          result.channelFamily_ = channelFamilyBuilder_.build();
        }
        if (channelPoolBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            channelPool_ = java.util.Collections.unmodifiableList(channelPool_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.channelPool_ = channelPool_;
        } else {
          result.channelPool_ = channelPoolBuilder_.build();
        }
        if (channelGroupBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            channelGroup_ = java.util.Collections.unmodifiableList(channelGroup_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.channelGroup_ = channelGroup_;
        } else {
          result.channelGroup_ = channelGroupBuilder_.build();
        }
        if (channelBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            channel_ = java.util.Collections.unmodifiableList(channel_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.channel_ = channel_;
        } else {
          result.channel_ = channelBuilder_.build();
        }
        if (agencyBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            agency_ = java.util.Collections.unmodifiableList(agency_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.agency_ = agency_;
        } else {
          result.agency_ = agencyBuilder_.build();
        }
        if (advertiserBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            advertiser_ = java.util.Collections.unmodifiableList(advertiser_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.advertiser_ = advertiser_;
        } else {
          result.advertiser_ = advertiserBuilder_.build();
        }
        if (orderBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            order_ = java.util.Collections.unmodifiableList(order_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.order_ = order_;
        } else {
          result.order_ = orderBuilder_.build();
        }
        if (solutionBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            solution_ = java.util.Collections.unmodifiableList(solution_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.solution_ = solution_;
        } else {
          result.solution_ = solutionBuilder_.build();
        }
        if (bannerBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            banner_ = java.util.Collections.unmodifiableList(banner_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.banner_ = banner_;
        } else {
          result.banner_ = bannerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000002;
        }
        if (dbConfigBuilder_ == null) {
          result.dbConfig_ = dbConfig_;
        } else {
          result.dbConfig_ = dbConfigBuilder_.build();
        }
        if (linkageChannelBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            linkageChannel_ = java.util.Collections.unmodifiableList(linkageChannel_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.linkageChannel_ = linkageChannel_;
        } else {
          result.linkageChannel_ = linkageChannelBuilder_.build();
        }
        if (linkageSolutionBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            linkageSolution_ = java.util.Collections.unmodifiableList(linkageSolution_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.linkageSolution_ = linkageSolution_;
        } else {
          result.linkageSolution_ = linkageSolutionBuilder_.build();
        }
        if (tplFileBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            tplFile_ = java.util.Collections.unmodifiableList(tplFile_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.tplFile_ = tplFile_;
        } else {
          result.tplFile_ = tplFileBuilder_.build();
        }
        if (otherFeaturesBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            otherFeatures_ = java.util.Collections.unmodifiableList(otherFeatures_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.otherFeatures_ = otherFeatures_;
        } else {
          result.otherFeatures_ = otherFeaturesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000004;
        }
        if (iPlibBuilder_ == null) {
          result.iPlib_ = iPlib_;
        } else {
          result.iPlib_ = iPlibBuilder_.build();
        }
        if (besSetingBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000)) {
            besSeting_ = java.util.Collections.unmodifiableList(besSeting_);
            bitField0_ = (bitField0_ & ~0x00010000);
          }
          result.besSeting_ = besSeting_;
        } else {
          result.besSeting_ = besSetingBuilder_.build();
        }
        if (maxAdsoltLevelBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000)) {
            maxAdsoltLevel_ = java.util.Collections.unmodifiableList(maxAdsoltLevel_);
            bitField0_ = (bitField0_ & ~0x00020000);
          }
          result.maxAdsoltLevel_ = maxAdsoltLevel_;
        } else {
          result.maxAdsoltLevel_ = maxAdsoltLevelBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.cache.DeliveryMessage.AllyesAds) {
          return mergeFrom((de.cache.DeliveryMessage.AllyesAds)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.cache.DeliveryMessage.AllyesAds other) {
        if (other == de.cache.DeliveryMessage.AllyesAds.getDefaultInstance()) return this;
        if (other.hasDbName()) {
          bitField0_ |= 0x00000001;
          dbName_ = other.dbName_;
          onChanged();
        }
        if (channelFamilyBuilder_ == null) {
          if (!other.channelFamily_.isEmpty()) {
            if (channelFamily_.isEmpty()) {
              channelFamily_ = other.channelFamily_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureChannelFamilyIsMutable();
              channelFamily_.addAll(other.channelFamily_);
            }
            onChanged();
          }
        } else {
          if (!other.channelFamily_.isEmpty()) {
            if (channelFamilyBuilder_.isEmpty()) {
              channelFamilyBuilder_.dispose();
              channelFamilyBuilder_ = null;
              channelFamily_ = other.channelFamily_;
              bitField0_ = (bitField0_ & ~0x00000002);
              channelFamilyBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getChannelFamilyFieldBuilder() : null;
            } else {
              channelFamilyBuilder_.addAllMessages(other.channelFamily_);
            }
          }
        }
        if (channelPoolBuilder_ == null) {
          if (!other.channelPool_.isEmpty()) {
            if (channelPool_.isEmpty()) {
              channelPool_ = other.channelPool_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureChannelPoolIsMutable();
              channelPool_.addAll(other.channelPool_);
            }
            onChanged();
          }
        } else {
          if (!other.channelPool_.isEmpty()) {
            if (channelPoolBuilder_.isEmpty()) {
              channelPoolBuilder_.dispose();
              channelPoolBuilder_ = null;
              channelPool_ = other.channelPool_;
              bitField0_ = (bitField0_ & ~0x00000004);
              channelPoolBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getChannelPoolFieldBuilder() : null;
            } else {
              channelPoolBuilder_.addAllMessages(other.channelPool_);
            }
          }
        }
        if (channelGroupBuilder_ == null) {
          if (!other.channelGroup_.isEmpty()) {
            if (channelGroup_.isEmpty()) {
              channelGroup_ = other.channelGroup_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureChannelGroupIsMutable();
              channelGroup_.addAll(other.channelGroup_);
            }
            onChanged();
          }
        } else {
          if (!other.channelGroup_.isEmpty()) {
            if (channelGroupBuilder_.isEmpty()) {
              channelGroupBuilder_.dispose();
              channelGroupBuilder_ = null;
              channelGroup_ = other.channelGroup_;
              bitField0_ = (bitField0_ & ~0x00000008);
              channelGroupBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getChannelGroupFieldBuilder() : null;
            } else {
              channelGroupBuilder_.addAllMessages(other.channelGroup_);
            }
          }
        }
        if (channelBuilder_ == null) {
          if (!other.channel_.isEmpty()) {
            if (channel_.isEmpty()) {
              channel_ = other.channel_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureChannelIsMutable();
              channel_.addAll(other.channel_);
            }
            onChanged();
          }
        } else {
          if (!other.channel_.isEmpty()) {
            if (channelBuilder_.isEmpty()) {
              channelBuilder_.dispose();
              channelBuilder_ = null;
              channel_ = other.channel_;
              bitField0_ = (bitField0_ & ~0x00000010);
              channelBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getChannelFieldBuilder() : null;
            } else {
              channelBuilder_.addAllMessages(other.channel_);
            }
          }
        }
        if (agencyBuilder_ == null) {
          if (!other.agency_.isEmpty()) {
            if (agency_.isEmpty()) {
              agency_ = other.agency_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureAgencyIsMutable();
              agency_.addAll(other.agency_);
            }
            onChanged();
          }
        } else {
          if (!other.agency_.isEmpty()) {
            if (agencyBuilder_.isEmpty()) {
              agencyBuilder_.dispose();
              agencyBuilder_ = null;
              agency_ = other.agency_;
              bitField0_ = (bitField0_ & ~0x00000020);
              agencyBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAgencyFieldBuilder() : null;
            } else {
              agencyBuilder_.addAllMessages(other.agency_);
            }
          }
        }
        if (advertiserBuilder_ == null) {
          if (!other.advertiser_.isEmpty()) {
            if (advertiser_.isEmpty()) {
              advertiser_ = other.advertiser_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureAdvertiserIsMutable();
              advertiser_.addAll(other.advertiser_);
            }
            onChanged();
          }
        } else {
          if (!other.advertiser_.isEmpty()) {
            if (advertiserBuilder_.isEmpty()) {
              advertiserBuilder_.dispose();
              advertiserBuilder_ = null;
              advertiser_ = other.advertiser_;
              bitField0_ = (bitField0_ & ~0x00000040);
              advertiserBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAdvertiserFieldBuilder() : null;
            } else {
              advertiserBuilder_.addAllMessages(other.advertiser_);
            }
          }
        }
        if (orderBuilder_ == null) {
          if (!other.order_.isEmpty()) {
            if (order_.isEmpty()) {
              order_ = other.order_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureOrderIsMutable();
              order_.addAll(other.order_);
            }
            onChanged();
          }
        } else {
          if (!other.order_.isEmpty()) {
            if (orderBuilder_.isEmpty()) {
              orderBuilder_.dispose();
              orderBuilder_ = null;
              order_ = other.order_;
              bitField0_ = (bitField0_ & ~0x00000080);
              orderBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOrderFieldBuilder() : null;
            } else {
              orderBuilder_.addAllMessages(other.order_);
            }
          }
        }
        if (solutionBuilder_ == null) {
          if (!other.solution_.isEmpty()) {
            if (solution_.isEmpty()) {
              solution_ = other.solution_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureSolutionIsMutable();
              solution_.addAll(other.solution_);
            }
            onChanged();
          }
        } else {
          if (!other.solution_.isEmpty()) {
            if (solutionBuilder_.isEmpty()) {
              solutionBuilder_.dispose();
              solutionBuilder_ = null;
              solution_ = other.solution_;
              bitField0_ = (bitField0_ & ~0x00000100);
              solutionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSolutionFieldBuilder() : null;
            } else {
              solutionBuilder_.addAllMessages(other.solution_);
            }
          }
        }
        if (bannerBuilder_ == null) {
          if (!other.banner_.isEmpty()) {
            if (banner_.isEmpty()) {
              banner_ = other.banner_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureBannerIsMutable();
              banner_.addAll(other.banner_);
            }
            onChanged();
          }
        } else {
          if (!other.banner_.isEmpty()) {
            if (bannerBuilder_.isEmpty()) {
              bannerBuilder_.dispose();
              bannerBuilder_ = null;
              banner_ = other.banner_;
              bitField0_ = (bitField0_ & ~0x00000200);
              bannerBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBannerFieldBuilder() : null;
            } else {
              bannerBuilder_.addAllMessages(other.banner_);
            }
          }
        }
        if (other.hasDbConfig()) {
          mergeDbConfig(other.getDbConfig());
        }
        if (linkageChannelBuilder_ == null) {
          if (!other.linkageChannel_.isEmpty()) {
            if (linkageChannel_.isEmpty()) {
              linkageChannel_ = other.linkageChannel_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureLinkageChannelIsMutable();
              linkageChannel_.addAll(other.linkageChannel_);
            }
            onChanged();
          }
        } else {
          if (!other.linkageChannel_.isEmpty()) {
            if (linkageChannelBuilder_.isEmpty()) {
              linkageChannelBuilder_.dispose();
              linkageChannelBuilder_ = null;
              linkageChannel_ = other.linkageChannel_;
              bitField0_ = (bitField0_ & ~0x00000800);
              linkageChannelBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLinkageChannelFieldBuilder() : null;
            } else {
              linkageChannelBuilder_.addAllMessages(other.linkageChannel_);
            }
          }
        }
        if (linkageSolutionBuilder_ == null) {
          if (!other.linkageSolution_.isEmpty()) {
            if (linkageSolution_.isEmpty()) {
              linkageSolution_ = other.linkageSolution_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureLinkageSolutionIsMutable();
              linkageSolution_.addAll(other.linkageSolution_);
            }
            onChanged();
          }
        } else {
          if (!other.linkageSolution_.isEmpty()) {
            if (linkageSolutionBuilder_.isEmpty()) {
              linkageSolutionBuilder_.dispose();
              linkageSolutionBuilder_ = null;
              linkageSolution_ = other.linkageSolution_;
              bitField0_ = (bitField0_ & ~0x00001000);
              linkageSolutionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLinkageSolutionFieldBuilder() : null;
            } else {
              linkageSolutionBuilder_.addAllMessages(other.linkageSolution_);
            }
          }
        }
        if (tplFileBuilder_ == null) {
          if (!other.tplFile_.isEmpty()) {
            if (tplFile_.isEmpty()) {
              tplFile_ = other.tplFile_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureTplFileIsMutable();
              tplFile_.addAll(other.tplFile_);
            }
            onChanged();
          }
        } else {
          if (!other.tplFile_.isEmpty()) {
            if (tplFileBuilder_.isEmpty()) {
              tplFileBuilder_.dispose();
              tplFileBuilder_ = null;
              tplFile_ = other.tplFile_;
              bitField0_ = (bitField0_ & ~0x00002000);
              tplFileBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTplFileFieldBuilder() : null;
            } else {
              tplFileBuilder_.addAllMessages(other.tplFile_);
            }
          }
        }
        if (otherFeaturesBuilder_ == null) {
          if (!other.otherFeatures_.isEmpty()) {
            if (otherFeatures_.isEmpty()) {
              otherFeatures_ = other.otherFeatures_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureOtherFeaturesIsMutable();
              otherFeatures_.addAll(other.otherFeatures_);
            }
            onChanged();
          }
        } else {
          if (!other.otherFeatures_.isEmpty()) {
            if (otherFeaturesBuilder_.isEmpty()) {
              otherFeaturesBuilder_.dispose();
              otherFeaturesBuilder_ = null;
              otherFeatures_ = other.otherFeatures_;
              bitField0_ = (bitField0_ & ~0x00004000);
              otherFeaturesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOtherFeaturesFieldBuilder() : null;
            } else {
              otherFeaturesBuilder_.addAllMessages(other.otherFeatures_);
            }
          }
        }
        if (other.hasIPlib()) {
          mergeIPlib(other.getIPlib());
        }
        if (besSetingBuilder_ == null) {
          if (!other.besSeting_.isEmpty()) {
            if (besSeting_.isEmpty()) {
              besSeting_ = other.besSeting_;
              bitField0_ = (bitField0_ & ~0x00010000);
            } else {
              ensureBesSetingIsMutable();
              besSeting_.addAll(other.besSeting_);
            }
            onChanged();
          }
        } else {
          if (!other.besSeting_.isEmpty()) {
            if (besSetingBuilder_.isEmpty()) {
              besSetingBuilder_.dispose();
              besSetingBuilder_ = null;
              besSeting_ = other.besSeting_;
              bitField0_ = (bitField0_ & ~0x00010000);
              besSetingBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBesSetingFieldBuilder() : null;
            } else {
              besSetingBuilder_.addAllMessages(other.besSeting_);
            }
          }
        }
        if (maxAdsoltLevelBuilder_ == null) {
          if (!other.maxAdsoltLevel_.isEmpty()) {
            if (maxAdsoltLevel_.isEmpty()) {
              maxAdsoltLevel_ = other.maxAdsoltLevel_;
              bitField0_ = (bitField0_ & ~0x00020000);
            } else {
              ensureMaxAdsoltLevelIsMutable();
              maxAdsoltLevel_.addAll(other.maxAdsoltLevel_);
            }
            onChanged();
          }
        } else {
          if (!other.maxAdsoltLevel_.isEmpty()) {
            if (maxAdsoltLevelBuilder_.isEmpty()) {
              maxAdsoltLevelBuilder_.dispose();
              maxAdsoltLevelBuilder_ = null;
              maxAdsoltLevel_ = other.maxAdsoltLevel_;
              bitField0_ = (bitField0_ & ~0x00020000);
              maxAdsoltLevelBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMaxAdsoltLevelFieldBuilder() : null;
            } else {
              maxAdsoltLevelBuilder_.addAllMessages(other.maxAdsoltLevel_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getAdvertiserCount(); i++) {
          if (!getAdvertiser(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getSolutionCount(); i++) {
          if (!getSolution(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasDbConfig()) {
          if (!getDbConfig().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getBesSetingCount(); i++) {
          if (!getBesSeting(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getMaxAdsoltLevelCount(); i++) {
          if (!getMaxAdsoltLevel(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.cache.DeliveryMessage.AllyesAds parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.cache.DeliveryMessage.AllyesAds) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object dbName_ = "";
      /**
       * <code>optional string dbName = 1;</code>
       *
       * <pre>
       *数据库名
       * </pre>
       */
      public boolean hasDbName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string dbName = 1;</code>
       *
       * <pre>
       *数据库名
       * </pre>
       */
      public java.lang.String getDbName() {
        java.lang.Object ref = dbName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            dbName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string dbName = 1;</code>
       *
       * <pre>
       *数据库名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDbNameBytes() {
        java.lang.Object ref = dbName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dbName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string dbName = 1;</code>
       *
       * <pre>
       *数据库名
       * </pre>
       */
      public Builder setDbName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        dbName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string dbName = 1;</code>
       *
       * <pre>
       *数据库名
       * </pre>
       */
      public Builder clearDbName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dbName_ = getDefaultInstance().getDbName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string dbName = 1;</code>
       *
       * <pre>
       *数据库名
       * </pre>
       */
      public Builder setDbNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        dbName_ = value;
        onChanged();
        return this;
      }

      private java.util.List<de.cache.DeliveryMessage.ChannelFamily> channelFamily_ =
        java.util.Collections.emptyList();
      private void ensureChannelFamilyIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          channelFamily_ = new java.util.ArrayList<de.cache.DeliveryMessage.ChannelFamily>(channelFamily_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.ChannelFamily, de.cache.DeliveryMessage.ChannelFamily.Builder, de.cache.DeliveryMessage.ChannelFamilyOrBuilder> channelFamilyBuilder_;

      /**
       * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
       *
       * <pre>
       *媒体信息(一级媒体圈)
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.ChannelFamily> getChannelFamilyList() {
        if (channelFamilyBuilder_ == null) {
          return java.util.Collections.unmodifiableList(channelFamily_);
        } else {
          return channelFamilyBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
       *
       * <pre>
       *媒体信息(一级媒体圈)
       * </pre>
       */
      public int getChannelFamilyCount() {
        if (channelFamilyBuilder_ == null) {
          return channelFamily_.size();
        } else {
          return channelFamilyBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
       *
       * <pre>
       *媒体信息(一级媒体圈)
       * </pre>
       */
      public de.cache.DeliveryMessage.ChannelFamily getChannelFamily(int index) {
        if (channelFamilyBuilder_ == null) {
          return channelFamily_.get(index);
        } else {
          return channelFamilyBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
       *
       * <pre>
       *媒体信息(一级媒体圈)
       * </pre>
       */
      public Builder setChannelFamily(
          int index, de.cache.DeliveryMessage.ChannelFamily value) {
        if (channelFamilyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelFamilyIsMutable();
          channelFamily_.set(index, value);
          onChanged();
        } else {
          channelFamilyBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
       *
       * <pre>
       *媒体信息(一级媒体圈)
       * </pre>
       */
      public Builder setChannelFamily(
          int index, de.cache.DeliveryMessage.ChannelFamily.Builder builderForValue) {
        if (channelFamilyBuilder_ == null) {
          ensureChannelFamilyIsMutable();
          channelFamily_.set(index, builderForValue.build());
          onChanged();
        } else {
          channelFamilyBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
       *
       * <pre>
       *媒体信息(一级媒体圈)
       * </pre>
       */
      public Builder addChannelFamily(de.cache.DeliveryMessage.ChannelFamily value) {
        if (channelFamilyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelFamilyIsMutable();
          channelFamily_.add(value);
          onChanged();
        } else {
          channelFamilyBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
       *
       * <pre>
       *媒体信息(一级媒体圈)
       * </pre>
       */
      public Builder addChannelFamily(
          int index, de.cache.DeliveryMessage.ChannelFamily value) {
        if (channelFamilyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelFamilyIsMutable();
          channelFamily_.add(index, value);
          onChanged();
        } else {
          channelFamilyBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
       *
       * <pre>
       *媒体信息(一级媒体圈)
       * </pre>
       */
      public Builder addChannelFamily(
          de.cache.DeliveryMessage.ChannelFamily.Builder builderForValue) {
        if (channelFamilyBuilder_ == null) {
          ensureChannelFamilyIsMutable();
          channelFamily_.add(builderForValue.build());
          onChanged();
        } else {
          channelFamilyBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
       *
       * <pre>
       *媒体信息(一级媒体圈)
       * </pre>
       */
      public Builder addChannelFamily(
          int index, de.cache.DeliveryMessage.ChannelFamily.Builder builderForValue) {
        if (channelFamilyBuilder_ == null) {
          ensureChannelFamilyIsMutable();
          channelFamily_.add(index, builderForValue.build());
          onChanged();
        } else {
          channelFamilyBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
       *
       * <pre>
       *媒体信息(一级媒体圈)
       * </pre>
       */
      public Builder addAllChannelFamily(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.ChannelFamily> values) {
        if (channelFamilyBuilder_ == null) {
          ensureChannelFamilyIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, channelFamily_);
          onChanged();
        } else {
          channelFamilyBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
       *
       * <pre>
       *媒体信息(一级媒体圈)
       * </pre>
       */
      public Builder clearChannelFamily() {
        if (channelFamilyBuilder_ == null) {
          channelFamily_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          channelFamilyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
       *
       * <pre>
       *媒体信息(一级媒体圈)
       * </pre>
       */
      public Builder removeChannelFamily(int index) {
        if (channelFamilyBuilder_ == null) {
          ensureChannelFamilyIsMutable();
          channelFamily_.remove(index);
          onChanged();
        } else {
          channelFamilyBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
       *
       * <pre>
       *媒体信息(一级媒体圈)
       * </pre>
       */
      public de.cache.DeliveryMessage.ChannelFamily.Builder getChannelFamilyBuilder(
          int index) {
        return getChannelFamilyFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
       *
       * <pre>
       *媒体信息(一级媒体圈)
       * </pre>
       */
      public de.cache.DeliveryMessage.ChannelFamilyOrBuilder getChannelFamilyOrBuilder(
          int index) {
        if (channelFamilyBuilder_ == null) {
          return channelFamily_.get(index);  } else {
          return channelFamilyBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
       *
       * <pre>
       *媒体信息(一级媒体圈)
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.ChannelFamilyOrBuilder> 
           getChannelFamilyOrBuilderList() {
        if (channelFamilyBuilder_ != null) {
          return channelFamilyBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(channelFamily_);
        }
      }
      /**
       * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
       *
       * <pre>
       *媒体信息(一级媒体圈)
       * </pre>
       */
      public de.cache.DeliveryMessage.ChannelFamily.Builder addChannelFamilyBuilder() {
        return getChannelFamilyFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.ChannelFamily.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
       *
       * <pre>
       *媒体信息(一级媒体圈)
       * </pre>
       */
      public de.cache.DeliveryMessage.ChannelFamily.Builder addChannelFamilyBuilder(
          int index) {
        return getChannelFamilyFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.ChannelFamily.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.ChannelFamily channelFamily = 2;</code>
       *
       * <pre>
       *媒体信息(一级媒体圈)
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.ChannelFamily.Builder> 
           getChannelFamilyBuilderList() {
        return getChannelFamilyFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.ChannelFamily, de.cache.DeliveryMessage.ChannelFamily.Builder, de.cache.DeliveryMessage.ChannelFamilyOrBuilder> 
          getChannelFamilyFieldBuilder() {
        if (channelFamilyBuilder_ == null) {
          channelFamilyBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.ChannelFamily, de.cache.DeliveryMessage.ChannelFamily.Builder, de.cache.DeliveryMessage.ChannelFamilyOrBuilder>(
                  channelFamily_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          channelFamily_ = null;
        }
        return channelFamilyBuilder_;
      }

      private java.util.List<de.cache.DeliveryMessage.ChannelPool> channelPool_ =
        java.util.Collections.emptyList();
      private void ensureChannelPoolIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          channelPool_ = new java.util.ArrayList<de.cache.DeliveryMessage.ChannelPool>(channelPool_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.ChannelPool, de.cache.DeliveryMessage.ChannelPool.Builder, de.cache.DeliveryMessage.ChannelPoolOrBuilder> channelPoolBuilder_;

      /**
       * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
       *
       * <pre>
       *网站信息(二级媒体圈)
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.ChannelPool> getChannelPoolList() {
        if (channelPoolBuilder_ == null) {
          return java.util.Collections.unmodifiableList(channelPool_);
        } else {
          return channelPoolBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
       *
       * <pre>
       *网站信息(二级媒体圈)
       * </pre>
       */
      public int getChannelPoolCount() {
        if (channelPoolBuilder_ == null) {
          return channelPool_.size();
        } else {
          return channelPoolBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
       *
       * <pre>
       *网站信息(二级媒体圈)
       * </pre>
       */
      public de.cache.DeliveryMessage.ChannelPool getChannelPool(int index) {
        if (channelPoolBuilder_ == null) {
          return channelPool_.get(index);
        } else {
          return channelPoolBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
       *
       * <pre>
       *网站信息(二级媒体圈)
       * </pre>
       */
      public Builder setChannelPool(
          int index, de.cache.DeliveryMessage.ChannelPool value) {
        if (channelPoolBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelPoolIsMutable();
          channelPool_.set(index, value);
          onChanged();
        } else {
          channelPoolBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
       *
       * <pre>
       *网站信息(二级媒体圈)
       * </pre>
       */
      public Builder setChannelPool(
          int index, de.cache.DeliveryMessage.ChannelPool.Builder builderForValue) {
        if (channelPoolBuilder_ == null) {
          ensureChannelPoolIsMutable();
          channelPool_.set(index, builderForValue.build());
          onChanged();
        } else {
          channelPoolBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
       *
       * <pre>
       *网站信息(二级媒体圈)
       * </pre>
       */
      public Builder addChannelPool(de.cache.DeliveryMessage.ChannelPool value) {
        if (channelPoolBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelPoolIsMutable();
          channelPool_.add(value);
          onChanged();
        } else {
          channelPoolBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
       *
       * <pre>
       *网站信息(二级媒体圈)
       * </pre>
       */
      public Builder addChannelPool(
          int index, de.cache.DeliveryMessage.ChannelPool value) {
        if (channelPoolBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelPoolIsMutable();
          channelPool_.add(index, value);
          onChanged();
        } else {
          channelPoolBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
       *
       * <pre>
       *网站信息(二级媒体圈)
       * </pre>
       */
      public Builder addChannelPool(
          de.cache.DeliveryMessage.ChannelPool.Builder builderForValue) {
        if (channelPoolBuilder_ == null) {
          ensureChannelPoolIsMutable();
          channelPool_.add(builderForValue.build());
          onChanged();
        } else {
          channelPoolBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
       *
       * <pre>
       *网站信息(二级媒体圈)
       * </pre>
       */
      public Builder addChannelPool(
          int index, de.cache.DeliveryMessage.ChannelPool.Builder builderForValue) {
        if (channelPoolBuilder_ == null) {
          ensureChannelPoolIsMutable();
          channelPool_.add(index, builderForValue.build());
          onChanged();
        } else {
          channelPoolBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
       *
       * <pre>
       *网站信息(二级媒体圈)
       * </pre>
       */
      public Builder addAllChannelPool(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.ChannelPool> values) {
        if (channelPoolBuilder_ == null) {
          ensureChannelPoolIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, channelPool_);
          onChanged();
        } else {
          channelPoolBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
       *
       * <pre>
       *网站信息(二级媒体圈)
       * </pre>
       */
      public Builder clearChannelPool() {
        if (channelPoolBuilder_ == null) {
          channelPool_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          channelPoolBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
       *
       * <pre>
       *网站信息(二级媒体圈)
       * </pre>
       */
      public Builder removeChannelPool(int index) {
        if (channelPoolBuilder_ == null) {
          ensureChannelPoolIsMutable();
          channelPool_.remove(index);
          onChanged();
        } else {
          channelPoolBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
       *
       * <pre>
       *网站信息(二级媒体圈)
       * </pre>
       */
      public de.cache.DeliveryMessage.ChannelPool.Builder getChannelPoolBuilder(
          int index) {
        return getChannelPoolFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
       *
       * <pre>
       *网站信息(二级媒体圈)
       * </pre>
       */
      public de.cache.DeliveryMessage.ChannelPoolOrBuilder getChannelPoolOrBuilder(
          int index) {
        if (channelPoolBuilder_ == null) {
          return channelPool_.get(index);  } else {
          return channelPoolBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
       *
       * <pre>
       *网站信息(二级媒体圈)
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.ChannelPoolOrBuilder> 
           getChannelPoolOrBuilderList() {
        if (channelPoolBuilder_ != null) {
          return channelPoolBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(channelPool_);
        }
      }
      /**
       * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
       *
       * <pre>
       *网站信息(二级媒体圈)
       * </pre>
       */
      public de.cache.DeliveryMessage.ChannelPool.Builder addChannelPoolBuilder() {
        return getChannelPoolFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.ChannelPool.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
       *
       * <pre>
       *网站信息(二级媒体圈)
       * </pre>
       */
      public de.cache.DeliveryMessage.ChannelPool.Builder addChannelPoolBuilder(
          int index) {
        return getChannelPoolFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.ChannelPool.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.ChannelPool channelPool = 3;</code>
       *
       * <pre>
       *网站信息(二级媒体圈)
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.ChannelPool.Builder> 
           getChannelPoolBuilderList() {
        return getChannelPoolFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.ChannelPool, de.cache.DeliveryMessage.ChannelPool.Builder, de.cache.DeliveryMessage.ChannelPoolOrBuilder> 
          getChannelPoolFieldBuilder() {
        if (channelPoolBuilder_ == null) {
          channelPoolBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.ChannelPool, de.cache.DeliveryMessage.ChannelPool.Builder, de.cache.DeliveryMessage.ChannelPoolOrBuilder>(
                  channelPool_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          channelPool_ = null;
        }
        return channelPoolBuilder_;
      }

      private java.util.List<de.cache.DeliveryMessage.ChannelGroup> channelGroup_ =
        java.util.Collections.emptyList();
      private void ensureChannelGroupIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          channelGroup_ = new java.util.ArrayList<de.cache.DeliveryMessage.ChannelGroup>(channelGroup_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.ChannelGroup, de.cache.DeliveryMessage.ChannelGroup.Builder, de.cache.DeliveryMessage.ChannelGroupOrBuilder> channelGroupBuilder_;

      /**
       * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
       *
       * <pre>
       *频道信息(三级媒体圈)
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.ChannelGroup> getChannelGroupList() {
        if (channelGroupBuilder_ == null) {
          return java.util.Collections.unmodifiableList(channelGroup_);
        } else {
          return channelGroupBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
       *
       * <pre>
       *频道信息(三级媒体圈)
       * </pre>
       */
      public int getChannelGroupCount() {
        if (channelGroupBuilder_ == null) {
          return channelGroup_.size();
        } else {
          return channelGroupBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
       *
       * <pre>
       *频道信息(三级媒体圈)
       * </pre>
       */
      public de.cache.DeliveryMessage.ChannelGroup getChannelGroup(int index) {
        if (channelGroupBuilder_ == null) {
          return channelGroup_.get(index);
        } else {
          return channelGroupBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
       *
       * <pre>
       *频道信息(三级媒体圈)
       * </pre>
       */
      public Builder setChannelGroup(
          int index, de.cache.DeliveryMessage.ChannelGroup value) {
        if (channelGroupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelGroupIsMutable();
          channelGroup_.set(index, value);
          onChanged();
        } else {
          channelGroupBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
       *
       * <pre>
       *频道信息(三级媒体圈)
       * </pre>
       */
      public Builder setChannelGroup(
          int index, de.cache.DeliveryMessage.ChannelGroup.Builder builderForValue) {
        if (channelGroupBuilder_ == null) {
          ensureChannelGroupIsMutable();
          channelGroup_.set(index, builderForValue.build());
          onChanged();
        } else {
          channelGroupBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
       *
       * <pre>
       *频道信息(三级媒体圈)
       * </pre>
       */
      public Builder addChannelGroup(de.cache.DeliveryMessage.ChannelGroup value) {
        if (channelGroupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelGroupIsMutable();
          channelGroup_.add(value);
          onChanged();
        } else {
          channelGroupBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
       *
       * <pre>
       *频道信息(三级媒体圈)
       * </pre>
       */
      public Builder addChannelGroup(
          int index, de.cache.DeliveryMessage.ChannelGroup value) {
        if (channelGroupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelGroupIsMutable();
          channelGroup_.add(index, value);
          onChanged();
        } else {
          channelGroupBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
       *
       * <pre>
       *频道信息(三级媒体圈)
       * </pre>
       */
      public Builder addChannelGroup(
          de.cache.DeliveryMessage.ChannelGroup.Builder builderForValue) {
        if (channelGroupBuilder_ == null) {
          ensureChannelGroupIsMutable();
          channelGroup_.add(builderForValue.build());
          onChanged();
        } else {
          channelGroupBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
       *
       * <pre>
       *频道信息(三级媒体圈)
       * </pre>
       */
      public Builder addChannelGroup(
          int index, de.cache.DeliveryMessage.ChannelGroup.Builder builderForValue) {
        if (channelGroupBuilder_ == null) {
          ensureChannelGroupIsMutable();
          channelGroup_.add(index, builderForValue.build());
          onChanged();
        } else {
          channelGroupBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
       *
       * <pre>
       *频道信息(三级媒体圈)
       * </pre>
       */
      public Builder addAllChannelGroup(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.ChannelGroup> values) {
        if (channelGroupBuilder_ == null) {
          ensureChannelGroupIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, channelGroup_);
          onChanged();
        } else {
          channelGroupBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
       *
       * <pre>
       *频道信息(三级媒体圈)
       * </pre>
       */
      public Builder clearChannelGroup() {
        if (channelGroupBuilder_ == null) {
          channelGroup_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          channelGroupBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
       *
       * <pre>
       *频道信息(三级媒体圈)
       * </pre>
       */
      public Builder removeChannelGroup(int index) {
        if (channelGroupBuilder_ == null) {
          ensureChannelGroupIsMutable();
          channelGroup_.remove(index);
          onChanged();
        } else {
          channelGroupBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
       *
       * <pre>
       *频道信息(三级媒体圈)
       * </pre>
       */
      public de.cache.DeliveryMessage.ChannelGroup.Builder getChannelGroupBuilder(
          int index) {
        return getChannelGroupFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
       *
       * <pre>
       *频道信息(三级媒体圈)
       * </pre>
       */
      public de.cache.DeliveryMessage.ChannelGroupOrBuilder getChannelGroupOrBuilder(
          int index) {
        if (channelGroupBuilder_ == null) {
          return channelGroup_.get(index);  } else {
          return channelGroupBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
       *
       * <pre>
       *频道信息(三级媒体圈)
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.ChannelGroupOrBuilder> 
           getChannelGroupOrBuilderList() {
        if (channelGroupBuilder_ != null) {
          return channelGroupBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(channelGroup_);
        }
      }
      /**
       * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
       *
       * <pre>
       *频道信息(三级媒体圈)
       * </pre>
       */
      public de.cache.DeliveryMessage.ChannelGroup.Builder addChannelGroupBuilder() {
        return getChannelGroupFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.ChannelGroup.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
       *
       * <pre>
       *频道信息(三级媒体圈)
       * </pre>
       */
      public de.cache.DeliveryMessage.ChannelGroup.Builder addChannelGroupBuilder(
          int index) {
        return getChannelGroupFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.ChannelGroup.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.ChannelGroup channelGroup = 4;</code>
       *
       * <pre>
       *频道信息(三级媒体圈)
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.ChannelGroup.Builder> 
           getChannelGroupBuilderList() {
        return getChannelGroupFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.ChannelGroup, de.cache.DeliveryMessage.ChannelGroup.Builder, de.cache.DeliveryMessage.ChannelGroupOrBuilder> 
          getChannelGroupFieldBuilder() {
        if (channelGroupBuilder_ == null) {
          channelGroupBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.ChannelGroup, de.cache.DeliveryMessage.ChannelGroup.Builder, de.cache.DeliveryMessage.ChannelGroupOrBuilder>(
                  channelGroup_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          channelGroup_ = null;
        }
        return channelGroupBuilder_;
      }

      private java.util.List<de.cache.DeliveryMessage.Channel> channel_ =
        java.util.Collections.emptyList();
      private void ensureChannelIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          channel_ = new java.util.ArrayList<de.cache.DeliveryMessage.Channel>(channel_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.Channel, de.cache.DeliveryMessage.Channel.Builder, de.cache.DeliveryMessage.ChannelOrBuilder> channelBuilder_;

      /**
       * <code>repeated .de.cache.Channel channel = 5;</code>
       *
       * <pre>
       *广告位信息
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.Channel> getChannelList() {
        if (channelBuilder_ == null) {
          return java.util.Collections.unmodifiableList(channel_);
        } else {
          return channelBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.Channel channel = 5;</code>
       *
       * <pre>
       *广告位信息
       * </pre>
       */
      public int getChannelCount() {
        if (channelBuilder_ == null) {
          return channel_.size();
        } else {
          return channelBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.Channel channel = 5;</code>
       *
       * <pre>
       *广告位信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Channel getChannel(int index) {
        if (channelBuilder_ == null) {
          return channel_.get(index);
        } else {
          return channelBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.Channel channel = 5;</code>
       *
       * <pre>
       *广告位信息
       * </pre>
       */
      public Builder setChannel(
          int index, de.cache.DeliveryMessage.Channel value) {
        if (channelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelIsMutable();
          channel_.set(index, value);
          onChanged();
        } else {
          channelBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Channel channel = 5;</code>
       *
       * <pre>
       *广告位信息
       * </pre>
       */
      public Builder setChannel(
          int index, de.cache.DeliveryMessage.Channel.Builder builderForValue) {
        if (channelBuilder_ == null) {
          ensureChannelIsMutable();
          channel_.set(index, builderForValue.build());
          onChanged();
        } else {
          channelBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Channel channel = 5;</code>
       *
       * <pre>
       *广告位信息
       * </pre>
       */
      public Builder addChannel(de.cache.DeliveryMessage.Channel value) {
        if (channelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelIsMutable();
          channel_.add(value);
          onChanged();
        } else {
          channelBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Channel channel = 5;</code>
       *
       * <pre>
       *广告位信息
       * </pre>
       */
      public Builder addChannel(
          int index, de.cache.DeliveryMessage.Channel value) {
        if (channelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelIsMutable();
          channel_.add(index, value);
          onChanged();
        } else {
          channelBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Channel channel = 5;</code>
       *
       * <pre>
       *广告位信息
       * </pre>
       */
      public Builder addChannel(
          de.cache.DeliveryMessage.Channel.Builder builderForValue) {
        if (channelBuilder_ == null) {
          ensureChannelIsMutable();
          channel_.add(builderForValue.build());
          onChanged();
        } else {
          channelBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Channel channel = 5;</code>
       *
       * <pre>
       *广告位信息
       * </pre>
       */
      public Builder addChannel(
          int index, de.cache.DeliveryMessage.Channel.Builder builderForValue) {
        if (channelBuilder_ == null) {
          ensureChannelIsMutable();
          channel_.add(index, builderForValue.build());
          onChanged();
        } else {
          channelBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Channel channel = 5;</code>
       *
       * <pre>
       *广告位信息
       * </pre>
       */
      public Builder addAllChannel(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.Channel> values) {
        if (channelBuilder_ == null) {
          ensureChannelIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, channel_);
          onChanged();
        } else {
          channelBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Channel channel = 5;</code>
       *
       * <pre>
       *广告位信息
       * </pre>
       */
      public Builder clearChannel() {
        if (channelBuilder_ == null) {
          channel_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          channelBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Channel channel = 5;</code>
       *
       * <pre>
       *广告位信息
       * </pre>
       */
      public Builder removeChannel(int index) {
        if (channelBuilder_ == null) {
          ensureChannelIsMutable();
          channel_.remove(index);
          onChanged();
        } else {
          channelBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Channel channel = 5;</code>
       *
       * <pre>
       *广告位信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Channel.Builder getChannelBuilder(
          int index) {
        return getChannelFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.Channel channel = 5;</code>
       *
       * <pre>
       *广告位信息
       * </pre>
       */
      public de.cache.DeliveryMessage.ChannelOrBuilder getChannelOrBuilder(
          int index) {
        if (channelBuilder_ == null) {
          return channel_.get(index);  } else {
          return channelBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.Channel channel = 5;</code>
       *
       * <pre>
       *广告位信息
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.ChannelOrBuilder> 
           getChannelOrBuilderList() {
        if (channelBuilder_ != null) {
          return channelBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(channel_);
        }
      }
      /**
       * <code>repeated .de.cache.Channel channel = 5;</code>
       *
       * <pre>
       *广告位信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Channel.Builder addChannelBuilder() {
        return getChannelFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.Channel.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.Channel channel = 5;</code>
       *
       * <pre>
       *广告位信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Channel.Builder addChannelBuilder(
          int index) {
        return getChannelFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.Channel.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.Channel channel = 5;</code>
       *
       * <pre>
       *广告位信息
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.Channel.Builder> 
           getChannelBuilderList() {
        return getChannelFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.Channel, de.cache.DeliveryMessage.Channel.Builder, de.cache.DeliveryMessage.ChannelOrBuilder> 
          getChannelFieldBuilder() {
        if (channelBuilder_ == null) {
          channelBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.Channel, de.cache.DeliveryMessage.Channel.Builder, de.cache.DeliveryMessage.ChannelOrBuilder>(
                  channel_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          channel_ = null;
        }
        return channelBuilder_;
      }

      private java.util.List<de.cache.DeliveryMessage.Agency> agency_ =
        java.util.Collections.emptyList();
      private void ensureAgencyIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          agency_ = new java.util.ArrayList<de.cache.DeliveryMessage.Agency>(agency_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.Agency, de.cache.DeliveryMessage.Agency.Builder, de.cache.DeliveryMessage.AgencyOrBuilder> agencyBuilder_;

      /**
       * <code>repeated .de.cache.Agency agency = 6;</code>
       *
       * <pre>
       *代理商信息
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.Agency> getAgencyList() {
        if (agencyBuilder_ == null) {
          return java.util.Collections.unmodifiableList(agency_);
        } else {
          return agencyBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.Agency agency = 6;</code>
       *
       * <pre>
       *代理商信息
       * </pre>
       */
      public int getAgencyCount() {
        if (agencyBuilder_ == null) {
          return agency_.size();
        } else {
          return agencyBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.Agency agency = 6;</code>
       *
       * <pre>
       *代理商信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Agency getAgency(int index) {
        if (agencyBuilder_ == null) {
          return agency_.get(index);
        } else {
          return agencyBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.Agency agency = 6;</code>
       *
       * <pre>
       *代理商信息
       * </pre>
       */
      public Builder setAgency(
          int index, de.cache.DeliveryMessage.Agency value) {
        if (agencyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAgencyIsMutable();
          agency_.set(index, value);
          onChanged();
        } else {
          agencyBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Agency agency = 6;</code>
       *
       * <pre>
       *代理商信息
       * </pre>
       */
      public Builder setAgency(
          int index, de.cache.DeliveryMessage.Agency.Builder builderForValue) {
        if (agencyBuilder_ == null) {
          ensureAgencyIsMutable();
          agency_.set(index, builderForValue.build());
          onChanged();
        } else {
          agencyBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Agency agency = 6;</code>
       *
       * <pre>
       *代理商信息
       * </pre>
       */
      public Builder addAgency(de.cache.DeliveryMessage.Agency value) {
        if (agencyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAgencyIsMutable();
          agency_.add(value);
          onChanged();
        } else {
          agencyBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Agency agency = 6;</code>
       *
       * <pre>
       *代理商信息
       * </pre>
       */
      public Builder addAgency(
          int index, de.cache.DeliveryMessage.Agency value) {
        if (agencyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAgencyIsMutable();
          agency_.add(index, value);
          onChanged();
        } else {
          agencyBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Agency agency = 6;</code>
       *
       * <pre>
       *代理商信息
       * </pre>
       */
      public Builder addAgency(
          de.cache.DeliveryMessage.Agency.Builder builderForValue) {
        if (agencyBuilder_ == null) {
          ensureAgencyIsMutable();
          agency_.add(builderForValue.build());
          onChanged();
        } else {
          agencyBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Agency agency = 6;</code>
       *
       * <pre>
       *代理商信息
       * </pre>
       */
      public Builder addAgency(
          int index, de.cache.DeliveryMessage.Agency.Builder builderForValue) {
        if (agencyBuilder_ == null) {
          ensureAgencyIsMutable();
          agency_.add(index, builderForValue.build());
          onChanged();
        } else {
          agencyBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Agency agency = 6;</code>
       *
       * <pre>
       *代理商信息
       * </pre>
       */
      public Builder addAllAgency(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.Agency> values) {
        if (agencyBuilder_ == null) {
          ensureAgencyIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, agency_);
          onChanged();
        } else {
          agencyBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Agency agency = 6;</code>
       *
       * <pre>
       *代理商信息
       * </pre>
       */
      public Builder clearAgency() {
        if (agencyBuilder_ == null) {
          agency_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          agencyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Agency agency = 6;</code>
       *
       * <pre>
       *代理商信息
       * </pre>
       */
      public Builder removeAgency(int index) {
        if (agencyBuilder_ == null) {
          ensureAgencyIsMutable();
          agency_.remove(index);
          onChanged();
        } else {
          agencyBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Agency agency = 6;</code>
       *
       * <pre>
       *代理商信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Agency.Builder getAgencyBuilder(
          int index) {
        return getAgencyFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.Agency agency = 6;</code>
       *
       * <pre>
       *代理商信息
       * </pre>
       */
      public de.cache.DeliveryMessage.AgencyOrBuilder getAgencyOrBuilder(
          int index) {
        if (agencyBuilder_ == null) {
          return agency_.get(index);  } else {
          return agencyBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.Agency agency = 6;</code>
       *
       * <pre>
       *代理商信息
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.AgencyOrBuilder> 
           getAgencyOrBuilderList() {
        if (agencyBuilder_ != null) {
          return agencyBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(agency_);
        }
      }
      /**
       * <code>repeated .de.cache.Agency agency = 6;</code>
       *
       * <pre>
       *代理商信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Agency.Builder addAgencyBuilder() {
        return getAgencyFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.Agency.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.Agency agency = 6;</code>
       *
       * <pre>
       *代理商信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Agency.Builder addAgencyBuilder(
          int index) {
        return getAgencyFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.Agency.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.Agency agency = 6;</code>
       *
       * <pre>
       *代理商信息
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.Agency.Builder> 
           getAgencyBuilderList() {
        return getAgencyFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.Agency, de.cache.DeliveryMessage.Agency.Builder, de.cache.DeliveryMessage.AgencyOrBuilder> 
          getAgencyFieldBuilder() {
        if (agencyBuilder_ == null) {
          agencyBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.Agency, de.cache.DeliveryMessage.Agency.Builder, de.cache.DeliveryMessage.AgencyOrBuilder>(
                  agency_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          agency_ = null;
        }
        return agencyBuilder_;
      }

      private java.util.List<de.cache.DeliveryMessage.Advertiser> advertiser_ =
        java.util.Collections.emptyList();
      private void ensureAdvertiserIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          advertiser_ = new java.util.ArrayList<de.cache.DeliveryMessage.Advertiser>(advertiser_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.Advertiser, de.cache.DeliveryMessage.Advertiser.Builder, de.cache.DeliveryMessage.AdvertiserOrBuilder> advertiserBuilder_;

      /**
       * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
       *
       * <pre>
       *广告主信息
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.Advertiser> getAdvertiserList() {
        if (advertiserBuilder_ == null) {
          return java.util.Collections.unmodifiableList(advertiser_);
        } else {
          return advertiserBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
       *
       * <pre>
       *广告主信息
       * </pre>
       */
      public int getAdvertiserCount() {
        if (advertiserBuilder_ == null) {
          return advertiser_.size();
        } else {
          return advertiserBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
       *
       * <pre>
       *广告主信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Advertiser getAdvertiser(int index) {
        if (advertiserBuilder_ == null) {
          return advertiser_.get(index);
        } else {
          return advertiserBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
       *
       * <pre>
       *广告主信息
       * </pre>
       */
      public Builder setAdvertiser(
          int index, de.cache.DeliveryMessage.Advertiser value) {
        if (advertiserBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdvertiserIsMutable();
          advertiser_.set(index, value);
          onChanged();
        } else {
          advertiserBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
       *
       * <pre>
       *广告主信息
       * </pre>
       */
      public Builder setAdvertiser(
          int index, de.cache.DeliveryMessage.Advertiser.Builder builderForValue) {
        if (advertiserBuilder_ == null) {
          ensureAdvertiserIsMutable();
          advertiser_.set(index, builderForValue.build());
          onChanged();
        } else {
          advertiserBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
       *
       * <pre>
       *广告主信息
       * </pre>
       */
      public Builder addAdvertiser(de.cache.DeliveryMessage.Advertiser value) {
        if (advertiserBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdvertiserIsMutable();
          advertiser_.add(value);
          onChanged();
        } else {
          advertiserBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
       *
       * <pre>
       *广告主信息
       * </pre>
       */
      public Builder addAdvertiser(
          int index, de.cache.DeliveryMessage.Advertiser value) {
        if (advertiserBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdvertiserIsMutable();
          advertiser_.add(index, value);
          onChanged();
        } else {
          advertiserBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
       *
       * <pre>
       *广告主信息
       * </pre>
       */
      public Builder addAdvertiser(
          de.cache.DeliveryMessage.Advertiser.Builder builderForValue) {
        if (advertiserBuilder_ == null) {
          ensureAdvertiserIsMutable();
          advertiser_.add(builderForValue.build());
          onChanged();
        } else {
          advertiserBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
       *
       * <pre>
       *广告主信息
       * </pre>
       */
      public Builder addAdvertiser(
          int index, de.cache.DeliveryMessage.Advertiser.Builder builderForValue) {
        if (advertiserBuilder_ == null) {
          ensureAdvertiserIsMutable();
          advertiser_.add(index, builderForValue.build());
          onChanged();
        } else {
          advertiserBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
       *
       * <pre>
       *广告主信息
       * </pre>
       */
      public Builder addAllAdvertiser(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.Advertiser> values) {
        if (advertiserBuilder_ == null) {
          ensureAdvertiserIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, advertiser_);
          onChanged();
        } else {
          advertiserBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
       *
       * <pre>
       *广告主信息
       * </pre>
       */
      public Builder clearAdvertiser() {
        if (advertiserBuilder_ == null) {
          advertiser_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          advertiserBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
       *
       * <pre>
       *广告主信息
       * </pre>
       */
      public Builder removeAdvertiser(int index) {
        if (advertiserBuilder_ == null) {
          ensureAdvertiserIsMutable();
          advertiser_.remove(index);
          onChanged();
        } else {
          advertiserBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
       *
       * <pre>
       *广告主信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Advertiser.Builder getAdvertiserBuilder(
          int index) {
        return getAdvertiserFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
       *
       * <pre>
       *广告主信息
       * </pre>
       */
      public de.cache.DeliveryMessage.AdvertiserOrBuilder getAdvertiserOrBuilder(
          int index) {
        if (advertiserBuilder_ == null) {
          return advertiser_.get(index);  } else {
          return advertiserBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
       *
       * <pre>
       *广告主信息
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.AdvertiserOrBuilder> 
           getAdvertiserOrBuilderList() {
        if (advertiserBuilder_ != null) {
          return advertiserBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(advertiser_);
        }
      }
      /**
       * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
       *
       * <pre>
       *广告主信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Advertiser.Builder addAdvertiserBuilder() {
        return getAdvertiserFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.Advertiser.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
       *
       * <pre>
       *广告主信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Advertiser.Builder addAdvertiserBuilder(
          int index) {
        return getAdvertiserFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.Advertiser.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.Advertiser advertiser = 7;</code>
       *
       * <pre>
       *广告主信息
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.Advertiser.Builder> 
           getAdvertiserBuilderList() {
        return getAdvertiserFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.Advertiser, de.cache.DeliveryMessage.Advertiser.Builder, de.cache.DeliveryMessage.AdvertiserOrBuilder> 
          getAdvertiserFieldBuilder() {
        if (advertiserBuilder_ == null) {
          advertiserBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.Advertiser, de.cache.DeliveryMessage.Advertiser.Builder, de.cache.DeliveryMessage.AdvertiserOrBuilder>(
                  advertiser_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          advertiser_ = null;
        }
        return advertiserBuilder_;
      }

      private java.util.List<de.cache.DeliveryMessage.Order> order_ =
        java.util.Collections.emptyList();
      private void ensureOrderIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          order_ = new java.util.ArrayList<de.cache.DeliveryMessage.Order>(order_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.Order, de.cache.DeliveryMessage.Order.Builder, de.cache.DeliveryMessage.OrderOrBuilder> orderBuilder_;

      /**
       * <code>repeated .de.cache.Order order = 8;</code>
       *
       * <pre>
       *订单信息
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.Order> getOrderList() {
        if (orderBuilder_ == null) {
          return java.util.Collections.unmodifiableList(order_);
        } else {
          return orderBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.Order order = 8;</code>
       *
       * <pre>
       *订单信息
       * </pre>
       */
      public int getOrderCount() {
        if (orderBuilder_ == null) {
          return order_.size();
        } else {
          return orderBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.Order order = 8;</code>
       *
       * <pre>
       *订单信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Order getOrder(int index) {
        if (orderBuilder_ == null) {
          return order_.get(index);
        } else {
          return orderBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.Order order = 8;</code>
       *
       * <pre>
       *订单信息
       * </pre>
       */
      public Builder setOrder(
          int index, de.cache.DeliveryMessage.Order value) {
        if (orderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOrderIsMutable();
          order_.set(index, value);
          onChanged();
        } else {
          orderBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Order order = 8;</code>
       *
       * <pre>
       *订单信息
       * </pre>
       */
      public Builder setOrder(
          int index, de.cache.DeliveryMessage.Order.Builder builderForValue) {
        if (orderBuilder_ == null) {
          ensureOrderIsMutable();
          order_.set(index, builderForValue.build());
          onChanged();
        } else {
          orderBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Order order = 8;</code>
       *
       * <pre>
       *订单信息
       * </pre>
       */
      public Builder addOrder(de.cache.DeliveryMessage.Order value) {
        if (orderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOrderIsMutable();
          order_.add(value);
          onChanged();
        } else {
          orderBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Order order = 8;</code>
       *
       * <pre>
       *订单信息
       * </pre>
       */
      public Builder addOrder(
          int index, de.cache.DeliveryMessage.Order value) {
        if (orderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOrderIsMutable();
          order_.add(index, value);
          onChanged();
        } else {
          orderBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Order order = 8;</code>
       *
       * <pre>
       *订单信息
       * </pre>
       */
      public Builder addOrder(
          de.cache.DeliveryMessage.Order.Builder builderForValue) {
        if (orderBuilder_ == null) {
          ensureOrderIsMutable();
          order_.add(builderForValue.build());
          onChanged();
        } else {
          orderBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Order order = 8;</code>
       *
       * <pre>
       *订单信息
       * </pre>
       */
      public Builder addOrder(
          int index, de.cache.DeliveryMessage.Order.Builder builderForValue) {
        if (orderBuilder_ == null) {
          ensureOrderIsMutable();
          order_.add(index, builderForValue.build());
          onChanged();
        } else {
          orderBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Order order = 8;</code>
       *
       * <pre>
       *订单信息
       * </pre>
       */
      public Builder addAllOrder(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.Order> values) {
        if (orderBuilder_ == null) {
          ensureOrderIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, order_);
          onChanged();
        } else {
          orderBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Order order = 8;</code>
       *
       * <pre>
       *订单信息
       * </pre>
       */
      public Builder clearOrder() {
        if (orderBuilder_ == null) {
          order_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          orderBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Order order = 8;</code>
       *
       * <pre>
       *订单信息
       * </pre>
       */
      public Builder removeOrder(int index) {
        if (orderBuilder_ == null) {
          ensureOrderIsMutable();
          order_.remove(index);
          onChanged();
        } else {
          orderBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Order order = 8;</code>
       *
       * <pre>
       *订单信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Order.Builder getOrderBuilder(
          int index) {
        return getOrderFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.Order order = 8;</code>
       *
       * <pre>
       *订单信息
       * </pre>
       */
      public de.cache.DeliveryMessage.OrderOrBuilder getOrderOrBuilder(
          int index) {
        if (orderBuilder_ == null) {
          return order_.get(index);  } else {
          return orderBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.Order order = 8;</code>
       *
       * <pre>
       *订单信息
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.OrderOrBuilder> 
           getOrderOrBuilderList() {
        if (orderBuilder_ != null) {
          return orderBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(order_);
        }
      }
      /**
       * <code>repeated .de.cache.Order order = 8;</code>
       *
       * <pre>
       *订单信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Order.Builder addOrderBuilder() {
        return getOrderFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.Order.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.Order order = 8;</code>
       *
       * <pre>
       *订单信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Order.Builder addOrderBuilder(
          int index) {
        return getOrderFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.Order.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.Order order = 8;</code>
       *
       * <pre>
       *订单信息
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.Order.Builder> 
           getOrderBuilderList() {
        return getOrderFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.Order, de.cache.DeliveryMessage.Order.Builder, de.cache.DeliveryMessage.OrderOrBuilder> 
          getOrderFieldBuilder() {
        if (orderBuilder_ == null) {
          orderBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.Order, de.cache.DeliveryMessage.Order.Builder, de.cache.DeliveryMessage.OrderOrBuilder>(
                  order_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          order_ = null;
        }
        return orderBuilder_;
      }

      private java.util.List<de.cache.DeliveryMessage.Solution> solution_ =
        java.util.Collections.emptyList();
      private void ensureSolutionIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          solution_ = new java.util.ArrayList<de.cache.DeliveryMessage.Solution>(solution_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.Solution, de.cache.DeliveryMessage.Solution.Builder, de.cache.DeliveryMessage.SolutionOrBuilder> solutionBuilder_;

      /**
       * <code>repeated .de.cache.Solution solution = 9;</code>
       *
       * <pre>
       *投放信息
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.Solution> getSolutionList() {
        if (solutionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(solution_);
        } else {
          return solutionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.Solution solution = 9;</code>
       *
       * <pre>
       *投放信息
       * </pre>
       */
      public int getSolutionCount() {
        if (solutionBuilder_ == null) {
          return solution_.size();
        } else {
          return solutionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.Solution solution = 9;</code>
       *
       * <pre>
       *投放信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution getSolution(int index) {
        if (solutionBuilder_ == null) {
          return solution_.get(index);
        } else {
          return solutionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.Solution solution = 9;</code>
       *
       * <pre>
       *投放信息
       * </pre>
       */
      public Builder setSolution(
          int index, de.cache.DeliveryMessage.Solution value) {
        if (solutionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSolutionIsMutable();
          solution_.set(index, value);
          onChanged();
        } else {
          solutionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Solution solution = 9;</code>
       *
       * <pre>
       *投放信息
       * </pre>
       */
      public Builder setSolution(
          int index, de.cache.DeliveryMessage.Solution.Builder builderForValue) {
        if (solutionBuilder_ == null) {
          ensureSolutionIsMutable();
          solution_.set(index, builderForValue.build());
          onChanged();
        } else {
          solutionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Solution solution = 9;</code>
       *
       * <pre>
       *投放信息
       * </pre>
       */
      public Builder addSolution(de.cache.DeliveryMessage.Solution value) {
        if (solutionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSolutionIsMutable();
          solution_.add(value);
          onChanged();
        } else {
          solutionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Solution solution = 9;</code>
       *
       * <pre>
       *投放信息
       * </pre>
       */
      public Builder addSolution(
          int index, de.cache.DeliveryMessage.Solution value) {
        if (solutionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSolutionIsMutable();
          solution_.add(index, value);
          onChanged();
        } else {
          solutionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Solution solution = 9;</code>
       *
       * <pre>
       *投放信息
       * </pre>
       */
      public Builder addSolution(
          de.cache.DeliveryMessage.Solution.Builder builderForValue) {
        if (solutionBuilder_ == null) {
          ensureSolutionIsMutable();
          solution_.add(builderForValue.build());
          onChanged();
        } else {
          solutionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Solution solution = 9;</code>
       *
       * <pre>
       *投放信息
       * </pre>
       */
      public Builder addSolution(
          int index, de.cache.DeliveryMessage.Solution.Builder builderForValue) {
        if (solutionBuilder_ == null) {
          ensureSolutionIsMutable();
          solution_.add(index, builderForValue.build());
          onChanged();
        } else {
          solutionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Solution solution = 9;</code>
       *
       * <pre>
       *投放信息
       * </pre>
       */
      public Builder addAllSolution(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.Solution> values) {
        if (solutionBuilder_ == null) {
          ensureSolutionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, solution_);
          onChanged();
        } else {
          solutionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Solution solution = 9;</code>
       *
       * <pre>
       *投放信息
       * </pre>
       */
      public Builder clearSolution() {
        if (solutionBuilder_ == null) {
          solution_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          solutionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Solution solution = 9;</code>
       *
       * <pre>
       *投放信息
       * </pre>
       */
      public Builder removeSolution(int index) {
        if (solutionBuilder_ == null) {
          ensureSolutionIsMutable();
          solution_.remove(index);
          onChanged();
        } else {
          solutionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Solution solution = 9;</code>
       *
       * <pre>
       *投放信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution.Builder getSolutionBuilder(
          int index) {
        return getSolutionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.Solution solution = 9;</code>
       *
       * <pre>
       *投放信息
       * </pre>
       */
      public de.cache.DeliveryMessage.SolutionOrBuilder getSolutionOrBuilder(
          int index) {
        if (solutionBuilder_ == null) {
          return solution_.get(index);  } else {
          return solutionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.Solution solution = 9;</code>
       *
       * <pre>
       *投放信息
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.SolutionOrBuilder> 
           getSolutionOrBuilderList() {
        if (solutionBuilder_ != null) {
          return solutionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(solution_);
        }
      }
      /**
       * <code>repeated .de.cache.Solution solution = 9;</code>
       *
       * <pre>
       *投放信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution.Builder addSolutionBuilder() {
        return getSolutionFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.Solution.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.Solution solution = 9;</code>
       *
       * <pre>
       *投放信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Solution.Builder addSolutionBuilder(
          int index) {
        return getSolutionFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.Solution.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.Solution solution = 9;</code>
       *
       * <pre>
       *投放信息
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.Solution.Builder> 
           getSolutionBuilderList() {
        return getSolutionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.Solution, de.cache.DeliveryMessage.Solution.Builder, de.cache.DeliveryMessage.SolutionOrBuilder> 
          getSolutionFieldBuilder() {
        if (solutionBuilder_ == null) {
          solutionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.Solution, de.cache.DeliveryMessage.Solution.Builder, de.cache.DeliveryMessage.SolutionOrBuilder>(
                  solution_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          solution_ = null;
        }
        return solutionBuilder_;
      }

      private java.util.List<de.cache.DeliveryMessage.Banner> banner_ =
        java.util.Collections.emptyList();
      private void ensureBannerIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          banner_ = new java.util.ArrayList<de.cache.DeliveryMessage.Banner>(banner_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.Banner, de.cache.DeliveryMessage.Banner.Builder, de.cache.DeliveryMessage.BannerOrBuilder> bannerBuilder_;

      /**
       * <code>repeated .de.cache.Banner banner = 10;</code>
       *
       * <pre>
       *创意信息
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.Banner> getBannerList() {
        if (bannerBuilder_ == null) {
          return java.util.Collections.unmodifiableList(banner_);
        } else {
          return bannerBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.Banner banner = 10;</code>
       *
       * <pre>
       *创意信息
       * </pre>
       */
      public int getBannerCount() {
        if (bannerBuilder_ == null) {
          return banner_.size();
        } else {
          return bannerBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.Banner banner = 10;</code>
       *
       * <pre>
       *创意信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Banner getBanner(int index) {
        if (bannerBuilder_ == null) {
          return banner_.get(index);
        } else {
          return bannerBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.Banner banner = 10;</code>
       *
       * <pre>
       *创意信息
       * </pre>
       */
      public Builder setBanner(
          int index, de.cache.DeliveryMessage.Banner value) {
        if (bannerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBannerIsMutable();
          banner_.set(index, value);
          onChanged();
        } else {
          bannerBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Banner banner = 10;</code>
       *
       * <pre>
       *创意信息
       * </pre>
       */
      public Builder setBanner(
          int index, de.cache.DeliveryMessage.Banner.Builder builderForValue) {
        if (bannerBuilder_ == null) {
          ensureBannerIsMutable();
          banner_.set(index, builderForValue.build());
          onChanged();
        } else {
          bannerBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Banner banner = 10;</code>
       *
       * <pre>
       *创意信息
       * </pre>
       */
      public Builder addBanner(de.cache.DeliveryMessage.Banner value) {
        if (bannerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBannerIsMutable();
          banner_.add(value);
          onChanged();
        } else {
          bannerBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Banner banner = 10;</code>
       *
       * <pre>
       *创意信息
       * </pre>
       */
      public Builder addBanner(
          int index, de.cache.DeliveryMessage.Banner value) {
        if (bannerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBannerIsMutable();
          banner_.add(index, value);
          onChanged();
        } else {
          bannerBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Banner banner = 10;</code>
       *
       * <pre>
       *创意信息
       * </pre>
       */
      public Builder addBanner(
          de.cache.DeliveryMessage.Banner.Builder builderForValue) {
        if (bannerBuilder_ == null) {
          ensureBannerIsMutable();
          banner_.add(builderForValue.build());
          onChanged();
        } else {
          bannerBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Banner banner = 10;</code>
       *
       * <pre>
       *创意信息
       * </pre>
       */
      public Builder addBanner(
          int index, de.cache.DeliveryMessage.Banner.Builder builderForValue) {
        if (bannerBuilder_ == null) {
          ensureBannerIsMutable();
          banner_.add(index, builderForValue.build());
          onChanged();
        } else {
          bannerBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Banner banner = 10;</code>
       *
       * <pre>
       *创意信息
       * </pre>
       */
      public Builder addAllBanner(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.Banner> values) {
        if (bannerBuilder_ == null) {
          ensureBannerIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, banner_);
          onChanged();
        } else {
          bannerBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Banner banner = 10;</code>
       *
       * <pre>
       *创意信息
       * </pre>
       */
      public Builder clearBanner() {
        if (bannerBuilder_ == null) {
          banner_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          bannerBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Banner banner = 10;</code>
       *
       * <pre>
       *创意信息
       * </pre>
       */
      public Builder removeBanner(int index) {
        if (bannerBuilder_ == null) {
          ensureBannerIsMutable();
          banner_.remove(index);
          onChanged();
        } else {
          bannerBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.Banner banner = 10;</code>
       *
       * <pre>
       *创意信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Banner.Builder getBannerBuilder(
          int index) {
        return getBannerFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.Banner banner = 10;</code>
       *
       * <pre>
       *创意信息
       * </pre>
       */
      public de.cache.DeliveryMessage.BannerOrBuilder getBannerOrBuilder(
          int index) {
        if (bannerBuilder_ == null) {
          return banner_.get(index);  } else {
          return bannerBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.Banner banner = 10;</code>
       *
       * <pre>
       *创意信息
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.BannerOrBuilder> 
           getBannerOrBuilderList() {
        if (bannerBuilder_ != null) {
          return bannerBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(banner_);
        }
      }
      /**
       * <code>repeated .de.cache.Banner banner = 10;</code>
       *
       * <pre>
       *创意信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Banner.Builder addBannerBuilder() {
        return getBannerFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.Banner.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.Banner banner = 10;</code>
       *
       * <pre>
       *创意信息
       * </pre>
       */
      public de.cache.DeliveryMessage.Banner.Builder addBannerBuilder(
          int index) {
        return getBannerFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.Banner.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.Banner banner = 10;</code>
       *
       * <pre>
       *创意信息
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.Banner.Builder> 
           getBannerBuilderList() {
        return getBannerFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.Banner, de.cache.DeliveryMessage.Banner.Builder, de.cache.DeliveryMessage.BannerOrBuilder> 
          getBannerFieldBuilder() {
        if (bannerBuilder_ == null) {
          bannerBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.Banner, de.cache.DeliveryMessage.Banner.Builder, de.cache.DeliveryMessage.BannerOrBuilder>(
                  banner_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          banner_ = null;
        }
        return bannerBuilder_;
      }

      private de.cache.DeliveryMessage.DbConfig dbConfig_ = de.cache.DeliveryMessage.DbConfig.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.DbConfig, de.cache.DeliveryMessage.DbConfig.Builder, de.cache.DeliveryMessage.DbConfigOrBuilder> dbConfigBuilder_;
      /**
       * <code>optional .de.cache.DbConfig dbConfig = 11;</code>
       *
       * <pre>
       *全局配置信息
       * </pre>
       */
      public boolean hasDbConfig() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .de.cache.DbConfig dbConfig = 11;</code>
       *
       * <pre>
       *全局配置信息
       * </pre>
       */
      public de.cache.DeliveryMessage.DbConfig getDbConfig() {
        if (dbConfigBuilder_ == null) {
          return dbConfig_;
        } else {
          return dbConfigBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .de.cache.DbConfig dbConfig = 11;</code>
       *
       * <pre>
       *全局配置信息
       * </pre>
       */
      public Builder setDbConfig(de.cache.DeliveryMessage.DbConfig value) {
        if (dbConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dbConfig_ = value;
          onChanged();
        } else {
          dbConfigBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .de.cache.DbConfig dbConfig = 11;</code>
       *
       * <pre>
       *全局配置信息
       * </pre>
       */
      public Builder setDbConfig(
          de.cache.DeliveryMessage.DbConfig.Builder builderForValue) {
        if (dbConfigBuilder_ == null) {
          dbConfig_ = builderForValue.build();
          onChanged();
        } else {
          dbConfigBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .de.cache.DbConfig dbConfig = 11;</code>
       *
       * <pre>
       *全局配置信息
       * </pre>
       */
      public Builder mergeDbConfig(de.cache.DeliveryMessage.DbConfig value) {
        if (dbConfigBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              dbConfig_ != de.cache.DeliveryMessage.DbConfig.getDefaultInstance()) {
            dbConfig_ =
              de.cache.DeliveryMessage.DbConfig.newBuilder(dbConfig_).mergeFrom(value).buildPartial();
          } else {
            dbConfig_ = value;
          }
          onChanged();
        } else {
          dbConfigBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .de.cache.DbConfig dbConfig = 11;</code>
       *
       * <pre>
       *全局配置信息
       * </pre>
       */
      public Builder clearDbConfig() {
        if (dbConfigBuilder_ == null) {
          dbConfig_ = de.cache.DeliveryMessage.DbConfig.getDefaultInstance();
          onChanged();
        } else {
          dbConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .de.cache.DbConfig dbConfig = 11;</code>
       *
       * <pre>
       *全局配置信息
       * </pre>
       */
      public de.cache.DeliveryMessage.DbConfig.Builder getDbConfigBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getDbConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .de.cache.DbConfig dbConfig = 11;</code>
       *
       * <pre>
       *全局配置信息
       * </pre>
       */
      public de.cache.DeliveryMessage.DbConfigOrBuilder getDbConfigOrBuilder() {
        if (dbConfigBuilder_ != null) {
          return dbConfigBuilder_.getMessageOrBuilder();
        } else {
          return dbConfig_;
        }
      }
      /**
       * <code>optional .de.cache.DbConfig dbConfig = 11;</code>
       *
       * <pre>
       *全局配置信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.DbConfig, de.cache.DeliveryMessage.DbConfig.Builder, de.cache.DeliveryMessage.DbConfigOrBuilder> 
          getDbConfigFieldBuilder() {
        if (dbConfigBuilder_ == null) {
          dbConfigBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.cache.DeliveryMessage.DbConfig, de.cache.DeliveryMessage.DbConfig.Builder, de.cache.DeliveryMessage.DbConfigOrBuilder>(
                  getDbConfig(),
                  getParentForChildren(),
                  isClean());
          dbConfig_ = null;
        }
        return dbConfigBuilder_;
      }

      private java.util.List<de.cache.DeliveryMessage.AllyesAds.LinkageChannel> linkageChannel_ =
        java.util.Collections.emptyList();
      private void ensureLinkageChannelIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          linkageChannel_ = new java.util.ArrayList<de.cache.DeliveryMessage.AllyesAds.LinkageChannel>(linkageChannel_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.AllyesAds.LinkageChannel, de.cache.DeliveryMessage.AllyesAds.LinkageChannel.Builder, de.cache.DeliveryMessage.AllyesAds.LinkageChannelOrBuilder> linkageChannelBuilder_;

      /**
       * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
       */
      public java.util.List<de.cache.DeliveryMessage.AllyesAds.LinkageChannel> getLinkageChannelList() {
        if (linkageChannelBuilder_ == null) {
          return java.util.Collections.unmodifiableList(linkageChannel_);
        } else {
          return linkageChannelBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
       */
      public int getLinkageChannelCount() {
        if (linkageChannelBuilder_ == null) {
          return linkageChannel_.size();
        } else {
          return linkageChannelBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
       */
      public de.cache.DeliveryMessage.AllyesAds.LinkageChannel getLinkageChannel(int index) {
        if (linkageChannelBuilder_ == null) {
          return linkageChannel_.get(index);
        } else {
          return linkageChannelBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
       */
      public Builder setLinkageChannel(
          int index, de.cache.DeliveryMessage.AllyesAds.LinkageChannel value) {
        if (linkageChannelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinkageChannelIsMutable();
          linkageChannel_.set(index, value);
          onChanged();
        } else {
          linkageChannelBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
       */
      public Builder setLinkageChannel(
          int index, de.cache.DeliveryMessage.AllyesAds.LinkageChannel.Builder builderForValue) {
        if (linkageChannelBuilder_ == null) {
          ensureLinkageChannelIsMutable();
          linkageChannel_.set(index, builderForValue.build());
          onChanged();
        } else {
          linkageChannelBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
       */
      public Builder addLinkageChannel(de.cache.DeliveryMessage.AllyesAds.LinkageChannel value) {
        if (linkageChannelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinkageChannelIsMutable();
          linkageChannel_.add(value);
          onChanged();
        } else {
          linkageChannelBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
       */
      public Builder addLinkageChannel(
          int index, de.cache.DeliveryMessage.AllyesAds.LinkageChannel value) {
        if (linkageChannelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinkageChannelIsMutable();
          linkageChannel_.add(index, value);
          onChanged();
        } else {
          linkageChannelBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
       */
      public Builder addLinkageChannel(
          de.cache.DeliveryMessage.AllyesAds.LinkageChannel.Builder builderForValue) {
        if (linkageChannelBuilder_ == null) {
          ensureLinkageChannelIsMutable();
          linkageChannel_.add(builderForValue.build());
          onChanged();
        } else {
          linkageChannelBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
       */
      public Builder addLinkageChannel(
          int index, de.cache.DeliveryMessage.AllyesAds.LinkageChannel.Builder builderForValue) {
        if (linkageChannelBuilder_ == null) {
          ensureLinkageChannelIsMutable();
          linkageChannel_.add(index, builderForValue.build());
          onChanged();
        } else {
          linkageChannelBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
       */
      public Builder addAllLinkageChannel(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.AllyesAds.LinkageChannel> values) {
        if (linkageChannelBuilder_ == null) {
          ensureLinkageChannelIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, linkageChannel_);
          onChanged();
        } else {
          linkageChannelBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
       */
      public Builder clearLinkageChannel() {
        if (linkageChannelBuilder_ == null) {
          linkageChannel_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          linkageChannelBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
       */
      public Builder removeLinkageChannel(int index) {
        if (linkageChannelBuilder_ == null) {
          ensureLinkageChannelIsMutable();
          linkageChannel_.remove(index);
          onChanged();
        } else {
          linkageChannelBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
       */
      public de.cache.DeliveryMessage.AllyesAds.LinkageChannel.Builder getLinkageChannelBuilder(
          int index) {
        return getLinkageChannelFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
       */
      public de.cache.DeliveryMessage.AllyesAds.LinkageChannelOrBuilder getLinkageChannelOrBuilder(
          int index) {
        if (linkageChannelBuilder_ == null) {
          return linkageChannel_.get(index);  } else {
          return linkageChannelBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.AllyesAds.LinkageChannelOrBuilder> 
           getLinkageChannelOrBuilderList() {
        if (linkageChannelBuilder_ != null) {
          return linkageChannelBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(linkageChannel_);
        }
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
       */
      public de.cache.DeliveryMessage.AllyesAds.LinkageChannel.Builder addLinkageChannelBuilder() {
        return getLinkageChannelFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.AllyesAds.LinkageChannel.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
       */
      public de.cache.DeliveryMessage.AllyesAds.LinkageChannel.Builder addLinkageChannelBuilder(
          int index) {
        return getLinkageChannelFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.AllyesAds.LinkageChannel.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageChannel linkageChannel = 12;</code>
       */
      public java.util.List<de.cache.DeliveryMessage.AllyesAds.LinkageChannel.Builder> 
           getLinkageChannelBuilderList() {
        return getLinkageChannelFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.AllyesAds.LinkageChannel, de.cache.DeliveryMessage.AllyesAds.LinkageChannel.Builder, de.cache.DeliveryMessage.AllyesAds.LinkageChannelOrBuilder> 
          getLinkageChannelFieldBuilder() {
        if (linkageChannelBuilder_ == null) {
          linkageChannelBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.AllyesAds.LinkageChannel, de.cache.DeliveryMessage.AllyesAds.LinkageChannel.Builder, de.cache.DeliveryMessage.AllyesAds.LinkageChannelOrBuilder>(
                  linkageChannel_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          linkageChannel_ = null;
        }
        return linkageChannelBuilder_;
      }

      private java.util.List<de.cache.DeliveryMessage.AllyesAds.LinkageSolution> linkageSolution_ =
        java.util.Collections.emptyList();
      private void ensureLinkageSolutionIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          linkageSolution_ = new java.util.ArrayList<de.cache.DeliveryMessage.AllyesAds.LinkageSolution>(linkageSolution_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.AllyesAds.LinkageSolution, de.cache.DeliveryMessage.AllyesAds.LinkageSolution.Builder, de.cache.DeliveryMessage.AllyesAds.LinkageSolutionOrBuilder> linkageSolutionBuilder_;

      /**
       * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
       */
      public java.util.List<de.cache.DeliveryMessage.AllyesAds.LinkageSolution> getLinkageSolutionList() {
        if (linkageSolutionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(linkageSolution_);
        } else {
          return linkageSolutionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
       */
      public int getLinkageSolutionCount() {
        if (linkageSolutionBuilder_ == null) {
          return linkageSolution_.size();
        } else {
          return linkageSolutionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
       */
      public de.cache.DeliveryMessage.AllyesAds.LinkageSolution getLinkageSolution(int index) {
        if (linkageSolutionBuilder_ == null) {
          return linkageSolution_.get(index);
        } else {
          return linkageSolutionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
       */
      public Builder setLinkageSolution(
          int index, de.cache.DeliveryMessage.AllyesAds.LinkageSolution value) {
        if (linkageSolutionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinkageSolutionIsMutable();
          linkageSolution_.set(index, value);
          onChanged();
        } else {
          linkageSolutionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
       */
      public Builder setLinkageSolution(
          int index, de.cache.DeliveryMessage.AllyesAds.LinkageSolution.Builder builderForValue) {
        if (linkageSolutionBuilder_ == null) {
          ensureLinkageSolutionIsMutable();
          linkageSolution_.set(index, builderForValue.build());
          onChanged();
        } else {
          linkageSolutionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
       */
      public Builder addLinkageSolution(de.cache.DeliveryMessage.AllyesAds.LinkageSolution value) {
        if (linkageSolutionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinkageSolutionIsMutable();
          linkageSolution_.add(value);
          onChanged();
        } else {
          linkageSolutionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
       */
      public Builder addLinkageSolution(
          int index, de.cache.DeliveryMessage.AllyesAds.LinkageSolution value) {
        if (linkageSolutionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinkageSolutionIsMutable();
          linkageSolution_.add(index, value);
          onChanged();
        } else {
          linkageSolutionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
       */
      public Builder addLinkageSolution(
          de.cache.DeliveryMessage.AllyesAds.LinkageSolution.Builder builderForValue) {
        if (linkageSolutionBuilder_ == null) {
          ensureLinkageSolutionIsMutable();
          linkageSolution_.add(builderForValue.build());
          onChanged();
        } else {
          linkageSolutionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
       */
      public Builder addLinkageSolution(
          int index, de.cache.DeliveryMessage.AllyesAds.LinkageSolution.Builder builderForValue) {
        if (linkageSolutionBuilder_ == null) {
          ensureLinkageSolutionIsMutable();
          linkageSolution_.add(index, builderForValue.build());
          onChanged();
        } else {
          linkageSolutionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
       */
      public Builder addAllLinkageSolution(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.AllyesAds.LinkageSolution> values) {
        if (linkageSolutionBuilder_ == null) {
          ensureLinkageSolutionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, linkageSolution_);
          onChanged();
        } else {
          linkageSolutionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
       */
      public Builder clearLinkageSolution() {
        if (linkageSolutionBuilder_ == null) {
          linkageSolution_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          linkageSolutionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
       */
      public Builder removeLinkageSolution(int index) {
        if (linkageSolutionBuilder_ == null) {
          ensureLinkageSolutionIsMutable();
          linkageSolution_.remove(index);
          onChanged();
        } else {
          linkageSolutionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
       */
      public de.cache.DeliveryMessage.AllyesAds.LinkageSolution.Builder getLinkageSolutionBuilder(
          int index) {
        return getLinkageSolutionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
       */
      public de.cache.DeliveryMessage.AllyesAds.LinkageSolutionOrBuilder getLinkageSolutionOrBuilder(
          int index) {
        if (linkageSolutionBuilder_ == null) {
          return linkageSolution_.get(index);  } else {
          return linkageSolutionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.AllyesAds.LinkageSolutionOrBuilder> 
           getLinkageSolutionOrBuilderList() {
        if (linkageSolutionBuilder_ != null) {
          return linkageSolutionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(linkageSolution_);
        }
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
       */
      public de.cache.DeliveryMessage.AllyesAds.LinkageSolution.Builder addLinkageSolutionBuilder() {
        return getLinkageSolutionFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.AllyesAds.LinkageSolution.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
       */
      public de.cache.DeliveryMessage.AllyesAds.LinkageSolution.Builder addLinkageSolutionBuilder(
          int index) {
        return getLinkageSolutionFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.AllyesAds.LinkageSolution.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.AllyesAds.LinkageSolution linkageSolution = 13;</code>
       */
      public java.util.List<de.cache.DeliveryMessage.AllyesAds.LinkageSolution.Builder> 
           getLinkageSolutionBuilderList() {
        return getLinkageSolutionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.AllyesAds.LinkageSolution, de.cache.DeliveryMessage.AllyesAds.LinkageSolution.Builder, de.cache.DeliveryMessage.AllyesAds.LinkageSolutionOrBuilder> 
          getLinkageSolutionFieldBuilder() {
        if (linkageSolutionBuilder_ == null) {
          linkageSolutionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.AllyesAds.LinkageSolution, de.cache.DeliveryMessage.AllyesAds.LinkageSolution.Builder, de.cache.DeliveryMessage.AllyesAds.LinkageSolutionOrBuilder>(
                  linkageSolution_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          linkageSolution_ = null;
        }
        return linkageSolutionBuilder_;
      }

      private java.util.List<de.cache.DeliveryMessage.CacheFile> tplFile_ =
        java.util.Collections.emptyList();
      private void ensureTplFileIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          tplFile_ = new java.util.ArrayList<de.cache.DeliveryMessage.CacheFile>(tplFile_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder> tplFileBuilder_;

      /**
       * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
       *
       * <pre>
       *模板文件
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.CacheFile> getTplFileList() {
        if (tplFileBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tplFile_);
        } else {
          return tplFileBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
       *
       * <pre>
       *模板文件
       * </pre>
       */
      public int getTplFileCount() {
        if (tplFileBuilder_ == null) {
          return tplFile_.size();
        } else {
          return tplFileBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
       *
       * <pre>
       *模板文件
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFile getTplFile(int index) {
        if (tplFileBuilder_ == null) {
          return tplFile_.get(index);
        } else {
          return tplFileBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
       *
       * <pre>
       *模板文件
       * </pre>
       */
      public Builder setTplFile(
          int index, de.cache.DeliveryMessage.CacheFile value) {
        if (tplFileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTplFileIsMutable();
          tplFile_.set(index, value);
          onChanged();
        } else {
          tplFileBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
       *
       * <pre>
       *模板文件
       * </pre>
       */
      public Builder setTplFile(
          int index, de.cache.DeliveryMessage.CacheFile.Builder builderForValue) {
        if (tplFileBuilder_ == null) {
          ensureTplFileIsMutable();
          tplFile_.set(index, builderForValue.build());
          onChanged();
        } else {
          tplFileBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
       *
       * <pre>
       *模板文件
       * </pre>
       */
      public Builder addTplFile(de.cache.DeliveryMessage.CacheFile value) {
        if (tplFileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTplFileIsMutable();
          tplFile_.add(value);
          onChanged();
        } else {
          tplFileBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
       *
       * <pre>
       *模板文件
       * </pre>
       */
      public Builder addTplFile(
          int index, de.cache.DeliveryMessage.CacheFile value) {
        if (tplFileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTplFileIsMutable();
          tplFile_.add(index, value);
          onChanged();
        } else {
          tplFileBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
       *
       * <pre>
       *模板文件
       * </pre>
       */
      public Builder addTplFile(
          de.cache.DeliveryMessage.CacheFile.Builder builderForValue) {
        if (tplFileBuilder_ == null) {
          ensureTplFileIsMutable();
          tplFile_.add(builderForValue.build());
          onChanged();
        } else {
          tplFileBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
       *
       * <pre>
       *模板文件
       * </pre>
       */
      public Builder addTplFile(
          int index, de.cache.DeliveryMessage.CacheFile.Builder builderForValue) {
        if (tplFileBuilder_ == null) {
          ensureTplFileIsMutable();
          tplFile_.add(index, builderForValue.build());
          onChanged();
        } else {
          tplFileBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
       *
       * <pre>
       *模板文件
       * </pre>
       */
      public Builder addAllTplFile(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.CacheFile> values) {
        if (tplFileBuilder_ == null) {
          ensureTplFileIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tplFile_);
          onChanged();
        } else {
          tplFileBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
       *
       * <pre>
       *模板文件
       * </pre>
       */
      public Builder clearTplFile() {
        if (tplFileBuilder_ == null) {
          tplFile_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          tplFileBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
       *
       * <pre>
       *模板文件
       * </pre>
       */
      public Builder removeTplFile(int index) {
        if (tplFileBuilder_ == null) {
          ensureTplFileIsMutable();
          tplFile_.remove(index);
          onChanged();
        } else {
          tplFileBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
       *
       * <pre>
       *模板文件
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFile.Builder getTplFileBuilder(
          int index) {
        return getTplFileFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
       *
       * <pre>
       *模板文件
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFileOrBuilder getTplFileOrBuilder(
          int index) {
        if (tplFileBuilder_ == null) {
          return tplFile_.get(index);  } else {
          return tplFileBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
       *
       * <pre>
       *模板文件
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.CacheFileOrBuilder> 
           getTplFileOrBuilderList() {
        if (tplFileBuilder_ != null) {
          return tplFileBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tplFile_);
        }
      }
      /**
       * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
       *
       * <pre>
       *模板文件
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFile.Builder addTplFileBuilder() {
        return getTplFileFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.CacheFile.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
       *
       * <pre>
       *模板文件
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFile.Builder addTplFileBuilder(
          int index) {
        return getTplFileFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.CacheFile.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.CacheFile tplFile = 14;</code>
       *
       * <pre>
       *模板文件
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.CacheFile.Builder> 
           getTplFileBuilderList() {
        return getTplFileFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder> 
          getTplFileFieldBuilder() {
        if (tplFileBuilder_ == null) {
          tplFileBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder>(
                  tplFile_,
                  ((bitField0_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          tplFile_ = null;
        }
        return tplFileBuilder_;
      }

      private java.util.List<de.cache.DeliveryMessage.CacheFile> otherFeatures_ =
        java.util.Collections.emptyList();
      private void ensureOtherFeaturesIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          otherFeatures_ = new java.util.ArrayList<de.cache.DeliveryMessage.CacheFile>(otherFeatures_);
          bitField0_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder> otherFeaturesBuilder_;

      /**
       * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
       *
       * <pre>
       *其他功能文件
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.CacheFile> getOtherFeaturesList() {
        if (otherFeaturesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(otherFeatures_);
        } else {
          return otherFeaturesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
       *
       * <pre>
       *其他功能文件
       * </pre>
       */
      public int getOtherFeaturesCount() {
        if (otherFeaturesBuilder_ == null) {
          return otherFeatures_.size();
        } else {
          return otherFeaturesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
       *
       * <pre>
       *其他功能文件
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFile getOtherFeatures(int index) {
        if (otherFeaturesBuilder_ == null) {
          return otherFeatures_.get(index);
        } else {
          return otherFeaturesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
       *
       * <pre>
       *其他功能文件
       * </pre>
       */
      public Builder setOtherFeatures(
          int index, de.cache.DeliveryMessage.CacheFile value) {
        if (otherFeaturesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherFeaturesIsMutable();
          otherFeatures_.set(index, value);
          onChanged();
        } else {
          otherFeaturesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
       *
       * <pre>
       *其他功能文件
       * </pre>
       */
      public Builder setOtherFeatures(
          int index, de.cache.DeliveryMessage.CacheFile.Builder builderForValue) {
        if (otherFeaturesBuilder_ == null) {
          ensureOtherFeaturesIsMutable();
          otherFeatures_.set(index, builderForValue.build());
          onChanged();
        } else {
          otherFeaturesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
       *
       * <pre>
       *其他功能文件
       * </pre>
       */
      public Builder addOtherFeatures(de.cache.DeliveryMessage.CacheFile value) {
        if (otherFeaturesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherFeaturesIsMutable();
          otherFeatures_.add(value);
          onChanged();
        } else {
          otherFeaturesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
       *
       * <pre>
       *其他功能文件
       * </pre>
       */
      public Builder addOtherFeatures(
          int index, de.cache.DeliveryMessage.CacheFile value) {
        if (otherFeaturesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherFeaturesIsMutable();
          otherFeatures_.add(index, value);
          onChanged();
        } else {
          otherFeaturesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
       *
       * <pre>
       *其他功能文件
       * </pre>
       */
      public Builder addOtherFeatures(
          de.cache.DeliveryMessage.CacheFile.Builder builderForValue) {
        if (otherFeaturesBuilder_ == null) {
          ensureOtherFeaturesIsMutable();
          otherFeatures_.add(builderForValue.build());
          onChanged();
        } else {
          otherFeaturesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
       *
       * <pre>
       *其他功能文件
       * </pre>
       */
      public Builder addOtherFeatures(
          int index, de.cache.DeliveryMessage.CacheFile.Builder builderForValue) {
        if (otherFeaturesBuilder_ == null) {
          ensureOtherFeaturesIsMutable();
          otherFeatures_.add(index, builderForValue.build());
          onChanged();
        } else {
          otherFeaturesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
       *
       * <pre>
       *其他功能文件
       * </pre>
       */
      public Builder addAllOtherFeatures(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.CacheFile> values) {
        if (otherFeaturesBuilder_ == null) {
          ensureOtherFeaturesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, otherFeatures_);
          onChanged();
        } else {
          otherFeaturesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
       *
       * <pre>
       *其他功能文件
       * </pre>
       */
      public Builder clearOtherFeatures() {
        if (otherFeaturesBuilder_ == null) {
          otherFeatures_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          otherFeaturesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
       *
       * <pre>
       *其他功能文件
       * </pre>
       */
      public Builder removeOtherFeatures(int index) {
        if (otherFeaturesBuilder_ == null) {
          ensureOtherFeaturesIsMutable();
          otherFeatures_.remove(index);
          onChanged();
        } else {
          otherFeaturesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
       *
       * <pre>
       *其他功能文件
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFile.Builder getOtherFeaturesBuilder(
          int index) {
        return getOtherFeaturesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
       *
       * <pre>
       *其他功能文件
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFileOrBuilder getOtherFeaturesOrBuilder(
          int index) {
        if (otherFeaturesBuilder_ == null) {
          return otherFeatures_.get(index);  } else {
          return otherFeaturesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
       *
       * <pre>
       *其他功能文件
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.CacheFileOrBuilder> 
           getOtherFeaturesOrBuilderList() {
        if (otherFeaturesBuilder_ != null) {
          return otherFeaturesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(otherFeatures_);
        }
      }
      /**
       * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
       *
       * <pre>
       *其他功能文件
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFile.Builder addOtherFeaturesBuilder() {
        return getOtherFeaturesFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.CacheFile.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
       *
       * <pre>
       *其他功能文件
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFile.Builder addOtherFeaturesBuilder(
          int index) {
        return getOtherFeaturesFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.CacheFile.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.CacheFile otherFeatures = 15;</code>
       *
       * <pre>
       *其他功能文件
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.CacheFile.Builder> 
           getOtherFeaturesBuilderList() {
        return getOtherFeaturesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder> 
          getOtherFeaturesFieldBuilder() {
        if (otherFeaturesBuilder_ == null) {
          otherFeaturesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder>(
                  otherFeatures_,
                  ((bitField0_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          otherFeatures_ = null;
        }
        return otherFeaturesBuilder_;
      }

      private de.cache.DeliveryMessage.CacheFile iPlib_ = de.cache.DeliveryMessage.CacheFile.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder> iPlibBuilder_;
      /**
       * <code>optional .de.cache.CacheFile IPlib = 16;</code>
       *
       * <pre>
       *IP库文件，与DB伴随，不同DB可以设置不一样IP库
       * </pre>
       */
      public boolean hasIPlib() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .de.cache.CacheFile IPlib = 16;</code>
       *
       * <pre>
       *IP库文件，与DB伴随，不同DB可以设置不一样IP库
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFile getIPlib() {
        if (iPlibBuilder_ == null) {
          return iPlib_;
        } else {
          return iPlibBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .de.cache.CacheFile IPlib = 16;</code>
       *
       * <pre>
       *IP库文件，与DB伴随，不同DB可以设置不一样IP库
       * </pre>
       */
      public Builder setIPlib(de.cache.DeliveryMessage.CacheFile value) {
        if (iPlibBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          iPlib_ = value;
          onChanged();
        } else {
          iPlibBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .de.cache.CacheFile IPlib = 16;</code>
       *
       * <pre>
       *IP库文件，与DB伴随，不同DB可以设置不一样IP库
       * </pre>
       */
      public Builder setIPlib(
          de.cache.DeliveryMessage.CacheFile.Builder builderForValue) {
        if (iPlibBuilder_ == null) {
          iPlib_ = builderForValue.build();
          onChanged();
        } else {
          iPlibBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .de.cache.CacheFile IPlib = 16;</code>
       *
       * <pre>
       *IP库文件，与DB伴随，不同DB可以设置不一样IP库
       * </pre>
       */
      public Builder mergeIPlib(de.cache.DeliveryMessage.CacheFile value) {
        if (iPlibBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000) &&
              iPlib_ != de.cache.DeliveryMessage.CacheFile.getDefaultInstance()) {
            iPlib_ =
              de.cache.DeliveryMessage.CacheFile.newBuilder(iPlib_).mergeFrom(value).buildPartial();
          } else {
            iPlib_ = value;
          }
          onChanged();
        } else {
          iPlibBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .de.cache.CacheFile IPlib = 16;</code>
       *
       * <pre>
       *IP库文件，与DB伴随，不同DB可以设置不一样IP库
       * </pre>
       */
      public Builder clearIPlib() {
        if (iPlibBuilder_ == null) {
          iPlib_ = de.cache.DeliveryMessage.CacheFile.getDefaultInstance();
          onChanged();
        } else {
          iPlibBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .de.cache.CacheFile IPlib = 16;</code>
       *
       * <pre>
       *IP库文件，与DB伴随，不同DB可以设置不一样IP库
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFile.Builder getIPlibBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getIPlibFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .de.cache.CacheFile IPlib = 16;</code>
       *
       * <pre>
       *IP库文件，与DB伴随，不同DB可以设置不一样IP库
       * </pre>
       */
      public de.cache.DeliveryMessage.CacheFileOrBuilder getIPlibOrBuilder() {
        if (iPlibBuilder_ != null) {
          return iPlibBuilder_.getMessageOrBuilder();
        } else {
          return iPlib_;
        }
      }
      /**
       * <code>optional .de.cache.CacheFile IPlib = 16;</code>
       *
       * <pre>
       *IP库文件，与DB伴随，不同DB可以设置不一样IP库
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder> 
          getIPlibFieldBuilder() {
        if (iPlibBuilder_ == null) {
          iPlibBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.cache.DeliveryMessage.CacheFile, de.cache.DeliveryMessage.CacheFile.Builder, de.cache.DeliveryMessage.CacheFileOrBuilder>(
                  getIPlib(),
                  getParentForChildren(),
                  isClean());
          iPlib_ = null;
        }
        return iPlibBuilder_;
      }

      private java.util.List<de.cache.DeliveryMessage.BesPublisherSettings> besSeting_ =
        java.util.Collections.emptyList();
      private void ensureBesSetingIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          besSeting_ = new java.util.ArrayList<de.cache.DeliveryMessage.BesPublisherSettings>(besSeting_);
          bitField0_ |= 0x00010000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.BesPublisherSettings, de.cache.DeliveryMessage.BesPublisherSettings.Builder, de.cache.DeliveryMessage.BesPublisherSettingsOrBuilder> besSetingBuilder_;

      /**
       * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
       *
       * <pre>
       *bes publisher setting list
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.BesPublisherSettings> getBesSetingList() {
        if (besSetingBuilder_ == null) {
          return java.util.Collections.unmodifiableList(besSeting_);
        } else {
          return besSetingBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
       *
       * <pre>
       *bes publisher setting list
       * </pre>
       */
      public int getBesSetingCount() {
        if (besSetingBuilder_ == null) {
          return besSeting_.size();
        } else {
          return besSetingBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
       *
       * <pre>
       *bes publisher setting list
       * </pre>
       */
      public de.cache.DeliveryMessage.BesPublisherSettings getBesSeting(int index) {
        if (besSetingBuilder_ == null) {
          return besSeting_.get(index);
        } else {
          return besSetingBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
       *
       * <pre>
       *bes publisher setting list
       * </pre>
       */
      public Builder setBesSeting(
          int index, de.cache.DeliveryMessage.BesPublisherSettings value) {
        if (besSetingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBesSetingIsMutable();
          besSeting_.set(index, value);
          onChanged();
        } else {
          besSetingBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
       *
       * <pre>
       *bes publisher setting list
       * </pre>
       */
      public Builder setBesSeting(
          int index, de.cache.DeliveryMessage.BesPublisherSettings.Builder builderForValue) {
        if (besSetingBuilder_ == null) {
          ensureBesSetingIsMutable();
          besSeting_.set(index, builderForValue.build());
          onChanged();
        } else {
          besSetingBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
       *
       * <pre>
       *bes publisher setting list
       * </pre>
       */
      public Builder addBesSeting(de.cache.DeliveryMessage.BesPublisherSettings value) {
        if (besSetingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBesSetingIsMutable();
          besSeting_.add(value);
          onChanged();
        } else {
          besSetingBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
       *
       * <pre>
       *bes publisher setting list
       * </pre>
       */
      public Builder addBesSeting(
          int index, de.cache.DeliveryMessage.BesPublisherSettings value) {
        if (besSetingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBesSetingIsMutable();
          besSeting_.add(index, value);
          onChanged();
        } else {
          besSetingBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
       *
       * <pre>
       *bes publisher setting list
       * </pre>
       */
      public Builder addBesSeting(
          de.cache.DeliveryMessage.BesPublisherSettings.Builder builderForValue) {
        if (besSetingBuilder_ == null) {
          ensureBesSetingIsMutable();
          besSeting_.add(builderForValue.build());
          onChanged();
        } else {
          besSetingBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
       *
       * <pre>
       *bes publisher setting list
       * </pre>
       */
      public Builder addBesSeting(
          int index, de.cache.DeliveryMessage.BesPublisherSettings.Builder builderForValue) {
        if (besSetingBuilder_ == null) {
          ensureBesSetingIsMutable();
          besSeting_.add(index, builderForValue.build());
          onChanged();
        } else {
          besSetingBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
       *
       * <pre>
       *bes publisher setting list
       * </pre>
       */
      public Builder addAllBesSeting(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.BesPublisherSettings> values) {
        if (besSetingBuilder_ == null) {
          ensureBesSetingIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, besSeting_);
          onChanged();
        } else {
          besSetingBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
       *
       * <pre>
       *bes publisher setting list
       * </pre>
       */
      public Builder clearBesSeting() {
        if (besSetingBuilder_ == null) {
          besSeting_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
          onChanged();
        } else {
          besSetingBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
       *
       * <pre>
       *bes publisher setting list
       * </pre>
       */
      public Builder removeBesSeting(int index) {
        if (besSetingBuilder_ == null) {
          ensureBesSetingIsMutable();
          besSeting_.remove(index);
          onChanged();
        } else {
          besSetingBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
       *
       * <pre>
       *bes publisher setting list
       * </pre>
       */
      public de.cache.DeliveryMessage.BesPublisherSettings.Builder getBesSetingBuilder(
          int index) {
        return getBesSetingFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
       *
       * <pre>
       *bes publisher setting list
       * </pre>
       */
      public de.cache.DeliveryMessage.BesPublisherSettingsOrBuilder getBesSetingOrBuilder(
          int index) {
        if (besSetingBuilder_ == null) {
          return besSeting_.get(index);  } else {
          return besSetingBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
       *
       * <pre>
       *bes publisher setting list
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.BesPublisherSettingsOrBuilder> 
           getBesSetingOrBuilderList() {
        if (besSetingBuilder_ != null) {
          return besSetingBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(besSeting_);
        }
      }
      /**
       * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
       *
       * <pre>
       *bes publisher setting list
       * </pre>
       */
      public de.cache.DeliveryMessage.BesPublisherSettings.Builder addBesSetingBuilder() {
        return getBesSetingFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.BesPublisherSettings.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
       *
       * <pre>
       *bes publisher setting list
       * </pre>
       */
      public de.cache.DeliveryMessage.BesPublisherSettings.Builder addBesSetingBuilder(
          int index) {
        return getBesSetingFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.BesPublisherSettings.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.BesPublisherSettings besSeting = 17;</code>
       *
       * <pre>
       *bes publisher setting list
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.BesPublisherSettings.Builder> 
           getBesSetingBuilderList() {
        return getBesSetingFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.BesPublisherSettings, de.cache.DeliveryMessage.BesPublisherSettings.Builder, de.cache.DeliveryMessage.BesPublisherSettingsOrBuilder> 
          getBesSetingFieldBuilder() {
        if (besSetingBuilder_ == null) {
          besSetingBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.BesPublisherSettings, de.cache.DeliveryMessage.BesPublisherSettings.Builder, de.cache.DeliveryMessage.BesPublisherSettingsOrBuilder>(
                  besSeting_,
                  ((bitField0_ & 0x00010000) == 0x00010000),
                  getParentForChildren(),
                  isClean());
          besSeting_ = null;
        }
        return besSetingBuilder_;
      }

      private java.util.List<de.cache.DeliveryMessage.MaxAdsoltLevel> maxAdsoltLevel_ =
        java.util.Collections.emptyList();
      private void ensureMaxAdsoltLevelIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          maxAdsoltLevel_ = new java.util.ArrayList<de.cache.DeliveryMessage.MaxAdsoltLevel>(maxAdsoltLevel_);
          bitField0_ |= 0x00020000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.MaxAdsoltLevel, de.cache.DeliveryMessage.MaxAdsoltLevel.Builder, de.cache.DeliveryMessage.MaxAdsoltLevelOrBuilder> maxAdsoltLevelBuilder_;

      /**
       * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
       *
       * <pre>
       *max adsolt level list
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.MaxAdsoltLevel> getMaxAdsoltLevelList() {
        if (maxAdsoltLevelBuilder_ == null) {
          return java.util.Collections.unmodifiableList(maxAdsoltLevel_);
        } else {
          return maxAdsoltLevelBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
       *
       * <pre>
       *max adsolt level list
       * </pre>
       */
      public int getMaxAdsoltLevelCount() {
        if (maxAdsoltLevelBuilder_ == null) {
          return maxAdsoltLevel_.size();
        } else {
          return maxAdsoltLevelBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
       *
       * <pre>
       *max adsolt level list
       * </pre>
       */
      public de.cache.DeliveryMessage.MaxAdsoltLevel getMaxAdsoltLevel(int index) {
        if (maxAdsoltLevelBuilder_ == null) {
          return maxAdsoltLevel_.get(index);
        } else {
          return maxAdsoltLevelBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
       *
       * <pre>
       *max adsolt level list
       * </pre>
       */
      public Builder setMaxAdsoltLevel(
          int index, de.cache.DeliveryMessage.MaxAdsoltLevel value) {
        if (maxAdsoltLevelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMaxAdsoltLevelIsMutable();
          maxAdsoltLevel_.set(index, value);
          onChanged();
        } else {
          maxAdsoltLevelBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
       *
       * <pre>
       *max adsolt level list
       * </pre>
       */
      public Builder setMaxAdsoltLevel(
          int index, de.cache.DeliveryMessage.MaxAdsoltLevel.Builder builderForValue) {
        if (maxAdsoltLevelBuilder_ == null) {
          ensureMaxAdsoltLevelIsMutable();
          maxAdsoltLevel_.set(index, builderForValue.build());
          onChanged();
        } else {
          maxAdsoltLevelBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
       *
       * <pre>
       *max adsolt level list
       * </pre>
       */
      public Builder addMaxAdsoltLevel(de.cache.DeliveryMessage.MaxAdsoltLevel value) {
        if (maxAdsoltLevelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMaxAdsoltLevelIsMutable();
          maxAdsoltLevel_.add(value);
          onChanged();
        } else {
          maxAdsoltLevelBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
       *
       * <pre>
       *max adsolt level list
       * </pre>
       */
      public Builder addMaxAdsoltLevel(
          int index, de.cache.DeliveryMessage.MaxAdsoltLevel value) {
        if (maxAdsoltLevelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMaxAdsoltLevelIsMutable();
          maxAdsoltLevel_.add(index, value);
          onChanged();
        } else {
          maxAdsoltLevelBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
       *
       * <pre>
       *max adsolt level list
       * </pre>
       */
      public Builder addMaxAdsoltLevel(
          de.cache.DeliveryMessage.MaxAdsoltLevel.Builder builderForValue) {
        if (maxAdsoltLevelBuilder_ == null) {
          ensureMaxAdsoltLevelIsMutable();
          maxAdsoltLevel_.add(builderForValue.build());
          onChanged();
        } else {
          maxAdsoltLevelBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
       *
       * <pre>
       *max adsolt level list
       * </pre>
       */
      public Builder addMaxAdsoltLevel(
          int index, de.cache.DeliveryMessage.MaxAdsoltLevel.Builder builderForValue) {
        if (maxAdsoltLevelBuilder_ == null) {
          ensureMaxAdsoltLevelIsMutable();
          maxAdsoltLevel_.add(index, builderForValue.build());
          onChanged();
        } else {
          maxAdsoltLevelBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
       *
       * <pre>
       *max adsolt level list
       * </pre>
       */
      public Builder addAllMaxAdsoltLevel(
          java.lang.Iterable<? extends de.cache.DeliveryMessage.MaxAdsoltLevel> values) {
        if (maxAdsoltLevelBuilder_ == null) {
          ensureMaxAdsoltLevelIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, maxAdsoltLevel_);
          onChanged();
        } else {
          maxAdsoltLevelBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
       *
       * <pre>
       *max adsolt level list
       * </pre>
       */
      public Builder clearMaxAdsoltLevel() {
        if (maxAdsoltLevelBuilder_ == null) {
          maxAdsoltLevel_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
          onChanged();
        } else {
          maxAdsoltLevelBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
       *
       * <pre>
       *max adsolt level list
       * </pre>
       */
      public Builder removeMaxAdsoltLevel(int index) {
        if (maxAdsoltLevelBuilder_ == null) {
          ensureMaxAdsoltLevelIsMutable();
          maxAdsoltLevel_.remove(index);
          onChanged();
        } else {
          maxAdsoltLevelBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
       *
       * <pre>
       *max adsolt level list
       * </pre>
       */
      public de.cache.DeliveryMessage.MaxAdsoltLevel.Builder getMaxAdsoltLevelBuilder(
          int index) {
        return getMaxAdsoltLevelFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
       *
       * <pre>
       *max adsolt level list
       * </pre>
       */
      public de.cache.DeliveryMessage.MaxAdsoltLevelOrBuilder getMaxAdsoltLevelOrBuilder(
          int index) {
        if (maxAdsoltLevelBuilder_ == null) {
          return maxAdsoltLevel_.get(index);  } else {
          return maxAdsoltLevelBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
       *
       * <pre>
       *max adsolt level list
       * </pre>
       */
      public java.util.List<? extends de.cache.DeliveryMessage.MaxAdsoltLevelOrBuilder> 
           getMaxAdsoltLevelOrBuilderList() {
        if (maxAdsoltLevelBuilder_ != null) {
          return maxAdsoltLevelBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(maxAdsoltLevel_);
        }
      }
      /**
       * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
       *
       * <pre>
       *max adsolt level list
       * </pre>
       */
      public de.cache.DeliveryMessage.MaxAdsoltLevel.Builder addMaxAdsoltLevelBuilder() {
        return getMaxAdsoltLevelFieldBuilder().addBuilder(
            de.cache.DeliveryMessage.MaxAdsoltLevel.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
       *
       * <pre>
       *max adsolt level list
       * </pre>
       */
      public de.cache.DeliveryMessage.MaxAdsoltLevel.Builder addMaxAdsoltLevelBuilder(
          int index) {
        return getMaxAdsoltLevelFieldBuilder().addBuilder(
            index, de.cache.DeliveryMessage.MaxAdsoltLevel.getDefaultInstance());
      }
      /**
       * <code>repeated .de.cache.MaxAdsoltLevel max_adsolt_level = 18;</code>
       *
       * <pre>
       *max adsolt level list
       * </pre>
       */
      public java.util.List<de.cache.DeliveryMessage.MaxAdsoltLevel.Builder> 
           getMaxAdsoltLevelBuilderList() {
        return getMaxAdsoltLevelFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.cache.DeliveryMessage.MaxAdsoltLevel, de.cache.DeliveryMessage.MaxAdsoltLevel.Builder, de.cache.DeliveryMessage.MaxAdsoltLevelOrBuilder> 
          getMaxAdsoltLevelFieldBuilder() {
        if (maxAdsoltLevelBuilder_ == null) {
          maxAdsoltLevelBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.cache.DeliveryMessage.MaxAdsoltLevel, de.cache.DeliveryMessage.MaxAdsoltLevel.Builder, de.cache.DeliveryMessage.MaxAdsoltLevelOrBuilder>(
                  maxAdsoltLevel_,
                  ((bitField0_ & 0x00020000) == 0x00020000),
                  getParentForChildren(),
                  isClean());
          maxAdsoltLevel_ = null;
        }
        return maxAdsoltLevelBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:de.cache.AllyesAds)
    }

    static {
      defaultInstance = new AllyesAds(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:de.cache.AllyesAds)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_KeyValue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_KeyValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_DeliveryMethod_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_DeliveryMethod_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_CacheFile_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_CacheFile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_ChannelFamily_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_ChannelFamily_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_ChannelPool_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_ChannelPool_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_ChannelGroup_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_ChannelGroup_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_BlackAndWhiteList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_BlackAndWhiteList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_IPSection_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_IPSection_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_Channel_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_Channel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_Channel_RefreshInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_Channel_RefreshInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_Agency_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_Agency_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_Advertiser_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_Advertiser_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_Advertiser_SspAdvertiser_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_Advertiser_SspAdvertiser_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_FrequencyCtrl_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_FrequencyCtrl_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_Order_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_Order_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_Solution_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_Solution_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_Solution_BidInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_Solution_BidInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_Solution_SpotPlan_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_Solution_SpotPlan_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_Solution_SolutionTarget_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_Solution_SolutionTarget_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_Solution_SolutionTarget_demoTargetContent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_Solution_SolutionTarget_demoTargetContent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_Banner_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_Banner_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_Banner_DisplayMethods_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_Banner_DisplayMethods_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_Banner_DisplayMethods_MaterialInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_Banner_DisplayMethods_MaterialInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_Banner_DisplayMethods_TrackPoint_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_Banner_DisplayMethods_TrackPoint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_Banner_DynCreative_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_Banner_DynCreative_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_DbConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_DbConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_DbConfig_IPTargetingInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_DbConfig_IPTargetingInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_BesPublisherSettings_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_BesPublisherSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_MaxAdsoltLevel_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_MaxAdsoltLevel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_AllyesAds_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_AllyesAds_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_AllyesAds_LinkageChannel_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_AllyesAds_LinkageChannel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_de_cache_AllyesAds_LinkageSolution_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_cache_AllyesAds_LinkageSolution_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025deliveryMessage.proto\022\010de.cache\"&\n\010Key" +
      "Value\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"j\n\016Del" +
      "iveryMethod\022\022\n\nimpression\030\001 \001(\003\022\r\n\005click" +
      "\030\002 \001(\003\022\022\n\npercentage\030\003 \001(\005\022\016\n\006budget\030\004 \001" +
      "(\003\022\021\n\tdayBudget\030\005 \001(\004\"N\n\tCacheFile\022\020\n\010fi" +
      "leName\030\001 \001(\t\022\036\n\003cmd\030\002 \001(\0162\021.de.cache.Com" +
      "mand\022\017\n\007content\030\003 \001(\014\"R\n\rChannelFamily\022\n" +
      "\n\002id\030\001 \001(\003\022\036\n\003cmd\030\002 \001(\0162\021.de.cache.Comma" +
      "nd\022\025\n\rfixedBannerId\030\003 \003(\003\"i\n\013ChannelPool" +
      "\022\n\n\002id\030\001 \001(\003\022\036\n\003cmd\030\002 \001(\0162\021.de.cache.Com",
      "mand\022\027\n\017channelFamilyId\030\003 \001(\003\022\025\n\rfixedBa" +
      "nnerId\030\004 \003(\003\"h\n\014ChannelGroup\022\n\n\002id\030\001 \001(\003" +
      "\022\036\n\003cmd\030\002 \001(\0162\021.de.cache.Command\022\025\n\rchan" +
      "nelPoolId\030\003 \001(\003\022\025\n\rfixedBannerId\030\004 \003(\003\"9" +
      "\n\021BlackAndWhiteList\022\021\n\twhiteList\030\001 \003(\t\022\021" +
      "\n\tblackList\030\002 \003(\t\"+\n\tIPSection\022\017\n\007startI" +
      "P\030\001 \002(\004\022\r\n\005EndIP\030\002 \002(\004\"\341\005\n\007Channel\022\n\n\002id" +
      "\030\001 \001(\003\022\036\n\003cmd\030\002 \001(\0162\021.de.cache.Command\022\026" +
      "\n\016channelGroupId\030\003 \001(\003\022\022\n\nuniqueCode\030\004 \001" +
      "(\t\022\021\n\troundMode\030\005 \001(\005\022.\n\tmutexType\030\006 \001(\016",
      "2\033.de.cache.Channel.MutexType\022\022\n\nplayLis" +
      "tId\030\007 \003(\003\022\027\n\014defaultTplId\030\010 \001(\005:\0011\022\033\n\020de" +
      "faultUnitPrice\030\t \001(\003:\0010\022\r\n\005width\030\n \001(\005\022\016" +
      "\n\006height\030\013 \001(\005\022.\n\007refresh\030\014 \001(\0132\035.de.cac" +
      "he.Channel.RefreshInfo\022\024\n\014creativeType\030\r" +
      " \003(\t\022\030\n\rforcePriority\030\016 \001(\005:\0010\0226\n\021referr" +
      "erTargeting\030\017 \001(\0132\033.de.cache.BlackAndWhi" +
      "teList\0225\n\020inheritFromGConf\030\020 \001(\0162\026.de.ca" +
      "che.GlobalSwitch:\003OFF\022\'\n\037hoursAheadForSp" +
      "eedupCPCDelivery\030\021 \001(\005\022\025\n\rfixedBannerId\030",
      "\022 \003(\003\032\223\001\n\013RefreshInfo\022\035\n\022refreshInterval" +
      "Sec\030\001 \001(\005:\0010\022\034\n\024refreshTargetingHour\030\002 \003" +
      "(\005\0221\n\014locationFlag\030\003 \001(\0162\024.de.cache.Targ" +
      "etFlag:\005CLOSE\022\024\n\014locationInfo\030\004 \003(\t\"-\n\tM" +
      "utexType\022\007\n\003OFF\020\000\022\014\n\010SOLUTION\020\001\022\t\n\005ORDER" +
      "\020\002\"D\n\006Agency\022\n\n\002id\030\001 \001(\003\022\036\n\003cmd\030\002 \001(\0162\021." +
      "de.cache.Command\022\016\n\006budget\030\003 \001(\004\"\224\002\n\nAdv" +
      "ertiser\022\n\n\002id\030\001 \001(\003\022\036\n\003cmd\030\002 \001(\0162\021.de.ca" +
      "che.Command\022\020\n\010agencyId\030\003 \001(\003\022\026\n\016startTi" +
      "mestamp\030\004 \001(\003\022\024\n\014endTimestamp\030\005 \001(\003\022(\n\006m",
      "ethod\030\006 \001(\0132\030.de.cache.DeliveryMethod\022;\n" +
      "\017sspAdvertiserId\030\007 \003(\0132\".de.cache.Advert" +
      "iser.SspAdvertiser\0323\n\rSspAdvertiser\022\023\n\013a" +
      "dNetworkId\030\001 \002(\005\022\r\n\005sspid\030\002 \001(\t\"{\n\rFrequ" +
      "encyCtrl\022/\n\017isWholeDuration\030\001 \001(\0162\026.de.c" +
      "ache.GlobalSwitch\022\021\n\tvalidHour\030\002 \001(\005\022\021\n\t" +
      "frequency\030\003 \001(\005\022\023\n\013intervalSec\030\004 \001(\005\"\264\002\n" +
      "\005Order\022\n\n\002id\030\001 \001(\003\022\036\n\003cmd\030\002 \001(\0162\021.de.cac" +
      "he.Command\022\024\n\014advertiserId\030\003 \001(\003\022\026\n\016star" +
      "tTimestamp\030\004 \001(\003\022\024\n\014endTimestamp\030\005 \001(\003\0223",
      "\n\022frequencyTargeting\030\006 \001(\0132\027.de.cache.Fr" +
      "equencyCtrl\0220\n\016advertiserMask\030\007 \001(\0162\030.de" +
      ".cache.ControlledMask\022(\n\006method\030\010 \001(\0132\030." +
      "de.cache.DeliveryMethod\022*\n\006status\030\t \001(\0162" +
      "\026.de.cache.GlobalSwitch:\002ON\"\333\033\n\010Solution" +
      "\022\n\n\002id\030\001 \001(\003\022\036\n\003cmd\030\002 \001(\0162\021.de.cache.Com" +
      "mand\022\017\n\007orderId\030\003 \001(\003\022\024\n\010priority\030\004 \001(\005:" +
      "\00215\022\026\n\016startTimestamp\030\005 \001(\003\022\024\n\014endTimest" +
      "amp\030\006 \001(\003\022.\n\016timePreference\030\007 \001(\0162\026.de.c" +
      "ache.GlobalSwitch\0223\n\016speedupControl\030\010 \001(",
      "\0162\026.de.cache.GlobalSwitch:\003OFF\0225\n\014delive" +
      "ryType\030\t \001(\0162\037.de.cache.Solution.Deliver" +
      "yType\022(\n\006method\030\n \001(\0132\030.de.cache.Deliver" +
      "yMethod\022;\n\rorderCtrlFlag\030\013 \001(\0162\030.de.cach" +
      "e.ControlledMask:\nUN_CONTROL\0228\n\023frequenc" +
      "yPreference\030\014 \001(\0162\026.de.cache.GlobalSwitc" +
      "h:\003OFF\022+\n\007bidInfo\030\r \001(\0132\032.de.cache.Solut" +
      "ion.BidInfo\0223\n\016distributeFlag\030\016 \001(\0162\026.de" +
      ".cache.GlobalSwitch:\003OFF\022-\n\010spotPlan\030\017 \003" +
      "(\0132\033.de.cache.Solution.SpotPlan\0222\n\007targe",
      "ts\030\020 \001(\0132!.de.cache.Solution.SolutionTar" +
      "get\022\021\n\tchannelId\030\021 \003(\003\022\020\n\010bannerId\030\022 \003(\003" +
      "\022\024\n\014bannerPoolId\030\023 \001(\003\022\025\n\rbannerGroupId\030" +
      "\024 \001(\003\022*\n\006status\030\025 \001(\0162\026.de.cache.GlobalS" +
      "witch:\002ON\022\r\n\005price\030\026 \001(\003\022\035\n\025extraEffectI" +
      "ndicators\030\027 \001(\003\022\023\n\013adNetworkId\030\030 \003(\003\032\351\001\n" +
      "\007BidInfo\022*\n\ndynamicBid\030\001 \001(\0162\026.de.cache." +
      "GlobalSwitch\022;\n\tbidTarget\030\002 \001(\0162(.de.cac" +
      "he.Solution.BidInfo.BidTargetType\022@\n\016opt" +
      "imizeTarget\030\003 \001(\0162(.de.cache.Solution.Bi",
      "dInfo.BidTargetType\"3\n\rBidTargetType\022\007\n\003" +
      "CPM\020\003\022\007\n\003CPC\020\004\022\007\n\003CPA\020\007\022\007\n\003ROI\020\010\032\257\001\n\010Spo" +
      "tPlan\022\n\n\002id\030\001 \001(\003\022\026\n\016startTimestamp\030\002 \001(" +
      "\003\022\024\n\014endTimestamp\030\003 \001(\003\022\026\n\016dailyStartTim" +
      "e\030\004 \001(\005\022\024\n\014dailyEndTime\030\005 \001(\005\022\021\n\tdayOfWe" +
      "ek\030\006 \003(\005\022(\n\006method\030\007 \001(\0132\030.de.cache.Deli" +
      "veryMethod\032\342\020\n\016SolutionTarget\022.\n\rfrequen" +
      "cyCtrl\030\001 \001(\0132\027.de.cache.FrequencyCtrl\0222\n" +
      "\016orderFrequency\030\002 \001(\0162\026.de.cache.GlobalS" +
      "witch:\002ON\022/\n\016clickFrequency\030\003 \001(\0132\027.de.c",
      "ache.FrequencyCtrl\022?\n\032stopImpressionWhen" +
      "MaxClick\030\004 \001(\0162\026.de.cache.GlobalSwitch:\003" +
      "OFF\0221\n\014locationFlag\030\005 \001(\0162\024.de.cache.Tar" +
      "getFlag:\005CLOSE\022\020\n\010location\030\006 \003(\t\0223\n\016univ" +
      "ersityFlag\030\007 \001(\0162\024.de.cache.TargetFlag:\005" +
      "CLOSE\0221\n\014languageFlag\030\010 \001(\0162\024.de.cache.T" +
      "argetFlag:\005CLOSE\022\020\n\010language\030\t \003(\t\022+\n\006os" +
      "Flag\030\n \001(\0162\024.de.cache.TargetFlag:\005CLOSE\022" +
      "\n\n\002os\030\013 \003(\t\0220\n\013linkageFlag\030\014 \001(\0162\026.de.ca" +
      "che.GlobalSwitch:\003OFF\0220\n\013keywordFlag\030\r \001",
      "(\0162\024.de.cache.TargetFlag:\005CLOSE\022\017\n\007keywo" +
      "rd\030\016 \001(\t\0220\n\013browserFlag\030\017 \001(\0162\024.de.cache" +
      ".TargetFlag:\005CLOSE\022\017\n\007browser\030\020 \003(\t\0224\n\017d" +
      "emographicFlag\030\021 \001(\0162\026.de.cache.GlobalSw" +
      "itch:\003OFF\0227\n\022audienceTargetFlag\030\022 \001(\0162\024." +
      "de.cache.TargetFlag:\005CLOSE\022\026\n\016audienceTa" +
      "rget\030\023 \001(\t\022+\n\006csFlag\030\024 \001(\0162\026.de.cache.Gl" +
      "obalSwitch:\003OFF\0226\n\021contentTargetFlag\030\025 \001" +
      "(\0162\024.de.cache.TargetFlag:\005CLOSE\022\025\n\rconte" +
      "ntTarget\030\026 \001(\t\0224\n\017retargetingFlag\030\027 \001(\0162",
      "\024.de.cache.TargetFlag:\005CLOSE\022\023\n\013retarget" +
      "ing\030\030 \001(\t\022&\n\tdealFiles\030\031 \003(\0132\023.de.cache." +
      "CacheFile\022\024\n\014cpaOwnerType\030\032 \001(\t\022\r\n\005btTag" +
      "\030\033 \003(\t\022(\n\013ipWhitelist\030\034 \003(\0132\023.de.cache.I" +
      "PSection\022(\n\013ipBlacklist\030\035 \003(\0132\023.de.cache" +
      ".IPSection\022\032\n\022forceSolutionTimes\030\036 \001(\t\022-" +
      "\n\010referrer\030\037 \001(\0132\033.de.cache.BlackAndWhit" +
      "eList\0225\n\020inheritFromGConf\030  \001(\0162\026.de.cac" +
      "he.GlobalSwitch:\003OFF\022#\n\006device\030! \001(\0132\023.d" +
      "e.cache.CacheFile\022$\n\007appData\030\" \001(\0132\023.de.",
      "cache.CacheFile\022-\n\020positioningOrder\030# \001(" +
      "\0132\023.de.cache.CacheFile\022.\n\rtrafficSource\030" +
      "$ \003(\0162\027.de.cache.TrafficSource\022\016\n\006tagIds" +
      "\030% \003(\t\022\021\n\tPMPDealId\030& \001(\t\022:\n\007carrier\030\' \003" +
      "(\0162).de.cache.Solution.SolutionTarget.Ca" +
      "rrier\022I\n\017connection_type\030( \003(\01620.de.cach" +
      "e.Solution.SolutionTarget.ConnectionType" +
      "\022N\n\021demographicTarget\030) \001(\01323.de.cache.S" +
      "olution.SolutionTarget.demoTargetContent" +
      "\032\225\002\n\021demoTargetContent\022/\n\ngenderFlag\030\001 \001",
      "(\0162\024.de.cache.TargetFlag:\005CLOSE\022\016\n\006gende" +
      "r\030\002 \003(\t\022,\n\007ageFlag\030\003 \001(\0162\024.de.cache.Targ" +
      "etFlag:\005CLOSE\022\013\n\003age\030\004 \003(\t\022/\n\nintentFlag" +
      "\030\005 \001(\0162\024.de.cache.TargetFlag:\005CLOSE\022\016\n\006i" +
      "ntent\030\006 \003(\t\0221\n\014interestFlag\030\007 \001(\0162\024.de.c" +
      "ache.TargetFlag:\005CLOSE\022\020\n\010interest\030\010 \003(\t" +
      "\"Q\n\007Carrier\022\022\n\016CarrierUnknown\020\000\022\017\n\013China" +
      "Mobile\020\001\022\017\n\013ChinaUnicom\020\002\022\020\n\014ChinaTeleco" +
      "m\020\003\"J\n\016ConnectionType\022\023\n\017ConnTypeUnknown" +
      "\020\000\022\010\n\004Wifi\020\001\022\007\n\003_2G\020\002\022\007\n\003_3G\020\003\022\007\n\003_4G\020\004\"",
      "\207\001\n\014DeliveryType\022\007\n\003CPM\020\000\022\007\n\003CPD\020\001\022\007\n\003CP" +
      "C\020\002\022\026\n\022CPM_CAP_FOR_PRICES\020\003\022\026\n\022CPC_CAP_F" +
      "OR_PRICES\020\004\022\025\n\021CPM_QUOTED_PRICES\020\005\022\025\n\021CP" +
      "C_QUOTED_PRICES\020\006\"\331\014\n\006Banner\022\n\n\002id\030\001 \001(\003" +
      "\022\036\n\003cmd\030\002 \001(\0162\021.de.cache.Command\022\016\n\006weig" +
      "ht\030\003 \001(\005\022\026\n\016startTimestamp\030\004 \001(\003\022\024\n\014endT" +
      "imestamp\030\005 \001(\003\022\014\n\004size\030\006 \001(\004\022\020\n\010trackUrl" +
      "\030\007 \001(\t\022\017\n\007tplName\030\010 \001(\t\022\r\n\005width\030\t \001(\005\022\016" +
      "\n\006height\030\n \001(\005\022.\n\rtrafficSource\030\013 \003(\0162\027." +
      "de.cache.TrafficSource\0226\n\rdisplayMethod\030",
      "\014 \003(\0132\037.de.cache.Banner.DisplayMethods\0221" +
      "\n\014Interstitial\030\r \001(\0162\026.de.cache.GlobalSw" +
      "itch:\003OFF\0224\n\017mobileOptimized\030\016 \001(\0162\026.de." +
      "cache.GlobalSwitch:\003OFF\022*\n\006status\030\017 \001(\0162" +
      "\026.de.cache.GlobalSwitch:\002ON\022\022\n\ntemplateI" +
      "d\030\020 \001(\t\022\022\n\nmaterialId\030\021 \001(\003\022\024\n\014creativeT" +
      "ype\030\022 \003(\003\0221\n\013dynCreative\030\023 \001(\0132\034.de.cach" +
      "e.Banner.DynCreative\022\023\n\013clickMonUrl\030\024 \003(" +
      "\t\022:\n\020interaction_type\030\025 \001(\0162 .de.cache.B" +
      "anner.InteractionType\022\021\n\tmax_level\030\026 \001(\005",
      "\032\262\006\n\016DisplayMethods\022\023\n\013adNetworkId\030\001 \001(\005" +
      "\022\032\n\022creativeType_unsed\030\002 \001(\t\022\020\n\010property" +
      "\030\003 \003(\t\022\020\n\010category\030\004 \003(\t\022\022\n\nresponseId\030\005" +
      " \001(\003\022\017\n\007charset\030\006 \001(\t\022\016\n\006adType\030\007 \001(\t\022,\n" +
      "\007payFlag\030\010 \001(\0162\026.de.cache.GlobalSwitch:\003" +
      "OFF\022\017\n\007tplCode\030\t \001(\t\022&\n\ncustomInfo\030\n \003(\013" +
      "2\022.de.cache.KeyValue\022>\n\010material\030\013 \003(\0132," +
      ".de.cache.Banner.DisplayMethods.Material" +
      "Info\022>\n\ntrackPoint\030\014 \003(\0132*.de.cache.Bann" +
      "er.DisplayMethods.TrackPoint\022$\n\010thirdUrl",
      "\030\r \003(\0132\022.de.cache.KeyValue\022\026\n\016targetOfNe" +
      "wWin\030\016 \001(\t\022.\n\rtrafficSource\030\017 \001(\0162\027.de.c" +
      "ache.TrafficSource\022\025\n\rsspCreativeId\030\020 \001(" +
      "\t\022\016\n\006sspUrl\030\021 \001(\t\022\'\n\013sspProperty\030\022 \003(\0132\022" +
      ".de.cache.KeyValue\022!\n\007os_type\030\023 \003(\0162\020.de" +
      ".cache.OsType\022\r\n\005isSsl\030\024 \001(\010\032p\n\014Material" +
      "Info\022\016\n\006format\030\001 \001(\t\022\013\n\003url\030\002 \001(\t\022\023\n\013lan" +
      "dingPage\030\003 \001(\t\022\020\n\010duration\030\004 \001(\005\022\014\n\004text" +
      "\030\005 \001(\t\022\016\n\006custom\030\006 \001(\t\032M\n\nTrackPoint\022\014\n\004" +
      "type\030\001 \001(\t\022\022\n\nuniqueCode\030\002 \001(\t\022\020\n\010durati",
      "on\030\003 \001(\005\022\013\n\003url\030\004 \001(\t\032^\n\013DynCreative\022\r\n\005" +
      "tplid\030\001 \001(\t\022\014\n\004mgid\030\002 \001(\t\022\016\n\006defcat\030\003 \001(" +
      "\t\022\017\n\007tagcode\030\004 \001(\t\022\021\n\trecSkuLen\030\005 \001(\005\".\n" +
      "\017InteractionType\022\r\n\tTELEPHONE\020\000\022\014\n\010DOWNL" +
      "OAD\020\001\"\340\003\n\010DbConfig\022\036\n\003cmd\030\001 \001(\0162\021.de.cac" +
      "he.Command\0226\n\021referrerTargeting\030\002 \001(\0132\033." +
      "de.cache.BlackAndWhiteList\0226\n\021clickUrlTa" +
      "rgeting\030\003 \001(\0132\033.de.cache.BlackAndWhiteLi" +
      "st\022(\n\013ipWhitelist\030\004 \003(\0132\023.de.cache.IPSec" +
      "tion\022(\n\013ipBlacklist\030\005 \003(\0132\023.de.cache.IPS",
      "ection\022\022\n\npreviewUrl\030\006 \001(\t\0222\n\006vipIps\030\007 \003" +
      "(\0132\".de.cache.DbConfig.IPTargetingInfo\022\026" +
      "\n\016linkageTimeout\030\010 \001(\005\022\025\n\rlogCookieName\030" +
      "\t \003(\t\022\027\n\017cpcSpeedupHours\030\n \001(\005\032`\n\017IPTarg" +
      "etingInfo\022&\n\tipSection\030\001 \002(\0132\023.de.cache." +
      "IPSection\022\021\n\tchannelId\030\002 \002(\003\022\022\n\nsolution" +
      "Id\030\003 \003(\003\"\253\001\n\024BesPublisherSettings\022\022\n\nset" +
      "ting_id\030\001 \002(\006\022$\n\034excludedAdvertiserWebsi" +
      "teUrl\030\002 \003(\t\022!\n\031excludedProductCategoryId" +
      "\030\003 \003(\t\022\030\n\020isExcludedVulgar\030\004 \001(\010\022\034\n\024excl",
      "udedCreativeType\030\005 \003(\005\"0\n\016MaxAdsoltLevel" +
      "\022\013\n\003pid\030\001 \002(\003\022\021\n\tmax_level\030\002 \001(\005\"\221\007\n\tAll" +
      "yesAds\022\016\n\006dbName\030\001 \001(\t\022.\n\rchannelFamily\030" +
      "\002 \003(\0132\027.de.cache.ChannelFamily\022*\n\013channe" +
      "lPool\030\003 \003(\0132\025.de.cache.ChannelPool\022,\n\014ch" +
      "annelGroup\030\004 \003(\0132\026.de.cache.ChannelGroup" +
      "\022\"\n\007channel\030\005 \003(\0132\021.de.cache.Channel\022 \n\006" +
      "agency\030\006 \003(\0132\020.de.cache.Agency\022(\n\nadvert" +
      "iser\030\007 \003(\0132\024.de.cache.Advertiser\022\036\n\005orde" +
      "r\030\010 \003(\0132\017.de.cache.Order\022$\n\010solution\030\t \003",
      "(\0132\022.de.cache.Solution\022 \n\006banner\030\n \003(\0132\020" +
      ".de.cache.Banner\022$\n\010dbConfig\030\013 \001(\0132\022.de." +
      "cache.DbConfig\022:\n\016linkageChannel\030\014 \003(\0132\"" +
      ".de.cache.AllyesAds.LinkageChannel\022<\n\017li" +
      "nkageSolution\030\r \003(\0132#.de.cache.AllyesAds" +
      ".LinkageSolution\022$\n\007tplFile\030\016 \003(\0132\023.de.c" +
      "ache.CacheFile\022*\n\rotherFeatures\030\017 \003(\0132\023." +
      "de.cache.CacheFile\022\"\n\005IPlib\030\020 \001(\0132\023.de.c" +
      "ache.CacheFile\0221\n\tbesSeting\030\021 \003(\0132\036.de.c" +
      "ache.BesPublisherSettings\0222\n\020max_adsolt_",
      "level\030\022 \003(\0132\030.de.cache.MaxAdsoltLevel\032;\n" +
      "\016LinkageChannel\022\026\n\016linkageGroupId\030\001 \001(\003\022" +
      "\021\n\tchannelId\030\002 \003(\003\032X\n\017LinkageSolution\022\026\n" +
      "\016linkageGroupId\030\001 \001(\003\022\031\n\021linkageChlGroup" +
      "Id\030\002 \001(\003\022\022\n\nsolutionId\030\003 \003(\003*\037\n\014GlobalSw" +
      "itch\022\007\n\003OFF\020\000\022\006\n\002ON\020\001* \n\007Command\022\t\n\005ALTE" +
      "R\020\000\022\n\n\006DELETE\020\001*1\n\nTargetFlag\022\t\n\005CLOSE\020\000" +
      "\022\n\n\006TARGET\020\001\022\014\n\010UNTARGET\020\002*\313\003\n\016Controlle" +
      "dMask\022\016\n\nUN_CONTROL\020\000\022\021\n\rCLICK_LIMITED\020\001" +
      "\022\020\n\014SHOW_LIMITED\020\002\022\026\n\022CLICK_SHOW_LIMITED",
      "\020\003\022\026\n\022CPDPERCENT_LIMITED\020\004\022\034\n\030CLICK_CPDP" +
      "ERCENT_LIMITED\020\005\022\033\n\027SHOW_CPDPERCENT_LIMI" +
      "TED\020\006\022!\n\035CLICK_SHOW_CPDPERCENT_LIMITED\020\007" +
      "\022\022\n\016BUDGET_LIMITED\020\010\022\030\n\024CLICK_BUDGET_LIM" +
      "ITED\020\t\022\027\n\023SHOW_BUDGET_LIMITED\020\n\022\035\n\031CLICK" +
      "_SHOW_BUDGET_LIMITED\020\013\022\035\n\031CPDPERCENT_BUD" +
      "GET_LIMITED\020\014\022#\n\037CLICK_CPDPERCENT_BUDGET" +
      "_LIMITED\020\r\022\"\n\036SHOW_CPDPERCENT_BUDGET_LIM" +
      "ITED\020\016\022(\n$CLICK_SHOW_CPDPERCENT_BUDGET_L" +
      "IMITED\020\017*8\n\rTrafficSource\022\007\n\003WEB\020\000\022\016\n\nMO",
      "BILE_WEB\020\001\022\016\n\nMOBILE_APP\020\003*9\n\006OsType\022\013\n\007" +
      "UNKNOWN\020\000\022\007\n\003IOS\020\001\022\013\n\007ANDROID\020\002\022\014\n\010WINPH" +
      "ONE\020\003"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_de_cache_KeyValue_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_de_cache_KeyValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_KeyValue_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_de_cache_DeliveryMethod_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_de_cache_DeliveryMethod_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_DeliveryMethod_descriptor,
        new java.lang.String[] { "Impression", "Click", "Percentage", "Budget", "DayBudget", });
    internal_static_de_cache_CacheFile_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_de_cache_CacheFile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_CacheFile_descriptor,
        new java.lang.String[] { "FileName", "Cmd", "Content", });
    internal_static_de_cache_ChannelFamily_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_de_cache_ChannelFamily_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_ChannelFamily_descriptor,
        new java.lang.String[] { "Id", "Cmd", "FixedBannerId", });
    internal_static_de_cache_ChannelPool_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_de_cache_ChannelPool_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_ChannelPool_descriptor,
        new java.lang.String[] { "Id", "Cmd", "ChannelFamilyId", "FixedBannerId", });
    internal_static_de_cache_ChannelGroup_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_de_cache_ChannelGroup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_ChannelGroup_descriptor,
        new java.lang.String[] { "Id", "Cmd", "ChannelPoolId", "FixedBannerId", });
    internal_static_de_cache_BlackAndWhiteList_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_de_cache_BlackAndWhiteList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_BlackAndWhiteList_descriptor,
        new java.lang.String[] { "WhiteList", "BlackList", });
    internal_static_de_cache_IPSection_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_de_cache_IPSection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_IPSection_descriptor,
        new java.lang.String[] { "StartIP", "EndIP", });
    internal_static_de_cache_Channel_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_de_cache_Channel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_Channel_descriptor,
        new java.lang.String[] { "Id", "Cmd", "ChannelGroupId", "UniqueCode", "RoundMode", "MutexType", "PlayListId", "DefaultTplId", "DefaultUnitPrice", "Width", "Height", "Refresh", "CreativeType", "ForcePriority", "ReferrerTargeting", "InheritFromGConf", "HoursAheadForSpeedupCPCDelivery", "FixedBannerId", });
    internal_static_de_cache_Channel_RefreshInfo_descriptor =
      internal_static_de_cache_Channel_descriptor.getNestedTypes().get(0);
    internal_static_de_cache_Channel_RefreshInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_Channel_RefreshInfo_descriptor,
        new java.lang.String[] { "RefreshIntervalSec", "RefreshTargetingHour", "LocationFlag", "LocationInfo", });
    internal_static_de_cache_Agency_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_de_cache_Agency_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_Agency_descriptor,
        new java.lang.String[] { "Id", "Cmd", "Budget", });
    internal_static_de_cache_Advertiser_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_de_cache_Advertiser_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_Advertiser_descriptor,
        new java.lang.String[] { "Id", "Cmd", "AgencyId", "StartTimestamp", "EndTimestamp", "Method", "SspAdvertiserId", });
    internal_static_de_cache_Advertiser_SspAdvertiser_descriptor =
      internal_static_de_cache_Advertiser_descriptor.getNestedTypes().get(0);
    internal_static_de_cache_Advertiser_SspAdvertiser_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_Advertiser_SspAdvertiser_descriptor,
        new java.lang.String[] { "AdNetworkId", "Sspid", });
    internal_static_de_cache_FrequencyCtrl_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_de_cache_FrequencyCtrl_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_FrequencyCtrl_descriptor,
        new java.lang.String[] { "IsWholeDuration", "ValidHour", "Frequency", "IntervalSec", });
    internal_static_de_cache_Order_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_de_cache_Order_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_Order_descriptor,
        new java.lang.String[] { "Id", "Cmd", "AdvertiserId", "StartTimestamp", "EndTimestamp", "FrequencyTargeting", "AdvertiserMask", "Method", "Status", });
    internal_static_de_cache_Solution_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_de_cache_Solution_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_Solution_descriptor,
        new java.lang.String[] { "Id", "Cmd", "OrderId", "Priority", "StartTimestamp", "EndTimestamp", "TimePreference", "SpeedupControl", "DeliveryType", "Method", "OrderCtrlFlag", "FrequencyPreference", "BidInfo", "DistributeFlag", "SpotPlan", "Targets", "ChannelId", "BannerId", "BannerPoolId", "BannerGroupId", "Status", "Price", "ExtraEffectIndicators", "AdNetworkId", });
    internal_static_de_cache_Solution_BidInfo_descriptor =
      internal_static_de_cache_Solution_descriptor.getNestedTypes().get(0);
    internal_static_de_cache_Solution_BidInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_Solution_BidInfo_descriptor,
        new java.lang.String[] { "DynamicBid", "BidTarget", "OptimizeTarget", });
    internal_static_de_cache_Solution_SpotPlan_descriptor =
      internal_static_de_cache_Solution_descriptor.getNestedTypes().get(1);
    internal_static_de_cache_Solution_SpotPlan_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_Solution_SpotPlan_descriptor,
        new java.lang.String[] { "Id", "StartTimestamp", "EndTimestamp", "DailyStartTime", "DailyEndTime", "DayOfWeek", "Method", });
    internal_static_de_cache_Solution_SolutionTarget_descriptor =
      internal_static_de_cache_Solution_descriptor.getNestedTypes().get(2);
    internal_static_de_cache_Solution_SolutionTarget_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_Solution_SolutionTarget_descriptor,
        new java.lang.String[] { "FrequencyCtrl", "OrderFrequency", "ClickFrequency", "StopImpressionWhenMaxClick", "LocationFlag", "Location", "UniversityFlag", "LanguageFlag", "Language", "OsFlag", "Os", "LinkageFlag", "KeywordFlag", "Keyword", "BrowserFlag", "Browser", "DemographicFlag", "AudienceTargetFlag", "AudienceTarget", "CsFlag", "ContentTargetFlag", "ContentTarget", "RetargetingFlag", "Retargeting", "DealFiles", "CpaOwnerType", "BtTag", "IpWhitelist", "IpBlacklist", "ForceSolutionTimes", "Referrer", "InheritFromGConf", "Device", "AppData", "PositioningOrder", "TrafficSource", "TagIds", "PMPDealId", "Carrier", "ConnectionType", "DemographicTarget", });
    internal_static_de_cache_Solution_SolutionTarget_demoTargetContent_descriptor =
      internal_static_de_cache_Solution_SolutionTarget_descriptor.getNestedTypes().get(0);
    internal_static_de_cache_Solution_SolutionTarget_demoTargetContent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_Solution_SolutionTarget_demoTargetContent_descriptor,
        new java.lang.String[] { "GenderFlag", "Gender", "AgeFlag", "Age", "IntentFlag", "Intent", "InterestFlag", "Interest", });
    internal_static_de_cache_Banner_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_de_cache_Banner_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_Banner_descriptor,
        new java.lang.String[] { "Id", "Cmd", "Weight", "StartTimestamp", "EndTimestamp", "Size", "TrackUrl", "TplName", "Width", "Height", "TrafficSource", "DisplayMethod", "Interstitial", "MobileOptimized", "Status", "TemplateId", "MaterialId", "CreativeType", "DynCreative", "ClickMonUrl", "InteractionType", "MaxLevel", });
    internal_static_de_cache_Banner_DisplayMethods_descriptor =
      internal_static_de_cache_Banner_descriptor.getNestedTypes().get(0);
    internal_static_de_cache_Banner_DisplayMethods_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_Banner_DisplayMethods_descriptor,
        new java.lang.String[] { "AdNetworkId", "CreativeTypeUnsed", "Property", "Category", "ResponseId", "Charset", "AdType", "PayFlag", "TplCode", "CustomInfo", "Material", "TrackPoint", "ThirdUrl", "TargetOfNewWin", "TrafficSource", "SspCreativeId", "SspUrl", "SspProperty", "OsType", "IsSsl", });
    internal_static_de_cache_Banner_DisplayMethods_MaterialInfo_descriptor =
      internal_static_de_cache_Banner_DisplayMethods_descriptor.getNestedTypes().get(0);
    internal_static_de_cache_Banner_DisplayMethods_MaterialInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_Banner_DisplayMethods_MaterialInfo_descriptor,
        new java.lang.String[] { "Format", "Url", "LandingPage", "Duration", "Text", "Custom", });
    internal_static_de_cache_Banner_DisplayMethods_TrackPoint_descriptor =
      internal_static_de_cache_Banner_DisplayMethods_descriptor.getNestedTypes().get(1);
    internal_static_de_cache_Banner_DisplayMethods_TrackPoint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_Banner_DisplayMethods_TrackPoint_descriptor,
        new java.lang.String[] { "Type", "UniqueCode", "Duration", "Url", });
    internal_static_de_cache_Banner_DynCreative_descriptor =
      internal_static_de_cache_Banner_descriptor.getNestedTypes().get(1);
    internal_static_de_cache_Banner_DynCreative_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_Banner_DynCreative_descriptor,
        new java.lang.String[] { "Tplid", "Mgid", "Defcat", "Tagcode", "RecSkuLen", });
    internal_static_de_cache_DbConfig_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_de_cache_DbConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_DbConfig_descriptor,
        new java.lang.String[] { "Cmd", "ReferrerTargeting", "ClickUrlTargeting", "IpWhitelist", "IpBlacklist", "PreviewUrl", "VipIps", "LinkageTimeout", "LogCookieName", "CpcSpeedupHours", });
    internal_static_de_cache_DbConfig_IPTargetingInfo_descriptor =
      internal_static_de_cache_DbConfig_descriptor.getNestedTypes().get(0);
    internal_static_de_cache_DbConfig_IPTargetingInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_DbConfig_IPTargetingInfo_descriptor,
        new java.lang.String[] { "IpSection", "ChannelId", "SolutionId", });
    internal_static_de_cache_BesPublisherSettings_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_de_cache_BesPublisherSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_BesPublisherSettings_descriptor,
        new java.lang.String[] { "SettingId", "ExcludedAdvertiserWebsiteUrl", "ExcludedProductCategoryId", "IsExcludedVulgar", "ExcludedCreativeType", });
    internal_static_de_cache_MaxAdsoltLevel_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_de_cache_MaxAdsoltLevel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_MaxAdsoltLevel_descriptor,
        new java.lang.String[] { "Pid", "MaxLevel", });
    internal_static_de_cache_AllyesAds_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_de_cache_AllyesAds_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_AllyesAds_descriptor,
        new java.lang.String[] { "DbName", "ChannelFamily", "ChannelPool", "ChannelGroup", "Channel", "Agency", "Advertiser", "Order", "Solution", "Banner", "DbConfig", "LinkageChannel", "LinkageSolution", "TplFile", "OtherFeatures", "IPlib", "BesSeting", "MaxAdsoltLevel", });
    internal_static_de_cache_AllyesAds_LinkageChannel_descriptor =
      internal_static_de_cache_AllyesAds_descriptor.getNestedTypes().get(0);
    internal_static_de_cache_AllyesAds_LinkageChannel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_AllyesAds_LinkageChannel_descriptor,
        new java.lang.String[] { "LinkageGroupId", "ChannelId", });
    internal_static_de_cache_AllyesAds_LinkageSolution_descriptor =
      internal_static_de_cache_AllyesAds_descriptor.getNestedTypes().get(1);
    internal_static_de_cache_AllyesAds_LinkageSolution_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_de_cache_AllyesAds_LinkageSolution_descriptor,
        new java.lang.String[] { "LinkageGroupId", "LinkageChlGroupId", "SolutionId", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
